[{"/home/ubuntu/shaastra-general-website/src/index.tsx":"1","/home/ubuntu/shaastra-general-website/src/reportWebVitals.ts":"2","/home/ubuntu/shaastra-general-website/src/serviceWorker.ts":"3","/home/ubuntu/shaastra-general-website/src/styles/themes/theme.ts":"4","/home/ubuntu/shaastra-general-website/src/App.tsx":"5","/home/ubuntu/shaastra-general-website/src/graphql/index.ts":"6","/home/ubuntu/shaastra-general-website/src/styles/themes/components/drawerStyles.ts":"7","/home/ubuntu/shaastra-general-website/src/styles/themes/components/buttonStyles.ts":"8","/home/ubuntu/shaastra-general-website/src/components/AppRoutes.tsx":"9","/home/ubuntu/shaastra-general-website/src/components/shared/Loader.tsx":"10","/home/ubuntu/shaastra-general-website/src/components/pages/spons.tsx":"11","/home/ubuntu/shaastra-general-website/src/components/pages/Contact.tsx":"12","/home/ubuntu/shaastra-general-website/src/components/pages/Exhibitions/Exhibitions.tsx":"13","/home/ubuntu/shaastra-general-website/src/components/pages/night/Envisage.tsx":"14","/home/ubuntu/shaastra-general-website/src/components/pages/night/Project.tsx":"15","/home/ubuntu/shaastra-general-website/src/components/pages/night/ShowsNew.tsx":"16","/home/ubuntu/shaastra-general-website/src/components/pages/Team_page/Team.tsx":"17","/home/ubuntu/shaastra-general-website/src/components/pages/Events and Workshops/Events.tsx":"18","/home/ubuntu/shaastra-general-website/src/components/pages/Events and Workshops/Summit.tsx":"19","/home/ubuntu/shaastra-general-website/src/components/pages/Events and Workshops/Tif.tsx":"20","/home/ubuntu/shaastra-general-website/src/components/pages/Events and Workshops/EventVertical.tsx":"21","/home/ubuntu/shaastra-general-website/src/components/pages/Events and Workshops/AddEvent.tsx":"22","/home/ubuntu/shaastra-general-website/src/components/pages/Events and Workshops/EditEvent.tsx":"23","/home/ubuntu/shaastra-general-website/src/components/pages/Events and Workshops/EventsAdmin.tsx":"24","/home/ubuntu/shaastra-general-website/src/components/pages/Events and Workshops/EventPage.tsx":"25","/home/ubuntu/shaastra-general-website/src/components/pages/Events and Workshops/EWHome.tsx":"26","/home/ubuntu/shaastra-general-website/src/components/pages/Login/Login.tsx":"27","/home/ubuntu/shaastra-general-website/src/components/pages/Login/ForgotPassword.tsx":"28","/home/ubuntu/shaastra-general-website/src/components/pages/Login/Signup.tsx":"29","/home/ubuntu/shaastra-general-website/src/components/pages/Login/ForgotAfterLink.tsx":"30","/home/ubuntu/shaastra-general-website/src/components/pages/Login/Verify.tsx":"31","/home/ubuntu/shaastra-general-website/src/components/pages/Login/SignOut.tsx":"32","/home/ubuntu/shaastra-general-website/src/components/pages/Login/Profile.tsx":"33","/home/ubuntu/shaastra-general-website/src/components/pages/Login/EditProfile.tsx":"34","/home/ubuntu/shaastra-general-website/src/components/pages/Policies/Privacy.tsx":"35","/home/ubuntu/shaastra-general-website/src/components/pages/Policies/TermsConditions.tsx":"36","/home/ubuntu/shaastra-general-website/src/components/pages/Policies/Shipping.tsx":"37","/home/ubuntu/shaastra-general-website/src/components/pages/Policies/Refund.tsx":"38","/home/ubuntu/shaastra-general-website/src/components/pages/Chess_blitz/ChessBlitz.tsx":"39","/home/ubuntu/shaastra-general-website/src/components/pages/Home.tsx":"40","/home/ubuntu/shaastra-general-website/src/components/pages/ShaastraJuniors/index.tsx":"41","/home/ubuntu/shaastra-general-website/src/components/shared/Footer.tsx":"42","/home/ubuntu/shaastra-general-website/src/components/pages/ShaastraJuniors/SJEvents.tsx":"43","/home/ubuntu/shaastra-general-website/src/components/pages/ShaastraJuniors/SJStatsCard.tsx":"44","/home/ubuntu/shaastra-general-website/src/components/pages/ShaastraJuniors/SJSponsers.tsx":"45","/home/ubuntu/shaastra-general-website/src/components/pages/ShaastraJuniors/SJHome.tsx":"46","/home/ubuntu/shaastra-general-website/src/components/shared/CustomBox.tsx":"47","/home/ubuntu/shaastra-general-website/src/components/pages/ShaastraJuniors/SJEvent.tsx":"48","/home/ubuntu/shaastra-general-website/src/components/pages/ShaastraJuniors/Data.tsx":"49","/home/ubuntu/shaastra-general-website/src/components/shared/Header.tsx":"50","/home/ubuntu/shaastra-general-website/src/styles/themes/ColorModeSwitcher.tsx":"51","/home/ubuntu/shaastra-general-website/src/components/shared/Drawer/CustomDrawer.tsx":"52","/home/ubuntu/shaastra-general-website/src/components/shared/Drawer/DrawerMenuItems.tsx":"53","/home/ubuntu/shaastra-general-website/src/components/pages/Login/branches.ts":"54","/home/ubuntu/shaastra-general-website/src/components/pages/Login/college.ts":"55","/home/ubuntu/shaastra-general-website/src/components/pages/Login/cities.ts":"56","/home/ubuntu/shaastra-general-website/src/generated/graphql.tsx":"57","/home/ubuntu/shaastra-general-website/src/components/pages/Events and Workshops/PayRegister.tsx":"58","/home/ubuntu/shaastra-general-website/src/components/pages/Events and Workshops/Timeline.tsx":"59","/home/ubuntu/shaastra-general-website/src/components/pages/Events and Workshops/RegisterNow.tsx":"60","/home/ubuntu/shaastra-general-website/src/components/pages/Events and Workshops/EventFaqs.tsx":"61","/home/ubuntu/shaastra-general-website/src/components/pages/Events and Workshops/EventVeticalComponent.tsx":"62","/home/ubuntu/shaastra-general-website/src/components/pages/Events and Workshops/EventsData.tsx":"63","/home/ubuntu/shaastra-general-website/src/components/pages/Team_page/photos.tsx":"64","/home/ubuntu/shaastra-general-website/src/components/pages/Team_page/SliderImgBox.tsx":"65","/home/ubuntu/shaastra-general-website/src/components/pages/Team_page/Card.tsx":"66","/home/ubuntu/shaastra-general-website/src/components/pages/Exhibitions/Card.tsx":"67","/home/ubuntu/shaastra-general-website/src/components/pages/Exhibitions/Exhibitionsdata.tsx":"68"},{"size":1278,"mtime":1642068355380,"results":"69","hashOfConfig":"70"},{"size":416,"mtime":1642054307947,"results":"71","hashOfConfig":"70"},{"size":5258,"mtime":1642054307947,"results":"72","hashOfConfig":"70"},{"size":1450,"mtime":1642054307947,"results":"73","hashOfConfig":"70"},{"size":695,"mtime":1642054306987,"results":"74","hashOfConfig":"70"},{"size":314,"mtime":1642068186104,"results":"75","hashOfConfig":"70"},{"size":373,"mtime":1642054307947,"results":"76","hashOfConfig":"70"},{"size":486,"mtime":1642054307947,"results":"77","hashOfConfig":"70"},{"size":5425,"mtime":1642054306987,"results":"78","hashOfConfig":"70"},{"size":699,"mtime":1642054306995,"results":"79","hashOfConfig":"70"},{"size":25526,"mtime":1642070963583,"results":"80","hashOfConfig":"70"},{"size":8760,"mtime":1642054306987,"results":"81","hashOfConfig":"70"},{"size":5690,"mtime":1642054306991,"results":"82","hashOfConfig":"70"},{"size":15262,"mtime":1642054306991,"results":"83","hashOfConfig":"70"},{"size":20848,"mtime":1642054306991,"results":"84","hashOfConfig":"70"},{"size":39294,"mtime":1642054306995,"results":"85","hashOfConfig":"70"},{"size":23153,"mtime":1642054306991,"results":"86","hashOfConfig":"70"},{"size":6132,"mtime":1642054306991,"results":"87","hashOfConfig":"70"},{"size":7658,"mtime":1642054306991,"results":"88","hashOfConfig":"70"},{"size":14181,"mtime":1642054306991,"results":"89","hashOfConfig":"70"},{"size":12912,"mtime":1642055624547,"results":"90","hashOfConfig":"70"},{"size":20477,"mtime":1642054306987,"results":"91","hashOfConfig":"70"},{"size":18270,"mtime":1642054306987,"results":"92","hashOfConfig":"70"},{"size":4211,"mtime":1642054306991,"results":"93","hashOfConfig":"70"},{"size":25192,"mtime":1642057401699,"results":"94","hashOfConfig":"70"},{"size":8495,"mtime":1642054306987,"results":"95","hashOfConfig":"70"},{"size":8044,"mtime":1642054306991,"results":"96","hashOfConfig":"70"},{"size":5638,"mtime":1642054306991,"results":"97","hashOfConfig":"70"},{"size":10879,"mtime":1642054306991,"results":"98","hashOfConfig":"70"},{"size":5902,"mtime":1642054306991,"results":"99","hashOfConfig":"70"},{"size":7812,"mtime":1642054306991,"results":"100","hashOfConfig":"70"},{"size":3527,"mtime":1642054306991,"results":"101","hashOfConfig":"70"},{"size":16413,"mtime":1642054306991,"results":"102","hashOfConfig":"70"},{"size":10753,"mtime":1642054306991,"results":"103","hashOfConfig":"70"},{"size":8711,"mtime":1642054306991,"results":"104","hashOfConfig":"70"},{"size":10889,"mtime":1642054306991,"results":"105","hashOfConfig":"70"},{"size":2102,"mtime":1642054306991,"results":"106","hashOfConfig":"70"},{"size":2390,"mtime":1642054306991,"results":"107","hashOfConfig":"70"},{"size":14470,"mtime":1642054306987,"results":"108","hashOfConfig":"70"},{"size":31740,"mtime":1642068355380,"results":"109","hashOfConfig":"70"},{"size":1343,"mtime":1642054306991,"results":"110","hashOfConfig":"70"},{"size":6651,"mtime":1642054306995,"results":"111","hashOfConfig":"70"},{"size":819,"mtime":1642054306991,"results":"112","hashOfConfig":"70"},{"size":807,"mtime":1642054306991,"results":"113","hashOfConfig":"70"},{"size":2238,"mtime":1642054306991,"results":"114","hashOfConfig":"70"},{"size":2405,"mtime":1642054306991,"results":"115","hashOfConfig":"70"},{"size":513,"mtime":1642054306995,"results":"116","hashOfConfig":"70"},{"size":1213,"mtime":1642054306991,"results":"117","hashOfConfig":"70"},{"size":7942,"mtime":1642054306991,"results":"118","hashOfConfig":"70"},{"size":1748,"mtime":1642054306995,"results":"119","hashOfConfig":"70"},{"size":747,"mtime":1642054307947,"results":"120","hashOfConfig":"70"},{"size":1860,"mtime":1642054306995,"results":"121","hashOfConfig":"70"},{"size":14917,"mtime":1642054306995,"results":"122","hashOfConfig":"70"},{"size":1213,"mtime":1642054306991,"results":"123","hashOfConfig":"70"},{"size":89641,"mtime":1642054306991,"results":"124","hashOfConfig":"70"},{"size":24996,"mtime":1642054306991,"results":"125","hashOfConfig":"70"},{"size":83694,"mtime":1642054306995,"results":"126","hashOfConfig":"70"},{"size":7043,"mtime":1642054306991,"results":"127","hashOfConfig":"70"},{"size":3884,"mtime":1642054306991,"results":"128","hashOfConfig":"70"},{"size":9354,"mtime":1642054306991,"results":"129","hashOfConfig":"70"},{"size":10909,"mtime":1642054306987,"results":"130","hashOfConfig":"70"},{"size":20715,"mtime":1642054306991,"results":"131","hashOfConfig":"70"},{"size":2629,"mtime":1642054306991,"results":"132","hashOfConfig":"70"},{"size":1732,"mtime":1642054306991,"results":"133","hashOfConfig":"70"},{"size":1935,"mtime":1642054306991,"results":"134","hashOfConfig":"70"},{"size":2118,"mtime":1642054306991,"results":"135","hashOfConfig":"70"},{"size":1608,"mtime":1642054306991,"results":"136","hashOfConfig":"70"},{"size":3772,"mtime":1642054306991,"results":"137","hashOfConfig":"70"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1o6286d",{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":40,"fixableErrorCount":0,"fixableWarningCount":10,"source":"163"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"166"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"183"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"186"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222"},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":5,"source":"242"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":3,"source":"247"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":6,"source":"271"},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"274","messages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"276","messages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"278","messages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"280","messages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282"},{"filePath":"283","messages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287"},{"filePath":"288","messages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290"},{"filePath":"291","messages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293"},{"filePath":"294","messages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"296","messages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298"},{"filePath":"299","messages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":3,"source":"301"},{"filePath":"302","messages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":3,"source":"304"},{"filePath":"305","messages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"307","messages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309"},"/home/ubuntu/shaastra-general-website/src/index.tsx",[],"/home/ubuntu/shaastra-general-website/src/reportWebVitals.ts",[],"/home/ubuntu/shaastra-general-website/src/serviceWorker.ts",[],"/home/ubuntu/shaastra-general-website/src/styles/themes/theme.ts",[],"/home/ubuntu/shaastra-general-website/src/App.tsx",[],"/home/ubuntu/shaastra-general-website/src/graphql/index.ts",[],"/home/ubuntu/shaastra-general-website/src/styles/themes/components/drawerStyles.ts",[],"/home/ubuntu/shaastra-general-website/src/styles/themes/components/buttonStyles.ts",[],"/home/ubuntu/shaastra-general-website/src/components/AppRoutes.tsx",["310","311","312","313","314","315","316"],"import * as React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport { Link } from \"@chakra-ui/react\";\nimport Exhibitions from \"./pages/Exhibitions/Exhibitions\";\nimport Home from \"./pages/Home\";\nimport Envisage from \"./pages/night/Envisage\";\n// import Shows from \"./pages/night/Shows\";\nimport Project from \"./pages/night/Project\";\nimport Team from \"./pages/Team_page/Team\";\nimport ShaastraJuniorsPage from \"./pages/ShaastraJuniors\";\nimport Social from \"./pages/socialEndeavours/SocialEnd\";\nimport Eventsworkshops from \"./pages/Events and Workshops/EventsHome\";\nimport Events from \"./pages/Events and Workshops/Events\";\nimport Summit from \"./pages/Events and Workshops/Summit\";\nimport Tif from \"./pages/Events and Workshops/Tif\";\nimport Workshops from \"./pages/Events and Workshops/Workshops\";\nimport Spons from \"../../src/components/pages/spons\";\nimport Show from \"../../src/components/pages/night/Show\";\nimport Speaker from \"../../src/components/pages/Speaker/Speaker\";\nimport EventVertical from \"./pages/Events and Workshops/EventVertical\";\nimport EventAdmin from \"./pages/Events and Workshops/AddEvent\";\nimport EditEvent from \"./pages/Events and Workshops/EditEvent\";\nimport EventsAdmin from \"./pages/Events and Workshops/EventsAdmin\";\nimport Login from \"./pages/Login/Login\";\nimport Forgot from \"./pages/Login/ForgotPassword\";\nimport Signup from \"./pages/Login/Signup\";\nimport ForgotAfter from \"./pages/Login/ForgotAfterLink\";\nimport Verify from \"./pages/Login/Verify\";\nimport SignOut from \"./pages/Login/SignOut\";\nimport Profile from \"./pages/Login/Profile\";\nimport EditProfile from \"./pages/Login/EditProfile\";\nimport EventPage from \"./pages/Events and Workshops/EventPage\";\nimport Privacy from \"./pages/Policies/Privacy\";\nimport TermsConditions from \"./pages/Policies/TermsConditions\";\nimport Shipping from \"./pages/Policies/Shipping\";\nimport Refund from \"./pages/Policies/Refund\";\nimport HomeEW from \"./pages/Events and Workshops/EWHome\";\nimport Shows from \"./pages/night/ShowsNew\";\nimport Contact from \"./pages/Contact\";\nimport ChessBlitz from \"./pages/Chess_blitz/ChessBlitz\";\ninterface Props {}\n\nconst AppRoutes = (props: Props) => {\n  return (\n    <Router>\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/envisage\" component={Envisage} />\n      <Route path=\"/project/:id\" component={Project} />\n      <Route path=\"/shows\" component={Shows} />\n      <Route exact path=\"/exhibitions\" component={Exhibitions} />\n      <Route exact path=\"/team\" component={Team} />\n      <Route exact path=\"/contact\" component={Contact}></Route>\n      <Route exact path=\"/shaastra-juniors\" component={ShaastraJuniorsPage} />\n      {/* <Route exact path=\"/social-endeavours\" component={Social} /> */}\n      <Route\n        exact\n        path=\"/social-endeavours\"\n        component={() => {\n          window.location.href = \"https://unmute.shaastra.org/\";\n          return null;\n        }}\n      >\n        {/* <Link to=\"https://unmute.shaastra.org/\"></Link> */}\n      </Route>\n      <Route\n        exact\n        path=\"/mind-trials\"\n        component={() => {\n          window.location.href = \"https://mindtrials.shaastra.org/\";\n          return null;\n        }}\n      ></Route>\n      <Route\n        exact path =\"/sales\"\n        component={() => {\n          window.location.href = \"https://sales.shaastra.org/\"\n          return null\n        }}\n      ></Route>\n      <Route exact path=\"/eventsworkshops\" component={HomeEW} />\n      <Route exact path=\"/events\" component={Events} />\n      <Route exact path=\"/events/:name\" component={EventVertical}></Route>\n      {localStorage.getItem(\"role\") === \"Admin\" && (\n        <Switch>\n          <Route exact path=\"/admin/add\" component={EventAdmin}></Route>\n          <Route exact path=\"/admin/edit/:id\" component={EditEvent}></Route>\n          <Route exact path=\"/admin\" component={EventsAdmin}></Route>\n        </Switch>\n      )}\n      <Route exact path=\"/eventpage/:id\" component={EventPage}></Route>\n\n      <Route exact path=\"/tif\" component={Tif} />\n      <Route exact path=\"/summit\" component={Summit} />\n      <Route exact path=\"/sponsors\" component={Spons} />\n      <Route exact path=\"/blitz-chess\" component={ChessBlitz} />\n      {/* <Route exact path=\"/speakers\" component={Speaker} /> */}\n\n      <Route exact path=\"/login\" component={Login}></Route>\n      <Route exact path=\"/signup\" component={Signup}></Route>\n      <Route exact path=\"/forgotpassword\" component={Forgot}></Route>\n      <Route exact path=\"/resetpassword\" component={ForgotAfter}></Route>\n      <Route exact path=\"/verify\" component={Verify}></Route>\n      <Route exact path=\"/signout\" component={SignOut}></Route>\n      {localStorage.getItem(\"role\") === \"User\" && (\n        <Switch>\n          <Route exact path=\"/profile\" component={Profile}></Route>\n          <Route exact path=\"/editprofile\" component={EditProfile}></Route>\n        </Switch>\n      )}\n\n      <Route exact path=\"/policies/privacy-policy\" component={Privacy}></Route>\n      <Route\n        exact\n        path=\"/policies/return-refund-policy\"\n        component={Refund}\n      ></Route>\n      <Route\n        exact\n        path=\"/policies/shipping-policy\"\n        component={Shipping}\n      ></Route>\n      <Route\n        exact\n        path=\"/policies/terms-conditions\"\n        component={TermsConditions}\n      ></Route>\n    </Router>\n  );\n};\n\nexport default AppRoutes;\n","/home/ubuntu/shaastra-general-website/src/components/shared/Loader.tsx",[],"/home/ubuntu/shaastra-general-website/src/components/pages/spons.tsx",["317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348"],"/home/ubuntu/shaastra-general-website/src/components/pages/Contact.tsx",["349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388"],"import React from \"react\"\nimport Footer from \"../shared/Footer\"\nimport CustomBox from \"../shared/CustomBox\"\n\nimport {\n    Text,\n    Stack,\n    Link,\n    Flex,\n    Tooltip,\n    Box,\n    RadioGroup,\n    Radio,\n    Image,\n    Button,\n    useColorModeValue,\n    Modal,\n    ModalOverlay,\n    ModalContent,\n    ModalHeader,\n    ModalFooter,\n    ModalBody,\n    ModalCloseButton,\n    useDisclosure,\n    FormControl,\n    FormLabel,\n    FormErrorMessage,\n    FormHelperText,\n    Heading,\n    Center,\n    Popover,\n    PopoverTrigger,\n    PopoverContent,\n    PopoverHeader,\n    PopoverArrow,\n    PopoverCloseButton,\n    PopoverBody,\n    PopoverFooter,\n    ButtonGroup,\n  } from '@chakra-ui/react'\n\nimport \"../../styles/App.css\"\nimport ContactBg from \"../../images/ContactBg.png\"\n\nconst Contact = () => {\n    return(\n        <CustomBox>\n            <Flex className=\"contact-main\" overflowX={\"hidden\"} width=\"100vw\" padding={[\"20vw 0 0 0\",\"4vw 0 0 0\"]} justifyContent={\"space-between\"} flexDirection={[\"column\", \"row\"]} alignItems={\"center\"}>\n                <Flex overflowX={\"hidden\"} paddingLeft={\"2vw\"} flexDirection={\"column\"} width=\"50%\" alignItems={\"center\"}>\n                    <Heading fontSize={[\"6vw\",\"3vw\"]} marginBottom={\"4vh\"}>CONTACT US</Heading>\n\n                    {/* english */}\n\n                    <Flex width=\"50vw\" paddingBottom={\"6vh\"} flexDirection={\"column\"} alignItems={\"center\"}>\n                        <Text color=\"#A0AEC0\" fontWeight={\"500\"} fontSize={[\"6vw\",\"2vw\"]}>English</Text>\n                        <Flex width={[\"90vw\",\"50vw\"]} justifyContent={\"space-evenly\"}>\n                            <Flex flexDirection={\"column\"}>\n                                <Text fontWeight={\"bold\"} fontSize={[\"4vw\",\"1.5vw\"]}>Poojitha</Text>\n                                <Text fontSize={[\"4vw\",\"1.5vw\"]}> <a href={\"http://wa.me/+917019180917\"} target=\"_blank\"><p>+91 70191 80917</p></a></Text>\n                            </Flex>\n                            <Flex flexDirection={\"column\"}>\n                                <Text fontWeight={\"bold\"} fontSize={[\"4vw\",\"1.5vw\"]}>Joshik</Text>\n                                <Text fontSize={[\"4vw\",\"1.5vw\"]}>  <a href={\"http://wa.me/+918825601711\"} target=\"_blank\"><p>+91 88256 01711</p></a></Text>\n                            </Flex>\n                        </Flex>\n                    </Flex>\n                    \n                    {/* tamil */}\n\n                    <Flex width={[\"90vw\",\"50vw\"]} paddingBottom={\"6vh\"} flexDirection={\"column\"} alignItems={\"center\"} >\n                        <Text color=\"#A0AEC0\" fontWeight={\"500\"} fontSize={[\"6vw\",\"2vw\"]}>Tamil</Text>\n                        <Flex width={[\"90vw\",\"50vw\"]} justifyContent={\"space-evenly\"}>\n                            <Flex flexDirection={\"column\"}>\n                                <Text fontWeight={\"bold\"} fontSize={[\"4vw\",\"1.5vw\"]}>Mohan</Text>\n                                <Text fontSize={[\"4vw\",\"1.5vw\"]}><a href={\"http://wa.me/+919952729095\"} target=\"_blank\"><p>+91 99527 29095</p></a></Text>\n                            </Flex>\n                            <Flex flexDirection={\"column\"}>\n                                <Text fontWeight={\"bold\"} fontSize={[\"4vw\",\"1.5vw\"]}>Vishwa</Text>\n                                <Text fontSize={[\"4vw\",\"1.5vw\"]}> <a href={\"http://wa.me/+919952180821\"} target=\"_blank\"><p>+91 99521 80821</p></a></Text>\n                            </Flex>\n                        </Flex>\n                    </Flex>\n\n                    {/* hindi */}\n\n                    <Flex width={[\"90vw\",\"50vw\"]} paddingBottom={\"6vh\"} flexDirection={\"column\"} alignItems={\"center\"} >\n                        <Text color=\"#A0AEC0\" fontWeight={\"500\"} fontSize={[\"6vw\",\"2vw\"]}>Hindi</Text>\n                        <Flex width={[\"90vw\",\"50vw\"]} justifyContent={\"space-evenly\"}>\n                            <Flex flexDirection={\"column\"}>\n                                <Text fontWeight={\"bold\"} fontSize={[\"4vw\",\"1.5vw\"]}>Ankit</Text>\n                                <Text fontSize={[\"4vw\",\"1.5vw\"]}><a href={\"http://wa.me/+917488701168\"} target=\"_blank\"><p>+91 74887 01168</p></a></Text>\n                            </Flex>\n                            <Flex flexDirection={\"column\"}>\n                                <Text fontWeight={\"bold\"} fontSize={[\"4vw\",\"1.5vw\"]}>Rahul</Text>\n                                <Text fontSize={[\"4vw\",\"1.5vw\"]}> <a href={\"http://wa.me/+919602032101\"} target=\"_blank\"><p>+91 96020 32101</p></a></Text>\n                            </Flex>\n                        </Flex>\n                    </Flex>\n\n                    {/*marathi and kannada */}\n\n                    <Flex width={[\"90vw\",\"50vw\"]} paddingBottom={\"6vh\"} alignItems={\"center\"} justifyContent={\"space-evenly\"}>\n                        <Flex flexDirection={\"column\"}>\n                            <Text color=\"#A0AEC0\" fontWeight={\"500\"} fontSize={[\"6vw\",\"2vw\"]}>Marathi</Text>\n                            <Flex flexDirection={\"column\"}>\n                                <Text fontWeight={\"bold\"} fontSize={[\"4vw\",\"1.5vw\"]}>Siddhivinayak</Text>\n                                <Text fontSize={[\"4vw\",\"1.5vw\"]}> <a href={\"http://wa.me/+919672025542\"} target=\"_blank\"><p>+91 96720 25542</p></a></Text>\n                            </Flex>\n                        </Flex>\n                        <Flex flexDirection={\"column\"}>\n                            <Text color=\"#A0AEC0\" fontWeight={\"500\"} fontSize={[\"6vw\",\"2vw\"]}>Kannada</Text>\n                            <Flex flexDirection={\"column\"}>\n                                <Text fontWeight={\"bold\"} fontSize={[\"4vw\",\"1.5vw\"]}>Manoghna</Text>\n                                <Text fontSize={[\"4vw\",\"1.5vw\"]}><a href={\"http://wa.me/+919480318016\"} target=\"_blank\"><p>+91 94803 18016</p></a></Text>\n                            </Flex>\n                        </Flex>\n                    </Flex>\n                    \n                    {/* telugu and malayalam */}\n\n                    <Flex width={[\"90vw\",\"50vw\"]} paddingBottom={\"4vh\"} alignItems={\"center\"} justifyContent={\"space-evenly\"}>\n                        <Flex flexDirection={\"column\"}>\n                            <Text color=\"#A0AEC0\" fontWeight={\"500\"} fontSize={[\"6vw\",\"2vw\"]}>Telugu</Text>\n                            <Flex flexDirection={\"column\"}>\n                                <Text fontWeight={\"bold\"} fontSize={[\"4vw\",\"1.5vw\"]}>Anogna</Text>\n                                <Text fontSize={[\"4vw\",\"1.5vw\"]}> <a href={\"http://wa.me/+916305984724\"} target=\"_blank\"><p>+91 63059 84724</p></a></Text>\n                            </Flex>\n                        </Flex>\n                        <Flex flexDirection={\"column\"}>\n                            <Text color=\"#A0AEC0\" fontWeight={\"500\"} fontSize={[\"6vw\",\"2vw\"]}>Malayalam</Text>\n                            <Flex flexDirection={\"column\"}>\n                                <Text fontWeight={\"bold\"} fontSize={[\"4vw\",\"1.5vw\"]}>Anshid</Text>\n                                <Text fontSize={[\"4vw\",\"1.5vw\"]}> <a href={\"http://wa.me/+917592976901\"} target=\"_blank\"><p>+91 75929 76901</p></a></Text>\n                            </Flex>\n                        </Flex>\n                    </Flex>\n\n                    {/* <Flex width={[\"90vw\",\"50vw\"]} paddingBottom={\"4vh\"} alignItems={\"center\"} justifyContent={\"space-evenly\"}>\n                        <Flex flexDirection={\"column\"}>\n                            <Text color=\"#A0AEC0\" fontWeight={\"500\"} fontSize={[\"6vw\",\"2vw\"]}>Marathi</Text>\n                            <Flex flexDirection={\"column\"}>\n                                <Text fontWeight={\"bold\"} fontSize={[\"4vw\",\"1.5vw\"]}>Siddhivinayak</Text>\n                                <Text fontSize={[\"4vw\",\"1.5vw\"]}> <a href={\"http://wa.me/+919672025542\"} target=\"_blank\"><p>+91 96720 25542</p></a></Text>\n                            </Flex>\n                        </Flex>\n                        <Flex flexDirection={\"column\"}>\n                            <Text color=\"#A0AEC0\" fontWeight={\"500\"} fontSize={[\"6vw\",\"2vw\"]}>Malayalam</Text>\n                            <Flex flexDirection={\"column\"}>\n                                <Text fontWeight={\"bold\"} fontSize={[\"4vw\",\"1.5vw\"]}>Anshid</Text>\n                                <Text fontSize={[\"4vw\",\"1.5vw\"]}> <a href={\"http://wa.me/+917592976901\"} target=\"_blank\"><p>+91 75929 76901</p></a></Text>\n                            </Flex>\n                        </Flex>\n                    </Flex> */}\n\n                </Flex>\n                <Image src={ContactBg} width=\"50vw\" objectFit={\"contain\"}></Image>\n            </Flex>\n        <Footer\n          designed={[{ name: \"Krithikaa\", mail: \"be20b020@smail.iitm.ac.in\" }]}\n        />\n        </CustomBox>\n    )\n}\n\nexport default Contact","/home/ubuntu/shaastra-general-website/src/components/pages/Exhibitions/Exhibitions.tsx",["389","390","391","392","393"],"import { Text,Flex ,Stack , Box,BoxProps,Heading,Image,Container,SimpleGrid, Center, TextProps, useColorModeValue, VStack} from \"@chakra-ui/react\";\r\n// import {ChevronLeftIcon,ChevronRightIcon} from \"@chakra-ui/icons\";\r\nimport * as React from \"react\";\r\nimport CustomBox from \"../../shared/CustomBox\";\r\nimport EXHB2 from \"../../../images/Exhibitions/exhb_2.png\";\r\nimport \"../../../styles/Exhibitions.css\";\r\nimport {  exhibitions,CauroselImages, Titlevariants, AboutusVariants, AboutusData } from \"./Exhibitionsdata\";\r\nimport Card from \"./Card\";\r\nimport { motion ,useAnimation } from 'framer-motion';\r\nimport Footer from \"../../shared/Footer\";\r\nimport ParticlesBg from 'particles-bg';\r\nimport { useInView } from \"react-intersection-observer\";\r\n\r\nconst MotionBox = motion<BoxProps>(Box);\r\nconst MotionText = motion<TextProps>(Text);\r\n// const MotionChevronLeftIcon = motion(ChevronLeftIcon);\r\n// const MotionChevronRightIcon = motion(ChevronRightIcon);\r\n\r\nconst Exhibitions = ()=>{\r\n\r\n  const [current,setCurrent] = React.useState(0);\r\n  const length = CauroselImages.length;\r\n  const {ref,inView} = useInView();\r\n  const animation = useAnimation();\r\n  const Titlecolor = useColorModeValue(\"#1c72c7\",\"#00d0ff\");\r\n  console.log(window.innerWidth)\r\n  var CardAnimations;\r\n  if(window.innerWidth > 991){\r\n    CardAnimations = [{x:\"-100vw\"},{opacity:0},{x:\"+100vw\"}];\r\n  }else{\r\n     CardAnimations = [{opacity:0},{opacity:0},{opacity:0}];\r\n  }\r\n  React.useEffect(()=>{\r\n\r\n    if(inView){\r\n      animation.start({\r\n          x:0,\r\n          opacity:1,\r\n          transition: { duration: 1 }\r\n      })\r\n    }else{\r\n      animation.start( (i : any) =>\r\n        CardAnimations[i]\r\n      )\r\n    }\r\n\r\n  }, [inView] )\r\n\r\n  // const prevSlide = ()=>{\r\n  //       setCurrent(current ===0 ? length-1 : current-1);\r\n  // }\r\n  // const nextSlide = ()=>{\r\n  //   setCurrent(current === length-1 ? 0 : current+1);\r\n  // }\r\n\r\n    return(\r\n      <CustomBox>\r\n       <Container maxW={'7xl'} className=\"AboutUsContainer\">\r\n        <div className=\"App-particles__container\">\r\n        <ParticlesBg color={\"#4492b3\"} num={150} type=\"cobweb\" bg={true}/>\r\n        </div>\r\n\r\n        <Heading lineHeight={1.1} fontWeight={600} fontSize={\"5xl\"}>\r\n        <Center pt={{ base:20, md: 20 }} mb={5}>\r\n        <MotionText as={'h1'}\r\n            initial={\"lhidden\"}\r\n            animate = {\"final\"}\r\n            variants={Titlevariants}\r\n            className = \"Title\"\r\n            color={Titlecolor}> EXHIBITIONS </MotionText>\r\n          </Center>\r\n          <Flex justifyContent={\"center\"} height=\"fit-content\" margin=\"auto\" fontSize={[\"5vw\",\"1.5vw\"]}>\r\n            <Box padding={[\"4vw\",\"1vw\"]} zIndex={3} backgroundColor={Titlecolor} borderRadius={\"12px\"} color=\"white\">\r\n            <a href=\"http://exhibition.shaastra.org/\" target=\"_blank\">Register Here</a>\r\n            </Box>\r\n          </Flex>\r\n          </Heading>\r\n          <Stack\r\n          align={'center'}\r\n          spacing={{ base: 8, md: 10 }}\r\n          my={5} p={15}\r\n          direction={{ base: 'column-reverse', md: 'row' }}>\r\n\r\n          <Stack flex={1} spacing={{ base: 5, md: 10 }}>\r\n\r\n              <MotionBox\r\n              initial = {\"hidden\"}\r\n              animate = {\"visible\"}\r\n              variants = {AboutusVariants}>\r\n              <Heading as={'h1'} mb={\"3\"} color={Titlecolor}>\r\n                About Us\r\n              </Heading>\r\n               <Text \r\n                style = {{\r\n                  fontSize: \"20px\",\r\n                  letterSpacing : \"1px\",\r\n                  fontFamily : 'Roboto',\r\n                  zIndex : 1\r\n                }}>\r\n                 {AboutusData}\r\n                </Text>\r\n              </MotionBox>\r\n\r\n          </Stack>\r\n\r\n          <Flex\r\n            flex={1}\r\n            justify={'center'}\r\n            align={'center'}\r\n            position={'relative'}\r\n            w={'full'}>\r\n            <MotionBox\r\n              whileHover={{ scale: 1.1 }}\r\n              whileTap={{ scale: 0.9 }}\r\n              initial = {\"hidden\"}\r\n              animate = {\"visible\"}\r\n              variants = {AboutusVariants}\r\n               height={[\"full\",\"300px\"]}\r\n               width ={[\"full\",\"90%\"]}\r\n              rounded={'2xl'}\r\n              boxShadow={'2xl'}\r\n              overflow={'hidden'}\r\n              mt={[\"0px\",\"60px\"]}\r\n              >\r\n              <Image\r\n                alt={'Display Image'}\r\n                fit={\"cover\"}\r\n                align={'center'}\r\n                w={'100%'}\r\n                h={'100%'}\r\n                src={EXHB2}\r\n              />\r\n            </MotionBox>\r\n          </Flex>\r\n        </Stack>\r\n\r\n      </Container>\r\n           \r\n      <Container mb={3} maxW={'7xl'} >\r\n      <VStack>\r\n      <Heading\r\n              fontWeight={500}\r\n               m={[2,5]} \r\n              className = \"Title\"\r\n              color={Titlecolor}\r\n              p={3}\r\n             lineHeight={1.1} fontSize={\"4xl\"}\r\n             >\r\n              PREVIOUS EXHIBITIONS\r\n            </Heading>\r\n        <SimpleGrid columns={[1,1,2,3]} spacing={[10,20]} ref={ref} mb={5} pb={20}> \r\n        {\r\n\r\n          exhibitions.map( (item,index) => {\r\n            let i = index%3;\r\n            return(\r\n              <MotionBox\r\n              custom = {i}\r\n              animate = {animation}\r\n              className=\"ECard\"\r\n              key= {index}\r\n              >\r\n              <Card data={item} />\r\n              </MotionBox>\r\n            )\r\n          })\r\n        }\r\n        </SimpleGrid>\r\n      </VStack>\r\n      </Container>\r\n\r\n       <Footer designed={[{name : \"Srinivas\",mail :\"ch19b052@smail.iitm.ac.in\"}]} />\r\n     </CustomBox>\r\n    \r\n    );\r\n\r\n}\r\n\r\nexport default Exhibitions;","/home/ubuntu/shaastra-general-website/src/components/pages/night/Envisage.tsx",["394","395","396","397","398"],"import React from 'react'\nimport {\n  Heading,\n  useColorModeValue,\n  Stack,\n  Text,\n  Box,\n  Center,\n  Flex,\n  Image,\n  SimpleGrid,\n} from '@chakra-ui/react'\nimport './../../../styles/night/night.css'\nimport { Link } from 'react-router-dom'\nimport Particles from 'react-tsparticles'\nimport CustomBox from './../../shared/CustomBox'\nimport { ReactComponent as LogoBlack } from './../../../images/night/Envisage_black.svg'\nimport { ReactComponent as LogoWhite } from './../../../images/night/Envisage_white (1).svg'\nimport image1 from './../../../images/night/envisage_1.png'\nimport image2 from './../../../images/night/envisage_2.png'\nimport project1 from '../../../images/night/projects/image1.png'\nimport project2 from '../../../images/night/projects/image2.jpg'\nimport project3 from '../../../images/night/projects/image3.jpg'\nimport Footer from '../../shared/Footer'\nimport '../../../styles/night/Envisage.css'\nimport { FaArrowsAltV } from 'react-icons/fa'\nimport {\n  VerticalTimeline,\n  VerticalTimelineElement,\n} from 'react-vertical-timeline-component'\nimport 'react-vertical-timeline-component/style.min.css'\n\nexport default function Main() {\n  const color = useColorModeValue('white', 'black')\n  const bgcolor = useColorModeValue('gray.700', 'gray.200')\n\n  return (\n    <CustomBox>\n      <Flex\n        alignItems='center'\n        justifyContent='center'\n        direction='column'\n        minHeight='100vh'\n        className='main-ctn'\n        maxW='100%'\n        overflowX='hidden'\n      >\n        <Box className='header-ctn' marginTop={12}>\n          <Heading marginTop={12} fontSize='7xl'>\n            <span>ENVISAGE</span>\n          </Heading>\n        </Box>\n        <Box\n          rounded={'lg'}\n          bg={useColorModeValue('gray.700', 'gray.200')}\n          textColor={useColorModeValue('white', 'black')}\n          boxShadow={'lg'}\n          p={8}\n          marginTop={8}\n          marginLeft={8}\n          marginRight={8}\n          marginBottom={8}\n          justifyContent='center'\n          alignItems='center'\n          textAlign='center'\n        >\n          <SimpleGrid columns={[1, 1, 2]} spacing='40px'>\n            <Center>\n              <Image\n                alt='image1'\n                src={image1}\n                rounded='xl'\n                width='100%'\n                height='auto'\n              ></Image>\n            </Center>\n            <Flex flexDirection='column'>\n              <Heading margin={2} padding={2} className='sub-heading'>\n                ABOUT US\n              </Heading>\n              <Text fontSize='lg' padding={2}>\n                The Annual Technical Festival of IIT Madras, Shaastra introduced\n                a technologically aided cultural show in the year 2013,\n                capitalizing on the entertainment factor. This techno – cultural\n                show was named Envisage and today it is India’s first and only\n                student organised techno-entertainment show. The projects\n                exhibited by Envisage attract a bunch of not-so-technically\n                oriented guests too. The projects are designed in conformity\n                with the tagline of Envisage – “Technology meets Entertainment”.\n                Alongside conducting the show on 1st day of Shaastra, a number\n                of other interactive projects and video games are also\n                developed and exhibited to a vast crowd at KV Stalls during\n                Shaastra. Over the past few years Envisage has been exploring\n                and presenting projects at various avenues like IIM Bangalore,\n                Anna University and in several other universities as part of\n                Samparks, Publicity event of Shaastra. The coming version marks\n                the entry of Envisage into its very 10th year.\n              </Text>\n              <Heading margin={2} padding={2} className='sub-heading'>\n                VISION\n              </Heading>\n              <Text fontSize='lg' padding={2}>\n                As the tagline “Where Technology Meets Entertainment” suggests,\n                we inspire and enable students to explore their creative and\n                engineering skills through various technical projects for the\n                techno cultural show and the tech exhibition during Shaastra.\n              </Text>\n            </Flex>\n          </SimpleGrid>\n        </Box>\n         <Flex\n            flexDirection='column'\n            alignItems='center'\n            justifyContent='center'\n          >\n            <Box>\n              <Heading marginTop={5} padding={2} className='sub-heading'>\n                VERTICALS\n              </Heading>\n            </Box>\n            <SimpleGrid\n              columns = {[1,1,1,2,3]}\n              spacing='18px'\n              justifyContent='center'\n              alignItems='center'\n            >\n              <Box\n                textColor='black'\n                bgColor='white'\n                rounded={'lg'}\n                boxShadow={'lg'}\n                p={8}\n                marginTop={8}\n                marginLeft={8}\n                marginRight={8}\n                marginBottom={8}\n                minHeight = {300}\n                justifyContent='center'\n                alignItems='center'\n                textAlign='center'\n              >\n                <Heading margin={2}>Shows</Heading>\n                <Text>\n                  This vertical comprises large scale projects which are\n                  presented in the Envisage show, which is organized on the\n                  first day of Shaastra. This is the first and only student-run\n                  techno-entertainment show in India and witnessed by an\n                  audience of around 5000.\n                </Text>\n              </Box>\n              <Box\n                rounded={'lg'}\n                boxShadow={'lg'}\n                p={8}\n                marginTop={8}\n                marginLeft={8}\n                marginRight={8}\n                marginBottom={8}\n                justifyContent='center'\n                alignItems='center'\n                textAlign='center'\n                minHeight={300}\n                bgColor='white'\n                textColor='black'\n              >\n                <Heading margin={2}>Tech Ambience</Heading>\n                <Text>\n                  This vertical comprises interactive projects which are\n                  presented at KV grounds during Shaastra as a part of tech-\n                  exhibition of Envisage.\n                </Text>\n              </Box>\n              <Box\n                rounded={'lg'}\n                boxShadow={'lg'}\n                p={8}\n                marginTop={8}\n                marginLeft={8}\n                marginRight={8}\n                marginBottom={8}\n                justifyContent='center'\n                alignItems='center'\n                textAlign='center'\n                minHeight={300}\n                bgColor='white'\n                textColor='black'\n              >\n                <Heading margin={2}>Game Dev</Heading>\n                <Text>\n                  This vertical is involved in creating video games from scratch\n                  and are displayed at KV stalls during Shaastra as a part of\n                  our Tech-Exhibition. We also compete in a lot of entertaining\n                  game jam sessions and conduct game development workshops as a\n                  team to show the entertaining aspect of game development to\n                  others.\n                </Text>\n              </Box>\n            </SimpleGrid>\n          </Flex>\n        <Flex\n          justifyContent='center'\n          flexDirection='column'\n          margin={2}\n          padding={2}\n        >\n          <Heading marginBottom={12} className='sub-heading'>\n            PREVIOUS YEAR'S PROJECTS\n          </Heading>\n          <VerticalTimeline className='timeline'>\n            <VerticalTimelineElement\n              className='vertical-timeline-element--work'\n              contentStyle={{\n                background: '#EDEDED',\n                color: 'black',\n              }}\n              iconStyle={{ background: '#E63E6D', color: '#fff' }}\n              contentArrowStyle={{\n                borderRight: '7px solid  #EDEDED',\n              }}\n              icon={<FaArrowsAltV />}\n            >\n              <h3 className='vertical-timeline-element-title'>Envisage 7.0</h3>\n              <p>Click below to explore and learn more about the projects that were conducted during Shaastra 2018-2019.</p>\n              <Link\n                to={{ pathname: `/project/1`, state: 'Envisage 7.0' }}\n                className='link-ctn '\n              >\n                Explore Projects\n              </Link>\n            </VerticalTimelineElement>\n\n            <VerticalTimelineElement\n              className='vertical-timeline-element--work'\n              contentStyle={{\n                background: '#EDEDED',\n                color: 'black',\n              }}\n              contentArrowStyle={{\n                borderRight: '7px solid  #EDEDED',\n              }}\n              iconStyle={{ background: '#E63E6D', color: '#fff' }}\n              icon={<FaArrowsAltV />}\n            >\n              <h3 className='vertical-timeline-element-title'>Envisage 8.0</h3>\n              <p>Click below to explore and learn more about the projects that were conducted during Shaastra 2019-2020.</p>\n              <Link\n                to={{ pathname: `/project/2`, state: 'Envisage 8.0' }}\n                className='link-ctn'\n              >\n                Explore Projects\n              </Link>\n            </VerticalTimelineElement>\n            <VerticalTimelineElement\n              width='50%'\n              className='vertical-timeline-element--work'\n              iconStyle={{ background: '#E63E6D', color: '#fff' }}\n              contentArrowStyle={{\n                borderRight: '7px solid  #EDEDED',\n              }}\n              contentStyle={{\n                background: '#EDEDED',\n                color: 'black',\n              }}\n              icon={<FaArrowsAltV />}\n            >\n              <h3 className='vertical-timeline-element-title'>Envisage 9.0</h3>\n              <p>Click below to explore and learn more about the projects that were conducted during Shaastra 2020-2021.</p>\n              <Link\n                to={{ pathname: `/project/3`, state: 'Envisage 9.0' }}\n                className='link-ctn'\n              >\n                Explore Projects\n              </Link>\n            </VerticalTimelineElement>\n          </VerticalTimeline>\n        </Flex>\n        <Flex\n          flexDirection='column'\n          justifyContent='center'\n          alignItems='center'\n          textAlign='center'\n        >\n          <Heading marginBottom={12} className='sub-heading'>\n            <span>PATENTED PROJECTS</span>\n          </Heading>\n          <Box\n            rounded={'lg'}\n            boxShadow={'lg'}\n            textColor={color}\n            bgColor={bgcolor}\n            p={8}\n            marginTop={8}\n            marginLeft={8}\n            marginRight={8}\n            marginBottom={8}\n            justifyContent='center'\n            alignItems='center'\n            textAlign='center'\n          >\n            <SimpleGrid columns={[1, 1, 2]} spacing='40px'>\n              <Center>\n                <Image\n                  alt='image1'\n                  src={project1}\n                  rounded='xl'\n                  width='100%'\n                  height='auto'\n                  maxH='400px'\n                ></Image>\n              </Center>\n              <Flex\n                flexDirection='column'\n                alignItems='center'\n                justifyContent='center'\n                textAlign='center'\n              >\n                <Heading margin={2} padding={2} className='sub-heading'>\n                  Speed Painting Bot (SPB)\n                </Heading>\n                <Text fontSize='lg' padding={2}>\n                  It is a bot that can create a painting by punching colored (5\n                  colors) pixels on a canvas.It involves painting a huge picture\n                  within 3-4 minutes using close synchronisation between more\n                  than 40 stepper motors. A concept called pixelation is used\n                  wherein an image is converted to pixels of size 3 cm X 3 cm\n                  and 40 multi coloured brushes simultaneously paint the entire\n                  image in a row wise fashion. The project is an entirely new\n                  concept, which hasn't been tried anywhere else.\n                </Text>\n              </Flex>\n              <Center>\n                <Image\n                  alt='image1'\n                  src={project2}\n                  rounded='xl'\n                  width='100%'\n                  height='auto'\n                  maxH='400px'\n                ></Image>\n              </Center>\n              <Flex\n                flexDirection='column'\n                alignItems='center'\n                justifyContent='center'\n                textAlign='center'\n              >\n                <Heading margin={2} padding={2} className='sub-heading'>\n                  3D Waterfall\n                </Heading>\n                <Text fontSize='lg' padding={2}>\n                  This project can be subtly described as a cylindrical water\n                  screen. Usually lights and other lighting devices are used as\n                  a display element but here we are doing the same thing in a\n                  quite unique way, through water i.e using water as an element\n                  of display. We achieved this using our own electrical design\n                  and controlling it through an Arduino-Uno. The structure which\n                  bears the project has a unique portable design.\n                </Text>\n              </Flex>\n              <Center>\n                <Image\n                  alt='image1'\n                  src={project3}\n                  rounded='xl'\n                  width='100%'\n                  height='auto'\n                  maxH='400px'\n                ></Image>\n              </Center>\n              <Flex\n                flexDirection='column'\n                alignItems='center'\n                justifyContent='center'\n                textAlign='center'\n              >\n                <Heading margin={2} padding={2} className='sub-heading'>\n                  Virtual Instruments\n                </Heading>\n                <Text fontSize='lg' padding={2}>\n                  Did the thought of making music out of thin air ever crossed\n                  your mind? What if you come across some nice music at some\n                  random place and you want to play it then and there. Here\n                  comes the virtual instruments, where one can play drums,\n                  flute, piano, guitar and so on without the need of carrying\n                  the whole instrument set up everywhere.\n                </Text>\n              </Flex>\n            </SimpleGrid>\n          </Box>\n        </Flex>\n      </Flex>\n      <Footer\n        designed={[\n          { name: 'Prithiviraj P', mail: 'na19b052@smail.iitm.ac.in' },\n        ]}\n      />\n    </CustomBox>\n  )\n}\n","/home/ubuntu/shaastra-general-website/src/components/pages/night/Project.tsx",[],"/home/ubuntu/shaastra-general-website/src/components/pages/night/ShowsNew.tsx",["399","400","401","402","403","404","405","406","407"],"import React from \"react\"\nimport CustomBox from '../../shared/CustomBox'\nimport Footer from '../../shared/Footer'\n\nimport {\n    Text,\n    Stack,\n    Link,\n    Flex,\n    Tooltip,\n    Box,\n    RadioGroup,\n    Radio,\n    Image,\n    Heading,\n    Grid,\n    GridItem\n  } from '@chakra-ui/react'\n  import { useDisclosure } from '@chakra-ui/react'\n  import SwiperCore, { Autoplay, Navigation, Pagination, EffectFade } from \"swiper\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport \"swiper/swiper.min.css\";\nimport \"swiper/components/navigation/navigation.min.css\";\nimport \"swiper/components/pagination/pagination.min.css\";\nimport \"swiper/swiper-bundle\";\nimport \"swiper/swiper-bundle.esm.browser\";\n\nimport bgPrev from \"../../../images/night/bg-prev.jpg\"\nimport arrow from \"../../../images/night/arrow.gif\"\n  import Dan from \"../../../images/night/Dan_img.jpg\"\n  import Gloves from \"../../../images/night/Gloves02.jpg\"\n  import Harmony from \"../../../images/night/Harmony-SonicSnares-2.jpg\"\n  import Heimdall from \"../../../images/night/Heimdall1.jpg\"\n  import Mirage from \"../../../images/night/Mirage.jpg\"\n  import DJ from \"../../../images/night/DJ.jpg\"\n  import Vivek from \"../../../images/night/vivek patil.jpg\"\n  import Reverb from \"../../../images/night/Reverb.jpg\"\n  import Soda from \"../../../images/night/Comedy Night.jpeg\"\n  import About from \"../../../images/night/about.jpg\"\n  import Adeleida from \"../../../images/night/Adelaida.jpg\"\n  import Formula from \"../../../images/night/formula drone.jpg\"\n  import Suhani from \"../../../images/night/suhani shah.jpg\"\n  import Sushil from \"../../../images/night/sushil jaiswal.jpg\"\n  import VivekD from \"../../../images/night/vivek desai.jpg\"\n  import Kenny from \"../../../images/night/Kenny Sebastian.jpg\"\n  import Maraiana from \"../../../images/night/Mariana bo.jpg\"\n  import Rishabh from \"../../../images/night/Rishabh Rajan.jpg\"\n  import Freestyle from \"../../../images/night/Freestyl' Air.png\"\n\n  import BiswaP from \"../../../images/night/poster_biswa.png\"\n  import SuhaniP from \"../../../images/night/poster_suhani.png\"\n  import Biswa from \"../../../images/night/Biswa.jpg\"\n  import SuhaniPresent from \"../../../images/night/Suhani.jpg\"\n\n  import Four from \"../../../images/night/4.jpeg\"\n  import Dyskenetic from \"../../../images/night/dyskenetic.jpeg\"\n  import Lizzie from \"../../../images/night/lizzie.jpg\"\n  import Alex from \"../../../images/night/alex mclen.jpg\"\n  import Broken from \"../../../images/night/broken symmetry.jpg\"\n  import Blanc from \"../../../images/night/Blanc.jpg\"\n\n  import ShowsBg from \"../../../images/night/ShowsHome.mp4\"\n\n  import ContactBg from \"../../../images/night/Contact us - Background.png\"\n\n  import \"../../../styles/night/ShowsNew.css\"\n\n  SwiperCore.use([Navigation, Pagination, Autoplay, EffectFade]);\n\nconst Shows = () => {\n    const { isOpen, onOpen, onClose } = useDisclosure()\n    const [isLabelOpen1, setIsLabelOpen1] = React.useState(false)\n    const [isLabelOpen2, setIsLabelOpen2] = React.useState(false)\n    const [isLabelOpen3, setIsLabelOpen3] = React.useState(false)\n    const [isLabelOpen4, setIsLabelOpen4] = React.useState(false)\n    const [isLabelOpen5, setIsLabelOpen5] = React.useState(false)\n    const [isLabelOpen6, setIsLabelOpen6] = React.useState(false)\n    const [isLabelOpen7, setIsLabelOpen7] = React.useState(false)\n    const [isLabelOpen8, setIsLabelOpen8] = React.useState(false)\n    const [isLabelOpen9, setIsLabelOpen9] = React.useState(false)\n    const [isLabelOpen10, setIsLabelOpen10] = React.useState(false)\n    const [isLabelOpen11, setIsLabelOpen11] = React.useState(false)\n    const [isLabelOpen12, setIsLabelOpen12] = React.useState(false)\n    const [isLabelOpen13, setIsLabelOpen13] = React.useState(false)\n    const [isLabelOpen14, setIsLabelOpen14] = React.useState(false)\n    const [isLabelOpen15, setIsLabelOpen15] = React.useState(false)\n    const [isLabelOpen16, setIsLabelOpen16] = React.useState(false)\n    var message = `\n    Sand Art and Light Show | Shaastra 2016  Performed by Vivek Patil\\n\\\n    The renowned visual storyteller artist, headlined the first show. Putting together a trifecta of Light, Sand, and Speed Art, the show was a stunning visual experience.`\n    return(\n       <CustomBox>\n           <link href=\"http://fonts.cdnfonts.com/css/neue-helvetica-bq\" rel=\"stylesheet\"></link>\n           <Stack\n            textAlign={'center'}\n            align={'center'}\n            // spacing={{ base: 8, md: 8 }}\n            py={{ base: 20, md: 20 }}\n            padding={[\"18vw\",\"4vw\"]} \n            overflowX={\"hidden\"}\n           >\n               <Flex \n                    height={\"5vh\"} width=\"100vw\" \n                    padding=\"2vw\" className=\"shows-header\"\n                    justifyContent={\"flex-start\"} alignItems={\"center\"} \n                    fontFamily={\"Roboto\"} fontSize={[\"2.5vw\",\"1vw\"]}\n                    backgroundColor={\"black\"} color=\"white\"\n                >\n                    <Text marginRight={\"4vw\"}> <a href=\"#homeShowNew\">Home</a> </Text>\n                    <Text marginRight={\"4vw\"}> <a href=\"#present\">Upcoming shows</a> </Text>\n                    <Text marginRight={\"4vw\"}> <a href=\"#about\">About us</a> </Text>\n                    <Text marginRight={\"4vw\"}> <a href=\"#previous\">Previous shows</a> </Text>\n                    <Text marginRight={\"4vw\"}> <a href=\"#reverb\">Reverb</a> </Text>\n                    <Text > <a href=\"#contact\">Contact Shaastra Nights</a> </Text>\n               </Flex>\n               <Flex \n                flexDirection={\"column\"} justifyContent={\"space-between\"} alignItems={\"center\"}\n                height={\"83vh\"} width=\"100vw\" marginTop={\"0vw\"} paddingTop={[\"30vh\"]} paddingBottom={[\"20vh\", \"0vh\"]}\n                id=\"homeShowNew\" position={\"relative\"}\n               >\n                   <Box className=\"video-container-shows\" position={\"absolute\"} top={\"0\"} left=\"0\">\n                   <video id=\"video-shows\" src={ShowsBg} muted={true} autoPlay={true} loop={true}>\n                    </video>\n                   </Box>\n                   <Box width=\"100vw\" height={\"83vh\"} position={\"absolute\"} top={\"0\"} left={\"0\"} content=\"\" backgroundColor={\"rgba(0, 0, 0, 0.6)\"} zIndex={\"1\"}></Box>\n                   <Heading\n                    zIndex={\"2\"}\n                    fontSize={[\"8vw\",\"4vw\"]}\n                    color={\"white\"}\n                    marginBottom={[\"0vh\",\"4vh\"]}\n                    className=\"shows-new-heading\"\n                   >SHAASTRA NIGHTS</Heading>\n                    <Link zIndex={3} href=\"#present\"><Image justifySelf={\"flex-end\"} marginTop={[\"0vh\",\"15vh\"]} zIndex={3} boxSize={[\"20vw\",\"10vw\"]} src={arrow}></Image></Link>\n               </Flex>\n               <Flex\n                id=\"present\"\n                backgroundImage={bgPrev}\n                padding={\"8vh 0\"} objectFit={\"cover\"}\n                height=\"fit-content\" width=\"100vw\"\n                flexDirection={\"column\"} justifyContent={\"center\"} alignItems={\"center\"}\n               >\n                   <Heading marginBottom={\"8vh\"} fontSize={[\"8vw\",\"3vw\"]} color=\"white\"   className=\"shows-new-heading\">\n                        UPCOMING SHOWS\n                   </Heading>\n                   <Box   padding={[\"4vh 5vw\",\"4vh 10vw\"]} className=\"reverb-swiper\" marginTop={\"5vh\"}\n                 height=\"fit-content\" width=\"100vw\">\n                        <Swiper navigation={true}\n                        autoplay={{delay: 4000}}\n                        effect=\"fade\"\n                        fadeEffect= {\n                           { crossFade: true}\n                          }\n                        >\n                            <SwiperSlide>\n                                <Image src={BiswaP} boxSize={[\"60vw\",\"30vw\"]} objectFit={\"cover\"}></Image>\n                            </SwiperSlide>\n                            <SwiperSlide>\n                                <Image src={SuhaniP} boxSize={[\"60vw\",\"30vw\"]} objectFit={\"cover\"}></Image>\n                            </SwiperSlide>\n                        </Swiper>\n                   </Box>\n                   <Box\n                    backgroundColor={\"#00F7FF\"} color={\"black\"}\n                    fontFamily={\"Montserrat\"} fontWeight={\"bold\"}\n                    padding={[\"2vw\",\"1vw\"]} zIndex={\"2\"}\n                    borderRadius={[\"5px\",\"12px\"]} fontSize={[\"2.75vw\", \"1vw\"]}\n                   > <a href=\"/signup\" className=\"montserrat\">Register for shows</a> </Box>\n                   <Box  padding={[\"4vh 5vw\",\"4vh 10vw\"]} marginTop={\"5vh\"}\n                 height=\"fit-content\" width=\"100vw\">\n                     <Flex width=\"100%\" justifyContent={\"space-between\"} alignItems={\"center\"} direction={[\"column\", \"row\"]}>\n                         <Image src={Biswa} boxSize={[\"55vw\",\"25vw\"]} objectFit={\"cover\"}></Image>\n                         <Text width={[\"80vw\",\"40vw\" ]} marginTop={[\"4vh\", \"0\"]}\n                            fontSize={[\"4vw\",\"1.25vw\"]} color=\"white\" font-fontFamily={\"Roboto\"}\n                         >\n                             <Heading> <b>CHAOS | 15.01.2022 </b></Heading>\n                             <br /><br />\n                             <em>“I didn't know what rock music was. I always thought rocking was an adjective. I always \n                                 thought it was good, better, best, rocking”.</em>\n                            <br /><br />\n                            After the legendary Kenny Sebastian, next in line we have <em>“Mast Aadmi”</em> Biswa Kalyan Rath, here to \n                            lighten up your mood at the end of an eventful day. He's all set to tickle your funny bones with \n                            his riotous comedy act.\n                            <br /><br />\n                            Catch Biswa Kalyan Rath live in Chaos on <b>15th January, Saturday at 7 pm</b>, for a <b><em>“Mast”</em></b> evening.\n                         </Text>\n                     </Flex>\n                   </Box>\n                   <Box  padding={[\"4vh 5vw\",\"4vh 10vw\"]} marginTop={\"5vh\"}\n                 height=\"fit-content\" width=\"100vw\">\n                     <Flex width=\"100%\" justifyContent={\"space-between\"} alignItems={\"center\"} direction={[\"column\", \"row\"]}>\n                         <Image src={SuhaniPresent} boxSize={[\"55vw\",\"25vw\"]} objectFit={\"cover\"}></Image>\n                         <Text width={[\"80vw\",\"40vw\" ]} marginTop={[\"4vh\", \"0\"]}\n                            fontSize={[\"4vw\",\"1.25vw\"]} color=\"white\" font-fontFamily={\"Roboto\"}\n                         >\n                             <Heading> <b>SPECTRE | 14.01.2022 </b></Heading>\n                             <br /><br />\n                             Illusion, mentalism, phantasm - join us for a magical milieu on <b>14th Jan</b> with India’s only female \n                             illusionist and magician, Suhani Shah. Tickling your minds, tingling your bones with laughter & \n                             stealthily reading your thoughts - Suhani can do it all! \n                             <br /><br />\n                             Brace yourselves for a magical evening this \n                             Saturday, at <b>7.00 pm</b> only on <b><a href=\"http://shaastra2022.com/\">shaastra2022.com</a></b>\n                         </Text>\n                     </Flex>\n                   </Box>\n               </Flex>\n               <Flex\n                height=\"100vh\" width=\"100vw\"\n                color=\"white\"\n                id=\"about\" position={\"relative\"}\n                flexDirection={\"column\"} justifyContent={\"center\"} alignItems={\"center\"} \n               >\n                   <Image src={bgPrev} position={\"absolute\"} top=\"0\" left=\"0\" width=\"100vw\" height=\"100vh\" objectFit={\"cover\"}></Image>\n                   <Heading marginBottom={\"4vh\"} fontSize={[\"8vw\",\"3vw\"]} zIndex={2}    className=\"shows-new-heading\">ABOUT US</Heading>\n                   <Text width=\"80%\" fontSize={[\"4vw\",\"1.5vw\"]} zIndex={2}>\n                    The flagship event of Shaastra, Shaastra Nights, has made the former a noteworthy leader amongst \n                    parallel fests in the country. Shaastra Nights provide a platform for exquisite performers to display \n                    their artistic prowess while giving the audience a once-in-a-lifetime opportunity to witness a confluence of \n                    technology and culture. Shaastra Nights is non-ticketed - an attribute that distinguishes it from shows \n                    akin; it enables students and the public to access quality entertainment at its finest. Behind the warranted \n                    glitz and glamour, Shaastra Nights' true intentions shine - diversity and inclusivity.\n                   </Text>\n               </Flex>\n               <Flex\n                 id=\"previous\"\n                 backgroundImage={bgPrev}\n                 padding={\"8vh 0\"} objectFit={\"cover\"}\n                 height=\"fit-content\" width=\"100vw\"\n                 flexDirection={\"column\"} justifyContent={\"center\"} alignItems={\"center\"}\n               >\n                   <Heading marginBottom={\"8vh\"} fontSize={[\"8vw\",\"3vw\"]} color=\"white\"   className=\"shows-new-heading\">\n                        PREVIOUS SHOWS\n                   </Heading>\n                   <Grid templateColumns={['repeat(2, 1fr)','repeat(4, 1fr)']} gap={\"7vw\"} width=\"80vw\" marginBottom={\"4vh\"}>\n                        <GridItem>\n                            <Tooltip isOpen={isLabelOpen1} \n                        label=\"CHAOS | Shaastra 2021 Main Show by Kenny Sebastian - the Indian stand-up comedian, musician, and filmmaker burst the crowd into laughter with his narrative craft.\" \n                            placement=\"right\" padding=\"2vw\" maxWidth={[\"58vw\",\"15vw\"]} fontSize={[\"2.75vw\",\"1vw\"]} backgroundColor={\"#00F7FF\"} color=\"black\" font-fontFamily={\"Roboto\"}>\n                            <Image onMouseEnter={() => setIsLabelOpen1(true)}\n                                    onMouseLeave={() => setIsLabelOpen1(false)}\n                                    onClick={() => setIsLabelOpen1(true)} \n                                    src={Kenny} boxSize={[\"35vw\",\"15vw\"]} objectFit={\"cover\"} objectPosition={\"top\"}></Image>\n                        </Tooltip>\n                        </GridItem>\n                        <GridItem>\n                            <Tooltip isOpen={isLabelOpen2} \n                            label=\"Virtual Magic Show | Shaastra Juniors 2020 Performed by Dan Rhodes - He blew the minds of our young audience with his savvy magic tricks. The then 16-year-old magician became an inspiration for the young crowd.\" \n                                placement=\"right\" padding=\"2vw\" maxWidth={[\"55vw\",\"25vw\"]} fontSize={[\"2.75vw\",\"1vw\"]} backgroundColor={\"#00F7FF\"} color=\"black\" font-fontFamily={\"Roboto\"}>\n                                <Image onMouseEnter={() => setIsLabelOpen2(true)}\n                                        onMouseLeave={() => setIsLabelOpen2(false)}\n                                        onClick={() => setIsLabelOpen2(true)} \n                                        src={Dan} boxSize={[\"35vw\",\"15vw\"]} objectFit={\"cover\"}></Image>\n                            </Tooltip>\n                        </GridItem>\n                        <GridItem>\n                        <Tooltip isOpen={isLabelOpen3} \n                       label=\"EDM Night | Shaastra 2018 Headlining Show by Mariana BO Ranked among the top 100 DJs of 2017, the violinist and DJ extraordinaire produced electrifying moments which made the crowd alive and immersed in a sensory escapade.\"\n                        placement=\"right\" padding=\"2vw\" maxWidth={[\"40vw\",\"20vw\"]} fontSize={[\"2.75vw\",\"1vw\"]} backgroundColor={\"#00F7FF\"} color=\"black\" font-fontFamily={\"Roboto\"}>\n                        <Image onMouseEnter={() => setIsLabelOpen3(true)}\n                                onMouseLeave={() => setIsLabelOpen3(false)}\n                                onClick={() => setIsLabelOpen3(true)} \n                                src={Maraiana} boxSize={[\"35vw\",\"15vw\"]} objectFit={\"cover\"}></Image>\n                       </Tooltip>\n                        </GridItem>\n                        <GridItem>\n                        <Tooltip isOpen={isLabelOpen4} \n                       label=\"Ukraine's best LED & NEON Show | Shaastra 2016 Performed by Adelaida - The professional dance troupe from Ukraine who performed in over 1000 events across the world brought forth a show that was full of light, energy, and charisma.\" \n                        placement=\"right\" padding=\"2vw\" maxWidth={[\"40vw\",\"18vw\"]} fontSize={[\"2.75vw\",\"1vw\"]} backgroundColor={\"#00F7FF\"} color=\"black\" font-fontFamily={\"Roboto\"}>\n                        <Image onMouseEnter={() => setIsLabelOpen4(true)}\n                                onMouseLeave={() => setIsLabelOpen4(false)}\n                                onClick={() => setIsLabelOpen4(true)} \n                                src={Adeleida} boxSize={[\"35vw\",\"15vw\"]} objectFit={\"cover\"} objectPosition={\"top\"}></Image>\n                       </Tooltip>\n                        </GridItem>\n                   </Grid>\n\n                   <Grid templateColumns={['repeat(2, 1fr)','repeat(4, 1fr)']} gap={\"7vw\"} width=\"80vw\" marginBottom={\"4vh\"}>\n                        <GridItem>\n                        <Tooltip isOpen={isLabelOpen5}  \n                       label=\"LASER HARP Live Performance | Shaastra 2020 Performed by Heimdall - Armed himself with a harp that is lit up in the colors of the visible spectrum, his oeuvre of thumping electronic music along with the vibrant light orchestration, the show was an enrapturing production.\" \n                        placement=\"right\" padding=\"2vw\" maxWidth={[\"55vw\",\"28vw\"]} fontSize={[\"2.75vw\",\"1vw\"]} backgroundColor={\"#00F7FF\"} color=\"black\" font-fontFamily={\"Roboto\"}>\n                        <Image onMouseEnter={() => setIsLabelOpen5(true)}\n                                onMouseLeave={() => setIsLabelOpen5(false)}\n                                onClick={() => setIsLabelOpen5(true)} \n                               src={Heimdall} boxSize={[\"35vw\",\"15vw\"]} objectFit={\"cover\"}></Image>\n                       </Tooltip>\n                        </GridItem>\n                        <GridItem>\n                        <Tooltip isOpen={isLabelOpen6} \n                       label=\"HARMONY | Shaastra 2021 Main Show by Sonic Snares With his vivacious act of lush HD visuals and intoxicating beats, the brilliant Austrian artist took the audience into a world of trance.\" \n                        placement=\"right\" padding=\"2vw\" maxWidth={[\"40vw\",\"18vw\"]} fontSize={[\"2.75vw\",\"1vw\"]} backgroundColor={\"#00F7FF\"} color=\"black\" font-fontFamily={\"Roboto\"}>\n                        <Image onMouseEnter={() => setIsLabelOpen6(true)}\n                                onMouseLeave={() => setIsLabelOpen6(false)}\n                                onClick={() => setIsLabelOpen6(true)} \n                              src={Harmony} boxSize={[\"35vw\",\"15vw\"]} objectFit={\"cover\"} objectPosition={\"top\"}></Image>\n                       </Tooltip>\n                        </GridItem>\n                        <GridItem>\n                        <Tooltip isOpen={isLabelOpen8} \n                       label=\"Tech Magic Show | Shaastra 2018 Performed by Suhani Shah - Pulling up from a mixed bag of tricks for her show, she held the crowd on their toes by staging grand illusions, along with one of her most famous tricks of predicting the future\" \n                        placement=\"right\" padding=\"2vw\" maxWidth={[\"45vw\",\"20vw\"]} fontSize={[\"2.75vw\",\"1vw\"]} backgroundColor={\"#00F7FF\"} color=\"black\" font-fontFamily={\"Roboto\"}>\n                        <Image onMouseEnter={() => setIsLabelOpen8(true)}\n                                onMouseLeave={() => setIsLabelOpen8(false)}\n                                onClick={() => setIsLabelOpen8(true)} \n                                 src={Suhani} boxSize={[\"35vw\",\"15vw\"]} objectFit={\"cover\"}></Image>\n                       </Tooltip>\n                        </GridItem>\n                        <GridItem>\n                        <Tooltip isOpen={isLabelOpen7} \n                       label=\"Freestyl’Air - The French bike troupe showed off their daredevilry while performing stunts that only professionally trained athletes like themselves were capable of pulling off. They left the audience with their hearts beating in the air, quite literally!\" \n                        placement=\"right\" padding=\"2vw\" maxWidth={[\"40vw\",\"20vw\"]} fontSize={[\"2.75vw\",\"1vw\"]} backgroundColor={\"#00F7FF\"} color=\"black\" font-fontFamily={\"Roboto\"}>\n                        <Image onMouseEnter={() => setIsLabelOpen7(true)}\n                                onMouseLeave={() => setIsLabelOpen7(false)}\n                                onClick={() => setIsLabelOpen7(true)} \n                                src={Freestyle} boxSize={[\"35vw\",\"15vw\"]} objectFit={\"cover\"}></Image>\n                       </Tooltip>\n                        </GridItem>\n                   </Grid>\n\n                   <Grid templateColumns={['repeat(2, 1fr)','repeat(4, 1fr)']} gap={\"7vw\"} width=\"80vw\" marginBottom={\"4vh\"}>\n                        <GridItem>\n                        <Tooltip isOpen={isLabelOpen9}\n                       label=\"MIRAGE Laser Show | Shaastra 2019  Performed by Vilas Nayak - A finalist of the 3rd season of India’s Got Talent, the self-taught speed painting artist mesmerized the crowd with his quick pace and stunning technique.\" \n                        placement=\"right\" padding=\"2vw\" fontSize={[\"2.75vw\",\"1vw\"]} maxWidth={[\"50vw\",\"25vw\"]} backgroundColor={\"#00F7FF\"} color=\"black\" font-fontFamily={\"Roboto\"}>\n                        <Image onMouseEnter={() => setIsLabelOpen9(true)}\n                                onMouseLeave={() => setIsLabelOpen9(false)}\n                                onClick={() => setIsLabelOpen9(true)} \n                                src={Mirage} boxSize={[\"35vw\",\"15vw\"]} objectFit={\"cover\"}></Image>\n                       </Tooltip>\n                        </GridItem>\n                        <GridItem>\n                       <Tooltip isOpen={isLabelOpen10} \n                       label=\"Mentalist and Illusionist Performance | Shaastra 2020  Performed by Vivek Desai - The modern magician entertained the crowd with his unique fusion of mentalism and humor on the stage.\" \n                        placement=\"right\" padding=\"2vw\" maxWidth={[\"40vw\",\"20vw\"]} fontSize={[\"2.75vw\",\"1vw\"]} backgroundColor={\"#00F7FF\"} color=\"black\" font-fontFamily={\"Roboto\"}>\n                        <Image onMouseEnter={() => setIsLabelOpen10(true)}\n                                onMouseLeave={() => setIsLabelOpen10(false)}\n                                onClick={() => setIsLabelOpen10(true)} \n                                src={VivekD} boxSize={[\"35vw\",\"15vw\"]} objectFit={\"cover\"}></Image>\n                       </Tooltip>\n                        </GridItem>\n                        <GridItem>\n                        <Tooltip isOpen={isLabelOpen11} \n                       label=\"Formula DrOne | Shaastra 2017 India's top 8 drone pilots battled it out in this race held in association with the Indian Drone Racing League (IDRL), a pan-India community of drone racing pilots. It was the country's 1st night-drone-racing event!\" \n                        placement=\"right\" padding=\"2vw\" maxWidth={[\"45vw\",\"18vw\"]} fontSize={[\"2.75vw\",\"1vw\"]} backgroundColor={\"#00F7FF\"} color=\"black\" font-fontFamily={\"Roboto\"}>\n                        <Image onMouseEnter={() => setIsLabelOpen11(true)}\n                                onMouseLeave={() => setIsLabelOpen11(false)}\n                                onClick={() => setIsLabelOpen11(true)} \n                                src={Formula} boxSize={[\"35vw\",\"15vw\"]} objectFit={\"cover\"} objectPosition={\"top\"}></Image>\n                       </Tooltip>\n                        </GridItem>\n                        <GridItem>\n                        <Tooltip isOpen={isLabelOpen12} \n                       label=\"HARMONY | Shaastra 2021 Opening Show by Rishab Rajan - The celebrated Berklee College of Music faculty member amazed the crowd with his mystic techno-octaves.\" \n                        placement=\"right\" padding=\"2vw\" maxWidth={[\"40vw\",\"18vw\"]} fontSize={[\"2.75vw\",\"1vw\"]} backgroundColor={\"#00F7FF\"} color=\"black\" font-fontFamily={\"Roboto\"}>\n                        <Image onMouseEnter={() => setIsLabelOpen12(true)}\n                                onMouseLeave={() => setIsLabelOpen12(false)}\n                                onClick={() => setIsLabelOpen12(true)} \n                                src={Rishabh} boxSize={[\"35vw\",\"15vw\"]} objectFit={\"cover\"} objectPosition={\"top\"}></Image>\n                       </Tooltip>\n                        </GridItem>\n                   </Grid>\n\n                   <Grid templateColumns={['repeat(2, 1fr)','repeat(4, 1fr)']} gap={\"7vw\"} width=\"80vw\" marginBottom={\"4vh\"}>\n                        <GridItem>\n                        <Tooltip size=\"400px\" label={`\n                       Sand Art and Light Show | Shaastra 2016, Shaastra 2019 - Performed by Vivek Patil: The renowned visual storyteller artist, headlined the first show. Putting together a trifecta of Light, Sand, and Speed Art, the show was a stunning visual experience.`} \n                        placement=\"right\" padding=\"2vw\" className=\"shows-tooltip\" maxWidth={[\"50vw\",\"32vw\"]} fontSize={[\"2.75vw\",\"1vw\"]} backgroundColor={\"#00F7FF\"} color=\"black\" font-fontFamily={\"Roboto\"}\n                        isOpen={isLabelOpen13} \n                        >\n                        <Image onMouseEnter={() => setIsLabelOpen13(true)}\n                                onMouseLeave={() => setIsLabelOpen13(false)}\n                                onClick={() => setIsLabelOpen13(true)}\n                                src={Vivek} boxSize={[\"35vw\",\"15vw\"]} objectFit={\"cover\"}></Image>\n                       </Tooltip>\n                        </GridItem>\n                        <GridItem>\n                        <Tooltip isOpen={isLabelOpen14} \n                       label=\"CHAOS | Shaastra 2021 Opening Show by Sudarshan Ramamurthy - popularly known as SODA, set the mood for the comedy night with his witty humor.\" \n                        placement=\"right\" padding=\"2vw\" maxWidth={[\"40vw\",\"18vw\"]} fontSize={[\"2.75vw\",\"1vw\"]} backgroundColor={\"#00F7FF\"} color=\"black\" font-fontFamily={\"Roboto\"}>\n                        <Image onMouseEnter={() => setIsLabelOpen14(true)}\n                                onMouseLeave={() => setIsLabelOpen14(false)}\n                                onClick={() => setIsLabelOpen14(true)} \n                                src={Soda} boxSize={[\"35vw\",\"15vw\"]} objectFit={\"cover\"}></Image>\n                       </Tooltip>\n                        </GridItem>\n                        <GridItem>\n                        <Tooltip isOpen={isLabelOpen15} \n                       label=\"Virtual Magic Show | Shaastra Juniors 2020 Performed by Sushil Jaiswal - This Guinness world record holder, also known as the unlocker of brains, entertained the crowd with his breathtaking magic cum mentalism acts.\" \n                        placement=\"right\" padding=\"2vw\" maxWidth={[\"58vw\",\"25vw\"]} fontSize={[\"2.75vw\",\"1vw\"]} backgroundColor={\"#00F7FF\"} color=\"black\" font-fontFamily={\"Roboto\"}>\n                        <Image onMouseEnter={() => setIsLabelOpen15(true)}\n                                onMouseLeave={() => setIsLabelOpen15(false)}\n                                onClick={() => setIsLabelOpen15(true)} \n                                 src={Sushil} boxSize={[\"35vw\",\"15vw\"]} objectFit={\"cover\"} objectPosition={\"top\"}></Image>\n                       </Tooltip>\n                        </GridItem>\n                        <GridItem>\n                        <Tooltip isOpen={isLabelOpen16} \n                       label=\"EDM Night | Shaastra 2018 Supporting Show by DJ Get Massive: Having performed in VH1 Supersonic festival, India’s #1 Trance Artist created a scintillating experience that intersected the orbits of music and arts.\" \n                        placement=\"right\" padding=\"2vw\" maxWidth={[\"40vw\",\"18vw\"]} fontSize={[\"2.75vw\",\"1vw\"]} backgroundColor={\"#00F7FF\"} color=\"black\" font-fontFamily={\"Roboto\"}>\n                        <Image onMouseEnter={() => setIsLabelOpen16(true)}\n                                onMouseLeave={() => setIsLabelOpen16(false)}\n                                onClick={() => setIsLabelOpen16(true)} \n                                src={DJ} boxSize={[\"35vw\",\"15vw\"]} objectFit={\"cover\"}></Image>\n                       </Tooltip>\n                        </GridItem>\n                   </Grid>\n               </Flex>\n               <Flex width={\"100vw\"} height={\"100vh\"} marginTop={\"0%\"}\n               id=\"reverb\"\n                flexDirection={\"column\"} justifyContent={\"center\"} alignItems={\"center\"}\n                color=\"white\" position=\"relative\"\n                backgroundImage={Reverb} backgroundPosition={\"center\"} backgroundRepeat={\"no-repeat\"} backgroundSize={\"cover\"}\n               >\n                   <Box position={\"absolute\"} top=\"0\" left=\"0\" content=\"\" height=\"100vh\" width=\"100vw\" backgroundColor={\"rgba(0, 0, 0, 0.6)\"}></Box>\n                   <Heading marginBottom={\"8vh\"} marginTop={\"2vh\"} fontSize={[\"8vw\",\"3vw\"]} zIndex={\"2\"}   className=\"shows-new-heading\">REVERB</Heading>\n                   <Text width=\"80%\" fontSize={[\"4vw\",\"1.5vw\"]} className=\"montserrat\" fontFamily={\"Montserrat\"} zIndex={\"2\"}>\n                    Our latest series, Reverb, aims to bridge the gap between technology and music by showcasing \n                    performances that are a juxtaposition of the same.\n                   </Text>\n                   <Box\n                 padding={[\"4vh 5vw\",\"4vh 10vw\"]} className=\"reverb-swiper\" marginTop={\"5vh\"}\n                 height=\"fit-content\" width=\"100vw\" >\n              <Swiper\n                navigation={true}\n              >\n                   <SwiperSlide>\n                   <Tooltip isOpen={isLabelOpen1} \n                       label=\"ALGORAVE | Presented by Reverb Alex McLean, Lizzie Wilson, and Abhinay Khoparzi - This legendary collaboration among the 3 pioneering artists took coding from the obscurities of a screen to the dance floor.\" \n                        placement={\"auto\"} padding=\"2vw\"maxWidth={[\"50vw\",\"20vw\"]} fontSize={[\"2.75vw\",\"1vw\"]} backgroundColor={\"#00F7FF\"} color=\"black\" font-fontFamily={\"Roboto\"}>\n                        <Image onMouseEnter={() => setIsLabelOpen1(true)}\n                                onMouseLeave={() => setIsLabelOpen1(false)}\n                                onClick={() => setIsLabelOpen1(true)} \n                                 src={Four} boxSize={[\"50vw\",\"25vw\"]} objectFit={\"cover\"}></Image>\n                       </Tooltip>\n                   </SwiperSlide>\n                   <SwiperSlide>\n                   <Tooltip isOpen={isLabelOpen2} \n                       label=\"ALGORAVE | Presented by Reverb Alex McLean, Lizzie Wilson, and Abhinay Khoparzi - This legendary collaboration among the 3 pioneering artists took coding from the obscurities of a screen to the dance floor.\" \n                        placement=\"auto\" padding=\"2vw\" maxWidth={[\"50vw\",\"20vw\"]} fontSize={[\"2.75vw\",\"1vw\"]} backgroundColor={\"#00F7FF\"} color=\"black\" font-fontFamily={\"Roboto\"}>\n                        <Image onMouseEnter={() => setIsLabelOpen2(true)}\n                                onMouseLeave={() => setIsLabelOpen2(false)}\n                                onClick={() => setIsLabelOpen2(true)} \n                                src={Alex} boxSize={[\"50vw\",\"25vw\"]} objectFit={\"cover\"}></Image>\n                       </Tooltip>\n                   </SwiperSlide>\n                   <SwiperSlide>\n                   <Tooltip isOpen={isLabelOpen3} \n                       label=\"REVERB ft. Dyskinetic | Shaastra Juniors 2021 The show introduced MiMu gloves to the young technophiles out there with spooky soundtracks.\" \n                        placement=\"auto\" padding=\"2vw\" maxWidth={[\"55vw\",\"25vw\"]} fontSize={[\"2.75vw\",\"1vw\"]} backgroundColor={\"#00F7FF\"} color=\"black\" font-fontFamily={\"Roboto\"}>\n                        <Image onMouseEnter={() => setIsLabelOpen3(true)}\n                                onMouseLeave={() => setIsLabelOpen3(false)}\n                                onClick={() => setIsLabelOpen3(true)} \n                                src={Dyskenetic} boxSize={[\"50vw\",\"25vw\"]} objectFit={\"cover\"}></Image>\n                       </Tooltip>\n                   </SwiperSlide>\n                   <SwiperSlide>\n                   <Tooltip isOpen={isLabelOpen5} \n                       label=\"ALGORAVE | Presented by Reverb Alex McLean, Lizzie Wilson, and Abhinay Khoparzi - This legendary collaboration among the 3 pioneering artists took coding from the obscurities of a screen to the dance floor.\" \n                        placement=\"auto\" padding=\"2vw\" maxWidth={[\"50vw\",\"20vw\"]} fontSize={[\"2.75vw\",\"1vw\"]} backgroundColor={\"#00F7FF\"} color=\"black\" font-fontFamily={\"Roboto\"}>\n                        <Image onMouseEnter={() => setIsLabelOpen5(true)}\n                                onMouseLeave={() => setIsLabelOpen5(false)}\n                                onClick={() => setIsLabelOpen5(true)} \n                                src={Lizzie} boxSize={[\"50vw\",\"25vw\"]} objectFit={\"cover\"}></Image>\n                       </Tooltip>\n                   </SwiperSlide>\n                   <SwiperSlide>\n                   <Tooltip isOpen={isLabelOpen4} \n                       label=\"THEREMIN | Presented by Reverb Performed by Grégoire Blanc Creating music never felt so magical, the crowd was enthralled as Blanc wove music from thin air.\" \n                        placement=\"auto\" padding=\"2vw\" maxWidth={[\"50vw\",\"20vw\"]} fontSize={[\"2.75vw\",\"1vw\"]} backgroundColor={\"#00F7FF\"} color=\"black\" font-fontFamily={\"Roboto\"}>\n                        <Image onMouseEnter={() => setIsLabelOpen4(true)}\n                                onMouseLeave={() => setIsLabelOpen4(false)}\n                                onClick={() => setIsLabelOpen4(true)} \n                                src={Blanc} boxSize={[\"50vw\",\"25vw\"]} objectFit={\"cover\"}></Image>\n                       </Tooltip>\n                   </SwiperSlide>\n               </Swiper>\n              </Box>\n               </Flex>\n              \n               {/* <Flex\n                 backgroundColor={\"black\"}\n                 padding={\"4vh 0\"}\n                 height=\"fit-content\" width=\"100vw\"\n                 flexDirection={\"column\"} justifyContent={\"center\"} alignItems={\"center\"}\n               >\n                   <Flex\n                    width={[\"90%\",\"70%\"]} margin=\"auto\" marginBottom={\"4vh\"} paddingTop={\"4vh\"}\n                    justifyContent={\"space-between\"}\n                    alignItems={\"center\"}\n                   >\n                       <Tooltip isOpen={isLabelOpen7} \n                       label=\"ALGORAVE | Presented by Reverb Alex McLean, Lizzie Wilson, and Abhinay Khoparzi - This legendary collaboration among the 3 pioneering artists took coding from the obscurities of a screen to the dance floor.\" \n                        placement=\"right\" padding=\"2vw\"maxWidth={[\"50vw\",\"20vw\"]} fontSize={[\"2.75vw\",\"1vw\"]} backgroundColor={\"#00F7FF\"} color=\"black\" font-fontFamily={\"Roboto\"}>\n                        <Image onMouseEnter={() => setIsLabelOpen7(true)}\n                                onMouseLeave={() => setIsLabelOpen7(false)}\n                                onClick={() => setIsLabelOpen7(true)} \n                                borderRadius={'24px'} src={Four} boxSize={[\"35vw\",\"25vw\"]} objectFit={\"cover\"}></Image>\n                       </Tooltip>\n                       <Tooltip isOpen={isLabelOpen8} \n                       label=\"ALGORAVE | Presented by Reverb Alex McLean, Lizzie Wilson, and Abhinay Khoparzi - This legendary collaboration among the 3 pioneering artists took coding from the obscurities of a screen to the dance floor.\" \n                        placement=\"right\" padding=\"2vw\" maxWidth={[\"50vw\",\"20vw\"]} fontSize={[\"2.75vw\",\"1vw\"]} backgroundColor={\"#00F7FF\"} color=\"black\" font-fontFamily={\"Roboto\"}>\n                        <Image onMouseEnter={() => setIsLabelOpen8(true)}\n                                onMouseLeave={() => setIsLabelOpen8(false)}\n                                onClick={() => setIsLabelOpen8(true)} \n                                borderRadius={'24px'} src={Alex} boxSize={[\"35vw\",\"25vw\"]} objectFit={\"cover\"}></Image>\n                       </Tooltip>\n                   </Flex>\n                   <Flex\n                    width={[\"90%\",\"70%\"]} margin=\"auto\" marginBottom={\"4vh\"}\n                    justifyContent={\"space-between\"}\n                    alignItems={\"center\"}\n                   >\n                       <Tooltip isOpen={isLabelOpen9} \n                       label=\"REVERB ft. Dyskinetic | Shaastra Juniors 2021 The show introduced MiMu gloves to the young technophiles out there with spooky soundtracks.\" \n                        placement=\"right\" padding=\"2vw\" maxWidth={[\"55vw\",\"25vw\"]} fontSize={[\"2.75vw\",\"1vw\"]} backgroundColor={\"#00F7FF\"} color=\"black\" font-fontFamily={\"Roboto\"}>\n                        <Image onMouseEnter={() => setIsLabelOpen9(true)}\n                                onMouseLeave={() => setIsLabelOpen9(false)}\n                                onClick={() => setIsLabelOpen9(true)} \n                                borderRadius={'24px'} src={Dyskenetic} boxSize={[\"35vw\",\"25vw\"]} objectFit={\"cover\"}></Image>\n                       </Tooltip>\n                       <Tooltip isOpen={isLabelOpen10} \n                       label=\"ALGORAVE | Presented by Reverb Alex McLean, Lizzie Wilson, and Abhinay Khoparzi - This legendary collaboration among the 3 pioneering artists took coding from the obscurities of a screen to the dance floor.\" \n                        placement=\"right\" padding=\"2vw\" maxWidth={[\"50vw\",\"20vw\"]} fontSize={[\"2.75vw\",\"1vw\"]} backgroundColor={\"#00F7FF\"} color=\"black\" font-fontFamily={\"Roboto\"}>\n                        <Image onMouseEnter={() => setIsLabelOpen10(true)}\n                                onMouseLeave={() => setIsLabelOpen10(false)}\n                                onClick={() => setIsLabelOpen10(true)} \n                                borderRadius={'24px'} src={Lizzie} boxSize={[\"35vw\",\"25vw\"]} objectFit={\"cover\"}></Image>\n                       </Tooltip>\n                   </Flex>\n               </Flex> */}\n               <Flex with=\"100vw\"  justifyContent={\"center\"} padding=\"2vw\" margin=\"0\"\n                id=\"contact\" height={[\"5vh\",\"15vh\"]} position={\"relative\"} \n               >\n                    <Image src={ContactBg} width=\"110vw\" height={[\"5vh\",\"15vh\"]} position=\"absolute\" top=\"0\" left=\"0%\" objectFit={\"cover\"}></Image>\n                    <Box zIndex=\"2\" width=\"100vw\" padding=\"auto\" fontSize={[\"3.5vw\",\"2vw\"]} fontFamily={\"Montserrat\"}> <b>Contact Shaastra Nights:</b> shows@shaastra.org</Box>\n               </Flex>\n           </Stack>\n           <Footer designed={[{ name: 'Krithikaa', mail: 'be20b020@smail.iitm.ac.in' }]} ></Footer>   \n       </CustomBox>\n    )\n}\n\nexport default Shows","/home/ubuntu/shaastra-general-website/src/components/pages/Team_page/Team.tsx",["408","409","410","411","412","413"],"import * as React from \"react\";\nimport { Text, VStack, Code, useColorModeValue, Flex } from \"@chakra-ui/react\";\nimport { ReactComponent as DiceOutlineDarkAnimated } from \"./../../../images/logo/animated/non-looped/Text_Outline_Dark_animated.svg\";\nimport { ReactComponent as DiceOutlineLightAnimated } from \"./../../../images/logo/animated/non-looped/Text_Outline_Light_animated.svg\";\n\nimport CustomBox from \"../../shared/CustomBox\";\nimport \"../../../styles/Team_styles/Team.css\";\nimport Card from \"./Card\";\nimport SliderImgBox from \"./SliderImgBox\";\nimport photos from \"./photos\";\nimport { FaFilter, FaTimes } from \"react-icons/fa\";\nimport Footer from \"../../shared/Footer\";\n\ninterface Props {}\n\nconst Team = (props: Props) => {\n  const colorTheme = useColorModeValue(\"light\", \"dark\");\n\n  const Logo = useColorModeValue(\n    DiceOutlineDarkAnimated,\n    DiceOutlineLightAnimated\n  );\n  let Profiles = [\n    {\n      name: \"Nitish Gupta\",\n      role: \"core\",\n      dept: \"Co-Curricular Affairs Secretary\",\n      mailId: \"be17b022@smail.iitm.ac.in\",\n      social_links: {\n        linkedIn: \"https://www.linkedin.com/in/nitish-gupta86/\",\n        instagram: \"https://www.instagram.com/nitishhgupta/\",\n        shastraMailId: \"nitish.gupta@shaastra.org\",\n        contact: \"9840903852\",\n      },\n      desc: \"It has been an amazing journey for me being part of the Shaastra team for last three years. I have seen Shaastra grow leaps and bounds over the last 3 years and it gives me immense pleasure to lead the team this year. \",\n      imgURL: photos.be17b022,\n    },\n    {\n      mailId: \"be19b012@smail.iitm.ac.in\",\n      name: \"Abhishek sv\",\n      dept: \"Webops\",\n      social_links: {\n        instagram: \"https://www.instagram.com/abhi_shx_25/\",\n        linkedIn: \"https://www.linkedin.com/in/abhishek-sv-69b67719a/\",\n        shastraMailId: \"abhisheksv@shaastra.org\",\n        contact: \"8300682565\",\n      },\n      desc: \"Being a part of shaastra is always like a ride in rollercoaster, fun and enjoyable. Being a part of this team meant everything to me , like I always say its never a bug, its always a undocumented feature.\",\n      imgURL: photos.be19b012,\n    },\n    {\n      mailId: \"be19b009@smail.iitm.ac.in\",\n      name: \"Shobhan Karthick\",\n      dept: \"Webops\",\n      social_links: {\n        instagram: \"https://www.instagram.com/\",\n        linkedIn: \"https://www.linkedin.com/in/shobhan-karthick\",\n        shastraMailId: \"shobhankarthick@shaastra.org\",\n        contact: \"6385188219\",\n      },\n      desc: \"Shaastra gives you the raw opprutunity to engage with people with immense knowledge from different backgrounds. My journey here has gained me a lot of amazing friends and made me more versatile. Kudos to me and Shaastra!\",\n      imgURL: photos.be19b009,\n    },\n    {\n      mailId: \"ce19b029@smail.iitm.ac.in\",\n      name: \"Charitha S \",\n      dept: \"Concept & Design\",\n      social_links: {\n        instagram: \"https://www.instagram.com/charitha_2611 \",\n        linkedIn: \"https://www.linkedin.com/in/Charitha Cherry \",\n        shastraMailId: \"charitha@shaastra.org \",\n        contact: \"9177679069\",\n      },\n      desc: \"My journey in Shaastra from coord to core was really wonderful.  Gaining new skills, making new friends and leading a team with lotz of memories keeps me  motivated and being passionate towards my work.\",\n      imgURL: photos.ce19b029,\n    },\n    {\n      mailId: \"ed18b057@smail.iitm.ac.in\",\n      name: \"Rohit Survase\",\n      dept: \"Concept & Design\",\n      social_links: {\n        instagram: \"https://www.instagram.com/_rohitsurvase\",\n        linkedIn: \"https://www.linkedin.com/in/Rohit Survase\",\n        shastraMailId: \"rohit@shaastra.org\",\n        contact: \"7020250404\",\n      },\n      desc: \"The experience that I have had being in Shaastra will be cherished throughout my life.Meeting wonderful seniors,juniors and peers had made my time in Shaastra extremely special.\",\n      imgURL: photos.ed18b057,\n    },\n    {\n      mailId: \"ee18b054@smail.iitm.ac.in\",\n      name: \"K.L.Soumya\",\n      dept: \"Envisage\",\n      social_links: {\n        instagram: \"https://www.instagram.com/envisageiitmadras/\",\n        linkedIn: \"https://www.linkedin.com/in/soumya-kollipara-69aa361a8\",\n        shastraMailId: \"soumya@shaastra.org\",\n        contact: \"9176415740\",\n      },\n      desc: \"I have been a part of shaastra since my first year starting with being a volunteer. That is when I fell in love with Shaastra watching all the mesmerizing events.  Being a part of shaastra for 3 years has been a great learning curve and also like being a part of a family.\",\n      imgURL: photos.ee18b054,\n    },\n    {\n      mailId: \"ce18b003@smail.iitm.ac.in\",\n      name: \"Battu Lochana Janaki\",\n      dept: \"Envisage\",\n      social_links: {    \n        instagram: \"https://www.instagram.com/envisageiitmadras/\",\n        linkedIn: \"https://www.linkedin.com/in/battu-lochana-janaki-b270b31bb/\",\n        facebook: \"https://www.facebook.com/Envisage.IITM\",\n        shastraMailId: \"lochana@shaastra.org\",\n        contact: \"7032377877\",\n      },\n      desc: \"Being a part of Shaastra, gave me an amazing opportunity to work on remarkable projects, gain new skills, make new friends, and a lot of memories. These experiences constantly boosted me and motivated me in continuing with the Team.\",\n      imgURL: photos.ce18b003,\n    },\n    {\n      mailId: \"cs18b050@smail.iitm.ac.in\",\n      name: \"Aniswar Srivatsa Krishna\",\n      dept: \"Events & Workshops\",\n      social_links: {\n        facebook: \"https://www.facebook.com/aniswarsrivatsak/\",\n        linkedIn:\"https://www.linkedin.com/in/aniswar-sk/\",\n        shastraMailId: \"aniswar@shaastra.org\",\n        contact: \"6383393474\",\n      },\n      desc: \"Being part of Shaastra and conducting various events connects me to students from colleges all over India, provides me a great platform to exchange ideas and an opportunity to be at the forefront of technological innovation in the country.\",\n      imgURL: photos.cs18b050,\n    },\n    {\n      mailId: \"ch18b020@smail.iitm.ac.in\",\n      name: \"S Vishal\",\n      dept: \"Events & Workshops\",\n      social_links: {\n        instagram: \"s_._vishal\",\n         linkedIn: \"https://www.linkedin.com/in/vishal-sivaraman-/\",\n        shastraMailId: \"vishal@shaastra.org\",\n        contact: \"9498813221\",\n      },\n      desc: \"My journey with Shaastra began with popular events like RC in my freshie year and fast-forward 2 years, I lead C&L successfully. Back here one last time to have an enjoyable and socially impactful Shaastra for participants across the spectrum!\",\n      imgURL: photos.ch18b020,\n    },\n    {\n      mailId: \"me18b145@smail.iitm.ac.in\",\n      name: \"Ashwin Kumar\",\n      dept: \"Evolve\",\n      social_links: {\n        instagram: \"https://www.instagram.com/ash_twenty5/\",\n        linkedIn: \"https://www.linkedin.com/in/ashwin-kumar-242288185/\",\n        shastraMailId: \"ashwin@shaastra.org\",\n        contact: \"9962296616\",\n      },\n      desc: \"Being part of the Core organizing team of India's largest completely student-run festival is an overwhelming and fantastic experience to say the least. Shaastra has remained an integral part of my Insti life and has provided innumerous cherishable memories. \",\n      imgURL: photos.me18b145,\n    },\n    {\n      mailId: \"ed18b031@smail.iitm.ac.in\",\n      name: \"Siddhant Toknekar\",\n      dept: \"Evolve\",\n      social_links: {\n        instagram: \"https://www.instagram.com/token_taker/\",\n        linkedIn: \"https://www.linkedin.com/in/siddhant-toknekar/\",\n        shastraMailId: \"siddhant@shaastra.org\",\n        contact: \"9130213213\",\n      },\n      desc: \"Having been a part of Shaastra right from my very first semester, it would be fair to say that the fest has essentially shaped my personal and professional life. The friends I have made, the managerial skills I have learnt have moulded me into the person I am today! \",\n      imgURL: photos.ed18b031,\n    },\n    {\n      mailId: \"ce18b060@smail.iitm.ac.in\",\n      name: \"Kranthi Kiran T\",\n      dept: \"Finance\",\n      social_links: {\n        instagram: \"https://www.instagram.com/sonukranthy\",\n          linkedIn: \"https://www.linkedin.com/in/kranthi-kiran-714baa184/\",\n        shastraMailId: \"kranthi.t@shaastra.org\",\n        contact: \"6303733655\",\n      },\n      desc: \"Some of the memorable days in the whole year that we spend and gaining new relations that last forever. I have learned a lot during this journey and this fantasic and evergreen memories will never fade from my mind \",\n      imgURL: photos.ce18b060,\n    },\n    {\n      mailId: \"ee18b022@smail.iitm.ac.in\",\n      name: \"Nune Sahithi\",\n      dept: \"Finance\",\n      social_links: {\n        instagram: \"https://www.intsagram.com/sahithi0022\",\n         linkedIn: \"https://www.linkedin.com/in/sahithinune/\",\n        shastraMailId: \"sahithi@shaastra.org\",\n        contact: \"9948812020\",\n      },\n      desc: \"My 3 year Shaastra's Journey has been wonderful. It has so many ups and downs, but gladly I made it through :p Shaastra helped me to get out of my comfort zone and improve myself. Really excited for Shaastra'22.\",\n      imgURL: photos.ee18b022,\n    },\n    {\n      mailId: \"ce18b112@smail.iitm.ac.in\",\n      name: \"Ayushman Sharma\",\n      dept: \"Operations & Infrastructure Planning\",\n      social_links: {\n        linkedIn: \"https://www.linkedin.com/in/ayushman-sharma-b1a486188\",\n        instagram: \"https://www.instagram.com/_ayushman_sharma/\",\n        shastraMailId: \"Ayushman@shaastra.org\",\n        contact: \"6377340561\",\n      },\n      desc: \"My Shaastra journey started from my first year and each year I am learning new things and skills. My coordinator year was the one when I felt a bonding with my team and decided to carry on with it and the experience have been better each year.\",\n      imgURL: photos.ce18b112,\n    },\n    {\n      mailId: \"ed18b050@smail.iitm.ac.in\",\n      name: \"Rutvik Baxi\",\n      dept: \"Operations & Infrastructure Planning\",\n      social_links: {\n        linkedIn: \"https://www.linkedin.com/in/rutvik-baxi\",\n        instagram: \"https://www.instagram.com/baaxzzeee/\",\n        shastraMailId: \"rutvik@shaastra.org\",\n        contact: \"8866419419\",\n      },\n      desc: \"My experience with Team O&IP has been nothing less than fabulous. I joined this team in my 3rd year and have made some of my best friends and nicest memories while organising the first ever online Shaastra last year. OIP OP🙅‍♂️.\",\n      imgURL: photos.ed18b050,\n    },\n    {\n      mailId: \"be18b013@smail.iitm.ac.in\",\n      name: \"Shvetha Sivaprasad\",\n      dept: \"Publicity\",\n      social_links: {\n          linkedIn: \"https://www.linkedin.com/in/shvetha-sivaprasad-08264217a/\",\n        instagram: \"https://www.instagram.com/shvethasivaprasad\",\n        facebook: \"https://www.facebook.com/Shvetha S\",\n        shastraMailId: \"shvetha@shaastra.org\",\n        contact: \"6379764273\",\n      },\n      desc: \"This was the first team that I joined in as a freshie and I could never part it and now I am heading the team. This team have taught me a lot not just technically but in all aspects. And this journey was a marvelous one and will ever be.\",\n      imgURL: photos.be18b013,\n    },\n    {\n      mailId: \"ep18b006@smail.iitm.ac.in\",\n      name: \"H Madhan Kumar\",\n      dept: \"Publicity\",\n      social_links: {\n        instagram: \"https://www.instagram.com/madmannedme/\",\n        shastraMailId: \"madhan@shaastra.org\",\n        contact: \"6303564574\",\n      },\n      desc: \"I love things out of context and to do things out of the box, being a part of shaastra has given me the oppurtnity to do that and I love it for that. It has made me the person who I am today, the experience and the friend moulded be to a better version of myself \",\n      imgURL: photos.ep18b006,\n    },\n    {\n      mailId: \"ee18b138@smail.iitm.ac.in\",\n      name: \"K Harshitha\",\n      dept: \"Quality Management System\",\n      social_links: {\n         linkedIn: \"https://www.linkedin.com/in/harshitha-k-788492194/\",\n        instagram: \"https://www.instagram.com/harshithaa_aaa\",\n        shastraMailId: \"harshitha@shaastra.org\",\n        contact: \"6303344798\",\n      },\n      desc: \"I have been part of shaastra since my first year. It wasn't a smooth one, there were and are lots of ups and downs. At the end of every tenure, I evolve as a new and better person. I will cherish all my learnings i experienced being part of SHAASTRA.\",\n      imgURL: photos.ee18b138,\n    },\n    {\n      mailId: \"ed18b053@smail.iitm.ac.in\",\n      name: \"Shivam Maheshwari\",\n      dept: \"Quality Management System\",\n      social_links: {\n        linkedIn: \"https://www.linkedin.com/in/shivam-maheshwari\",\n        shastraMailId: \"Shivam@shaastra.org\",\n        contact: \"6264115563\",\n      },\n      desc: \"My 'Shaastra Journey' started in my first year when I became Events-workshop manager & OIP-VIP care coordinator. Next year I applied for the Head position in OIP, and currently, I am QMS Core. I aspire to bring upon relevant changes to strengthen the quality of Shaastra and enjoy the very process:)\",\n      imgURL: photos.ed18b053,\n    },\n    {\n      mailId: \"ep18b005@smail.iitm.ac.in\",\n      name: \"Baibhabi Patnaik \",\n      dept: \"Shows & Exhibitions\",\n      social_links: {\n        linkedIn: \"https://www.linkedin.com/in/baibhabi-patnaik-b1563419b\",\n        instagram: \"https://www.instagram.com/baibhabi_musical\",\n        shastraMailId: \"baibhabi@shaastra.org\",\n        contact: \"9989591690\",\n      },\n      desc: \"For my love of interacting with people, two years at Shaastra and counting have suited me well. The experience has been wholesome and loaded with learnings and memories. The team is family, and we have an amazing time here, organizing all innovation under one umbrella!\",\n      imgURL: photos.ep18b005,\n    },\n    {\n      mailId: \"ch18b036@smail.iitm.ac.in\",\n      name: \"Aman Kumar\",\n      dept: \"Shows & Exhibitions\",\n      social_links: {\n        instagram: \"https://www.instagram.com/aman_k07/\",\n        linkedIn: \"https://www.linkedin.com/in/aman-kumar-17a0ba192/\",\n        shastraMailId: \"aman@shaastra.org\",\n        contact: \"6385140247\",\n      },\n      desc: \"To summarise my Shaastra Journey, from coordinator to Core in S&E: Every year started with infinite ideas and a motivated team. Result was and always will be the Biggest Technical Festival and Memories + Experiences we get for life!!\",\n      imgURL: photos.ch18b036,\n    },\n    {\n      mailId: \"be18b026@smail.iitm.ac.in\",\n      name: \"Nithish Venkatesh\",\n      dept: \"Sponsorship and PR\",\n      social_links: {\n        linkedIn: \"https://linkedin.com/in/nithish-venkatesh\",\n        instagram: \"https://www.instagram.com/nithyanandaa \",\n        shastraMailId: \"nithish.venkatesh@shaastra.org\",\n        contact: \"7200939339\",\n      },\n      desc: \"Money can't buy happiness, but it certainly can keep the biggest Techno-Managerial fest of India running.\",\n      imgURL: photos.be18b026,\n    },\n    {\n      mailId: \"ch18b037@smail.iitm.ac.in\",\n      name: \"Anandlogesh R R\",\n      dept: \"Sponsorship and PR\",\n      social_links: {\n        linkedIn: \"https://www.linkedin.com/in/anandlogesh-r-r/\",\n        instagram: \"https://www.instagram.com/the_a.r.r._/\",\n        shastraMailId: \"anandlogesh.rr@shaastra.org\",\n        contact: \"7358232804\",\n      },\n      desc: \"Some parts of truth and a dash of pure lie makes the perfect lie.\",\n      imgURL: photos.ch18b037,\n    },\n  ];\n  let i = 0;\n\n  const [marker, setMarker] = React.useState({\n    top: window.innerWidth > 700 ? \"44px\" : \"13px\",\n  });\n\n  const [navbar, setNavbar] = React.useState(\n    window.innerWidth < 700 ? false : true\n  );\n\n  const [type, setType] = React.useState(\"all\");\n\n  const handleFilter = () => {\n    if (navbar) setNavbar(false);\n    else setNavbar(true);\n  };\n\n  const handleClick = (e) => {\n    setType(e.target.attributes[0].value);\n    setMarker({\n      top: e.target.offsetTop + \"px\",\n    });\n  };\n\n  interface Value {\n    footerBack?: \"currentcolor\";\n    creditsBack?: \"currentcolor\";\n  }\n\n  return (\n    <CustomBox>\n      <div\n        className=\"Team\"\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }}\n      >\n        <div className=\"ContentBox\">\n          <h1>Meet Our Team</h1>\n          <p>\n            Meet the People who worked countless hours behind the scenes to\n            bring you the Spectacle, that is India's biggest Techno-Managerial\n            Fest.\n          </p>\n        </div>\n        <div className=\"imageContainer\">\n          <div className=\"imageSlider\">\n            {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].map((count) => {\n              i += 4;\n              i = i % 22;\n              return (\n                <>\n                  <div className=\"col\">\n                    <SliderImgBox profile={Profiles[i]} />\n                    <SliderImgBox profile={Profiles[(i + 1) % 22]} />\n                  </div>\n                </>\n              );\n            })}\n            {\n              <div className=\"col\">\n                <SliderImgBox profile={Profiles[22]} />\n                <SliderImgBox profile={Profiles[12]} />\n              </div>\n            }\n            {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].map((count) => {\n              i += 4;\n              i = i % 22;\n              return (\n                <>\n                  <div className=\"col\">\n                    <SliderImgBox profile={Profiles[i]} />\n                    <SliderImgBox profile={Profiles[(i + 1) % 22]} />\n                  </div>\n                </>\n              );\n            })}\n            {\n              <div className=\"col\">\n                <SliderImgBox profile={Profiles[11]} />\n                <SliderImgBox profile={Profiles[22]} />\n              </div>\n            }\n            {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].map((count) => {\n              i += 4;\n              i = i % 22;\n              return (\n                <>\n                  <div className=\"col\">\n                    <SliderImgBox profile={Profiles[i]} />\n                    <SliderImgBox profile={Profiles[(i + 1) % 22]} />\n                  </div>\n                </>\n              );\n            })}\n            {\n              <div className=\"col\">\n                <SliderImgBox profile={Profiles[22]} />\n                <SliderImgBox profile={Profiles[12]} />\n              </div>\n            }\n          </div>\n        </div>\n        <div className={`DetailCards ${colorTheme}`}>\n          {navbar ? (\n            <button onClick={handleFilter} className=\"FilterBtn\">\n              <FaTimes /> CLOSE\n            </button>\n          ) : (\n            <button onClick={handleFilter} className=\"FilterBtn\">\n              <FaFilter /> FILTER\n            </button>\n          )}\n          <div\n            className=\"navbar\"\n            style={{\n              display: navbar ? \"flex\" : \"none\",\n            }}\n          >\n            <button\n              data-type=\"all\"\n              style={{\n                color: type === \"all\" ? \"#000\" : \"#fff\",\n              }}\n              onClick={handleClick}\n            >\n              All\n            </button>\n            <button\n              data-type=\"Co-Curricular Affairs Secretary\"\n              style={{\n                color:\n                  type === \"Co-Curricular Affairs Secretary\" ? \"#000\" : \"#fff\",\n              }}\n              onClick={handleClick}\n            >\n              Co-Curricular Affairs Secretary\n            </button>\n            <button\n              data-type=\"Concept & Design\"\n              style={{\n                color: type === \"Concept & Design\" ? \"#000\" : \"#fff\",\n              }}\n              onClick={handleClick}\n            >\n              Concept & Design\n            </button>\n            <button\n              data-type=\"Envisage\"\n              style={{\n                color: type === \"Envisage\" ? \"#000\" : \"#fff\",\n              }}\n              onClick={handleClick}\n            >\n              Envisage\n            </button>\n            <button\n              data-type=\"Events & Workshops\"\n              style={{\n                color: type === \"Events & Workshops\" ? \"#000\" : \"#fff\",\n              }}\n              onClick={handleClick}\n            >\n              Events & Workshops\n            </button>\n            <button\n              data-type=\"Evolve\"\n              style={{\n                color: type === \"Evolve\" ? \"#000\" : \"#fff\",\n              }}\n              onClick={handleClick}\n            >\n              Evolve\n            </button>\n            <button\n              data-type=\"Finance\"\n              style={{\n                color: type === \"Finance\" ? \"#000\" : \"#fff\",\n              }}\n              onClick={handleClick}\n            >\n              Finance\n            </button>\n            <button\n              data-type=\"Operations & Infrastructure Planning\"\n              style={{\n                color:\n                  type === \"Operations & Infrastructure Planning\"\n                    ? \"#000\"\n                    : \"#fff\",\n              }}\n              onClick={handleClick}\n            >\n              Operations & Infrastructure Planning\n            </button>\n            <button\n              data-type=\"Publicity\"\n              style={{\n                color: type === \"Publicity\" ? \"#000\" : \"#fff\",\n              }}\n              onClick={handleClick}\n            >\n              Publicity\n            </button>\n            <button\n              data-type=\"Quality Management System\"\n              style={{\n                color: type === \"Quality Management System\" ? \"#000\" : \"#fff\",\n              }}\n              onClick={handleClick}\n            >\n              Quality Management System\n            </button>\n            <button\n              data-type=\"Shows & Exhibitions\"\n              style={{\n                color: type === \"Shows & Exhibitions\" ? \"#000\" : \"#fff\",\n              }}\n              onClick={handleClick}\n            >\n              Shows & Exhibitions\n            </button>\n            <button\n              data-type=\"Sponsorship and PR\"\n              style={{\n                color: type === \"Sponsorship and PR\" ? \"#000\" : \"#fff\",\n              }}\n              onClick={handleClick}\n            >\n              Sponsorship and PR\n            </button>\n            <button\n              data-type=\"Webops\"\n              style={{\n                color: type === \"Webops\" ? \"#000\" : \"#fff\",\n              }}\n              onClick={handleClick}\n            >\n              Webops\n            </button>\n            <span\n              id=\"marker\"\n              style={{\n                top: marker.top,\n              }}\n            >\n              <span></span>\n              <span></span>\n            </span>\n          </div>\n          <div className=\"CardBox\">\n            {Profiles.map((profile) => {\n              return <Card type={type} profile={profile} />;\n            })}\n          </div>\n        </div>\n      </div>\n      <Footer\n        designed={[\n          {\n            name: \"Rohit\",\n            mail: \"cs19b038@smail.iitm.ac.in\",\n          },\n        ]}\n      />\n    </CustomBox>\n  );\n};\n\nexport default Team;\n","/home/ubuntu/shaastra-general-website/src/components/pages/Events and Workshops/Events.tsx",["414","415","416","417","418"],"import React from 'react'\r\nimport {\r\n  Text,\r\n  Stack,\r\n  Flex,\r\n  Link,\r\n  Box,\r\n  Heading,\r\n  Image,\r\n  Grid,\r\n  GridItem,\r\n  useColorModeValue\r\n} from '@chakra-ui/react'\r\nimport bg from \"../../../images/EventsWorkshops/events/bg.jpg\"\r\nimport BE from \"../../../images/EventsWorkshops/events/BE.png\"\r\nimport Aero from \"../../../images/EventsWorkshops/events/Aerofest.png\"\r\nimport Bio from \"../../../images/EventsWorkshops/events/Biogen.png\"\r\nimport Cl from \"../../../images/EventsWorkshops/events/Coding&Logic.png\"\r\nimport DB from \"../../../images/EventsWorkshops/events/Design&Build.jpeg\"\r\nimport Elec from \"../../../images/EventsWorkshops/events/Elecfest.jpg\"\r\nimport Strategists from \"../../../images/EventsWorkshops/events/Strategists.png\"\r\nimport Symposium from \"../../../images/EventsWorkshops/events/symposium.jpg\"\r\nimport Ignite from \"../../../images/EventsWorkshops/events/Ignite.jpg\"\r\nimport CustomBox from '../../shared/CustomBox'\r\nimport Footer from '../../shared/Footer';\r\nimport \"../../../styles/Events.css\"\r\nimport { VerticalTimeline, VerticalTimelineElement }  from 'react-vertical-timeline-component';\r\nimport 'react-vertical-timeline-component/style.min.css';\r\n\r\n\r\nfunction Events() {\r\n\r\n  const timeline = useColorModeValue(\"pink\", \"white-events\")\r\n  const overlay = useColorModeValue(\"white\", \"black\")\r\n\r\n  return (\r\n    <CustomBox>\r\n      <Box position={\"relative\"} className=\"events\"  backgroundRepeat=\"no-repeat\" backgroundPosition=\"top\" backgroundSize=\"cover\">\r\n        <Box className={`${overlay}`} content=\"\" position={\"absolute\"} top=\"0\" left=\"0\" width={\"100vw\"} height=\"100%\" backgroundColor={\"rgba(0, 0, 0, 0.6)\"}></Box>\r\n        <Stack\r\n          textAlign={'center'}\r\n          align={'center'}\r\n          spacing={{ base: 8, md: 8 }}\r\n          py={{ base: 20, md: 20 }}\r\n        >\r\n         <Flex zIndex={2}>\r\n           <Heading textAlign=\"right\" fontSize=\"7xl\">EVENTS</Heading>\r\n         </Flex>\r\n         <Grid templateColumns={[\"repeat(1,1fr)\",\"repeat(2, 1fr)\"]} columnGap={\"4vw\"} rowGap={\"4vw\"} zIndex={3} width=\"80vw\">\r\n            <GridItem display={\"flex\"} height={\"100%\"} justifyContent={\"center\"} flexDirection={\"column\"}>\r\n              <Image height=\"25vh\" width={[\"80vw\",\"38vw\"]} objectFit={[\"cover\",\"cover\"]} src={Aero}></Image>\r\n              <Link fontSize={[\"4vw\",\"2vw\"]}  href=\"/events/aerofest\">Aerofest</Link>\r\n            </GridItem>\r\n            <GridItem display={\"flex\"} height={\"max-content\"} justifyContent={\"center\"} flexDirection={\"column\"}>\r\n              <Image height=\"25vh\" width={[\"80vw\",\"38vw\"]} objectFit={[\"cover\",\"cover\"]} src={Bio}></Image>\r\n              <Link fontSize={[\"4vw\",\"2vw\"]} href=\"/events/biogen\">Biogen</Link>\r\n            </GridItem>\r\n            <GridItem display={\"flex\"} height={\"100%\"} justifyContent={\"center\"} flexDirection={\"column\"}>\r\n              <Image height=\"25vh\" width={[\"80vw\",\"38vw\"]} objectFit={\"cover\"} src={BE}></Image>\r\n              <Link fontSize={[\"4vw\",\"2vw\"]} href=\"/events/bevents\"> \r\n                    BEvents</Link>\r\n            </GridItem>\r\n            <GridItem display={\"flex\"} height={\"max-content\"} justifyContent={\"center\"} flexDirection={\"column\"}>\r\n              <Image height=\"25vh\" width={[\"80vw\",\"38vw\"]} objectFit={\"cover\"} objectPosition={[\"0% 30%\",\"0% 15%\"]} src={DB}></Image>\r\n              <Link fontSize={[\"4vw\",\"2vw\"]} href=\"/events/db\">Design & Build</Link>\r\n            </GridItem>\r\n            <GridItem display={\"flex\"} height={\"max-content\"} justifyContent={\"center\"} flexDirection={\"column\"}>\r\n              <Image height=\"25vh\" width={[\"80vw\",\"38vw\"]} objectFit={\"cover\"} objectPosition={\"0% 25%\"} src={Elec}></Image>\r\n             <Link fontSize={[\"4vw\",\"2vw\"]} href=\"/events/elecfest\">Elecfest</Link>\r\n            </GridItem>\r\n            <GridItem display={\"flex\"} height={\"max-content\"} justifyContent={\"center\"} flexDirection={\"column\"}>\r\n              <Image height=\"25vh\" width={[\"80vw\",\"38vw\"]} objectFit={\"cover\"} objectPosition={\"0% 25%\"} src={Ignite}></Image>\r\n              <Link fontSize={[\"4vw\",\"2vw\"]} href=\"/events/ignite\">IDP</Link>\r\n            </GridItem>\r\n            <GridItem display={\"flex\"} height={\"max-content\"} justifyContent={\"center\"} flexDirection={\"column\"}>\r\n              <Image height=\"25vh\" width={[\"80vw\",\"38vw\"]} objectFit={\"cover\"} src={Strategists}></Image> \r\n              <Link fontSize={[\"4vw\",\"2vw\"]} href=\"/events/strategists\">Quizzing</Link>\r\n            </GridItem>\r\n            <GridItem display={\"flex\"} height={\"max-content\"} justifyContent={\"center\"} flexDirection={\"column\"}>\r\n              <Image height=\"25vh\" width={[\"80vw\",\"38vw\"]} objectFit={\"cover\"} src={Cl}></Image> \r\n              <Link fontSize={[\"4vw\",\"2vw\"]} href=\"/events/cl\">Coding & Logic</Link>\r\n            </GridItem>\r\n            <GridItem display={\"flex\"} height={\"max-content\"} justifyContent={\"center\"} flexDirection={\"column\"}>\r\n              <Image height=\"25vh\" width={[\"80vw\",\"38vw\"]} objectFit={\"cover\"} src={\"https://shaastra.s3.ap-south-1.amazonaws.com/Moot Court.png\"}></Image> \r\n              <Link fontSize={[\"4vw\",\"2vw\"]} href=\"/eventpage/ckxdasopm0024wop7cxphcidu\">Moot Court</Link>\r\n            </GridItem>\r\n            <GridItem display={\"flex\"} height={\"max-content\"} justifyContent={\"center\"} flexDirection={\"column\"}>\r\n              <Image height=\"25vh\" width={[\"80vw\",\"38vw\"]} objectFit={\"cover\"} src={Symposium}></Image> \r\n              <Link fontSize={[\"4vw\",\"2vw\"]} href=\"https://dss.shaastra.org/\" target={\"_blank\"}>Symposium</Link>\r\n            </GridItem>\r\n         </Grid>\r\n         {/* <Box margin=\"auto\" width={[\"80vw\",\"40vw\"]} zIndex={3} display={\"flex\"} height={\"max-content\"} justifyContent={\"center\"} flexDirection={\"column\"}>\r\n            <Image height=\"25vh\" width={[\"80vw\",\"38vw\"]} objectFit={\"cover\"} src={Strategists}></Image>\r\n              <Link fontSize={[\"4vw\",\"2vw\"]} href=\"/events/strategists\">Strategists</Link>\r\n            </Box> */}\r\n        </Stack>\r\n      </Box>\r\n      <Footer\r\n        designed={[{ name: 'Krithikaa', mail: 'be20b020@smail.iitm.ac.in' }]}\r\n      />\r\n    </CustomBox>\r\n  )\r\n}\r\n\r\nexport default Events\r\n","/home/ubuntu/shaastra-general-website/src/components/pages/Events and Workshops/Summit.tsx",["419","420","421","422","423","424"],"import React from \"react\";\r\nimport {\r\n  Text,\r\n  Stack,\r\n  Flex,\r\n  Center,\r\n  Box,\r\n  Heading,\r\n  Image,\r\n  SimpleGrid,\r\n  Container,\r\n} from \"@chakra-ui/react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport SwiperCore, {\r\n    Pagination, Autoplay\r\n  } from 'swiper';\r\n  \r\nimport 'swiper/swiper-bundle.min.css'  \r\nimport 'swiper/swiper.min.css'\r\n\r\nimport \"../../../styles/Summit.css\"\r\n\r\nimport gaming from \"../../../images/EventsWorkshops/summit/gaming.jpg\"\r\nimport summit1 from \"../../../images/EventsWorkshops/summit/Summit_news.jpg\";\r\nimport summit2 from \"../../../images/EventsWorkshops/summit/summit_2.jpg\";\r\nimport summit3 from \"../../../images/EventsWorkshops/summit/summit_3.jpg\";\r\nimport summit4 from \"../../../images/EventsWorkshops/summit/summit_4.jpg\";\r\nimport summit5 from \"../../../images/EventsWorkshops/summit/summit_5.jpg\";\r\nimport summit6 from \"../../../images/EventsWorkshops/summit/summit_6.jpg\";\r\nimport summit7 from \"../../../images/EventsWorkshops/summit/summit_7.jpg\";\r\nimport { useColorModeValue } from \"@chakra-ui/color-mode\";\r\nimport CustomBox from \"../../shared/CustomBox\";\r\nimport Footer from \"../../shared/Footer\";\r\n\r\nSwiperCore.use([Pagination, Autoplay]);\r\n\r\nconst Summit = () => {\r\n  return(\r\n    <CustomBox>\r\n        <Box className=\"summit\" position={\"relative\"}>\r\n          <Stack\r\n                 textAlign={'center'}\r\n                 align={'center'}\r\n                 spacing={{ base: 8, md: 8 }}\r\n                 py={{ base: 20, md: 20 }}\r\n          >\r\n            <Box height=\"100vh\" width=\"100vw\" top=\"0\" left=\"0\" position=\"absolute\" backgroundImage={gaming}  backgroundSize={\"cover\"} backgroundRepeat={\"no-repeat\"} backgroundPosition={\"left\"} content=\"\"></Box>\r\n            {/* <Box content=\"\" position={\"absolute\"} top=\"0\" height=\"100vh\" width=\"100vw\" paddingTop={\"0\"} backgroundColor={\"rgba(0, 0, 0, 0.8)\"}></Box> */}\r\n            <Flex  marginTop={\"0\"} flexDirection={\"column\"} width=\"100vw\" className=\"gaming-intro-flex\" height={[\"75vh\",\"81vh\"]} zIndex={2} alignItems={\"center\"}>\r\n                <Heading color=\"white\" fontSize={[\"10vw\",\"7xl\"]} marginBottom={\"10vh\"}>SUMMIT</Heading>\r\n                <Text color=\"white\" backdropBlur={\"50px\"} width={[\"90vw\",\"50vw\"]} fontSize={[\"3.5vw\",\"1.5vw\"]} fontWeight={\"600\"} marginBottom={\"5vh\"}>\r\n                  This year’s Summit delves into the domain of Gaming Technology. This evolving industry is \r\n                  revolutionizing our world, unfazed by the pandemic. Cutting-edge technology built here often seeps \r\n                  out to numerous others. Our Summit will focus on several relevant themes while approaching gaming \r\n                  from multiple viewpoints. Through informative lectures, demonstrations, and hands-on workshops by \r\n                  eminent personalities, we aim to bridge the gap between gaming academia, industry, and enthusiasts.\r\n                </Text>\r\n                <Box className=\"gaming\" width=\"fit-content\" padding={[\"3vw 6vw\",\"1vw 2vw\"]} fontSize={[\"5.5vw\",\"1.5vw\"]}  margin=\"0 auto\" marginTop={\"2vh\"} backgroundColor={\"white\"} color=\"#0e101b\" borderRadius={\"24px\"}>\r\n              <a  target=\"_blank\" href=\"https://summit.shaastra.org/\">Gaming Tech Summit</a>\r\n            </Box>\r\n            </Flex>\r\n           <Box position={\"relative\"}>\r\n            <Swiper\r\n                slidesPerView={1}\r\n                // pagination={true}\r\n                autoplay={{delay: 2000}}\r\n              >\r\n                <SwiperSlide>\r\n                  <Image width=\"100vw\" height={[\"35vh\",\"50vh\"]} objectFit={\"cover\"} src={summit3}></Image>\r\n                </SwiperSlide>\r\n                <SwiperSlide>\r\n                  <Image width=\"100vw\" height={[\"35vh\",\"50vh\"]} objectFit={\"cover\"} src={summit2}></Image>\r\n                </SwiperSlide>\r\n                <SwiperSlide>\r\n                  <Image width=\"100vw\" height={[\"35vh\",\"50vh\"]} objectFit={\"cover\"} src={summit4}></Image>\r\n                </SwiperSlide>\r\n                <SwiperSlide>\r\n                  <Image width=\"100vw\" height={[\"35vh\",\"50vh\"]} objectFit={\"cover\"} src={summit5}></Image>\r\n                </SwiperSlide>\r\n                <SwiperSlide>\r\n                  <Image width=\"100vw\" height={[\"35vh\",\"50vh\"]} objectFit={\"cover\"} src={summit6}></Image>\r\n                </SwiperSlide>\r\n              </Swiper>\r\n              <Box className=\"overlay\" content=\"\" position={\"absolute\"} top=\"0\" width=\"100vw\" height={[\"35vh\",\"50vh\"]} zIndex={1} backgroundColor={\"rgba(0, 0, 0, 0.8)\"}></Box>\r\n              <Flex flexDirection={\"column\"} className=\"intro-text\" position={\"absolute\"} top=\"0\" width=\"100vw\" zIndex={2} height={[\"30vh\",\"50vh\"]} justifyContent={\"center\"} alignItems={\"center\"}>\r\n              <Heading color=\"white\" paddingTop={\"4vh\"} paddingBottom={\"4vh\"}>Our previous editions</Heading>\r\n                <Text width={[\"90%\",\"60%\"]} fontSize={[\"3.5vw\",\"1.5vw\"]} fontWeight={\"400\"} color=\"white\">\r\n                Previously we have successfully organised Archi-Tech Summit (2021), Defence Tech Summit (2020), Sports \r\n                Tech and Law Tech Summit (2019), Green Energy Summit (2018), Accessibility Summit (2017) and Makers \r\n                Summit (2016) collaborating with the likes of L&T Construction, L&T Defence, Star Sports, Shell, etc.\r\n                </Text>\r\n              </Flex>\r\n           </Box>\r\n           <Text paddingBottom={\"4vh\"} paddingTop={[\"5vh\",\"8vh\"]} fontSize={[\"3.5vw\",\"1.5vw\"]} textAlign={[\"center\",\"left\"]} width={[\"90vw\",\"80vw\"]} margin=\"auto\" marginTop=\"8vh\">\r\n              Shaastra 2021 saw IIT Madras hosting it's very first virtual Summit that was attended by 120 delegates. The \r\n              theme for Summit 2021 was ARCHI-TECH which brought together the fields of architecture and technology. \r\n              With developments in technology like virtual reality, 3D printing and advancements in material science , \r\n              Shaastra Summit 2021 brought these technologies to light, to help our participants upskill in the field of \r\n              architecture.\r\n           </Text>\r\n           <Text paddingBottom={\"4vh\"} fontSize={[\"3.5vw\",\"1.5vw\"]} textAlign={[\"center\",\"left\"]} width={[\"90vw\",\"80vw\"]} margin=\"auto\" marginTop=\"8vh\">\r\n              Summit successfully hosted talks by Ar. Rahul Mehrotra, Ar. Brinda Somaya and other renowned architects as a \r\n              part of the Summit Masterclass series. Archi-Tech Summit also organized the Post Covid Redesign Contest and \r\n              Innovation Hub Design Challenge that provided a platform for professionals and enthusiasts in the field of \r\n              architecture and design to leverage the power of designing spaces to solve societal problems and build better \r\n              ommunities.\r\n           </Text>\r\n           <Image src={summit1} width=\"80vw\" height={\"100%\"} objectFit={\"cover\"}></Image>\r\n           <Text paddingTop={[\"4vh\",\"4vh\"]} fontSize={[\"3.5vw\",\"1.5vw\"]} textAlign={[\"center\",\"left\"]} width={[\"90vw\",\"80vw\"]} margin=\"auto\">\r\n              With Sports-Tech Summit Shaastra tried to expand into bringing its participants up to speed on the latest \r\n              developments by successfully organizing a case-study competition as a part of the Summit and a Hackathon  \r\n              as a pre-event. Similarly, the Law-Tech Summit explored the influence of modern day technology in legal \r\n              practice by organising a one of a kind Moot court.\r\n           </Text>\r\n          </Stack>\r\n        </Box>\r\n        <Footer\r\n        designed={[{ name: 'Krithikaa', mail: 'be20b020@smail.ittm.ac.in' }]}\r\n      />\r\n    </CustomBox>\r\n  )\r\n}\r\n\r\nexport default Summit;\r\n","/home/ubuntu/shaastra-general-website/src/components/pages/Events and Workshops/Tif.tsx",["425","426"],"import React from \"react\";\r\nimport {\r\n  Text,\r\n  Stack,\r\n  Center,\r\n  Box,\r\n  Heading,\r\n  Image,\r\n  SimpleGrid,\r\n  Flex,\r\n  Button,\r\n} from \"@chakra-ui/react\";\r\nimport { useColorModeValue } from \"@chakra-ui/color-mode\";\r\nimport CustomBox from \"../../shared/CustomBox\";\r\nimport tif1 from \"../../../images/EventsWorkshops/tif/tif_1.png\";\r\nimport tif2 from \"../../../images/EventsWorkshops/tif/tif_2.png\";\r\nimport tif3 from \"../../../images/EventsWorkshops/tif/tif_3.png\";\r\nimport tif4 from \"../../../images/EventsWorkshops/tif/tif_4.png\";\r\nimport tif5 from \"../../../images/EventsWorkshops/tif/tif_6.png\";\r\nimport tif6 from \"../../../images/EventsWorkshops/tif/tif_9.png\";\r\nimport \"../../../styles/Events.css\";\r\nimport Footer from \"../../shared/Footer\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Tif() {\r\n  const colorvariant = useColorModeValue(\"#1c72c7\",\"#ABC8E1\")\r\n  return (\r\n    <CustomBox>\r\n      <Box textAlign={'justify'}>\r\n        <Stack\r\n          textAlign={\"center\"}\r\n          align={\"center\"}\r\n          spacing={{ base: 8, md: 8 }}\r\n          paddingTop={{ base: 20, md: 20 }}\r\n          marginBottom={[0,5]}\r\n        >\r\n          <Heading\r\n            noOfLines={2}\r\n            fontWeight={600}\r\n            fontSize={{ base: \"3xl\", sm: \"4xl\", md: \"6xl\" }}\r\n            textAlign=\"center\"\r\n          >\r\n            <Text as={\"span\"} display={'inline-flex'} alignItems={'center'}>\r\n              Tech <Text mx={2} as={'h2'} fontSize={['5xl','7xl']} color={colorvariant}>&</Text> Innovation Fair\r\n            </Text>\r\n          </Heading>\r\n          <Text color={\"gray.500\"} maxW={\"3xl\"} fontSize={\"20px\"} padding={2}>\r\n            The event helps the participants to take their tech-based prototype\r\n            to the next level by converting it into an MVP (Minimum-viable\r\n            product).These benchmark models can further be incubated for the\r\n            commencement of a start-up.\r\n          </Text>\r\n          <Box m={2}>\r\n          <a href={\"https://tif.shaastra.org/\"} target={\"_blank\"}><Button colorScheme={\"blue\"} borderRadius={\"2xl\"} m={2}>Explore Tech & Innovation Fair</Button></a>\r\n          </Box>\r\n           </Stack>\r\n           \r\n        <Flex\r\n          textAlign={\"center\"}\r\n          align={\"center\"}\r\n          width={'100%'}\r\n          spacing={{ base: 8, md: 8 }}\r\n          bgColor={\"#ABC8E1\"}\r\n          color={'black'}\r\n          alignItems={'center'}\r\n          justifyItems={'center'}\r\n          marginBottom={5}\r\n          // py={{ base: 20, md: 20 }}\r\n        >\r\n          <Center>\r\n          <Box p={2} my={3} width={['80%','80%','60%','60%']}>\r\n            <Text padding={2}  fontSize={\"17px\"} textAlign={'justify'} fontWeight={'semibold'}>\r\n              The fair comprises multiple stages of professional guidance in the\r\n              form of Workshops, Panel discussions and seminars based on\r\n              entrepreneurship and management and a culmination event during\r\n              Shaastra where they will exhibit their product to the massive\r\n              crowd of Shaastra.The event concludes with the final pitching\r\n              competition which takes place at IITM research park. By the end of\r\n              the event, participants will be equipped with the knowledge,\r\n              resources, and opportunities they need to kickstart their startup\r\n              journey.\r\n            </Text>\r\n          </Box>\r\n          </Center>\r\n        </Flex>\r\n        <Center marginBottom={10} flexDirection={'column'} p={3}>\r\n          <Heading fontWeight={700} lineHeight={\"110%\"} textAlign=\"center\" m={2}>\r\n            Our{\"   \"}\r\n            <Text as={\"span\"} color={colorvariant}>\r\n              Partners\r\n            </Text>\r\n          </Heading>\r\n          <Image src={tif1} alt=\"tif_1\" h=\"300px\" w=\"600px\" p={2}></Image>\r\n        </Center>\r\n         \r\n\r\n        <Center>\r\n          <Heading fontWeight={700} lineHeight={\"110%\"} textAlign=\"center\">\r\n            Workshops and{\"   \"}\r\n            <Text as={\"span\"} color={colorvariant}>\r\n              Seminar\r\n            </Text>\r\n          </Heading>\r\n        </Center>\r\n       <Center>\r\n       <SimpleGrid\r\n          width={\"85%\"}\r\n          minChildWidth=\"300px\"\r\n          spacing=\"30px\"\r\n          marginBottom={12}\r\n          marginTop={12}\r\n        >\r\n          <Center alignItems=\"center\">\r\n            <Image\r\n              src={tif2}\r\n              alt=\"tif_2\"\r\n              width=\"301px\"\r\n              height=\"301px\"\r\n              objectFit=\"cover\"\r\n              rounded={'2xl'}\r\n            ></Image>\r\n            <Box zIndex=\"-1\" position=\"absolute\" height=\"350px\" width=\"350px\">\r\n              <Box\r\n                bgGradient={useColorModeValue(\r\n                  \"radial(orange.600 1px, transparent 1px)\",\r\n                  \"radial(orange.300 1px, transparent 1px)\"\r\n                )}\r\n                backgroundSize=\"11px 11px\"\r\n                opacity=\"1\"\r\n                height=\"100%\"\r\n              />\r\n            </Box>\r\n          </Center>\r\n          <Center alignItems=\"center\">\r\n            <Image\r\n              src={tif3}\r\n              alt=\"tif_3\"\r\n              w=\"301px\"\r\n              h=\"301px\"\r\n              objectFit=\"cover\"\r\n              rounded={'2xl'}\r\n            ></Image>\r\n            <Box zIndex=\"-1\" width=\"350px\" position=\"absolute\" height=\"350px\">\r\n              <Box\r\n                bgGradient={useColorModeValue(\r\n                  \"radial(orange.600 1px, transparent 1px)\",\r\n                  \"radial(orange.300 1px, transparent 1px)\"\r\n                )}\r\n                backgroundSize=\"11px 11px\"\r\n                opacity=\"1\"\r\n                height=\"100%\"\r\n              />\r\n            </Box>\r\n          </Center>\r\n          <Center alignItems=\"center\">\r\n            <Image\r\n              src={tif4}\r\n              alt=\"tif_4\"\r\n              w=\"301px\"\r\n              h=\"301px\"\r\n              objectFit=\"cover\"\r\n              rounded={'2xl'}\r\n            ></Image>\r\n            <Box zIndex=\"-1\" width=\"350px\" position=\"absolute\" height=\"350px\">\r\n              <Box\r\n                bgGradient={useColorModeValue(\r\n                  \"radial(orange.600 1px, transparent 1px)\",\r\n                  \"radial(orange.300 1px, transparent 1px)\"\r\n                )}\r\n                backgroundSize=\"11px 11px\"\r\n                opacity=\"1\"\r\n                height=\"100%\"\r\n              />\r\n            </Box>\r\n          </Center>\r\n        </SimpleGrid>\r\n       </Center>\r\n        \r\n        {/* <Swiper\r\n        spaceBetween={window.innerWidth > 600 ? 50 : 0}\r\n        navigation={{\r\n          prevEl: events_navigationPrevRef.current,\r\n          nextEl: events_navigationNextRef.current,\r\n        }}\r\n        loop={true}\r\n        pagination={\r\n          window.innerWidth < 600\r\n            ? {\r\n                el: events_paginationRef.current,\r\n                clickable: true,\r\n              }\r\n            : false}\r\n            >\r\n          <SwiperSlide>\r\n\r\n          </SwiperSlide>\r\n        </Swiper> */}\r\n        <Center>\r\n          <Heading fontWeight={700} textAlign=\"center\" lineHeight={\"110%\"}>\r\n            Success{\"   \"}\r\n            <Text as={\"span\"} color={colorvariant}>\r\n              Stories\r\n            </Text>\r\n          </Heading>\r\n        </Center>\r\n        <SimpleGrid\r\n          textAlign={\"center\"}\r\n          columns={[1,2]}\r\n          marginLeft={5}\r\n          marginRight={5}\r\n          spacing={30}\r\n          marginTop={5}\r\n          marginBottom={12}\r\n        >\r\n          <Box\r\n            shadow=\"lg\"\r\n            borderWidth=\"2px\"\r\n            borderRadius=\"md\"\r\n            maxwidth={500}\r\n            padding={2}\r\n            m={2}\r\n            className=\"success-stories1\"\r\n          >\r\n            <Heading\r\n              fontSize=\"xl\"\r\n              fontWeight=\"bold\"\r\n              // color={\"gray.500\"}\r\n              marginTop={2}\r\n            >\r\n              Scavenger robot to eradicate manual scavenging (1st Runners up-\r\n              TIF 2021)\r\n            </Heading>\r\n            <Text padding={2} maxW={\"3xl\"}\r\n            // color={\"gray.500\"} \r\n            >\r\n              <blockquote>Competition has a lot things we can learn even if we win or not,\r\n              these learnings will be useful throughout our lives. The team of\r\n              Shaastra did a great job. The volunteers guided us patiently and\r\n              virtual creation of IIT Madras was great.</blockquote>\r\n              <br />\r\n              <Text fontStyle=\"italic\" fontWeight=\"bold\">\r\n                -Harikrishnan, Team Scavenger\r\n              </Text>\r\n            </Text>\r\n          </Box>\r\n          <Box\r\n            shadow=\"lg\"\r\n            borderWidth=\"2px\"\r\n            borderRadius=\"md\"\r\n            maxwidth={500}\r\n            padding={2}\r\n            m={2}\r\n            className=\"success-stories2\"\r\n          >\r\n            <Heading\r\n              fontSize=\"xl\"\r\n              fontWeight=\"bold\"\r\n              marginTop={2}\r\n            >\r\n              Drowning rescue kit - Finds drowning people and launches life\r\n              jackets for rescue (Winner TIF- 2020)\r\n            </Heading>\r\n            <Text padding={2}  maxW={\"3xl\"}>\r\n              <blockquote>Initially, when we got the mail saying we’ve been shortlisted for\r\n              TIF at IIT Madras, we were surprised. No one in our entire family,\r\n              our generation, had ever seen an IIT. We got a really good mentor\r\n              and, Tech and Innovation Fair was really supportive from Day 0. I\r\n              thank the entire team for everything they’ve done for us.</blockquote>\r\n              <br />\r\n              <Text fontStyle=\"italic\" fontWeight=\"bold\">\r\n                -Mohammed Safi, Team Night Fury\r\n              </Text>\r\n            </Text>\r\n          </Box>\r\n          <Box\r\n            shadow=\"lg\"\r\n            borderWidth=\"2px\"\r\n            borderRadius=\"md\"\r\n            maxwidth={500}\r\n            padding={2}\r\n            m={2}\r\n            className=\"success-stories3\"\r\n          >\r\n            <Heading\r\n              fontSize=\"xl\"\r\n              fontWeight=\"bold\"\r\n              marginTop={2}\r\n            >\r\n              Non Invasive Measurement of Blood Glucose &Haemoglobin (Winner\r\n              TIF-2019)\r\n            </Heading>\r\n            <Text padding={2} maxW={'3xl'}>\r\n              <blockquote> We were working on our device for few months and always wanted to\r\n              make it into a startup to help people. That’s when we came across\r\n              Tech and Innovation Fair at Shaastra ‘19 in IIT Madras. The TIF\r\n              platform helped us by organising workshops on IPR and Pitching. At\r\n              the end of the day, we were also given an opportunity for\r\n              pre-incubation at the IITM Research Park. This event helped us\r\n              take our product to the next phase.</blockquote>\r\n              <br />\r\n              <Text fontStyle=\"italic\" fontWeight=\"bold\">\r\n                -Sriram Shreedharan, Team Leader Glucoglobin.\r\n              </Text>\r\n            </Text>\r\n          </Box>\r\n          <Box\r\n            shadow=\"lg\"\r\n            borderWidth=\"2px\"\r\n            borderRadius=\"md\"\r\n            maxwidth={500}\r\n            padding={2}\r\n            m={2}\r\n            className=\"success-stories4\"\r\n          >\r\n            <Heading\r\n              fontSize=\"xl\"\r\n              fontWeight=\"bold\"\r\n              marginTop={2}\r\n            >\r\n              Foldable House (Winner TIF-2018)\r\n            </Heading>\r\n            <Text padding={2} maxW={'3xl'}>\r\n              <blockquote>We were a project prototype while we registered for Shaastra TIF\r\n              2018. TIF 2018 gave us much insights through its mentoring\r\n              sessions and webinars. It helped us to work more aggressively on\r\n              our project and now its soon to be launched as a startup.</blockquote>\r\n              <br />\r\n              <Text fontStyle=\"italic\" fontWeight=\"bold\">\r\n                -Shree Ram, CEO & Co-founder, Modulus Housing\r\n              </Text>\r\n            </Text>\r\n          </Box>\r\n        </SimpleGrid>\r\n        <Center>\r\n          <Heading textAlign=\"center\" fontWeight={700} lineHeight={\"110%\"}>\r\n            Exhibitions and{\"   \"}\r\n            <Text as={\"span\"} color={colorvariant}>\r\n              Research Park Visit\r\n            </Text>\r\n          </Heading>\r\n        </Center>\r\n        <SimpleGrid\r\n          minChildWidth=\"320px\"\r\n          spacing=\"40px\"\r\n          marginBottom={10}\r\n          marginTop={10}\r\n          paddingBottom={12}\r\n        >\r\n          <Center>\r\n            <Image\r\n              src={tif5}\r\n              alt=\"tif_5\"\r\n              w=\"301px\"\r\n              h=\"301px\"\r\n              objectFit=\"cover\"\r\n              rounded={'2xl'}\r\n            ></Image>\r\n            <Box zIndex=\"-1\" width=\"350px\" position=\"absolute\" height=\"350px\">\r\n              <Box\r\n                bgGradient={useColorModeValue(\r\n                  \"radial(orange.600 1px, transparent 1px)\",\r\n                  \"radial(orange.300 1px, transparent 1px)\"\r\n                )}\r\n                backgroundSize=\"11px 11px\"\r\n                opacity=\"1\"\r\n                height=\"100%\"\r\n              />\r\n            </Box>\r\n          </Center>\r\n          <Center>\r\n            <Image\r\n              src={tif6}\r\n              alt=\"tif_6\"\r\n              w=\"301px\"\r\n              h=\"301px\"\r\n              objectFit=\"cover\"\r\n              rounded={'2xl'}\r\n            ></Image>\r\n            <Box zIndex=\"-1\" width=\"350px\" position=\"absolute\" height=\"350px\">\r\n              <Box\r\n                bgGradient={useColorModeValue(\r\n                  \"radial(orange.600 1px, transparent 1px)\",\r\n                  \"radial(orange.300 1px, transparent 1px)\"\r\n                )}\r\n                backgroundSize=\"11px 11px\"\r\n                opacity=\"1\"\r\n                height=\"100%\"\r\n              />\r\n            </Box>\r\n          </Center>\r\n        </SimpleGrid>\r\n      </Box>\r\n      <Footer\r\n        designed={[{ name: \"Drishti\", mail: \"me19b100@smail.iitm.ac.in\" },{ name: \"Srinivas\", mail: \"ch19b052@smail.iitm.ac.in\" }]}\r\n      />\r\n    </CustomBox>\r\n  );\r\n}\r\n\r\nexport default Tif;\r\n","/home/ubuntu/shaastra-general-website/src/components/pages/Events and Workshops/EventVertical.tsx",["427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447"],"import * as React from \"react\"\nimport {\n    Text,\n    Stack, Input,\n    Flex,\n    Link,\n    Box, Select,\n    Heading,\n    Image,\n    Button,\n    useColorModeValue,\n    Center,\n    FormLabel,\n    Alert,\n    AlertIcon\n} from '@chakra-ui/react'\nimport { useParams } from \"react-router-dom\"\nimport CustomBox from '../../shared/CustomBox'\nimport Footer from '../../shared/Footer';\nimport CardForWorkShop from './CardForWorksShop';\nimport EventsData from \"./EventsData\";\nimport bg from \"../../../images/EventsWorkshops/events/bg.jpg\"\nimport EventVerticalComponent from \"./EventVeticalComponent\"\nimport { Event, useGetEventsQuery, useUpdateReferralMutation } from \"../../../generated/graphql\";\nimport bg2 from '../../../images/EventsWorkshops/events/bg2.jpg'\nimport '../../../styles/eventWorkshops.css';\nimport MayhemCombo from \"./MayhemCombo\";\nconst EventVertical = () => {\n\n    const { name }: any = useParams()\n    const desp = EventsData.filter(v => v.vertical === name)[0].desp\n\n    const search = useColorModeValue(\"border\", \"noBorder\")\n    const font = useColorModeValue(\"black\", \"white\")\n    const gradient = useColorModeValue(\"blackG\", \"whiteG\")\n    const button = useColorModeValue(\"dark\", \"light\")\n\n    const { data, loading, error } = useGetEventsQuery({\n        variables: {\n            filter: name.toUpperCase()\n        }\n    })\n    var events;\n    var sponseve;\n    var oevents\n    if (data) {\n        events = data?.getEvents.events;\n        // var eventsShuffle = events.map((value) => ({ value, sort: Math.random() }))\n        //     .sort((a, b) => a.sort - b.sort)\n        //     .map(({ value }) => value)\n\n        sponseve = events.filter((eve) =>{\n            if(eve.id === \"ckxezt6nt002udbp76oar48e5\" || eve.id === \"cky6uehup00frfsp7br7sblfn\"){\n                return true;\n            }else{\n                return false;\n            }\n        })\n        oevents = events.filter((eve) =>{\n            if(eve.id === \"ckxezt6nt002udbp76oar48e5\" || eve.id === \"cky6uehup00frfsp7br7sblfn\"){\n                return false;\n            }else{\n                return true;\n            }\n        })\n    }\n\n   \n    return (\n        <CustomBox>\n            <Box className=\"events-vertical\">\n                <Stack\n                    textAlign={'center'}\n                    align={'center'}\n                    spacing={{ base: 8, md: 8 }}\n                    py={{ base: 20, md: 20 }}\n                >\n                    <Box position={\"relative\"} backgroundImage={bg} width=\"100%\" height=\"fit-content\" padding=\"4vw\" backgroundRepeat=\"no-repeat\" backgroundPosition=\"0px 50%\" backgroundSize={\"cover\"}>\n                        <Box color={\"white\"} content=\"\" position={\"absolute\"} top=\"0\" left=\"0\" width={\"100%\"} height=\"100%\" backgroundColor={\"rgba(0, 0, 0, 0.4)\"}></Box>\n                        {\n                            name === \"aerofest\" ? <Heading position={\"relative\"} zIndex={3} textTransform=\"uppercase\" backdropBlur=\"20px\" fontSize=\"7xl\" color=\"white\">AERO<span>FEST</span></Heading>\n                                :\n                                name === \"cl\" ? <Heading position={\"relative\"} zIndex={3} textTransform=\"uppercase\" backdropBlur=\"20px\" fontSize=\"7xl\" color=\"white\">Coding <span>&</span> Logic</Heading>\n                                    :\n                                    name === \"elecfest\" ? <Heading position={\"relative\"} zIndex={3} textTransform=\"uppercase\" backdropBlur=\"20px\" fontSize=\"7xl\" color=\"white\">ELEC<span>FEST</span></Heading>\n                                        :\n                                        name === \"db\" ? <Heading position={\"relative\"} zIndex={3} textTransform=\"uppercase\" backdropBlur=\"20px\" fontSize=\"7xl\" color=\"white\">Design <span>&</span> Build</Heading>\n                                            :\n                                            name === \"workshops\" ? <Heading position={\"relative\"} zIndex={3} textTransform=\"uppercase\" backdropBlur=\"20px\" fontSize=\"7xl\" color=\"white\">{name}</Heading>\n                                                :\n                                                name === \"biogen\" ? <Heading position={\"relative\"} zIndex={3} textTransform=\"uppercase\" backdropBlur=\"20px\" fontSize=\"7xl\" color=\"white\">BIO<span>GEN</span></Heading>\n                                                    :\n                                                    name === \"bevents\" ? <Heading position={\"relative\"} zIndex={3} textTransform=\"uppercase\" backdropBlur=\"20px\" fontSize=\"7xl\" color=\"white\">B<span>Events</span></Heading>\n                                                        :\n                                                        name === \"ignite\" ? <Heading position={\"relative\"} zIndex={3} textTransform=\"uppercase\" backdropBlur=\"20px\" fontSize=\"7xl\" color=\"white\">I<span>DP</span></Heading>\n                                                            :\n                                                            name === \"strategists\" ? <Heading position={\"relative\"} zIndex={3} textTransform=\"uppercase\" backdropBlur=\"20px\" fontSize=\"7xl\" color=\"white\">Quiz<span>zing</span></Heading>\n                                                                : null\n                        }\n                        <Text position={\"relative\"} zIndex={3} color=\"white\" width=\"60vw\" margin=\"auto\" className=\"vertical-desp\" fontWeight={\"700\"} fontSize={\"1.2vw\"}>{desp}</Text>\n                    </Box>\n              \n\n                    {/* {name === \"workshops\" ? (\n                        <React.Fragment>\n                                            <Text\n                                className=\"rainbow\"\n                                p={4}\n                                style={{ borderRadius: 8 }}\n                                shadow=\"lg\"\n                                borderWidth=\"2px\"\n                                borderRadius=\"md\"\n                                fontWeight={\"medium\"}\n                                fontSize={\"lg\"}\n                                color={\"gray.500\"}\n                                >\n                                Hurry up !! Limited seats available{\" \"}\n                                    Register Now\n                                </Text>\n                        <MayhemCombo isAdmin={false} combo=\"Mayhem Combo\" />\n                        <Flex width={[\"90%\",\"90%\",\"50%\",\"50%\"]}>\n                        <Text\n                                className=\"rainbow\"\n                                p={3}\n                                style={{ borderRadius: 8 }}\n                                shadow=\"lg\"\n                                borderWidth=\"2px\"\n                                borderRadius=\"md\"\n                                fontWeight={\"medium\"}\n                                fontSize={\"lg\"}\n                                color={\"gray.500\"}\n                                >\n                            Have a referral code ? Enter the referral code to avail a <strong>5%</strong> discount \n                            on the workshop/combo you register\n                        </Text>\n                        </Flex>\n                        <Flex flexWrap={'wrap'} width={'100%'} justifyContent={'space-around'}>\n                            <CardForWorkShop title=\"Dive into the world of ML with\" WS1=\"AI and Reinforcement Learning\" WS2=\"Zero to Hero in CV\" WS3=\"A completer guide to Machine Learning\" Price1=\"500\" Price2=\"600\" Price3=\"500\" ActualPrice=\"1600\" DiscountedPrice=\"1300\" ComboName=\"AI Combo\" />\n                            <CardForWorkShop title=\"Get into amazing world of robotics with\" WS1=\"Intro to Robotics\" WS2=\"Path Tracking in Autonomous Vehicles\" WS3=\"Build your own Autonomus Robot\" Price1=\"500\" Price2=\"500\" Price3=\"600\" ActualPrice=\"1600\" DiscountedPrice=\"1300\" ComboName=\"Robotics Combo\" />\n                            <CardForWorkShop title=\"Learn the amazing applications of Data Science with \" WS1=\"Intro to DS with Projects\" WS2=\"Sustainibility using ML & DS\" WS3=\"Art of Data Visualization\" Price1=\"500\" Price2=\"500\" Price3=\"500\" ActualPrice=\"1500\" DiscountedPrice=\"1200\" ComboName=\"Data Science Combo\" />\n                            <CardForWorkShop title=\"Gear up your computer skills with \" WS1=\"Intro to Cloud Computing\" WS2=\"Hacking 101 with Microcontrollers\" WS3=\"Making Discord bot from scratch\" Price1=\"500\" Price2=\"500\" Price3=\"500\" ActualPrice=\"1500\" DiscountedPrice=\"1200\" ComboName=\"Cybermatic Combo\" />\n                            <CardForWorkShop title=\"Explore the exciting world of electronics with\" WS1=\"Intro to Arduino and ioT\" WS2=\"Intro to Embedded system Programming\" WS3=\"Parallel Processing and Real-time OS\" Price1=\"500\" Price2=\"500\" Price3=\"600\" ActualPrice=\"1600\" DiscountedPrice=\"1200\" ComboName=\"Electronic Combo\" />\n                            <CardForWorkShop title=\"Start your career in consultancy and management with\" WS3=\"Product Management 101\" WS2=\"Consult 101\" WS1=\"2 Workshops\" Price1=\"500\" Price2=\"500\" Price3=\"350\" ActualPrice=\"1000\" DiscountedPrice=\"800\" ComboName=\"Management Workshops\" />\n                        </Flex>  */}\n                        \n\n                        {/* <Center flexDirection={[\"column\",\"column\",\"row\",\"row\"]} my={1} width={\"50%\"} p={2}>\n                        <FormLabel m={2}>Referral Code :</FormLabel>\n                        <Input\n                            width={[\"100%\",\"100%\",\"50%\",\"50%\"]}\n                            value={referral}\n                            placeholder=\"Enter Referal Code\"\n                            onChange={(e) => setReferral(e.target.value)}\n                            type={\"text\"}\n                            borderBottom=\"5px solid white\"\n                            m={2}\n                        />\n                        <Button\n                            m={1}\n                            onClick={async () => {\n                            console.log(REFERRAL.length)\n                            if(REFERRAL.includes(referral)){\n                                await updatereferral({\n                                    variables : {\n                                        referralcode : referral\n                                    }\n                                }).then(res => {\n                                    if(res.data?.updateReferral){\n                                        setSuccess(\"You can avail 5% discount on any of the workhop/combo\")\n                                        setRefErr(\"\")\n                                    }\n                                })\n                                .catch(err => setRefErr(err.message))\n                            }else{\n                                setRefErr(\"Referral code not valid\")\n                            }\n                            \n                            }\n                        }\n                        >\n                            {\" \"}\n                            Submit\n                        </Button>\n                        </Center>\n                        {\n                            refErr && (\n                            <Alert status='error' width={\"60%\"} m={1}>\n                            <AlertIcon />\n                            {refErr}\n                             </Alert>\n                            )\n                        }\n                        {\n                            success && (\n                            <Alert status='success'width={\"60%\"} m={1}>\n                            <AlertIcon />\n                            {success}\n                             </Alert>\n                            )\n                        } */}\n{/* \n                        </React.Fragment>\n                        \n                    ) : (\n                        <></>\n                    )} */}\n                    {/* <Flex width=\"100vw\" justifyContent=\"space-evenly\" alignItems=\"center\">\n                <input type=\"text\" className={search} />\n                <Button backgroundColor=\"white\" className={search} color=\"black\" onClick={filter}>Search</Button>\n            </Flex> */}\n                    {\n                       sponseve && sponseve.map((event) => {\n                            return (\n                                <EventVerticalComponent data={event} isAdmin={false} />\n                            )\n                        })\n                    }{\n                       oevents && oevents.map((event) => {\n                            if (event.vertical === \"IGNITE\" && event.id === \"ckxdasopm0024wop7cxphcidu\") return null\n                            return (\n                                <EventVerticalComponent data={event} isAdmin={false} />\n                            )\n                        })\n                    }\n                </Stack>\n            </Box>\n            <Footer designed={[{ name: 'Krithikaa', mail: 'be20b020@smail.iitm.ac.in' }]} />\n        </CustomBox>\n    )\n}\n\nexport default EventVertical;","/home/ubuntu/shaastra-general-website/src/components/pages/Events and Workshops/AddEvent.tsx",["448","449","450","451","452","453","454","455","456","457","458","459"],"import * as React from \"react\";\nimport {\n  Text,\n  Stack,\n  Flex,\n  Link,\n  Box,\n  Heading,\n  FormControl,\n  FormLabel,\n  Input,\n  Image,\n  Button,\n  Select,\n  RadioGroup,\n  Radio,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport CustomBox from \"../../shared/CustomBox\";\nimport ReactMde from \"react-mde\";\nimport * as Showdown from \"showdown\";\nimport \"../../../styles/Events.css\";\n\nimport bg from \"../../../images/EventsWorkshops/events/bg.jpeg\";\nimport {\n  GetEventsDocument,\n  RegistraionType,\n  useAddEventMutation,\n  useCreateEventFaqMutation,\n} from \"../../../generated/graphql\";\n\nimport AWS from \"aws-sdk\";\nimport { AddIcon, MinusIcon } from \"@chakra-ui/icons\";\ndeclare module \"react\" {\n  interface HTMLAttributes<T> extends AriaAttributes, DOMAttributes<T> {\n    directory?: string;\n    webkitdirectory?: string;\n    moxdirectory?: string;\n  }\n}\n\nconst converter = new Showdown.Converter({\n  tables: true,\n  simplifiedAutoLink: true,\n  strikethrough: true,\n  tasklists: true,\n});\n\nconst EventAdmin = () => {\n  const [value, setValue] = React.useState(\"Hello!\");\n  const [selectedTab, setSelectedTab] = React.useState<\"write\" | \"preview\">(\n    \"write\"\n  );\n\n  const [radio, setRadio] = useState<RegistraionType>(RegistraionType.None);\n  const [radioString, setRadioString] = useState(\"None\");\n  const [name, setName] = React.useState(\"\");\n  const [vertical, setVertical] = React.useState(\"\");\n  const [desp, setDesp] = React.useState(\"\");\n  const [platform, setPlatform] = React.useState(\"\");\n  const [req, setReq] = useState(\"\");\n  const [regStart, setRegStart] = useState(\"\");\n  const [regEn, setRegEnd] = useState(\"\");\n  const [eventStart, setEventStart] = useState(\"\");\n  const [eventEnd, setEventEnd] = useState(\"\");\n  const [teamSize, setTeamSize] = useState(0);\n  const [participation, setParticipation] = useState(\"\");\n  const [first, setFirst] = useState(\"\");\n  const [second, setSecond] = useState(\"\");\n  const [third, setThird] = useState(\"\");\n  const [fee, setFee] = useState(\"\");\n\n  const setEventType = () => {\n    switch (radioString) {\n      case \"Individual\":\n        setRadio(RegistraionType.Individual);\n        break;\n      case \"Team\":\n        setRadio(RegistraionType.Team);\n        break;\n      default:\n        setRadio(RegistraionType.None);\n    }\n  };\n\n  const [addEventMutation, { data, loading, error }] = useAddEventMutation();\n  const history = useHistory();\n\n  var [file, setFile] = useState<File>();\n  var [newFile, setNewFile] = useState<string>(\"\");\n\n  AWS.config.update({\n    accessKeyId: \"AKIA4VXHNASLCGXPQAHM\",\n    secretAccessKey: \"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\",\n  });\n  const myBucket = new AWS.S3({\n    params: { Bucket: \"shaastra\" },\n    region: \"ap-south-1\",\n  });\n  const UploadImageToS3WithNativeSdk = async (file: any) => {\n    const params = {\n      ACL: \"public-read\",\n      Body: file,\n      Bucket: \"shaastra\",\n      Key: file.name,\n    };\n\n    await myBucket\n      .putObject(params)\n      .on(\"httpUploadProgress\", (evt) => {})\n      .send((err) => {\n        if (err) console.log(err);\n      });\n  };\n\n  var { isOpen, onOpen, onClose } = useDisclosure();\n\n  const [faqs, setfaqs] = React.useState([{ question: \"\", answer: \"\" }]);\n  const [addfaq] = useCreateEventFaqMutation();\n\n  const handleFqsInput = ({\n    index,\n    event,\n  }: {\n    index: number;\n    event: React.ChangeEvent<HTMLInputElement>;\n  }) => {\n    const values = [...faqs];\n\n    if (event.target.name === \"question\") {\n      values[index][\"question\"] = event.target.value;\n    } else {\n      values[index][\"answer\"] = event.target.value;\n    }\n    setfaqs(values);\n  };\n\n  if (data) {\n    onClose = () => {\n      history.push(\"/admin\");\n    };\n    return (\n      <Modal isOpen={true} onClose={onClose}>\n        <ModalOverlay />\n        <ModalContent backgroundColor=\"#addfd0\" color=\"black\">\n          <ModalHeader>Event Added</ModalHeader>\n          <ModalCloseButton />\n        </ModalContent>\n      </Modal>\n    );\n  }\n  if (error) {\n    onClose = () => {\n      window.location.reload();\n    };\n    return (\n      <Modal isOpen={true} onClose={onClose}>\n        <ModalOverlay />\n        <ModalContent backgroundColor=\"#f1aaaa\" color=\"black\">\n          <ModalHeader>Error Occurred</ModalHeader>\n          <ModalCloseButton />\n        </ModalContent>\n      </Modal>\n    );\n  }\n  if (loading) {\n    onClose = () => {\n      history.push(\"/admin/add\");\n    };\n    return (\n      <Modal isOpen={true} onClose={onClose}>\n        <ModalOverlay />\n        <ModalContent backgroundColor=\"#e2e19c\" color=\"black\">\n          <ModalHeader>Loading...</ModalHeader>\n          <ModalCloseButton />\n        </ModalContent>\n      </Modal>\n    );\n  }\n\n  return (\n    <CustomBox>\n      <Stack\n        textAlign={\"center\"}\n        align={\"center\"}\n        spacing={{ base: 8, md: 8 }}\n        py={{ base: 20, md: 20 }}\n      >\n        <Heading>ADD EVENT</Heading>\n        <Box\n          backgroundImage={bg}\n          width=\"100vw\"\n          padding=\"4vw\"\n          className=\"admin-add\"\n        >\n          <Box\n            backgroundImage=\"linear-gradient(-45deg, #ffffff98, #ffffff09)\"\n            borderRadius=\"24px\"\n            backdropFilter=\"blur(30px)\"\n            padding=\"5vw\"\n          >\n            <Flex\n              width=\"100%\"\n              justifyContent=\"space-between\"\n              alignItems=\"flex-end\"\n            >\n              <FormControl>\n                <FormLabel fontSize=\"1.5vw\">Name of Event</FormLabel>\n                <Input\n                  type=\"text\"\n                  outline=\"none\"\n                  color=\"black\"\n                  backgroundColor=\"transparent\"\n                  borderBottom=\"5px solid white\"\n                  onChange={(e: any) => {\n                    setName(e.target.value);\n                  }}\n                ></Input>\n              </FormControl>\n              <Select\n                placeholder=\"Vertical\"\n                width=\"30vw\"\n                marginLeft=\"5vw\"\n                onChange={(e: any) => {\n                  setVertical(e.target.value);\n                }}\n              >\n                <option value=\"AEROFEST\">AeroFest</option>\n                <option value=\"BIOGEN\">Biogen</option>\n                <option value=\"BEVENTS\">BEvents</option>\n                <option value=\"CL\">Coding & Logic</option>\n                <option value=\"DB\">Design & Build</option>\n                <option value=\"ELECFEST\">ElecFest</option>\n                <option value=\"IGNITE\">Ignite</option>\n                <option value=\"STRATEGISTS\">Strategists</option>\n                <option value=\"WORKSHOPS\">Workshops</option>\n              </Select>\n            </Flex>\n            <FormControl marginTop=\"4vh\">\n              <FormLabel fontSize=\"1.5vw\">Description</FormLabel>\n              <ReactMde\n                value={desp}\n                onChange={setDesp}\n                selectedTab={selectedTab}\n                onTabChange={setSelectedTab}\n                generateMarkdownPreview={(markdown) => {\n                  return Promise.resolve(converter.makeHtml(markdown));\n                }}\n              ></ReactMde>\n            </FormControl>\n            <Flex width=\"100%\" marginBottom=\"4vh\">\n              <FormControl>\n                <FormLabel>Platform</FormLabel>\n                <Input\n                  type=\"text\"\n                  outline=\"none\"\n                  color=\"black\"\n                  backgroundColor=\"transparent\"\n                  borderBottom=\"5px solid white\"\n                  onChange={(e: any) => {\n                    setPlatform(e.target.value);\n                  }}\n                ></Input>\n              </FormControl>\n              <FormControl width=\"150%\" marginLeft=\"2vw\">\n                <FormLabel>Requirements</FormLabel>\n                <Input\n                  type=\"text\"\n                  outline=\"none\"\n                  color=\"black\"\n                  backgroundColor=\"transparent\"\n                  borderBottom=\"5px solid white\"\n                  onChange={(e: any) => {\n                    setReq(e.target.value);\n                  }}\n                ></Input>\n              </FormControl>\n            </Flex>\n            <Flex width=\"100%\" marginBottom=\"4vh\">\n              <FormControl>\n                <FormLabel>Registration Start</FormLabel>\n                <Input\n                  type=\"date\"\n                  outline=\"none\"\n                  color=\"black\"\n                  backgroundColor=\"transparent\"\n                  borderBottom=\"5px solid white\"\n                  onChange={(e: any) => {\n                    setRegStart(e.target.value);\n                  }}\n                  value={regStart}\n                ></Input>\n              </FormControl>\n              <FormControl marginLeft=\"2vw\">\n                <FormLabel>Registration End</FormLabel>\n                <Input\n                  type=\"date\"\n                  outline=\"none\"\n                  color=\"black\"\n                  backgroundColor=\"transparent\"\n                  borderBottom=\"5px solid white\"\n                  onChange={(e: any) => {\n                    setRegEnd(e.target.value);\n                  }}\n                ></Input>\n              </FormControl>\n            </Flex>\n            <Flex width=\"100%\" marginBottom=\"4vh\">\n              <FormControl>\n                <FormLabel>Event Start</FormLabel>\n                <Input\n                  type=\"date\"\n                  outline=\"none\"\n                  color=\"black\"\n                  backgroundColor=\"transparent\"\n                  borderBottom=\"5px solid white\"\n                  onChange={(e: any) => {\n                    setEventStart(e.target.value);\n                  }}\n                ></Input>\n              </FormControl>\n              <FormControl marginLeft=\"2vw\">\n                <FormLabel>Event End</FormLabel>\n                <Input\n                  type=\"date\"\n                  outline=\"none\"\n                  color=\"black\"\n                  backgroundColor=\"transparent\"\n                  borderBottom=\"5px solid white\"\n                  onChange={(e: any) => {\n                    setEventEnd(e.target.value);\n                  }}\n                ></Input>\n              </FormControl>\n            </Flex>\n            <Flex marginBottom=\"4vh\">\n              <FormControl>\n                <FormLabel>Participation Points</FormLabel>\n                <Input\n                  type=\"text\"\n                  outline=\"none\"\n                  color=\"black\"\n                  backgroundColor=\"transparent\"\n                  borderBottom=\"5px solid white\"\n                  onChange={(e: any) => {\n                    setParticipation(e.target.value);\n                  }}\n                ></Input>\n              </FormControl>\n              <FormControl marginLeft=\"2vw\">\n                <FormLabel>Winner Up points</FormLabel>\n                <Input\n                  type=\"text\"\n                  outline=\"none\"\n                  color=\"black\"\n                  backgroundColor=\"transparent\"\n                  borderBottom=\"5px solid white\"\n                  onChange={(e: any) => {\n                    setFirst(e.target.value);\n                  }}\n                ></Input>\n              </FormControl>\n              <FormControl marginLeft=\"2vw\">\n                <FormLabel>Runner Up points</FormLabel>\n                <Input\n                  type=\"text\"\n                  outline=\"none\"\n                  color=\"black\"\n                  backgroundColor=\"transparent\"\n                  borderBottom=\"5px solid white\"\n                  onChange={(e: any) => {\n                    setSecond(e.target.value);\n                  }}\n                ></Input>\n              </FormControl>\n              <FormControl marginLeft=\"2vw\">\n                <FormLabel>Third position points</FormLabel>\n                <Input\n                  type=\"text\"\n                  outline=\"none\"\n                  color=\"black\"\n                  backgroundColor=\"transparent\"\n                  borderBottom=\"5px solid white\"\n                  onChange={(e: any) => {\n                    setThird(e.target.value);\n                  }}\n                ></Input>\n              </FormControl>\n            </Flex>\n            <FormControl>\n              <FormLabel>Upload picture</FormLabel>\n              <Input\n                type=\"file\"\n                outline=\"none\"\n                color=\"black\"\n                backgroundColor=\"transparent\"\n                borderBottom=\"5px solid white\"\n                onChange={(e: any) => {\n                  setFile(e.target.files[0]); console.log(e.target.files[0])\n                  setNewFile(`https://shaastra.s3.ap-south-1.amazonaws.com/${e.target.files[0].name}`)\n                }}\n              ></Input>\n            </FormControl>\n            <FormControl>\n              <FormLabel fontSize=\"1.5vw\">Registration fee (Enter the fee in INR)</FormLabel>\n              <Input\n                type=\"text\"\n                outline=\"none\"\n                color=\"black\"\n                backgroundColor=\"transparent\"\n                borderBottom=\"5px solid white\"\n                onChange={(e: any) => {\n                  setFee(e.target.value);\n                }}\n              ></Input>\n            </FormControl>\n            <Flex\n              alignItems=\"center\"\n              justifyContent=\"space-between\"\n              width=\"100%\"\n              className=\"admin-team\"\n            >\n              <FormControl color=\"black\" marginTop=\"4vh\">\n                <RadioGroup\n                  onChange={(e: any) => {\n                    switch (e) {\n                      case \"Individual\":\n                        setRadio(RegistraionType.Individual);\n                        break;\n                      case \"Team\":\n                        setRadio(RegistraionType.Team);\n                        break;\n                      default:\n                        setRadio(RegistraionType.None);\n                    }\n                  }}\n                >\n                  <Radio value=\"Individual\" marginRight=\"2vw\">\n                    Individual\n                  </Radio>\n                  <Radio value=\"Team\" marginRight=\"2vw\">\n                    Team\n                  </Radio>\n                  <Radio value=\"None\">None</Radio>\n                </RadioGroup>\n              </FormControl>\n              {radio === RegistraionType.Team && (\n                <FormControl marginTop=\"4vh\" width=\"10vw\">\n                  <FormLabel color=\"black\">Team size</FormLabel>\n                  <Input\n                    type=\"number\"\n                    outline=\"none\"\n                    color=\"black\"\n                    backgroundColor=\"transparent\"\n                    borderBottom=\"5px solid white\"\n                    onChange={(e: any) => {\n                      setTeamSize(parseInt(e.target.value));\n                    }}\n                  ></Input>\n                </FormControl>\n              )}\n            </Flex>\n            <Flex p={2}>\n              <Heading size={\"md\"} m={2}>\n                Add Fqs{\" \"}\n              </Heading>\n            </Flex>\n            {faqs.map((faq, index) => {\n              return (\n                <React.Fragment key={index}>\n                  <Flex p={2}>\n                    <FormControl m={2}>\n                      <Input\n                        name=\"question\"\n                        placeholder={\"Question\"}\n                        id={\"faqq\" + index}\n                        outline=\"none\"\n                        color=\"black\"\n                        backgroundColor=\"transparent\"\n                        borderBottom=\"5px solid white\"\n                        value={faq.question}\n                        onChange={(event) => handleFqsInput({ index, event })}\n                      />\n                    </FormControl>\n                    <FormControl m={2}>\n                      <Input\n                        name=\"answer\"\n                        placeholder={\"Answer\"}\n                        onChange={(event) => handleFqsInput({ index, event })}\n                        id={\"faqa\" + index}\n                        outline=\"none\"\n                        color=\"black\"\n                        backgroundColor=\"transparent\"\n                        borderBottom=\"5px solid white\"\n                        value={faq.answer}\n                      />\n                    </FormControl>\n                    <Flex\n                      p={[0, 3]}\n                      width={\"40px\"}\n                      flexDirection={[\"column\", \"row\"]}\n                    >\n                      {index === 0 ? null : (\n                        <Button\n                          mx={2}\n                          my={1}\n                          size={\"xs\"}\n                          onClick={() => {\n                            const values = [...faqs];\n                            values.splice(index, 1);\n                            setfaqs(values);\n                          }}\n                        >\n                          <MinusIcon />\n                        </Button>\n                      )}\n                      <Button\n                        mx={2}\n                        my={1}\n                        size={\"xs\"}\n                        onClick={() =>\n                          setfaqs([...faqs, { question: \"\", answer: \"\" }])\n                        }\n                      >\n                        <AddIcon />\n                      </Button>\n                    </Flex>\n                  </Flex>\n                </React.Fragment>\n              );\n            })}\n            <Button\n              marginTop=\"4vh\"\n              width=\"100%\"\n              backgroundColor=\"white\"\n              color=\"#0e101b\"\n              onClick={async (e: any) => {\n                e.preventDefault();\n                console.log(file);\n                if( fee != \"0\" && !parseInt(fee)){\n                  alert(\"Enter a valid registration fee\")\n                }else{\n                try {\n                  if(newFile !== '') await UploadImageToS3WithNativeSdk(file)\n                  await addEventMutation({\n                    variables: {\n                      data: {\n                        name: name,\n                        description: desp,\n                        eventTimeFrom: eventStart ? new Date(eventStart).toDateString() : null,\n                        eventTimeTo: eventEnd ? new Date(eventEnd).toDateString(): null,\n                        registrationType: radio,\n                        platform: platform,\n                        requirements: req,\n                        vertical: vertical,\n                        pic: newFile,\n                        finalistst: \"\",\n                        firstplace: first,\n                        participation: participation,\n                        secondplace: second,\n                        thirdplace: third,\n                        teamSize: teamSize,\n                        registrationCloseTime: regEn ?new Date(regEn).toDateString() : null,\n                        registrationOpenTime: regStart ? new Date(regStart).toDateString() : null,\n                        registrationfee: fee,\n                      },\n                    },\n                    refetchQueries: [\n                      {\n                        query: GetEventsDocument,\n                        variables: { getEventsFilter: vertical },\n                      },\n                    ],\n                  }).then((res) => {\n                    if (res.data?.addEvent.id) {\n                      faqs.map(async (faq) => {\n                        await addfaq({\n                          variables: {\n                            id: res.data?.addEvent.id!,\n                            data: {\n                              question: faq.question,\n                              answer: faq.answer,\n                            },\n                          },\n                        }).catch((err) => console.log(error));\n                      });\n                    }\n                  });\n                } catch (err) {\n                  console.log(err);\n                }\n              }\n              }}\n            >\n              Submit\n            </Button>\n          </Box>\n        </Box>\n      </Stack>\n    </CustomBox>\n  );\n};\n\nexport default EventAdmin;\n","/home/ubuntu/shaastra-general-website/src/components/pages/Events and Workshops/EditEvent.tsx",["460","461","462","463","464","465","466","467","468","469"],"import * as React from \"react\"\nimport {\n    Text,\n    Stack,\n    Flex,\n    Link,\n    Box,\n    Heading,\n    FormControl,\n    FormLabel,\n    Input,\n    Image,\n    Button,\n    Select,\n    RadioGroup,\n    Radio,\n    useColorModeValue,\nModal,\n    ModalOverlay,\n    ModalContent,\n    ModalHeader,\n    ModalFooter,\n    ModalBody,\n    ModalCloseButton,\n    useDisclosure,  } from '@chakra-ui/react'\nimport { useHistory, useParams } from \"react-router-dom\"\nimport { useState } from \"react\"\nimport CustomBox from '../../shared/CustomBox'\nimport ReactMde from \"react-mde\";\nimport * as Showdown from \"showdown\";\nimport { RegistraionType, useGetEventQuery } from \"../../../generated/graphql\"\nimport \"../../../styles/Events.css\"\nimport moment from 'moment'\nimport bg from \"../../../images/EventsWorkshops/events/bg.jpeg\"\nimport { useEditEventMutation } from \"../../../generated/graphql\";\n\nimport AWS from 'aws-sdk'\nconst uploadFile = require('react-s3')\nconst S3FileUpload = require('react-s3')\n\ndeclare module 'react' {\n    interface HTMLAttributes<T> extends AriaAttributes, DOMAttributes<T> {\n      directory?: string\n      webkitdirectory?: string\n      moxdirectory?: string\n    }\n  }\n\nconst converter = new Showdown.Converter({\n    tables: true,\n    simplifiedAutoLink: true,\n    strikethrough: true,\n    tasklists: true\n  });\n\nconst EditEvent = () => {\n\n    const {id} : {id: string} = useParams()\n\n    const [selectedTab, setSelectedTab] = React.useState<\"write\" | \"preview\">(\"write\");\n    const history = useHistory()\n\n     const {data: event, loading: eventLoading, error: eventError} = useGetEventQuery({variables: {EventID: id}})\n\n\n    console.log(event)\n\n    const [radio, setRadio] = React.useState<RegistraionType>()\n    const [radioString, setRadioString] = useState()\n    const [name, setName] = React.useState(event?.getEvent.name ? event?.getEvent.name : \"\")\n    const [vertical, setVertical] = React.useState(event?.getEvent.vertical ? event?.getEvent.vertical : \"\")\n    const [desp, setDesp] = React.useState(event?.getEvent.description ? event?.getEvent.description : \"\")\n    const [platform, setPlatform] = React.useState(event?.getEvent.platform ? event?.getEvent.platform: \"\")\n    const [req, setReq] = useState(event?.getEvent.requirements ? event?.getEvent.requirements : \"\")\n    const [regStart, setRegStart] = useState(\"\")\n    const [regEn, setRegEnd] = useState(\"\")\n    const [eventStart, setEventStart] = useState(\"\")\n    const [eventEnd, setEventEnd] = useState(\"\")\n    const [teamSize, setTeamSize] = useState(event?.getEvent.teamSize ? event?.getEvent.teamSize : 0)\n    const [participation, setParticipation] = useState(event?.getEvent.participation ? event?.getEvent.participation : \"\")\n    const [first, setFirst] = useState(event?.getEvent.firstplace ? event?.getEvent.firstplace : \"\")\n    const [second, setSecond] = useState(event?.getEvent.secondplace ? event?.getEvent.secondplace : \"\")\n    const [third, setThird] = useState(event?.getEvent.thirdplace ? event?.getEvent.thirdplace: \"\")\n    const [pic, setPic] = useState(event?.getEvent.pic!)\n    const [file, setFile] = useState<File>()\n    const [fee, setFee] = useState(event?.getEvent.registrationfee ? event.getEvent.registrationfee : \"\")\n\n    \n\n    const [editEventMutation, {data, loading, error}] = useEditEventMutation()\n\n    AWS.config.update({\n        accessKeyId: 'AKIA4VXHNASLCGXPQAHM',\n        secretAccessKey: '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',\n      })\n      const myBucket = new AWS.S3({\n        params: { Bucket: 'shaastra' },\n        region: 'ap-south-1',\n      })\n      const UploadImageToS3WithNativeSdk = async (file: any) => {\n        const params = {\n          ACL: 'public-read',\n          Body: file,\n          Bucket: 'shaastra',\n          Key: file.name,\n        }\n    \n        await myBucket\n          .putObject(params)\n          .on('httpUploadProgress', (evt) => {})\n          .send((err) => {\n            if (err) console.log(err)\n          })\n      }\n\n\n    var { isOpen, onOpen, onClose } = useDisclosure()\n\n    if(data)\n    {\n        onClose = () => {\n            history.push('/admin')\n            window.location.reload()\n        }\n        return(\n            <Modal isOpen={true} onClose={onClose}>\n                <ModalOverlay />\n                <ModalContent backgroundColor=\"#addfd0\" color=\"black\">\n                    <ModalHeader>Event Edited</ModalHeader>\n                    <ModalCloseButton />\n                 </ModalContent>\n            </Modal>\n        )\n    }\n    if(error || eventError)\n    {\n        onClose = () => {history.push('/admin')}\n        return(\n            <Modal isOpen={true} onClose={onClose}>\n                <ModalOverlay />\n                <ModalContent backgroundColor=\"#f1aaaa\" color=\"black\">\n                    <ModalHeader>Error Occurred</ModalHeader>\n                    <ModalCloseButton />\n                 </ModalContent>\n            </Modal>\n        )\n    }\n    if(loading || eventLoading)\n    {\n        onClose = () => {history.push('/admin/add')}\n        return(\n            <Modal isOpen={true} onClose={onClose}>\n                <ModalOverlay />\n                <ModalContent backgroundColor=\"#e2e19c\" color=\"black\">\n                    <ModalHeader>Loading...</ModalHeader>\n                    <ModalCloseButton />\n                 </ModalContent>\n            </Modal>\n        )\n    }\n\n    return(\n        <CustomBox>\n            <Stack\n                textAlign={'center'}\n                align={'center'}\n                spacing={{ base: 8, md: 8 }}\n                py={{ base: 20, md: 20 }}\n            >\n            <Heading>EDIT EVENT</Heading>\n            <Box backgroundImage={bg} width=\"100vw\" padding=\"4vw\" className=\"admin-add\">\n                <Box backgroundImage=\"linear-gradient(-45deg, #ffffff98, #ffffff09)\" borderRadius=\"24px\" backdropFilter=\"blur(30px)\" padding=\"5vw\">\n                    <Flex width=\"100%\" justifyContent=\"space-between\" alignItems=\"flex-end\">\n                        <FormControl>\n                            <FormLabel fontSize=\"1.5vw\">Name of Event</FormLabel>\n                            <Input \n                                value={name}\n                                type=\"text\" outline=\"none\" color=\"black\"\n                                backgroundColor=\"transparent\" borderBottom=\"5px solid white\"\n                                onChange={(e:any) => {setName(e.target.value)}}    \n                            >\n                            </Input>\n                        </FormControl>\n                        <Select value={vertical} placeholder=\"Vertical\" width=\"30vw\" marginLeft=\"5vw\" onChange={(e:any) => {setVertical(e.target.value)}}>\n                            <option value=\"AEROFEST\">AeroFest</option>\n                            <option value=\"BIOGEN\">Biogen</option>\n                            <option value=\"BEVENTS\">BEvents</option>\n                            <option value=\"CL\">Coding & Logic</option>\n                            <option value=\"DB\">Design & Build</option>\n                            <option value=\"ELECFEST\">ElecFest</option>\n                            <option value=\"IGNITE\">Ignite</option>\n                            <option value=\"STRATEGISTS\">Strategists</option>\n                            <option value=\"WORKSHOPS\">Workshops</option>\n                        </Select>\n                    </Flex>\n                    <FormControl marginTop=\"4vh\">\n                            <FormLabel>Change picture</FormLabel>\n                            <Input type=\"file\" onChange={(e:any) => {setFile(e.target.files[0]);setPic(`https://shaastra.s3.ap-south-1.amazonaws.com/${e.target.files[0].name}`)}}></Input>\n                        </FormControl>\n                    <FormControl marginTop=\"4vh\">\n                        <FormLabel fontSize=\"1.5vw\">Description</FormLabel>\n                        <ReactMde\n                        value={desp}\n                        onChange={setDesp}\n                        selectedTab={selectedTab}\n                        onTabChange={setSelectedTab}\n                        generateMarkdownPreview={markdown =>\n                          {\n                            setDesp(converter.makeHtml(markdown))\n                            return(Promise.resolve(converter.makeHtml(markdown)))\n                          }\n                        }\n                       ></ReactMde>\n                    </FormControl>\n                    <Flex width=\"100%\">\n                        <FormControl>\n                            <FormLabel>Platform</FormLabel>\n                            <Input type=\"text\" outline=\"none\" color=\"black\"\n                                value={platform}\n                                backgroundColor=\"transparent\" borderBottom=\"5px solid white\"\n                                onChange={(e:any) => {setPlatform(e.target.value)}}    \n                            ></Input>\n                        </FormControl>\n                        <FormControl width=\"150%\" marginLeft=\"2vw\">\n                            <FormLabel>Requirements</FormLabel>\n                            <Input type=\"text\" outline=\"none\" color=\"black\" \n                                value={req}\n                                backgroundColor=\"transparent\" borderBottom=\"5px solid white\"\n                                onChange={(e:any) => {setReq(e.target.value)}}    \n                            ></Input>\n                        </FormControl>\n                    </Flex>\n                    <Flex width=\"100%\">\n                        <FormControl>\n                        {console.log(regStart)}\n                            <FormLabel>Registration Start: {moment(parseInt(event?.getEvent.registrationOpenTime!)).format(\n                    \"MMMM Do YYYY\"\n                  )}</FormLabel>\n                            <Input type=\"date\" outline=\"none\" color=\"black\" value={regStart}\n                                backgroundColor=\"transparent\" borderBottom=\"5px solid white\"\n                                onChange={(e:any) => {setRegStart(e.target.value)}}    \n                            ></Input>\n                        </FormControl>\n                        <FormControl marginLeft=\"2vw\">\n                            <FormLabel>Registration End: {moment(parseInt(event?.getEvent.registrationCloseTime!)).format(\n                    \"MMMM Do YYYY\"\n                  )}</FormLabel>\n                            <Input type=\"date\" outline=\"none\" color=\"black\" value={regEn}\n                                backgroundColor=\"transparent\" borderBottom=\"5px solid white\"\n                                onChange={(e:any) => {setRegEnd(e.target.value)}}\n                            ></Input>\n                        </FormControl>\n                    </Flex>\n                    <Flex width=\"100%\">\n                        <FormControl>\n                            <FormLabel>Event Start: {moment(parseInt(event?.getEvent.eventTimeFrom!)).format(\n                    \"MMMM Do YYYY\"\n                  )}</FormLabel>\n                            <Input type=\"date\" outline=\"none\" color=\"black\" value={eventStart}\n                                backgroundColor=\"transparent\" borderBottom=\"5px solid white\"\n                                onChange={(e:any) => {setEventStart(e.target.value)}}\n                            ></Input>\n                        </FormControl>\n                        <FormControl marginLeft=\"2vw\">\n                            <FormLabel>Event End: {moment(parseInt(event?.getEvent.eventTimeTo!)).format(\n                    \"MMMM Do YYYY\"\n                  )}</FormLabel>\n                            <Input type=\"date\" outline=\"none\" color=\"black\" value={eventEnd}\n                                backgroundColor=\"transparent\" borderBottom=\"5px solid white\"\n                                onChange={(e:any) => {setEventEnd(e.target.value)}}    \n                            ></Input>\n                        </FormControl>\n                    </Flex>\n                    <Flex>\n                        <FormControl>\n                            <FormLabel>Participation</FormLabel>\n                            <Input type=\"text\" outline=\"none\" color=\"black\" value={participation}\n                                backgroundColor=\"transparent\" borderBottom=\"5px solid white\"\n                                onChange={(e:any) => {setParticipation(e.target.value)}}></Input>\n                        </FormControl>\n                        <FormControl marginLeft=\"2vw\">\n                            <FormLabel>First</FormLabel>\n                            <Input type=\"text\" outline=\"none\" color=\"black\" value={first}\n                                backgroundColor=\"transparent\" borderBottom=\"5px solid white\"\n                                onChange={(e:any) => {setFirst(e.target.value)}}></Input>\n                        </FormControl>\n                        <FormControl marginLeft=\"2vw\">\n                            <FormLabel>Second</FormLabel>\n                            <Input type=\"text\" outline=\"none\" color=\"black\" value={second}\n                                backgroundColor=\"transparent\" borderBottom=\"5px solid white\"\n                                onChange={(e:any) => {setSecond(e.target.value)}}></Input>\n                        </FormControl>\n                        <FormControl marginLeft=\"2vw\">\n                            <FormLabel>Third</FormLabel>\n                            <Input type=\"text\" outline=\"none\" color=\"black\" value={third}\n                                backgroundColor=\"transparent\" borderBottom=\"5px solid white\"\n                                onChange={(e:any) => {setThird(e.target.value)}}></Input>\n                        </FormControl>\n                    </Flex>\n                    <FormControl>\n                            <FormLabel fontSize=\"1.5vw\">Registration fee</FormLabel>\n                            <Input \n                                type=\"text\" outline=\"none\" color=\"black\" placeholder={fee} value={fee}\n                                backgroundColor=\"transparent\" borderBottom=\"5px solid white\"\n                                onChange={(e:any) => {setFee(e.target.value)}}    \n                            >\n                            </Input>\n                        </FormControl>\n                    <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\" className=\"admin-team\">\n                        <FormControl color=\"black\" marginTop=\"4vh\">\n                            <Text>{event?.getEvent.registrationType}</Text>\n                            <RadioGroup value={radioString} onChange={(e:any) => {\n                                switch(e)\n                                {\n                                    case \"Individual\": setRadio(RegistraionType.Individual); break;\n                                case \"Team\": setRadio(RegistraionType.Team); break;\n                                default: setRadio(RegistraionType.None);   \n                                }\n                            }}>\n                                <Radio value=\"Individual\" marginRight=\"2vw\">Individual</Radio>\n                                <Radio value=\"Team\" marginRight=\"2vw\">Team</Radio>\n                                <Radio value=\"None\">None</Radio>\n                            </RadioGroup>\n                        </FormControl>\n                        {\n                            radio === RegistraionType.Team &&\n                            <FormControl marginTop=\"4vh\" width=\"10vw\">\n                                <FormLabel color=\"black\">Team size</FormLabel>\n                                <Input type=\"number\" outline=\"none\" color=\"black\" \n                                    backgroundColor=\"transparent\" borderBottom=\"5px solid white\"\n                                    onChange={(e:any) => {setTeamSize(e.target.value)}}    \n                                ></Input>\n                            </FormControl>\n                        }\n                    </Flex>\n                    <Button marginTop=\"4vh\" width=\"100%\" backgroundColor=\"white\" color=\"#0e101b\"\n                        onClick={async (e:any) => {\n                            e.preventDefault();\n                            // await setEventType()\n                            if(file !== undefined)\n                            {\n                                await UploadImageToS3WithNativeSdk(file)\n                            }\n                            try{\n                                await editEventMutation({\n                                    variables: {\n                                        data: {\n                                        name: name,\n                                        description: desp,\n                                        eventTimeFrom: eventStart ? new Date(eventStart).toDateString() : null,\n                                        eventTimeTo:eventEnd ? new Date(eventEnd).toDateString(): null,\n                                        registrationType: radio!,\n                                        platform: platform,\n                                        requirements: req,\n                                        pic: pic,\n                                        vertical: vertical,\n                                        firstplace: first,\n                                        participation: participation,\n                                        secondplace: second,\n                                        thirdplace: third,\n                                        teamSize: Math.round(teamSize),\n                                        registrationCloseTime:  regEn ?new Date(regEn).toDateString() : null,\n                                        registrationOpenTime: regStart ? new Date(regStart).toDateString() : null,\n                                        registrationfee: fee\n                                        },\n                                        id: id\n                                    }\n                                })\n                            }\n                            catch(err) {console.log(err)}\n                        }}\n                    >Submit</Button>\n                </Box>\n            </Box>\n            </Stack>\n        </CustomBox>  \n    )\n}\n\nexport default EditEvent","/home/ubuntu/shaastra-general-website/src/components/pages/Events and Workshops/EventsAdmin.tsx",["470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491"],"import React from \"react\"\nimport {\n    Text,\n    Stack,\n    Flex,\n    Heading,\n    Box,\n    Select,\n   Input,\n    Image,\n    Button,\n    useColorModeValue,\n    Modal,\n    ModalOverlay,\n    ModalContent,\n    ModalHeader,\n    ModalFooter,\n    ModalBody,\n    ModalCloseButton,\n    useDisclosure,\n    Center,\n  } from '@chakra-ui/react'\nimport { AddIcon, EditIcon, MinusIcon } from '@chakra-ui/icons';\nimport { useState } from \"react\";\nimport {useHistory} from \"react-router-dom\"\nimport CustomBox from '../../shared/CustomBox'\nimport { useGetEventsQuery, useGetPaidUsersCountQuery, useGetUsersDataCsvQuery, useGetUsersQuery, useTShirtDetailsCsvQuery } from \"../../../generated/graphql\";\nimport EventVerticalComponent from \"./EventVeticalComponent\";\nimport fileDownload from \"js-file-download\";\n\nconst EventsAdmin = () => {\n\n    const [vertical, setVertical] = useState<string>(\"AEROFEST\")\n    const [event, setEvent] = useState<string>(\"\")\n\n    const {data, loading, error} = useGetEventsQuery({\n        variables : {\n            filter : vertical\n        }\n    })\n\n    var events = data?.getEvents.events;\n    const {data : data1 , error : error1, loading:loading1} = useTShirtDetailsCsvQuery()\n    // const {data: data2,loading: loading2,error: error2,} = useGetUsersDataCsvQuery();\n    const {data : data3} = useGetPaidUsersCountQuery();\n\n    const history = useHistory()\n\n    return(\n       <CustomBox>\n           <Box width=\"100vw\" padding=\"2vw 6vw\">\n            <Flex width=\"100%\" justifyContent=\"center\" >\n                <Heading textAlign=\"right\" fontSize=\"7xl\">EVENTS <br /> WORKSHOPS</Heading>\n                <Heading alignSelf=\"center\" color=\"#ea8a94\" fontSize=\"7xl\">&</Heading>\n            </Flex>\n            <Center p ={3} flexDirection={\"column\"} marginBottom=\"3vh\">\n                {/* <Heading m={2}>Registered Users count : {data1?.getUsers?.count}</Heading> */}\n                <Button\n                    p={2}\n                    m={2}\n                    onClick={() => {\n                      fileDownload(data1?.TShirtDetailsCSV !, `tshirt_details.csv`);\n                    }}\n                  >\n                    <EditIcon m={2} />\n                    Download Tshirt Details\n                  </Button>\n\n            </Center>\n            <Button width=\"100%\" padding=\"1.5vw\" backgroundColor=\"#75c9b0\" marginBottom=\"4vh\" onClick={(e:any) => {history.push('/admin/add')}}>Add Event</Button>\n            <Flex width=\"88vw\" marginBottom=\"4vh\">\n                <Select placeholder=\"Vertical\" marginLeft=\"2vw\" width=\"15vw\" value={vertical} onChange={e=> setVertical(e.target.value)}>\n                            <option value=\"AEROFEST\">AeroFest</option>\n                            <option value=\"BIOGEN\">Biogen</option>\n                            <option value=\"BEVENTS\">BEvents</option>\n                            <option value=\"CL\">Coding & Logic</option>\n                            <option value=\"DB\">Design & Build</option>\n                            <option value=\"ELECFEST\">ElecFest</option>\n                            <option value=\"IGNITE\">Ignite</option>\n                            <option value=\"STRATEGISTS\">Strategists</option>\n                            <option value=\"WORKSHOPS\">Workshops</option>\n                </Select>\n            </Flex>\n            {\n                vertical === \"WORKSHOPS\" && data3?.getPaidUsersCount && <Center>\n                <Flex>\n                <Heading as='h3' size={'lg'} p={2} m={2}>Total Paid Registrations for Workshops : {data3.getPaidUsersCount} </Heading>\n                </Flex>\n                </Center>\n            }\n            <Box className=\"events-vertical\">\n                <Stack\n                 textAlign={'center'}\n                 align={'center'}\n                 spacing={{ base: 8, md: 8 }}\n                 paddingBottom={{ base: 20, md: 20 }}>\n                {\n                events?.map((event)=>{\n                        return(\n                            <EventVerticalComponent data= {event} isAdmin ={true} />\n                        )\n                }) \n            }\n                </Stack>\n            </Box>\n           \n           </Box>\n       </CustomBox>\n    )\n}\n\nexport default EventsAdmin","/home/ubuntu/shaastra-general-website/src/components/pages/Events and Workshops/EventPage.tsx",["492","493","494","495","496","497","498"],"import {\n  Box,\n  Flex,\n  Stack,\n  Image,\n  Text,\n  Button,\n  Heading,\n  Center,\n  Container,\n  useColorModeValue,\n  Icon,\n  FormLabel,\n  Input,\n} from \"@chakra-ui/react\";\nimport React, { Fragment, useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport {\n  GetEventDocument,\n  GetEventsDocument,\n  useDeleteEventFaqMutation,\n  useDeleteEventMutation,\n  useDeleteTimingsMutation,\n  useEarlybidofferMutation,\n  useExportCsvQuery,\n  useGetEventQuery,\n} from \"../../../generated/graphql\";\nimport bg from \"../../../images/EventsWorkshops/events/bg.jpeg\";\nimport CustomBox from \"../../shared/CustomBox\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport moment from \"moment\";\nimport EventFaqs from \"./EventFaqs\";\nimport gold from \"../../../images/EventsWorkshops/events/gold.png\";\nimport silver from \"../../../images/EventsWorkshops/events/silver.png\";\nimport bronze from \"../../../images/EventsWorkshops/events/bronze.png\";\nimport { FaTrophy } from \"react-icons/fa\";\nimport RegisterNow from \"./RegisterNow\";\nimport Loader from \"../../shared/Loader\";\nimport { CalendarIcon, DeleteIcon, EditIcon } from \"@chakra-ui/icons\";\nimport fileDownload from \"js-file-download\";\nimport Timeline from \"./Timeline\";\nimport PayRegister from \"./PayRegister\";\n\nconst EventPage = () => {\n  const { id }: { id: string | undefined } = useParams();\n  const [isAdmin, setAdmin] = useState(false);\n  const history = useHistory();\n\n  const { data, error, loading } = useGetEventQuery({\n    variables: {\n      EventID: id!,\n    },\n  });\n  React.useEffect(() => {\n    if (localStorage.getItem(\"role\") === \"Admin\") {\n      setAdmin(true);\n    }\n  }, [isAdmin]);\n\n  const [deleteevent] = useDeleteEventMutation();\n  const bgcolor = useColorModeValue(\"#ea8a94\", \"#ffffff\");\n  const {\n    data: data1,\n    error: error1,\n    loading: loading1,\n  } = useExportCsvQuery({\n    variables: {\n      EventID: id!,\n    },\n  });\n  const [deleteFaq] = useDeleteEventFaqMutation();\n  const [deletetimings] = useDeleteTimingsMutation();\n  let otherfields = data?.getEvent.faqs;\n\n  otherfields = otherfields?.filter((field) => {\n    if (field.question.split(\"field\", 2).length > 1) {\n      return true;\n    } else return false;\n  });\n  const [earlybid, setEarlyBid] = useState(\"\");\n  const [earlyBid] = useEarlybidofferMutation();\n  const today = new Date();\n  const deadline = new Date(\"January 1,2022 23:59:59\");\n  if (error) console.log(error);\n  if (loading) return <Loader />;\n  const timeline =\n    data?.getEvent.registrationOpenTime || data?.getEvent.eventTimeFrom;\n  console.log(data?.getEvent.registrationfee);\n  return (\n    <CustomBox>\n      <Container\n        maxWidth=\"6xl\"\n        alignItems=\"center\"\n        justifyItems={\"center\"}\n        marginBottom={5}\n        paddingBottom={2}\n      >\n        <Center flexDirection={[\"column\"]}>\n          {\n            data?.getEvent.id !== \"ckxbguugt001gwdp70z7oft4v\" ?\n            <Image\n            h={[\"2%\", \"300px\", \"300px\"]}\n            width={\"auto\"}\n            objectFit={\"contain\"}\n            src={data?.getEvent.pic ? data.getEvent.pic : bg}\n            marginTop={\"50px\"}\n            p={4}\n            rounded={[\"3xl\", \"3xl\"]}\n          />\n            : <></>\n          }\n          <Heading p={2} m={2}>\n            {data?.getEvent.name}\n          </Heading>\n        </Center>\n        <Flex\n          style={{ borderRadius: 8 }}\n          p={4}\n          shadow=\"lg\"\n          borderWidth=\"2px\"\n          borderRadius=\"md\"\n          flexDirection={\"column\"}\n        >\n          <Text\n            className=\"event-desc\"\n            fontWeight={\"medium\"}\n            fontSize={\"lg\"}\n            padding={2}\n            color={\"gray.500\"}\n          >\n            <ReactMarkdown\n              children={data?.getEvent.description!}\n              remarkPlugins={[remarkGfm]}\n            ></ReactMarkdown>\n          </Text>\n\n          <Flex justifyContent={\"flex-end\"}>\n            {isAdmin ? (\n              <Flex flexDirection={[\"column\"]}>\n                 {\n                  data?.getEvent.registrationType=== \"INDIVIDUAL\" ?       \n                  <Heading\n                  size={\"md\"}\n                  padding={[\"0.5vw\", \"0.5vw\", \"0.5vw\", \"1.25vw\"]}\n                  >\n                  {\" \"} Registered Users Count : {data?.getEvent.registeredUserCount}\n                  </Heading>\n                  :  <Heading\n                  size={\"md\"}\n                  padding={[\"0.5vw\", \"0.5vw\", \"0.5vw\", \"1.25vw\"]}\n                  >\n                  {\" \"} Registered Teams Count : {data?.getEvent.registeredTeamCount}\n                  </Heading>\n\n                 }\n                <Button\n                  padding={[\"0.5vw\", \"0.5vw\", \"0.5vw\", \"1.vw\"]}\n                  fontSize={[\"3vw\", \"3vw\", \"3vw\", \"1vw\"]}\n                  onClick={() => {\n                    fileDownload(\n                      data1?.exportCSV!,\n                      `${data?.getEvent.name}_regristants.csv`\n                    );\n                  }}\n                >\n                  <EditIcon m={2} />\n                  Download Registered Usersdata\n                </Button>\n              </Flex>\n            ) : data?.getEvent.registrationfee !== \"0\" ? (\n              <PayRegister isAdmin={isAdmin} data={data?.getEvent!} />\n            ) : (\n              <RegisterNow isAdmin={isAdmin} data={data?.getEvent} />\n            )}\n          </Flex>\n        </Flex>\n\n        <Center>\n          {isAdmin && data?.getEvent?.vertical === \"WORKSHOPS\" && (\n            <Flex flexDirection={\"row\"} m={2} width={\"50%\"} p={2}>\n              <FormLabel mx={2}>Early Bird offer :</FormLabel>\n              <Input\n                width={\"50%\"}\n                value={earlybid}\n                onChange={(e) => setEarlyBid(e.target.value)}\n                name=\"earlybidoffer\"\n                type={\"text\"}\n                borderBottom=\"5px solid white\"\n              />\n              <Button\n                mx={2}\n                onClick={async () => {\n                  if (earlybid != \"0\" && !parseInt(earlybid)) {\n                    alert(\"Enter a valid fee\");\n                  } else {\n                    await earlyBid({\n                      variables: {\n                        id: data.getEvent.id,\n                        amount: earlybid,\n                      },\n                    })\n                      .then(() => window.location.reload())\n                      .catch((err) => alert(err.message));\n                  }\n                }}\n              >\n                {\" \"}\n                Submit\n              </Button>\n            </Flex>\n          )}\n        </Center>\n        {data?.getEvent.vertical !== \"WORKSHOPS\" &&\n          (data?.getEvent.firstplace ||\n            data?.getEvent.secondplace ||\n            data?.getEvent.thirdplace) && (\n            <Flex\n              flexDirection={\"column\"}\n              width={\"100%\"}\n              alignItems={\"center\"}\n              justifyItems={\"center\"}\n            >\n              <Heading\n                fontWeight={\"medium\"}\n                p={2}\n                color={\"gray.500\"}\n                display={\"inline-flex\"}\n              >\n                <Icon as={FaTrophy} /> Rewards\n              </Heading>\n              <Flex\n                flexDirection={[\"column\", \"row\"]}\n                justifyContent={\"space-evenly\"}\n                width={\"100%\"}\n              >\n                <Box p={2}>\n                  {data?.getEvent.secondplace && (\n                    <Center flexDirection={\"column\"}>\n                      <Image src={silver} />\n                      <Flex color={\"gray.500\"}>\n                        <Heading size={\"lg\"}>\n                          2nd Position : {data?.getEvent.secondplace}{\" \"}\n                          {Number(data?.getEvent.secondplace) ? \"points\" : null}\n                        </Heading>\n                      </Flex>\n                    </Center>\n                  )}\n                </Box>\n                <Box p={2}>\n                  {data?.getEvent.firstplace && (\n                    <Center flexDirection={\"column\"}>\n                      <Image src={gold} />\n                      <Flex color={\"gray.500\"}>\n                        <Heading size={\"lg\"}>\n                          1st Position : {data?.getEvent.firstplace}{\" \"}\n                          {Number(data?.getEvent.firstplace) ? \"points\" : null}\n                        </Heading>\n                      </Flex>\n                    </Center>\n                  )}\n                </Box>\n                <Box p={2}>\n                  {data?.getEvent.thirdplace && (\n                    <Center flexDirection={\"column\"}>\n                      <Image src={bronze} />\n                      <Flex color={\"gray.500\"}>\n                        <Heading size={\"lg\"}>\n                          3rd Position : {data?.getEvent.thirdplace}{\" \"}\n                          {Number(data?.getEvent.thirdplace) ? \"points\" : null}\n                        </Heading>\n                      </Flex>\n                    </Center>\n                  )}\n                </Box>\n              </Flex>\n              {data?.getEvent.participation && (\n                <Flex p={2} color={\"gray.500\"} fontSize={[\"2xl\", \"3xl\"]}>\n                  <Text>\n                    Paricipation:{\" \"}\n                    <Text as=\"span\" fontWeight={700}>\n                      {data?.getEvent.participation}{\" \"}\n                      {Number(data.getEvent.participation!) ? \"points\" : null}\n                    </Text>\n                  </Text>\n                </Flex>\n              )}\n            </Flex>\n          )}\n\n        <Flex\n          flexDirection={[\"column\", \"column\", \"row\", \"row\"]}\n          justifyContent={\"space-between\"}\n        >\n          <Flex flexDirection={\"column\"} width={\"100%\"} p={2} mb={2}>\n            {otherfields?.length! > 0 &&\n              otherfields?.map((field) => {\n                return (\n                  <Flex\n                    marginTop=\"12px\"\n                    style={{ borderRadius: 8 }}\n                    p={2}\n                    shadow=\"lg\"\n                    borderWidth=\"2px\"\n                    borderRadius=\"md\"\n                  >\n                    <Text\n                      fontWeight={\"medium\"}\n                      p={2}\n                      fontSize={\"lg\"}\n                      color={\"gray.500\"}\n                    >\n                      <strong>\n                        {field.question.split(\"field\", 2)[1]} : &nbsp;\n                      </strong>{\" \"}\n                      {field.answer}\n                    </Text>\n                    {isAdmin ? (\n                      <Button\n                        color={\"#2467a1\"}\n                        variant=\"outline\"\n                        border=\"2px solid\"\n                        borderColor=\"#2467a1\"\n                        size=\"sm\"\n                        p={2}\n                        m={2}\n                        onClick={() => {\n                          deleteFaq({\n                            variables: {\n                              id: field.id,\n                            },\n                            refetchQueries: [\n                              {\n                                query: GetEventDocument,\n                                variables: { EventID: data?.getEvent.id! },\n                              },\n                            ],\n                          });\n                        }}\n                        float={\"right\"}\n                      >\n                        <DeleteIcon m={2} />\n                        Delete Field\n                      </Button>\n                    ) : null}\n                  </Flex>\n                );\n              })}\n            {/* {data?.getEvent.earlybidoffer &&\n              data?.getEvent?.vertical === \"WORKSHOPS\" && (\n                <Text\n                  className=\"rainbow\"\n                  p={4}\n                  style={{ borderRadius: 8 }}\n                  shadow=\"lg\"\n                  borderWidth=\"2px\"\n                  borderRadius=\"md\"\n                  fontWeight={\"medium\"}\n                  fontSize={\"lg\"}\n                  color={\"gray.500\"}\n                >\n                  Hurry up !! Early Bird Sale ends on{\" \"}\n                  <span style={{ fontWeight: 600 }}>\n                    January 1st 2022 11:59 pm\n                  </span>\n                </Text>\n              )} */}\n            {data?.getEvent.registrationfee != \"0\" && (\n              <Flex\n                marginTop=\"12px\"\n                style={{ borderRadius: 8 }}\n                p={2}\n                shadow=\"lg\"\n                borderWidth=\"2px\"\n                borderRadius=\"md\"\n                flexDirection={[\"column\", \"column\", \"row\", \"row\"]}\n              >\n                <Text\n                  fontWeight={\"extrabold\"}\n                  p={2}\n                  fontSize={\"lg\"}\n                  color={\"gray.500\"}\n                >\n                  <strong>\n                    Registration Fee : &nbsp; ₹{\" \"}\n                    <span\n                      style={{\n                        textDecoration:\n                          data?.getEvent.earlybidoffer &&\n                          deadline.getTime() - today.getTime() > 0\n                            ? \"line-through\"\n                            : \"none\",\n                      }}\n                    >\n                      {data?.getEvent.registrationfee}\n                    </span>{\" \"}\n                  </strong>\n                </Text>\n                {data?.getEvent.earlybidoffer &&\n                  deadline.getTime() - today.getTime() > 0 && (\n                    <Text\n                      fontWeight={\"extrabold\"}\n                      p={2}\n                      fontSize={\"lg\"}\n                      color={\"gray.500\"}\n                    >\n                      <strong>Early Bird offer: &nbsp; ₹ </strong>{\" \"}\n                      <span\n                        style={{\n                          color: \"green\",\n                        }}\n                      >\n                        {data?.getEvent.earlybidoffer}\n                      </span>\n                    </Text>\n                  )}\n              </Flex>\n            )}\n\n            <Flex\n              marginTop=\"12px\"\n              style={{ borderRadius: 8 }}\n              p={2}\n              shadow=\"lg\"\n              borderWidth=\"2px\"\n              borderRadius=\"md\"\n            >\n              <Text\n                fontWeight={\"medium\"}\n                p={2}\n                fontSize={\"lg\"}\n                color={\"gray.500\"}\n              >\n                <strong>Prerequisites : &nbsp;</strong>{\" \"}\n                {data?.getEvent.requirements}\n              </Text>\n            </Flex>\n\n            <Flex className=\"events-details-box-container\">\n              {/* <Flex className=\"events-details-box\" backgroundColor={bgcolor}>\n              <strong>Audience: &nbsp;</strong>\n            </Flex> */}\n              <Flex\n                className=\"events-details-box\"\n                style={{ borderRadius: 8 }}\n                p={2}\n                shadow=\"lg\"\n                borderWidth=\"2px\"\n                borderRadius=\"md\"\n              >\n                <Text\n                  fontWeight={\"medium\"}\n                  fontSize={\"lg\"}\n                  padding={2}\n                  color={\"gray.500\"}\n                >\n                  <strong>Platform: &nbsp;</strong>\n                  {data?.getEvent.platform}\n                </Text>\n              </Flex>\n            </Flex>\n\n            <Flex className=\"events-details-box-container\">\n              <Flex\n                className=\"events-details-box\"\n                style={{ borderRadius: 8 }}\n                p={2}\n                shadow=\"lg\"\n                borderWidth=\"2px\"\n                borderRadius=\"md\"\n              >\n                <Text\n                  fontWeight={\"medium\"}\n                  fontSize={\"lg\"}\n                  padding={2}\n                  color={\"gray.500\"}\n                >\n                  <strong>Registration Type: &nbsp;</strong>\n                  {data?.getEvent.registrationType}\n                </Text>\n              </Flex>\n              {data?.getEvent.registrationType === \"TEAM\" && (\n                <Flex\n                  className=\"events-details-box\"\n                  style={{ borderRadius: 8 }}\n                  p={4}\n                  shadow=\"lg\"\n                  borderWidth=\"2px\"\n                  borderRadius=\"md\"\n                >\n                  <Text\n                    fontWeight={\"medium\"}\n                    fontSize={\"lg\"}\n                    padding={2}\n                    color={\"gray.500\"}\n                  >\n                    <strong>Max. team size: &nbsp;</strong>\n                    {data.getEvent.teamSize}\n                  </Text>\n                </Flex>\n              )}\n            </Flex>\n          </Flex>\n        </Flex>\n\n        {localStorage.getItem(\"role\") === \"Admin\" && (\n          <Box m={2} width={\"100%\"}>\n            <Flex flexDirection={[\"column\", \"column\", \"row\", \"row\"]}>\n              <Button\n                m={2}\n                p={2}\n                width={[\"100%\", \"100%\", \"50%\", \"50%\"]}\n                colorScheme={\"green\"}\n                onClick={(e: any) => {\n                  e.preventDefault();\n                  history.push(`/admin/edit/${data?.getEvent.id}`);\n                }}\n              >\n                Edit\n              </Button>\n              <Button\n                m={2}\n                p={2}\n                width={[\"100%\", \"100%\", \"50%\", \"50%\"]}\n                colorScheme={\"red\"}\n                onClick={async () => {\n                  await deleteevent({\n                    variables: {\n                      id: data?.getEvent.id!,\n                    },\n                    refetchQueries: [\n                      {\n                        query: GetEventsDocument,\n                        variables: { getEventsFilter: data?.getEvent.vertical },\n                      },\n                    ],\n                  })\n                    .then((res) => {\n                      if (res.data?.deleteEvent) {\n                        history.push(\"/admin\");\n                      }\n                    })\n                    .catch((err) => alert(err.message));\n                }}\n              >\n                Delete\n              </Button>\n            </Flex>\n          </Box>\n        )}\n        {localStorage.getItem(\"role\") === \"Admin\" && (\n          <Timeline id={data?.getEvent.id!} />\n        )}\n      </Container>\n      <Container\n        maxWidth=\"6xl\"\n        alignItems=\"center\"\n        justifyItems={\"center\"}\n        style={{ borderRadius: 8 }}\n        shadow=\"lg\"\n        borderWidth=\"2px\"\n        borderRadius=\"md\"\n      >\n        <Heading size={\"lg\"}>\n          <span>\n            <CalendarIcon boxSize={6} mx={2} />\n          </span>\n          Timeline\n        </Heading>\n        {data?.getEvent.registrationOpenTime &&\n          data?.getEvent.registrationType !== \"NONE\" && (\n            <Flex className=\"datetime-container\" p={2} color={\"black\"}>\n              <Heading\n                className=\"datetime-head\"\n                size={\"lg\"}\n                style={{ borderRadius: 8 }}\n                p={2}\n                shadow=\"lg\"\n                borderWidth=\"2px\"\n                borderRadius=\"md\"\n                color={\"gray.500\"}\n              >\n                Registrations\n              </Heading>\n              <Flex\n                className=\"datetime-box\"\n                alignItems={\"center\"}\n                justifyItems={\"center\"}\n              >\n                <Heading\n                  className=\"datetime\"\n                  size={\"md\"}\n                  style={{ borderRadius: 8 }}\n                  p={2}\n                  shadow=\"lg\"\n                  borderWidth=\"2px\"\n                  borderRadius=\"md\"\n                  color={\"gray.500\"}\n                >\n                  {moment(\n                    parseInt(data?.getEvent.registrationOpenTime!)\n                  ).format(\"MMMM Do YYYY\")}\n                </Heading>\n                <Heading\n                  style={{ width: \"10%\" }}\n                  p={2}\n                  className=\"datetime\"\n                  size={\"md\"}\n                  color={\"gray.500\"}\n                >\n                  to\n                </Heading>\n                <Heading\n                  className=\"datetime\"\n                  size={\"md\"}\n                  style={{ borderRadius: 8 }}\n                  p={2}\n                  shadow=\"lg\"\n                  borderWidth=\"2px\"\n                  borderRadius=\"md\"\n                  color={\"gray.500\"}\n                >\n                  {moment(\n                    parseInt(data?.getEvent.registrationCloseTime!)\n                  ).format(\"MMMM Do YYYY\")}\n                </Heading>\n              </Flex>\n            </Flex>\n          )}\n        {data?.getEvent.eventTimeFrom && (\n          <Flex\n            className=\"datetime-container\"\n            style={{ borderRadius: 8 }}\n            p={2}\n          >\n            <Heading\n              className=\"datetime-head\"\n              style={{ borderRadius: 8 }}\n              p={2}\n              shadow=\"lg\"\n              borderWidth=\"2px\"\n              size={\"lg\"}\n              borderRadius=\"md\"\n              color={\"gray.500\"}\n            >\n              Event\n            </Heading>\n            <Flex\n              className=\"datetime-box\"\n              alignItems={\"center\"}\n              justifyItems={\"center\"}\n            >\n              <Heading\n                className=\"datetime\"\n                size={\"md\"}\n                style={{ borderRadius: 8 }}\n                p={2}\n                shadow=\"lg\"\n                borderWidth=\"2px\"\n                borderRadius=\"md\"\n                color={\"gray.500\"}\n              >\n                {moment(parseInt(data?.getEvent.eventTimeFrom!)).format(\n                  \"MMMM Do YYYY\"\n                )}\n              </Heading>\n              <Heading\n                style={{ width: \"10%\" }}\n                className=\"datetime\"\n                size={\"md\"}\n                p={2}\n                shadow=\"lg\"\n                color={\"gray.500\"}\n              >\n                to\n              </Heading>\n              <Heading\n                className=\"datetime\"\n                size={\"md\"}\n                style={{ borderRadius: 8 }}\n                p={2}\n                shadow=\"lg\"\n                borderWidth=\"2px\"\n                borderRadius=\"md\"\n                color={\"gray.500\"}\n              >\n                {moment(parseInt(data?.getEvent.eventTimeTo!)).format(\n                  \"MMMM Do YYYY\"\n                )}\n              </Heading>\n            </Flex>\n          </Flex>\n        )}\n        <Center flexDirection={\"column\"} p={2}>\n          {data?.getEvent.eventtimings.length! > 0\n            ? data?.getEvent.eventtimings.map((timing) => {\n                return (\n                  <Flex\n                    className=\"datetime-head\"\n                    size={\"md\"}\n                    style={{ borderRadius: 8 }}\n                    px={3}\n                    shadow=\"lg\"\n                    borderWidth=\"2px\"\n                    borderRadius=\"md\"\n                    color={\"gray.500\"}\n                    justifyItems={\"center\"}\n                    flexDirection={\"row\"}\n                    justifyContent=\"space-between\"\n                    m={2}\n                  >\n                    <Heading size={\"md\"}>{timing.name}</Heading>\n                    <Heading size={\"md\"}>\n                      {moment(parseInt(timing.time)).format(\n                        \"MMMM Do YYYY hh:mm a\"\n                      )}\n                    </Heading>\n                    {isAdmin ? (\n                      <Button\n                        color={\"#2467a1\"}\n                        variant=\"outline\"\n                        border=\"2px solid\"\n                        borderColor=\"#2467a1\"\n                        size=\"sm\"\n                        p={2}\n                        onClick={() => {\n                          deletetimings({\n                            variables: {\n                              id: timing.id,\n                            },\n                            refetchQueries: [\n                              {\n                                query: GetEventDocument,\n                                variables: { EventID: data?.getEvent.id! },\n                              },\n                            ],\n                          });\n                        }}\n                        float={\"right\"}\n                      >\n                        <DeleteIcon m={2} />\n                        Delete Round\n                      </Button>\n                    ) : null}\n                  </Flex>\n                );\n              })\n            : null}\n        </Center>\n      </Container>\n\n      <Container maxWidth=\"6xl\" alignItems=\"center\" justifyItems={\"center\"}>\n        {data?.getEvent && <EventFaqs event={data?.getEvent!} />}\n      </Container>\n    </CustomBox>\n  );\n};\n\nexport default EventPage;\n","/home/ubuntu/shaastra-general-website/src/components/pages/Events and Workshops/EWHome.tsx",["499","500","501","502","503"],"import React from 'react'\nimport CustomBox from '../../shared/CustomBox'\nimport Footer from '../../shared/Footer'\nimport {\n    Flex,\n    Text,\n    Heading,\n    Center,\n    Box,\n    VStack,\n    Image,\n    Link,\n    Button,\n  } from '@chakra-ui/react'\n  import Bg from \"../../../images/EventsWorkshops/events/homeBg.jpg\"\n  import \"./EWHome.css\"\n  import { ChevronRightIcon } from '@chakra-ui/icons'\n  import summit from '../../../images/EventsWorkshops/summit/summit_5.jpg'\nimport tif from '../../../images/EventsWorkshops/tif/tif_4.png'\nimport workshop from \"../../../images/EventsWorkshops/events/workshop.jpeg\"\nimport events from \"../../../images/EventsWorkshops/events/eventsHome.jpeg\"\n\nconst Home = () => {\n    return(\n        <CustomBox>\n            <Flex className=\"EWHome\" flexDirection={\"column\"} position={\"relative\"} backgroundImage={Bg} backgroundRepeat={\"none\"} backgroundPosition={\"center\"} backgroundSize={\"cover\"} justifyContent={\"center\"} alignItems={\"center\"} width=\"100vw\" height=\"100vh\" backgroundColor={\"yellow\"}>\n                <Box position={\"absolute\"} content=\"\" width=\"100vw\" height=\"100vh\" top=\"0\" left=\"0\" backgroundColor={\"rgba(0, 0, 0, 0.7)\"}></Box>\n                <Center>\n                    <Heading\n                        position={\"relative\"} zIndex={1}\n                        fontSize={{ base: \"2xl\", sm: \"4xl\", md: \"6xl\" }}\n                        textAlign=\"center\"\n                    >\n                        <Text as={\"span\"} display={'inline-flex'} alignItems={'center'} color=\"white\">\n                        EVENTS<Text mx={2} as={'h2'} fontSize={['4xl','7xl']} color={\"#ea8a94\"} className='ampersand'>&</Text> WORKSHOPS\n                        </Text>\n                    </Heading>\n                </Center>\n                <Flex color=\"white\" flexDirection={[\"column\", \"row\"]} height={[\"60vh\", \"fit-content\"]} fontSize={[\"3vw\",\"1.5vw\"]} position={\"relative\"} zIndex={1} width=\"80%\" margin=\"0 auto\" marginTop={\"4vh\"} justifyContent={\"space-between\"} alignItems={\"center\"}>\n                <a href=\"/events\"><Flex className='EWHome-circle' justifyContent={\"center\"} alignItems={\"center\"} borderRadius={\"50%\"} border=\"2px solid white\" boxSize={[\"20vw\",\"10vw\"]}>Events</Flex></a>\n                <a href=\"/events/workshops\"><Flex className='EWHome-circle' justifyContent={\"center\"} alignItems={\"center\"} borderRadius={\"50%\"} border=\"2px solid white\" boxSize={[\"20vw\",\"10vw\"]}>Workshops</Flex></a>\n                    {/* <Flex className='EWHome-circle' justifyContent={\"center\"} alignItems={\"center\"} borderRadius={\"50%\"} border=\"2px solid white\" boxSize={[\"20vw\",\"10vw\"]}><a href='/summit'>Summit</a></Flex> */}\n                    {/* <Flex className='EWHome-circle' justifyContent={\"center\"} alignItems={\"center\"} borderRadius={\"50%\"} border=\"2px solid white\" boxSize={[\"20vw\",\"10vw\"]}><a href=\"/tif\">TIF</a></Flex> */}\n                </Flex>\n            </Flex>\n            <Flex width={[\"90vw\",\"70vw\"]} margin=\"auto\" flexDirection={\"column\"} className='EWHomeDesp' marginTop={\"8vh\"}>\n                <Flex flexDirection={[\"column\", \"row\"]} width={\"100%\"} justifyContent={\"space-between\"}  alignItems={\"center\"} marginBottom={\"8vh\"}>\n                    <Image boxSize={[\"50vw\",\"18vw\"]} src={events} objectFit={\"cover\"} objectPosition={\"0% 10%\"}></Image>\n                    <Text\n                        textAlign='left'\n                        as='p'\n                        marginTop='2'\n                        width={[\"100%\",\"60%\"]}\n                        fontSize={['4vw','lg']}\n                        p={2}\n                    >\n                        Have you ever wanted to work on modeling a real airplane? Do\n                        \"hacking\" scenes in movies and TV Shows make you roll your eyes?\n                        Shaastra brings you several events every year. Some of the\n                        events conducted last year as a part of Shaastra were Boeing\n                        Aeromodelling Competition, Global Biotech Council, Shaastra\n                        Programming Contest. Capture the Flag (CTF) and many more.\n                        <br /> <br></br>\n                        <a href=\"/events\">Explore EVENTS <ChevronRightIcon></ChevronRightIcon> </a>\n                    </Text>\n                </Flex>\n                <Flex flexDirection={[\"column\", \"row\"]} width={\"100%\"} justifyContent={\"space-between\"}  alignItems={\"center\"}  marginBottom={\"8vh\"}>\n                    <Image boxSize={[\"50vw\",\"18vw\"]} src={workshop} objectFit={\"cover\"}></Image>\n                    <Text\n                        textAlign='left'\n                        as='p'\n                        marginTop='2'\n                        width={[\"100%\",\"60%\"]}\n                        fontSize={['4vw','lg']}\n                        p={2}\n                    >\n                        As a part of Shaastra, we conduct several workshops every year,\n                        ranging over multiple topics. Some of the workshops that were\n                        conducted last year were Introduction to Data Science and\n                        Machine Learning, Cryptocurrency, and blockchain, How to Design\n                        a Mars Rover, Parallel Programming with Python, Make a chat app\n                        using Socket.io, Node.js, and MongoDB, and many more.\n                        <br /> <br></br>\n                        <a href=\"/events/workshops\">Explore WORKSHOPS <ChevronRightIcon></ChevronRightIcon> </a>\n                    </Text>\n                </Flex>\n                {/* <Flex flexDirection={[\"column\", \"row\"]} width={\"100%\"} justifyContent={\"space-between\"} alignItems={\"center\"}  marginBottom={\"8vh\"}>\n                    <Image boxSize={[\"50vw\",\"18vw\"]} src={summit} objectFit={\"cover\"}></Image>\n                    <Text\n                        textAlign='left'\n                        as='p'\n                        marginTop='2'\n                        width={[\"100%\",\"60%\"]}\n                        fontSize={['4vw','lg']}\n                        p={2}\n                    >\n                        Summit is the flagship conference of Shaastra, which provides a\n                        networking platform for its participants to interact with the\n                        pioneers of today, and opportunities to enhance their expertise.\n                        With a line-up of lectures, panel discussions and workshops\n                        spanning over 3 days, participants, which include college\n                        students, personnel from startups and professionals are ensured\n                        to get an all-round experience. Every year Summit ventures into\n                        a unique and relevant theme to contribute to the developments in\n                        these fields of technology and to create an impact on society.\n                        <br /> <br></br>\n                        <a href=\"/summit\">Explore SUMMIT <ChevronRightIcon></ChevronRightIcon> </a>\n                    </Text>\n                </Flex> */}\n                {/* <Flex flexDirection={[\"column\", \"row\"]} width={\"100%\"} justifyContent={\"space-between\"}  alignItems={\"center\"} marginBottom={\"8vh\"}>\n                    <Image boxSize={[\"50vw\",\"18vw\"]} src={tif} objectFit={\"cover\"}></Image>\n                    <Text\n                        textAlign='left'\n                        as='p'\n                        marginTop='2'\n                        width={[\"100%\",\"60%\"]}\n                        fontSize={['4vw','lg']}\n                        p={2}\n                    >\n                        Tech and Innovation fair is one of the flagship events in\n                        Shaastra that scouts for budding entrepreneurs by providing a\n                        platform to develop tech based projects and enhance their\n                        potential to grow into a commercial product. TIF envisions\n                        leveraging IIT Madras' rich startup ecosystem in its mission to\n                        promote innovation and address the dearth of hardcore tech\n                        startups in India\n                        <br /> <br></br>\n                        <a href=\"/tif\">Explore TIF <ChevronRightIcon></ChevronRightIcon> </a>\n                    </Text>\n                </Flex> */}\n            </Flex>\n            <Footer\n          designed={[{ name: 'Krithikaa', mail: 'be20b020@smail.iitm.ac.in' }]}\n          />  \n        </CustomBox>\n    )\n}\n\nexport default Home","/home/ubuntu/shaastra-general-website/src/components/pages/Login/Login.tsx",["504","505","506","507","508","509","510"],"import React from \"react\"\nimport {\n    Text,\n    Stack,\n    Flex,\n    Link,\n    Box,\n    Heading,\n    Input,\n    Button,\n    FormLabel,\n    FormControl,\n    Image,\n    useColorModeValue,\n    Modal,\n    ModalOverlay,\n    ModalContent,\n    ModalHeader,\n    ModalFooter,\n    ModalBody,\n    ModalCloseButton,\n    useDisclosure,\n  } from '@chakra-ui/react'\nimport \"../../../styles/Login.css\"\nimport bg from \"../../../images/Login/login.svg\"\nimport success from \"../../../images/Login/login-success.svg\"\nimport errorSVG from \"../../../images/Login/login-error.svg\"\nimport CustomBox from '../../shared/CustomBox'\nimport Footer from '../../shared/Footer'\nimport { LoginInput, useLoginMutation, UserRole } from \"../../../generated/graphql\"\nimport { useState } from \"react\"\nimport { useHistory } from \"react-router-dom\"\n\nconst Login = () => {\n\n    const gradient = useColorModeValue(\"blackG\", \"whiteG\")\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const history = useHistory()\n\n\n    const [loginMutation, {data, loading, error}] = useLoginMutation()\n\n    var { isOpen, onOpen, onClose } = useDisclosure()\n\n    if(data)\n    {\n        if(data.login?.isVerified === false) history.push(\"/verify\")\n        else\n        if(data.login?.role === UserRole.User) localStorage.setItem(\"role\", \"User\")\n        else \n         if(data.login?.role === UserRole.Admin)\n         { \n             localStorage.setItem(\"role\", \"Admin\") \n             history.push(\"/admin\")\n\n        }\n        onClose = () => {history.push('/')}\n        return(\n            <Modal isOpen={true} onClose={onClose} isCentered>\n                <ModalOverlay />\n                <ModalContent color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\n                    <Image src={success} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\n                    <ModalCloseButton />\n                    <ModalBody backgroundColor=\"#A7EAAA\" width=\"100%\" padding=\"2vw\">\n                        <Text textAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]} backgroundColor=\"#A7EAAA\" borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Logged in successfully!</Text>\n                    </ModalBody>\n                 </ModalContent>\n            </Modal>\n        )\n    }\n    if(error)\n    {\n        if(error.message === \"Oops, email not verified!\")\n        {\n            onClose = () => {history.push('/')}\n            return(\n                <Modal isOpen={true} onClose={onClose} isCentered>\n                    <ModalOverlay />\n                    <ModalContent  color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\n                        <Image src={errorSVG} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\n                        <ModalBody backgroundColor=\"#f1aaaa\" width=\"100%\" padding=\"2vw\">\n                            <Text xtAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]} backgroundColor=\"#A7EAAA\" borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Email not verified. Check your registered Email ID for the verification link</Text>\n                        </ModalBody>\n                        <ModalCloseButton />\n                    </ModalContent>\n                </Modal>\n            )\n        }\n        else \n         \n        if(error.message.includes(\"Could not find any entity of type\"))\n         {\n                onClose = () => {history.push('/signup')}\n                return(\n                    <Modal isOpen={true} onClose={onClose} isCentered>\n                    <ModalOverlay />\n                    <ModalContent color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\n                        <Image src={errorSVG} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\n                        <ModalBody backgroundColor=\"#f1aaaa\" width=\"100%\" padding=\"2vw\">\n                            <Text textAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]}  borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Email ID not registered. <br />Sign up to continue</Text>\n                        </ModalBody>\n                        <ModalCloseButton />\n                    </ModalContent>\n                </Modal>\n                )\n         }\n         else\n          if(error.message === \"Invalid Credential\")\n          {\n            onClose = () => {window.location.reload()}\n                return(\n                    <Modal isOpen={true} onClose={onClose} isCentered>\n                    <ModalOverlay />\n                    <ModalContent color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\n                        <Image src={errorSVG} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\n                        <ModalBody backgroundColor=\"#f1aaaa\" width=\"100%\" padding=\"2vw\">\n                            <Text textAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]}  borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Invalid Credentials</Text>\n                        </ModalBody>\n                        <ModalCloseButton />\n                    </ModalContent>\n                </Modal>\n                )\n          }\n          else \n          {\n            onClose = () => {window.location.reload()}\n            return(\n                <Modal isOpen={true} onClose={onClose} isCentered>\n                    <ModalOverlay />\n                    <ModalContent color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\n                        <Image src={errorSVG} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\n                        <ModalBody backgroundColor=\"#f1aaaa\" width=\"100%\" padding=\"2vw\">\n                            <Text textAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]}  borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Some error occurred</Text>\n                        </ModalBody>\n                        <ModalCloseButton />\n                    </ModalContent>\n                </Modal>\n            )\n          }\n    }\n    if(loading)\n    {\n        onClose = () => {}\n        return(\n            <Modal isOpen={true} onClose={onClose}>\n                <ModalOverlay />\n                <ModalContent backgroundColor=\"#e2e19c\" color=\"black\">\n                    <ModalHeader>Loading...</ModalHeader>\n                    <ModalCloseButton />\n                 </ModalContent>\n            </Modal>\n        )\n    }\n    return(\n        <CustomBox>\n            <Flex className=\"login\" width=\"100vw\" height=\"100vh\" justifyContent=\"center\" alignItems=\"center\" position=\"relative\" zIndex=\"1\">\n            <Box width=\"60vw\"  className={`${gradient} login-main-box`} height=\"fit-content\" padding=\"5vw\" borderRadius=\"24px\">\n                    <Heading fontSize=\"4vw\" marginBottom=\"6vh\">LOG<span>IN</span></Heading>\n                    <Input placeholder=\"Email ID\" marginBottom=\"4vh\" type=\"email\" onChange={(e:any) => {setEmail(e.target.value)}}></Input>\n                    <Input placeholder=\"Password\" type=\"password\" onChange={(e:any) => {setPassword(e.target.value)}}></Input>\n                    <Button width=\"100%\"  backgroundColor=\"#2467a1\" marginBottom=\"4vh\" marginTop=\"6vh\"\n                        onClick={async (e) => {\n                            e.preventDefault();\n                            try\n                            {\n                                await loginMutation({variables: {LoginInput: {email: email, password: password}}})\n                            }\n                            catch(err) {console.log(err)}\n                        }}\n                        color=\"white\"\n                    >Login</Button>\n                    <Flex width=\"100%\" justifyContent=\"space-between\" >\n                        <Link href=\"/forgotpassword\">Forgot password?</Link>\n                        <Link href=\"/signup\">Sign Up</Link>\n                    </Flex>\n                </Box>\n                <Image src={bg} boxSize=\"25vw\" bottom=\"30%\" right=\"0%\" className=\"login-image\"></Image>\n            </Flex>\n            <Footer designed={[{ name: 'Krithikaa', mail: 'be20b020@smail.iitm.ac.in' }]} ></Footer>\n        </CustomBox>  \n    )\n}\n\nexport default Login","/home/ubuntu/shaastra-general-website/src/components/pages/Login/ForgotPassword.tsx",["511","512","513","514","515","516","517","518"],"import React from \"react\"\nimport {\n    Text,\n    Stack,\n    Flex,\n    Link,\n    Box,\n    Heading,\n    Input,\n    Button,\n    FormLabel,\n    FormControl,\n    Image,\n    useColorModeValue,\n    Modal,\n    ModalOverlay,\n    ModalContent,\n    ModalHeader,\n    ModalFooter,\n    ModalBody,\n    ModalCloseButton,\n    useDisclosure,\n  } from '@chakra-ui/react'\nimport \"../../../styles/Login.css\"\nimport { useState } from \"react\"\nimport bg from \"../../../images/Login/login.svg\"\nimport success from \"../../../images/Login/login-success.svg\"\nimport errorSVG from \"../../../images/Login/login-error.svg\"\nimport CustomBox from '../../shared/CustomBox'\nimport Footer from '../../shared/Footer'\nimport { useGetPasswordOtpMutation, useResendVerificationMailMutation } from \"../../../generated/graphql\"\nimport { useHistory } from \"react-router\"\n\n\nconst Forgot = () => {\n\n    const gradient = useColorModeValue(\"blackG\", \"whiteG\")\n    const [email, setEmail] = useState(\"\")\n    const history = useHistory()\n\n    const [getPasswordOtpMutation, {data, loading, error}] = useGetPasswordOtpMutation()\n    var { isOpen, onOpen, onClose } = useDisclosure()\n    if(data)\n    {\n        onClose = () => {history.push('/resetpassword')}\n        return(\n            <Modal isOpen={true} onClose={onClose} isCentered>\n                <ModalOverlay />\n                <ModalContent color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\n                    <Image src={success} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\n                    <ModalCloseButton />\n                    <ModalBody backgroundColor=\"#A7EAAA\" width=\"100%\" padding=\"2vw\">\n                        <Text textAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]} backgroundColor=\"#A7EAAA\" borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Check your registered email ID for reset password OTP</Text>\n                    </ModalBody>\n                 </ModalContent>\n            </Modal>\n        )\n    }\n    else\n        if(loading)\n        {\n            onClose = () => {}\n            return(\n                <Modal isOpen={true} onClose={onClose}>\n                    <ModalOverlay />\n                    <ModalContent backgroundColor=\"#e2e19c\" color=\"black\">\n                        <ModalHeader>Loading...</ModalHeader>\n                        <ModalCloseButton />\n                    </ModalContent>\n                </Modal>\n            )\n        }\n        else \n            if(error)\n            {\n                if(error.message === \"Email Not found\")\n                {\n                onClose = () => {history.push('/signup')}\n                return(\n                    <Modal isOpen={true} onClose={onClose} isCentered>\n                    <ModalOverlay />\n                    <ModalContent  color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\n                        <Image src={errorSVG} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\n                        <ModalBody backgroundColor=\"#f1aaaa\" width=\"100%\" padding=\"2vw\">\n                            <Text xtAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]} backgroundColor=\"#A7EAAA\" borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Email ID not registered. <br />Kindly sign up.</Text>\n                        </ModalBody>\n                        <ModalCloseButton />\n                    </ModalContent>\n                </Modal>\n                )\n                }\n                else \n                {\n                onClose = () => {window.location.reload()}\n                return(\n                    <Modal isOpen={true} onClose={onClose} isCentered>\n                    <ModalOverlay />\n                    <ModalContent  color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\n                        <Image src={errorSVG} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\n                        <ModalBody backgroundColor=\"#f1aaaa\" width=\"100%\" padding=\"2vw\">\n                            <Text xtAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]} backgroundColor=\"#A7EAAA\" borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Error Occurred</Text>\n                        </ModalBody>\n                        <ModalCloseButton />\n                    </ModalContent>\n                </Modal>\n                )\n                }\n            }\n\n    return(\n        <CustomBox>\n            <Flex className=\"login\" width=\"100vw\" height=\"100vh\" justifyContent=\"center\" alignItems=\"center\" position=\"relative\" zIndex=\"1\">\n            <Box width=\"60vw\"  className={`${gradient} login-main-box`} height=\"fit-content\" padding=\"5vw\">\n                    <Heading fontSize=\"4vw\" marginBottom=\"6vh\">Forgot <span>Password</span></Heading>\n                    <Input placeholder=\"Enter Email ID\" marginBottom=\"4vh\" type=\"email\" onChange={(e:any) => {setEmail(e.target.value)}}></Input>\n                    <Button width=\"100%\"  backgroundColor=\"#2467a1\" marginBottom=\"4vh\" marginTop=\"6vh\"\n                        color=\"white\"\n                        onClick={async (e:any) => {\n                            e.preventDefault();\n                            try{\n                                await getPasswordOtpMutation({variables: {email: email}})\n                            }\n                            catch(err) {console.log(err)}\n                        }}\n                    >Submit</Button>\n                </Box>\n                <Image src={bg} boxSize=\"25vw\" bottom=\"30%\" right=\"0%\" className=\"login-image\"></Image>\n            </Flex>\n            <Footer designed={[{ name: 'Krithikaa', mail: 'be20b020@smail.iitm.ac.in' }]} ></Footer>\n        </CustomBox>  \n    )\n}\n\nexport default Forgot","/home/ubuntu/shaastra-general-website/src/components/pages/Login/Signup.tsx",["519","520","521","522","523","524"],"import React, { useState } from \"react\"\nimport {\n    Text,\n    Stack,\n    Flex,\n    Link,\n    Box,\n    Heading,\n    Input,\n    Select,\n    Button,\n    FormLabel,\n    FormControl,\n    Image,\n    useColorModeValue,\n    Modal,\n    ModalOverlay,\n    ModalContent,\n    ModalHeader,\n    ModalFooter,\n    ModalBody,\n    ModalCloseButton,\n    useDisclosure,\n  } from '@chakra-ui/react'\nimport \"../../../styles/Login.css\"\nimport bg from \"../../../images/Login/login.svg\"\nimport CustomBox from '../../shared/CustomBox'\nimport Footer from '../../shared/Footer'\nimport { useCreateUserMutation } from \"../../../generated/graphql\"\nimport { useHistory } from \"react-router\"\nimport success from \"../../../images/Login/login-success.svg\"\nimport errorSVG from \"../../../images/Login/login-error.svg\"\n\nimport {cities} from \"./cities\"\nimport {colleges} from \"./college\"\nimport { branches } from \"./branches\"\n\nconst Signup = () => {\n\n    const gradient = useColorModeValue(\"blackG\", \"whiteG\")\n    const history = useHistory()\n\n    const [email, setEmail] = useState(\"\")\n    const [name, setName]  = useState(\"\")\n    const [number, setNumber] = useState(\"\")\n    const [pw, setPw] = useState(\"\")\n    const [confirm, setConfirm] = useState(\"\")\n    const [college, setCollege] = useState(\"\")\n    const [branch, setBranch] = useState(\"\")\n    const [State, setState] = useState(\"Andaman and Nicobar Islands\")\n    const [city, setCity] = useState(\"\")\n    const [address, setAddress] = useState(\"\")\n    const [wrongpw , setWrongPw] = useState(false)\n    const [fielderr , setFieldErr] = useState(false)\n    const [createUser, {data, loading, error}] = useCreateUserMutation()\n\n    var { isOpen, onOpen, onClose } = useDisclosure()\n\n    if(data)\n    {\n        onClose = () => {history.push('/')}\n        return(\n            <Modal isOpen={true} onClose={onClose} isCentered>\n                <ModalOverlay />\n                <ModalContent color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\n                    <Image src={success} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\n                    <ModalCloseButton />\n                    <ModalBody backgroundColor=\"#A7EAAA\" width=\"100%\" padding=\"2vw\">\n                        <Text textAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]} backgroundColor=\"#A7EAAA\" borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Signed up successfully! <br />Check your Email ID for the verification link.</Text>\n                    </ModalBody>\n                 </ModalContent>\n            </Modal>\n        )\n    }\n    if(error)\n    {  \n            if(error.message === \"User Already signed up.Please login to continue\"){\n                onClose = () => {history.push(\"/login\")}\n                return(\n                    <Modal isOpen={true} onClose={onClose} isCentered>\n                    <ModalOverlay />\n                    <ModalContent color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\n                        <Image src={errorSVG} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\n                        <ModalBody backgroundColor=\"#f1aaaa\" width=\"100%\" padding=\"2vw\">\n                            <Text textAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]}  borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">{error.message}</Text>\n                        </ModalBody>\n                        <ModalCloseButton />\n                    </ModalContent>\n                </Modal>\n                )\n            }else {\n                onClose = () => {window.location.reload()}\n                return(\n                    <Modal isOpen={true} onClose={onClose} isCentered>\n                        <ModalOverlay />\n                        <ModalContent color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\n                            <Image src={errorSVG} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\n                            <ModalBody backgroundColor=\"#f1aaaa\" width=\"100%\" padding=\"2vw\">\n                                <Text textAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]}  borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Some error occurred</Text>\n                            </ModalBody>\n                            <ModalCloseButton />\n                        </ModalContent>\n                    </Modal>\n                )\n            }\n           \n    }\n    if(wrongpw){\n        const onClose = () => {window.location.reload()}\n        return(\n            <Modal isOpen={true} onClose={onClose}>\n                <ModalOverlay />\n                <ModalContent backgroundColor=\"#f1aaaa\" color=\"black\">\n                    <ModalHeader>Confirm password and Password should have the same values. \n                        <br />\n                        Please enter the same password in both fields</ModalHeader>\n                    <ModalCloseButton />\n                </ModalContent>\n            </Modal>\n        )\n    }\n    if(fielderr){\n        const onClose = () => {window.location.reload()}\n        return(\n            <Modal isOpen={true} onClose={onClose}>\n                <ModalOverlay />\n                <ModalContent backgroundColor=\"#f1aaaa\" color=\"black\">\n                    <ModalHeader>Please fill all the details</ModalHeader>\n                    <ModalCloseButton />\n                </ModalContent>\n            </Modal>\n        )\n    }\n    if(loading)\n    {\n        return(\n            <Modal isOpen={true} onClose={() => {}}>\n                <ModalOverlay />\n                <ModalContent backgroundColor=\"#e2e19c\" color=\"black\">\n                    <ModalHeader>Loading...</ModalHeader>\n                    <ModalCloseButton />\n                 </ModalContent>\n            </Modal>\n        )\n    }\n\n    return(\n        <CustomBox>\n            <Flex className=\"login\" width=\"100vw\" height=\"fit-content\" justifyContent=\"center\" alignItems=\"center\" padding=\"4vw\" position=\"relative\" zIndex=\"1\">\n            <Box positon=\"relative\" width=\"60vw\" className={`${gradient} login-main-box`} height=\"fit-content\" padding=\"4vw\">\n                    <Heading fontSize=\"4vw\" marginBottom=\"6vh\">SIGN<span>UP</span></Heading>\n                    <Input placeholder=\"Name\" marginBottom=\"4vh\" type=\"text\" onChange={(e:any) => {setName(e.target.value)}}></Input>\n                    <Flex marginBottom=\"6vh\">\n                        <Input placeholder=\"Email ID\" marginRight=\"2vw\" type=\"email\" onChange={(e:any) => {setEmail(e.target.value)}}></Input>\n                        <Input placeholder=\"Mobile number\" type=\"text\" value={number} onChange={(e:any) => {setNumber(e.target.value)}}></Input>\n                    </Flex>\n                    <Input placeholder=\"Password\" marginBottom=\"4vh\" type=\"password\" onChange={(e:any) => {setPw(e.target.value)}}></Input>\n                    <Input placeholder=\"Confirm password\" marginBottom=\"6vh\" type=\"password\" onChange={(e:any) => {setConfirm(e.target.value)}}></Input>\n                    <Flex marginBottom=\"6vh\">\n                        <Select placeholder=\"College\" marginRight=\"2vw\" onChange={(e:any) => {setCollege(e.target.value)}}>\n                            {\n                                colleges.map(o => {\n                                    return(\n                                        <option value={o[\"University\"]}>{o[\"University\"]}</option>\n                                    )\n                                })\n                            }\n                        </Select>\n                        <Select placeholder=\"Branch\" onChange={(e:any) => {setBranch(e.target.value)}}>\n                            {\n                                branches.map(b => {\n                                    return(\n                                        <option value={b}>{b}</option>\n                                    )\n                                })\n                            }\n                        </Select>\n                    </Flex>\n                    <Flex marginBottom=\"6vh\">\n                        <Select placeholder=\"State\" onChange={(e:any) => {setState(e.target.value)}}>\n                            {\n                                Object.keys(cities).map(s => {\n                                    return(<option value={s}>{s}</option>)\n                                })\n                            }\n                        </Select>\n                        <Select placeholder=\"City\" marginLeft=\"2vw\" onChange={(e:any) => {setCity(e.target.value)}}>\n                            {\n                                cities[State].map(c => {\n                                    return(<option value={c}>{c}</option>)\n                                })\n                            }\n                        </Select>\n                    </Flex>\n                    <Input placeholder=\"Address\" type=\"text\" onChange={(e:any) => {setAddress(e.target.value)}}></Input>\n                    <Text p={2} >*All the fields are required</Text>\n                    <Button width=\"100%\"  backgroundColor=\"#2467a1\" color=\"white\" marginTop=\"6vh\"\n                        onClick={async (e:any) => {\n                            e.preventDefault();\n                            if(!name || !email || !number || !pw || !confirm || !college || !branch || !State || !city ||!address){\n                                setFieldErr(true)\n                            }else if(pw === confirm)\n                                {\n                                    try{\n                                        await createUser(\n                                            {variables: {CreateUserInput: \n                                                {name: name, email: email, mobile: number, password: pw, college: college, department: branch, state: State, city: city, address: address}}})\n                                                .then(res => {\n                                                    if(res.data?.createUser)\n                                                    history.push(\"/verify\")\n                                                })\n                                    }\n                                    catch(err)\n                                    {\n                                        console.log(err)\n                                    }\n                                }\n                            else \n                               {\n                               setWrongPw(true)\n                               }\n                        }}\n                    >Sign Up</Button>\n                    <Text align=\"center\" marginTop=\"2vh\">Already registered? <Link href=\"/login\">Login</Link></Text>\n                </Box>\n                <Image src={bg} boxSize=\"35vw\" bottom=\"30%\" right=\"0%\" className=\"login-image\"></Image>\n            </Flex>\n            <Footer designed={[{ name: 'Krithikaa', mail: 'be20b020@smail.iitm.ac.in' }]} ></Footer>\n        </CustomBox>  \n    )\n}\n\nexport default Signup","/home/ubuntu/shaastra-general-website/src/components/pages/Login/ForgotAfterLink.tsx",["525","526","527","528","529","530","531","532"],"import React, { useState } from \"react\"\nimport {\n    Text,\n    Stack,\n    Flex,\n    Link,\n    Box,\n    Heading,\n    Input,\n    Button,\n    FormLabel,\n    FormControl,\n    Image,\n    useColorModeValue,\n    Modal,\n    ModalOverlay,\n    ModalContent,\n    ModalHeader,\n    ModalFooter,\n    ModalBody,\n    ModalCloseButton,\n    useDisclosure,\n  } from '@chakra-ui/react'\nimport \"../../../styles/Login.css\"\nimport bg from \"../../../images/Login/login.svg\"\nimport CustomBox from '../../shared/CustomBox'\nimport Footer from '../../shared/Footer'\nimport { useResetPasswordMutation } from \"../../../generated/graphql\"\nimport { useHistory, useParams } from \"react-router\"\nimport success from \"../../../images/Login/login-success.svg\"\nimport errorSVG from \"../../../images/Login/login-error.svg\"\n\nconst ForgotAfter = () => {\n\n    const gradient = useColorModeValue(\"blackG\", \"whiteG\")\n    const history = useHistory()\n    const [email, setEmail] = useState(\"\")\n    const [pw, setPw] = useState(\"\")\n    const [otp, setOtp] = useState(\"\")\n\n    const [resetPasswordMutation, {data, loading, error}] = useResetPasswordMutation()\n\n    var { isOpen, onOpen, onClose } = useDisclosure()\n\n    if(data)\n    {\n        onClose = () => {history.push('/login')}\n        return(\n            <Modal isOpen={true} onClose={onClose} isCentered>\n                <ModalOverlay />\n                <ModalContent color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\n                    <Image src={success} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\n                    <ModalCloseButton />\n                    <ModalBody backgroundColor=\"#A7EAAA\" width=\"100%\" padding=\"2vw\">\n                        <Text textAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]} backgroundColor=\"#A7EAAA\" borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Password reset</Text>\n                    </ModalBody>\n                 </ModalContent>\n            </Modal>\n        )\n    }\n    else \n    {\n        if(loading)\n        {\n            onClose = () => {}\n            return(\n                <Modal isOpen={true} onClose={onClose}>\n                    <ModalOverlay />\n                    <ModalContent backgroundColor=\"#e2e19c\" color=\"black\">\n                        <ModalHeader>Loading...</ModalHeader>\n                        <ModalCloseButton />\n                    </ModalContent>\n                </Modal>\n            )\n        }\n        else \n        if(error)\n        {\n            if(error.message === \"Invalid Otp\")\n            {\n                \n                onClose = () => {history.push('/')}\n                return(\n                    <Modal isOpen={true} onClose={onClose} isCentered>\n                    <ModalOverlay />\n                    <ModalContent color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\n                        <Image src={errorSVG} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\n                        <ModalBody backgroundColor=\"#f1aaaa\" width=\"100%\" padding=\"2vw\">\n                            <Text textAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]}  borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Invalid OTP</Text>\n                        </ModalBody>\n                        <ModalCloseButton />\n                    </ModalContent>\n                </Modal>\n                )\n            }\n            else \n            {\n                onClose = () => {history.push('/')}\n                return(\n                    <Modal isOpen={true} onClose={onClose} isCentered>\n                    <ModalOverlay />\n                    <ModalContent color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\n                        <Image src={errorSVG} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\n                        <ModalBody backgroundColor=\"#f1aaaa\" width=\"100%\" padding=\"2vw\">\n                            <Text textAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]}  borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Error Occurred</Text>\n                        </ModalBody>\n                        <ModalCloseButton />\n                    </ModalContent>\n                </Modal>\n                )  \n            }\n        }\n    }\n\n    return(\n        <CustomBox>\n            <Flex className=\"login\" width=\"100vw\" height=\"100vh\" justifyContent=\"center\" alignItems=\"center\" position=\"relative\" zIndex=\"1\">\n            <Box width=\"60vw\"  className={`${gradient} login-main-box`} height=\"fit-content\" padding=\"5vw\">\n                    <Heading fontSize=\"4vw\" marginBottom=\"6vh\">Reset <span>Password</span></Heading>\n                    <Input placeholder=\"Enter registered Email ID\" type=\"text\" marginBottom=\"4vh\" onChange={(e:any) => {setEmail(e.target.value)}}></Input>\n                    <Input placeholder=\"Reset Password OTP\" type=\"text\" marginBottom=\"4vh\" value={otp} onChange={(e:any) => {setOtp(e.target.value)}}></Input>\n                    <Input placeholder=\"Enter new password\" marginBottom=\"4vh\" type=\"password\" onChange={(e: any) => {setPw(e.target.value)}}></Input>\n                    <Button width=\"100%\"  backgroundColor=\"#2467a1\" marginBottom=\"4vh\" marginTop=\"6vh\"\n                        color=\"white\"\n                        onClick={async (e:any) => {\n                            e.preventDefault();\n                            try{\n                                await resetPasswordMutation({variables: {resetPasswordInput:{email: email, otp:otp, newPassword: pw}}})\n                            }\n                            catch(err) {console.log(err)}\n                        } }\n                    >Reset Password</Button>\n                </Box>\n                <Image src={bg} boxSize=\"25vw\" bottom=\"30%\" right=\"0%\" className=\"login-image\"></Image>\n            </Flex>\n            <Footer designed={[{ name: 'Krithikaa', mail: 'be20b020@smail.iitm.ac.in' }]} ></Footer>\n        </CustomBox>  \n    )\n}\n\nexport default ForgotAfter","/home/ubuntu/shaastra-general-website/src/components/pages/Login/Verify.tsx",["533","534","535","536","537","538","539","540","541"],"import React, { useEffect } from \"react\"\nimport {\n    Modal,\n    ModalOverlay,\n    ModalContent,\n    ModalHeader,\n    ModalFooter,\n    ModalBody,\n    ModalCloseButton,\n    useDisclosure,\n    Flex,\n    SimpleGrid,\n    Box,\n    Heading,\n    FormControl,\n    FormLabel,\n    Input,\n    Button,\n    Alert,\n    AlertIcon,\n    Text,\n    Image,\n    Link,\n    useColorModeValue,\n  } from '@chakra-ui/react'\nimport \"../../../styles/Login.css\"\nimport { useResendVerificationMailMutation, useVerifyUserMutation } from \"../../../generated/graphql\"\nimport { useState } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport { useParams } from \"react-router\"\nimport successSVG from \"../../../images/Login/login-success.svg\"\nimport errorSVG from \"../../../images/Login/login-error.svg\"\nimport Footer from \"../../shared/Footer\"\nimport CustomBox from \"../../shared/CustomBox\"\n\nconst Verify = () => {\n    const gradient = useColorModeValue(\"blackG\", \"whiteG\")\n    const [otp, setOtp] = React.useState('')\n    const history = useHistory()\n    const [verifyuser, {data, loading, error}] = useVerifyUserMutation()\n    const [resendmail] = useResendVerificationMailMutation();\n    const [email , setemail] = React.useState('');\n    const [input , setInput] = React.useState(false);\n    const [alert , setalert] = React.useState(false)\n    const [success, setSuccess] = React.useState(false)\n\n\n    const handlesubmit = () => {\n        verifyuser({\n          variables: {\n            otp,\n          },\n        })\n          .then((res) => {\n            if (res.data?.verifyUser) {\n             setSuccess(true)\n            }\n          })\n          .catch((err) => console.log(err))\n      }\n\n      const resend = () =>{\n        resendmail({variables:{\n          requestForgotPassInput : {\n            email\n          }\n        }}).then(res => {\n          if(res.data?.resendVerificationMail){\n            setalert(true)\n          }\n        })\n        .catch(err => console.error(err)\n        )\n      }\n  \n    var { isOpen, onOpen, onClose } = useDisclosure()\n    if(success)\n    {\n        onClose = () => {history.push('/login')}\n        return(\n            <Modal isOpen={true} onClose={onClose} isCentered>\n                <ModalOverlay />\n                <ModalContent color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\n                    <Image src={successSVG} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\n                    <ModalCloseButton />\n                    <ModalBody backgroundColor=\"#A7EAAA\" width=\"100%\" padding=\"2vw\">\n                        <Text textAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]} backgroundColor=\"#A7EAAA\" borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Email verified! Please login to register for workshops</Text>\n                    </ModalBody>\n                 </ModalContent>\n            </Modal>\n        )\n    }\n    else \n        if(loading)\n        {\n            onClose = () => {}\n            return(\n                <Modal isOpen={true} onClose={onClose}>\n                    <ModalOverlay />\n                    <ModalContent backgroundColor=\"#e2e19c\" color=\"black\">\n                        <ModalHeader>Loading...</ModalHeader>\n                        <ModalCloseButton />\n                    </ModalContent>\n                </Modal>\n            )\n        }\n        else\n        if(error)\n        {\n            if(error.message === \"Invalid OTP!\")\n            {\n                onClose = () => {window.location.reload()}\n                return(\n                    <Modal isOpen={true} onClose={onClose} isCentered>\n                    <ModalOverlay />\n                    <ModalContent color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\n                        <Image src={errorSVG} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\n                        <ModalBody backgroundColor=\"#f1aaaa\" width=\"100%\" padding=\"2vw\">\n                            <Text textAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]}  borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Invalid OTP</Text>\n                        </ModalBody>\n                        <ModalCloseButton />\n                    </ModalContent>\n                </Modal>\n                )\n            }\n            else \n            {\n                onClose = () => {history.push('/')}\n                return(\n                    <Modal isOpen={true} onClose={onClose} isCentered>\n                    <ModalOverlay />\n                    <ModalContent color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\n                        <Image src={errorSVG} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\n                        <ModalBody backgroundColor=\"#f1aaaa\" width=\"100%\" padding=\"2vw\">\n                            <Text textAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]}  borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Error Occurred</Text>\n                        </ModalBody>\n                        <ModalCloseButton />\n                    </ModalContent>\n                </Modal>\n                )   \n            }\n        }\n        else return (\n    <Flex\n      minH={'100vh'}\n      align={'center'}\n      justify={'center'}\n      flexDirection='column'\n    >\n         <CustomBox>\n            <Flex className=\"login\" width=\"100vw\" height=\"100vh\" justifyContent=\"center\" alignItems=\"center\" position=\"relative\" zIndex=\"1\">\n            <Box width=\"60vw\"  className={`${gradient} login-main-box`} height=\"fit-content\" padding=\"5vw\" borderRadius=\"24px\">\n                    <Heading fontSize=\"4vw\" marginBottom=\"6vh\">  Verify yo<span>ur mail</span></Heading>\n                    <Input\n                        marginBottom=\"4vh\"\n                        placeholder='OTP'\n                        type='text'\n                        value={otp}\n                        onChange={(e) => setOtp(e.target.value)}\n                    />\n                    <Button width=\"100%\"  backgroundColor=\"#2467a1\" marginBottom=\"4vh\" color=\"white\"\n                        onClick={handlesubmit}\n                    >Verify</Button>\n                    <Flex width=\"100%\" justifyContent=\"space-between\" >\n                    {\n                        !input ? ( <Link onClick = {()=>setInput(true)}>Resend Verification mail</Link>) : null\n                    }\n                     {\n                            input ? (\n                            <Flex width={\"100%\"} flexDirection={\"column\"}>\n                            <Flex width={\"100%\"} flexDirection={['column','column','row','row']}>\n                            <FormControl id='name'>\n                            <Input\n                            width={\"60%\"}\n                            placeholder='email'\n                            type='email'\n                            value={email}\n                            onChange={(e) => setemail(e.target.value)}\n                            />\n                           </FormControl> \n                        <Button onClick = {resend} color=\"white\"\n                           width ={\"40%\"} backgroundColor=\"#2467a1\" marginBottom=\"4vh\">\n                         Resend Verification mail\n                        </Button>\n                        </Flex>\n                        {\n                        alert ? (\n                            <Alert status='success'>\n                            <AlertIcon />\n                            Verification mail has been sent \n                            </Alert>\n                        ) : null\n                    }\n                    </Flex>): null\n                        }\n                    </Flex>\n                </Box>\n            </Flex>\n            <Footer designed={[{ name: 'Krithikaa', mail: 'be20b020@smail.iitm.ac.in' }]} ></Footer>\n        </CustomBox>     \n    </Flex>\n        )\n}\n\nexport default Verify","/home/ubuntu/shaastra-general-website/src/components/pages/Login/SignOut.tsx",["542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564"],"import React, { useEffect } from \"react\"\nimport {\n    Text,\n    Stack,\n    Flex,\n    Link,\n    Box,\n    Heading,\n    Input,\n    Button,\n    FormLabel,\n    FormControl,\n    Image,\n    useColorModeValue,\n    Modal,\n    ModalOverlay,\n    ModalContent,\n    ModalHeader,\n    ModalFooter,\n    ModalBody,\n    ModalCloseButton,\n    useDisclosure,\n  } from '@chakra-ui/react'\nimport \"../../../styles/Login.css\"\nimport bg from \"../../../images/Login/login.svg\"\nimport CustomBox from '../../shared/CustomBox'\nimport Footer from '../../shared/Footer'\nimport { LoginInput, useLoginMutation, useLogoutUserMutation, useVerifyUserMutation } from \"../../../generated/graphql\"\nimport { useState } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport { useParams } from \"react-router\"\nimport { verify } from \"crypto\"\nimport success from \"../../../images/Login/login-success.svg\"\nimport errorSVG from \"../../../images/Login/login-error.svg\"\n\nconst SignOut = () => {\n    const {token} = useParams<{token: string}>();\n    const history = useHistory()\n\n    const [logoutMutation, {data, loading, error}] = useLogoutUserMutation()\n    const logout = async () => {\n        try{\n            await logoutMutation()\n        }\n        catch(err) {console.log(err)}\n    }\n    logout();\n\n    var { isOpen, onOpen, onClose } = useDisclosure()\n\n    if(data?.logoutUser)\n    {\n        localStorage.removeItem(\"role\")\n        onClose = () => {\n            history.push('/') \n        }\n\n        return(\n            <Modal isOpen={true} onClose={onClose} isCentered>\n                <ModalOverlay />\n                <ModalContent color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\n                    <Image src={success} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\n                    <ModalCloseButton />\n                    <ModalBody backgroundColor=\"#A7EAAA\" width=\"100%\" padding=\"2vw\">\n                        <Text textAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]} backgroundColor=\"#A7EAAA\" borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Logged out successfully!</Text>\n                    </ModalBody>\n                 </ModalContent>\n            </Modal>\n        )\n    }\n    else \n        if(loading)\n        {\n            onClose = () => {}\n            return(\n                <Modal isOpen={true} onClose={onClose}>\n                    <ModalOverlay />\n                    <ModalContent backgroundColor=\"#e2e19c\" color=\"black\">\n                        <ModalHeader>Loading...</ModalHeader>\n                        <ModalCloseButton />\n                    </ModalContent>\n                </Modal>\n            )\n        }\n        else\n        if(error)\n        {\n            onClose = () => {history.push('/')}\n                return(\n                    <Modal isOpen={true} onClose={onClose} isCentered>\n                    <ModalOverlay />\n                    <ModalContent color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\n                        <Image src={errorSVG} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\n                        <ModalBody backgroundColor=\"#f1aaaa\" width=\"100%\" padding=\"2vw\">\n                            <Text textAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]}  borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Some error occurred</Text>\n                        </ModalBody>\n                        <ModalCloseButton />\n                    </ModalContent>\n                </Modal>\n                )   \n        }\n        else return null\n}\n\nexport default SignOut","/home/ubuntu/shaastra-general-website/src/components/pages/Login/Profile.tsx",["565","566","567","568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583"],"import React, { RefObject } from \"react\"\nimport {\n    Text,\n    Stack,\n    Link,\n    Flex,\n    Input,\n    Box,\n    RadioGroup,\n    Radio,\n    Image,\n    Button,\n    useColorModeValue,\n    Modal,\n    ModalOverlay,\n    ModalContent,\n    ModalHeader,\n    ModalFooter,\n    ModalBody,\n    ModalCloseButton,\n    useDisclosure,\n    FormControl,\n    FormLabel,\n    FormErrorMessage,\n    FormHelperText,\n    Heading,\n    Center,\n    Popover,\n    PopoverTrigger,\n    PopoverContent,\n    PopoverHeader,\n    PopoverArrow,\n    PopoverCloseButton,\n    PopoverBody,\n    PopoverFooter,\n    ButtonGroup,\n  } from '@chakra-ui/react'\nimport { AddIcon, MinusIcon } from '@chakra-ui/icons';\nimport { useState } from \"react\";\nimport CustomBox from '../../shared/CustomBox'\nimport Footer from '../../shared/Footer';\nimport \"../../../styles/Login.css\"\n\nimport bg from \"../../../images/homepage_illustrations/small ribi.png\"\nimport bg2 from \"../../../images/EventsWorkshops/events/bg.jpeg\"\n\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport SwiperCore, {\n    Scrollbar\n  } from 'swiper';\n  \nimport 'swiper/swiper-bundle.min.css'  \nimport 'swiper/swiper.min.css'\nimport { useHistory } from \"react-router\";\nimport {RegistraionType, useLeaveTeamMutation, useMeQuery} from \"../../../generated/graphql\"\nimport moment from \"moment\";\n\nSwiperCore.use([Scrollbar]);\n\nconst Profile = () => {\n\n    const history = useHistory()\n    const {data, loading, error} = useMeQuery()\n    var { isOpen, onOpen, onClose } = useDisclosure()\n    const [leaveteam] = useLeaveTeamMutation();\n    if(loading)\n        {\n            onClose = () => {}\n            return(\n                <Modal isOpen={true} onClose={onClose}>\n                    <ModalOverlay />\n                    <ModalContent backgroundColor=\"#e2e19c\" color=\"black\">\n                        <ModalHeader>Loading...</ModalHeader>\n                        <ModalCloseButton />\n                    </ModalContent>\n                </Modal>\n            )\n        }\n    else if(error)\n    {\n        if(error.message === \"Please login to continue\")\n        {   onClose = () => {history.push(\"/login\")}\n            return(\n                <Modal isOpen={true} onClose={onClose}>\n                        <ModalOverlay />\n                        <ModalContent backgroundColor=\"#f1aaaa\" color=\"black\">\n                            <ModalHeader>Please login to continue</ModalHeader>\n                            <ModalCloseButton />\n                        </ModalContent>\n                    </Modal>\n            )\n        }else{\n            onClose = () => {history.push(\"/\")}\n            return(\n                <Modal isOpen={true} onClose={onClose}>\n                    <ModalOverlay />\n                    <ModalContent backgroundColor=\"#f1aaaa\" color=\"black\">\n                        <ModalHeader>Error Occurred</ModalHeader>\n                        <ModalCloseButton />\n                    </ModalContent>\n                </Modal>\n            )\n\n        }\n                \n    }\n\n    return(\n        <CustomBox>\n            <Stack\n                    textAlign={'center'}\n                    align={'center'}\n                    spacing={{ base: 8, md: 8 }}\n                    py={{ base: 20, md: 20 }}\n                    padding=\"4vw\"\n            >\n                <Heading className=\"profile-heading\" fontSize=\"3.5vw\">Hi! {data?.me?.name}</Heading>\n                <Text>{data?.me?.shaastraID}</Text>\n                <Flex width=\"100vw\" className=\"profile-main-flex\" alignItems=\"flex-start\" minHeight=\"80vh\" justifyContent=\"space-evenly\">\n                    <Flex alignSelf=\"flex-start\" height={[\"fit-content\",\"80vh\"]} padding={[\"1vw\", \"0vw\"]}  flexDirection=\"column\" alignItems=\"center\" width={[\"100%\", \"20vw\"]} fontSize=\"1.5vw\" justifyContent=\"space-between\">\n                        <Link href=\"/profile\" color=\"#C2C4FF\" marginBottom=\"2vh\">Profile Details</Link>\n                        <Link href=\"/editprofile\">Edit Profile</Link>\n                        <Button fontSize={[\"5vw\",\"1.5vw\"]} onClick={(e) => {e.preventDefault(); history.push('/signout')}} width={[\"fit-content\",\"100%\"]} margin=\"auto\" backgroundColor=\"#DB7171\">Logout</Button>\n                        <Image className=\"profile-image\" src={bg} boxSize=\"22vw\" alignSelf=\"center\"></Image>\n                    </Flex>\n                    <Flex flexDirection=\"column\">\n                        <Box width={[\"100%\", \"60vw\"]} margin=\"auto\" fontSize={[\"5vw\",\"1.5vw\"]} padding={[\"1vw\", \"4vw\"]} borderRadius=\"24px\" marginBottom=\"4vh\">\n                            <Flex marginBottom=\"4vh\" textAlign=\"left\" justifyContent=\"space-between\" flexDirection=\"column\">\n                                    <Text>Email ID</Text>\n                                    <Text width=\"100%\" backgroundColor=\"#C2C4FF\" color=\"black\" padding=\"1vh\" borderRadius=\"12px\">{data?.me?.email}</Text>\n                            </Flex>\n                            <Flex marginBottom=\"4vh\" textAlign=\"left\" justifyContent=\"space-between\" flexDirection=\"column\">\n                                    <Text>Mobile Number</Text>\n                                    <Text width=\"100%\" backgroundColor=\"#C2C4FF\" color=\"black\" padding=\"1vh\" borderRadius=\"12px\">{data?.me?.mobile}</Text>\n                            </Flex>\n                           <Flex width=\"100%\" justifyContent=\"space-between\" marginBottom=\"4vh\">\n                                <Flex marginBottom=\"4vh\" width=\"40%\" textAlign=\"left\" justifyContent=\"space-between\" flexDirection=\"column\">\n                                        <Text>College</Text>\n                                        <Text width=\"100%\" backgroundColor=\"#C2C4FF\" color=\"black\" padding=\"1vh\" borderRadius=\"12px\">{data?.me?.college}</Text>\n                                </Flex>\n                                <Flex width=\"40%\" marginBottom=\"4vh\" textAlign=\"left\" justifyContent=\"space-between\" flexDirection=\"column\">\n                                    <Text>Branch</Text>\n                                    <Text width=\"100%\" backgroundColor=\"#C2C4FF\" color=\"black\" padding=\"1vh\" borderRadius=\"12px\">{data?.me?.department}</Text>\n                                </Flex>\n                           </Flex>\n                           <Flex marginBottom=\"4vh\" textAlign=\"left\" justifyContent=\"space-between\" flexDirection=\"column\">\n                                    <Text>Address</Text>\n                                    <Text width=\"100%\" backgroundColor=\"#C2C4FF\" color=\"black\" padding=\"1vh\" borderRadius=\"12px\">{data?.me?.address}</Text>\n                            </Flex>\n                           <Flex width=\"100%\" justifyContent=\"space-between\">\n                                <Flex marginBottom=\"4vh\" width=\"40%\" textAlign=\"left\" justifyContent=\"space-between\" flexDirection=\"column\">\n                                        <Text>City</Text>\n                                        <Text width=\"100%\" backgroundColor=\"#C2C4FF\" color=\"black\" padding=\"1vh\" borderRadius=\"12px\">{data?.me?.city}</Text>\n                                </Flex>\n                                <Flex marginBottom=\"4vh\" width=\"40%\" textAlign=\"left\" justifyContent=\"space-between\" flexDirection=\"column\">\n                                        <Text>State</Text>\n                                        <Text width=\"100%\" backgroundColor=\"#C2C4FF\" color=\"black\" padding=\"1vh\" borderRadius=\"12px\">{data?.me?.state}</Text>\n                                </Flex>\n                           </Flex>\n                        </Box>\n                        <Heading m={2} p={2}>Registered Events</Heading>\n                         <Swiper\n                            scrollbar={{hide: false}}\n                            // slidesPerView={3}\n                            spaceBetween={10}\n                            breakpoints={\n                                {\n                                    300:{\n                                        slidesPerView: 1\n                                    },\n                                    1000: {\n                                        slidesPerView: 3\n                                    }\n                                }\n                            }\n                        >\n                                              \n                            {\n                                data?.me?.registeredEvents.map(e => {\n                                   return(\n                                    e.registrationType === RegistraionType.Individual ?\n                                    <SwiperSlide >\n                                            <Flex flexDirection=\"column\" alignItems=\"center\" justifyItems={\"center\"} textAlign=\"center\"\n                                             color={'white'} boxShadow=\"5px\" p={2}\n                                            >\n                                            <a href={`/eventpage/${e.id}`}>\n                                                <Image src={e.pic! ? e.pic : bg2} height={\"12.5vw\"} width={\"100%\"} borderTopRadius={\"9px\"} objectFit={\"cover\"}></Image>\n                                                <Box fontWeight={\"600\"} p={2}>\n                                                <Text fontSize={[\"xl\"]}>{e.name}</Text>\n                                                { e.eventTimeFrom! &&\n                                                    <Flex flexDirection={\"column\"}>\n                                                    <Text>Events Starts From</Text>\n                                                    <Text> {moment(parseInt(e.eventTimeFrom!)).format(\"MMMM Do YYYY\")}</Text>\n                                                    </Flex>\n                                                }\n                                                </Box>\n                                                </a>\n                                            </Flex>\n                                        </SwiperSlide>\n                                    :\n                                    <SwiperSlide>\n                                    <div className=\"flip-card\">\n                                    <div className=\"flip-card-inner\">\n                                        <div className=\"flip-card-front\">\n                                        <Flex flexDirection=\"column\" alignItems=\"center\" justifyItems={\"center\"} textAlign=\"center\"\n                                            height={\"300px\"} color={\"white\"}\n                                            >\n                                            <a href={`/eventpage/${e.id}`}>\n                                                <Image src={e.pic!} height={\"12vw\"} width={\"100%\"} borderTopRadius={\"9px\"} objectFit={\"fill\"}></Image>\n                                                </a>\n                                                <Box  fontWeight={\"600\"} p={2}>\n                                                <Text fontSize={[\"xl\",\"2xl\"]}>{e.name}</Text>\n                                                {\n                                                    e.eventTimeFrom && <Flex flexDirection={\"column\"}>\n                                                    <Text>Events Starts From</Text>\n                                                    <Text> {moment(parseInt(e.eventTimeFrom!)).format(\"MMMM Do YYYY\")}</Text>\n                                                    </Flex>\n                                                }\n                                                </Box>\n                                                \n                                            </Flex>\n                                        </div>\n                                        <div className=\"flip-card-back\">\n                                            <Flex  width=\"100%\" height=\"100%\"  alignItems=\"center\" color={\"white\"} flexDirection=\"column\">\n                                                       <Text fontSize={\"2xl\"} pt={2} fontWeight={\"700\"}>Your Team</Text>\n                                                       <Box m={1} p={2}>\n                                                       <Text>{e.yourTeam?.name}</Text>\n                                                       <Text fontSize={\"2xl\"} fontWeight={\"700\"}>Members</Text>\n                                                        {\n                                                            e.yourTeam?.members.map((m,index) => {\n                                                                return(\n                                                                    <Text>{index+1}. {m.name}</Text>                                                                )\n                                                            })\n                                                        }\n                                                        <Popover\n                                                            placement=\"top\"\n                                                            closeOnBlur={false}\n                                                            trigger=\"hover\"\n                                                            >\n                                                            <PopoverTrigger>\n                                                            <Button height={[\"25px\"]} color={\"white\"} colorScheme={\"red\"} p={2} position={\"absolute\"} bottom={\"4%\"} right={\"4%\"}\n                                                            onClick={async ()=>{\n                                                                await leaveteam({\n                                                                    variables : {\n                                                                        id : e.yourTeam?.id!\n                                                                    }\n                                                                }).then(res =>{\n                                                                    if(res.data?.leaveTeam) {\n                                                                        window.location.reload()\n                                                                    }\n                                                                })\n                                                        }}\n                                                        >Leave Team</Button>\n                                                            </PopoverTrigger>\n                                                            <PopoverContent\n                                                                zIndex={4}\n                                                                color=\"white\"\n                                                                bg=\"blue.800\"\n                                                                borderColor=\"blue.800\"\n                                                            >\n                                                                <PopoverHeader pt={4} fontWeight=\"bold\" border=\"0\">\n                                                                Are you sure you want to leave the team\n                                                                </PopoverHeader>\n                                                                <PopoverArrow />\n                                                                <PopoverCloseButton />\n                                                                <PopoverBody>\n                                                                 Once you leave you wont be able to join again\n                                                                </PopoverBody>\n                                                            </PopoverContent>\n                                                            </Popover>\n                                                    \n\n                                                       </Box>\n                                            </Flex>\n                                        </div>\n                                    </div>\n                                </div>\n                                    </SwiperSlide>\n                                   )\n                                })\n                            }\n                        </Swiper>\n                    </Flex>\n                </Flex>\n            </Stack>    \n            <Footer designed={[{ name: 'Krithikaa', mail: 'be20b020@smail.iitm.ac.in' }]} ></Footer>      \n        </CustomBox>\n    )\n}\n\nexport default Profile;","/home/ubuntu/shaastra-general-website/src/components/pages/Login/EditProfile.tsx",["584","585","586","587","588","589","590","591","592","593","594","595","596","597","598","599","600"],"import React from \"react\"\nimport {\n    Text,\n    Stack,\n    Link,\n    Flex,\n    Input,\n    Box,\n    RadioGroup,\n    Radio,\n    Image,\n    Button,\n    useColorModeValue,\n    Modal,\n    ModalOverlay,\n    ModalContent,\n    ModalHeader,\n    ModalFooter,\n    ModalBody,\n    ModalCloseButton,\n    useDisclosure,\n    FormControl,\n    FormLabel,\n    Select,\n    FormErrorMessage,\n    FormHelperText,\n    Heading,\n  } from '@chakra-ui/react'\nimport { AddIcon, MinusIcon } from '@chakra-ui/icons';\nimport { useState } from \"react\";\nimport CustomBox from '../../shared/CustomBox'\nimport Footer from '../../shared/Footer';\nimport \"../../../styles/Login.css\"\n\n\nimport {cities} from \"./cities\"\n\nimport bg from \"../../../images/homepage_illustrations/small ribi.png\"\n\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport SwiperCore, {\n    Scrollbar\n  } from 'swiper';\n  \nimport 'swiper/swiper-bundle.min.css'  \nimport 'swiper/swiper.min.css'\nimport { useEditProfileMutation, useMeQuery } from \"../../../generated/graphql\";\nimport {useHistory} from \"react-router-dom\"\nimport { FaSchool } from \"react-icons/fa\";\nimport success from \"../../../images/Login/login-success.svg\"\nimport errorSVG from \"../../../images/Login/login-error.svg\"\n\nimport {colleges} from \"./college\"\nimport { branches } from \"./branches\"\n\nSwiperCore.use([Scrollbar]);\n\nconst EditProfile = () => {\n\n    const {data: user, loading: userLoading, error: userError} = useMeQuery()\n    console.log(user)\n\n    const history = useHistory()\n\n    const [email, setEmail] = useState('')\n    const [name, setName]  = useState('')\n    const [number, setNumber] = useState('')\n    const [college, setCollege] = useState('')\n    const [branch, setBranch] = useState('')\n    const [State, setState] = useState('')\n    const [city, setCity] = useState('')\n    const [address, setAddress] = useState('')\n    const [mobile, setMobile] = useState('')\n\n    const [editProfileMutation, {data, loading, error}] = useEditProfileMutation()\n    var { isOpen, onOpen, onClose } = useDisclosure()\n\n    if(data)\n    {\n        onClose = () => {\n            history.push('/profile')\n            window.location.reload()\n        }\n\n        return(\n            <Modal isOpen={true} onClose={onClose} isCentered>\n                <ModalOverlay />\n                <ModalContent color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\n                    <Image src={success} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\n                    <ModalCloseButton />\n                    <ModalBody backgroundColor=\"#A7EAAA\" width=\"100%\" padding=\"2vw\">\n                        <Text textAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]} backgroundColor=\"#A7EAAA\" borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Details edited successfully!</Text>\n                    </ModalBody>\n                 </ModalContent>\n            </Modal>\n        )\n    }\n    if(loading)\n        {\n            onClose = () => {}\n            return(\n                <Modal isOpen={true} onClose={onClose}>\n                    <ModalOverlay />\n                    <ModalContent backgroundColor=\"#e2e19c\" color=\"black\">\n                        <ModalHeader>Loading...</ModalHeader>\n                        <ModalCloseButton />\n                    </ModalContent>\n                </Modal>\n            )\n        }\n        else if(error)\n        {\n            onClose = () => {window.location.reload()}\n                return(\n                    <Modal isOpen={true} onClose={onClose} isCentered>\n                    <ModalOverlay />\n                    <ModalContent color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\n                        <Image src={errorSVG} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\n                        <ModalBody backgroundColor=\"#f1aaaa\" width=\"100%\" padding=\"2vw\">\n                            <Text textAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]}  borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Some error occurred</Text>\n                        </ModalBody>\n                        <ModalCloseButton />\n                    </ModalContent>\n                </Modal>\n                )   \n        }\n    \n    return(\n        <CustomBox>\n            <Stack\n                    textAlign={'center'}\n                    align={'center'}\n                    spacing={{ base: 8, md: 8 }}\n                    py={{ base: 20, md: 20 }}\n                    padding=\"4vw\"\n            >\n                <Heading fontSize=\"3.5vw\" className=\"profile-heading\">Hi! {user?.me?.name}</Heading>\n                <Flex width=\"100%\" className=\"profile-main-flex\" minHeight=\"80vh\" justifyContent=\"space-evenly\">\n                    <Flex height={[\"fit-content\",\"80vh\"]} padding={[\"1vw\", \"0vw\"]}  flexDirection=\"column\" margin=\"auto\"  width={[\"100%\", \"20vw\"]} fontSize=\"1.5vw\" justifyContent=\"space-between\">\n                        <Link href=\"/profile\" marginBottom=\"4vh\">Profile Details</Link>\n                        <Link href=\"/editprofile\" color=\"#C2C4FF\">Edit Profile</Link>\n                        <Button fontSize={[\"5vw\",\"1.5vw\"]} onClick={(e) => {e.preventDefault(); history.push('/signout')}} width={[\"fit-content\",\"100%\"]} margin=\"auto\" backgroundColor=\"#DB7171\">Logout</Button>\n                        <Image src={bg} boxSize=\"22vw\" alignSelf=\"center\"></Image>\n                    </Flex>\n                    <Flex flexDirection=\"column\">\n                        <Box width={[\"100%\", \"60vw\"]} margin=\"auto\" fontSize={[\"5vw\",\"1.5vw\"]} padding={[\"1vw\", \"4vw\"]} borderRadius=\"24px\" marginBottom=\"4vh\">\n                           <FormControl marginBottom=\"4vh\">\n                               <FormLabel>Name</FormLabel>\n                               <Input color=\"black\" value={name} placeholder={user?.me?.name} onChange={(e:any) => {setName(e.target.value)}} type=\"text\"></Input>\n                           </FormControl>\n                           <FormControl marginBottom=\"4vh\">\n                               <FormLabel>Email</FormLabel>\n                               <Input value={email} placeholder={user?.me?.email} onChange={(e:any) => {setEmail(e.target.value)}} type=\"email\"></Input>\n                           </FormControl>\n                           <FormControl marginBottom=\"4vh\">\n                               <FormLabel>Mobile Number</FormLabel>\n                               <Input value={mobile} placeholder={user?.me?.mobile} onChange={(e:any) => {setMobile(e.target.value)}} type=\"text\"></Input>\n                           </FormControl>\n                           <Flex marginBottom=\"6vh\">\n                        <Select placeholder={user?.me?.college} marginRight=\"2vw\" value={college} onChange={(e:any) => {setCollege(e.target.value)}}>\n                            {\n                                colleges.map(o => {\n                                    return(\n                                        <option value={o[\"University\"]}>{o[\"University\"]}</option>\n                                    )\n                                })\n                            }\n                        </Select>\n                        <Select placeholder={user?.me?.department} value={branch} onChange={(e:any) => {setBranch(e.target.value)}}>\n                            {\n                                branches.map(b => {\n                                    return(\n                                        <option value={b}>{b}</option>\n                                    )\n                                })\n                            }\n                        </Select>\n                    </Flex>\n                    <FormControl marginBottom=\"4vh\">\n                        <FormLabel>Address</FormLabel>\n                        <Input type=\"text\" value={address} placeholder={user?.me?.address} onChange={(e:any) => {setAddress(e.target.value)}}></Input>\n                    </FormControl>\n                    <Flex marginBottom=\"6vh\">\n                        <Select placeholder={user?.me?.state} value={State} onChange={(e:any) => {setState(e.target.value)}}>\n                            {\n                                \n                                Object.keys(cities).map(s => {\n                                    return(<option value={s}>{s}</option>)\n                                })\n                            }\n                        </Select>\n                        <Select placeholder={user?.me?.city} marginLeft=\"2vw\" value={city} onChange={(e:any) => {setCity(e.target.value)}}>\n                            {\n                                user?.me?.state &&\n                                cities[user?.me?.state!].map(c => {\n                                    return(<option value={c}>{c}</option>)\n                                })\n                            }\n                        </Select>\n                    </Flex>\n                    <Flex width=\"100%\" justifyContent=\"space-between\" className=\"profile-button-flex\">\n                        <Button backgroundColor=\"#DB7171\" onClick={(e:any) => {e.preventDefault(); history.push('/forgotpassword')}}>Change password</Button>\n                        <Button backgroundColor=\"#9FDB71\"\n                            onClick={async (e:any) => {\n                                e.preventDefault();\n                                try\n                                {\n                                    await editProfileMutation({variables: {data:\n                                         {\n                                            name: name !=='' ? name! : user?.me?.name!, \n                                            college: college !== '' ? college! : user?.me?.college!, \n                                            state: State !== '' ? State! : user?.me?.state!,\n                                            city: city !== '' ? city! : user?.me?.city!,\n                                            email : email !== '' ? email! : user?.me?.email! , \n                                            address : address !== '' ? address! : user?.me?.address!,\n                                            department : branch !== '' ? branch! : user?.me?.department!, \n                                            mobile : mobile !== '' ? mobile! : user?.me?.mobile!\n\n                                        }}})\n                                }\n                                catch(err) {console.log(err)}\n                            }}\n                        >Submit changes</Button>\n                    </Flex>\n                        </Box>\n                    </Flex>\n                </Flex>\n            </Stack>    \n            <Footer designed={[{ name: 'Krithikaa', mail: 'be20b020@smail.iitm.ac.in' }]} ></Footer>      \n        </CustomBox>\n    )\n}\n\nexport default EditProfile;","/home/ubuntu/shaastra-general-website/src/components/pages/Policies/Privacy.tsx",[],"/home/ubuntu/shaastra-general-website/src/components/pages/Policies/TermsConditions.tsx",[],"/home/ubuntu/shaastra-general-website/src/components/pages/Policies/Shipping.tsx",[],"/home/ubuntu/shaastra-general-website/src/components/pages/Policies/Refund.tsx",[],"/home/ubuntu/shaastra-general-website/src/components/pages/Chess_blitz/ChessBlitz.tsx",["601","602","603","604","605","606","607","608"],"import React, { useEffect, useState } from \"react\";\nimport \"../../../styles/Chess.css\";\nimport Footer from \"../../shared/Footer\";\nimport CustomBox from \"../../shared/CustomBox\";\nimport { useColorModeValue } from \"@chakra-ui/color-mode\";\nimport {\n  RegisterChessMutation,\n  useCapturePaymentChessMutation,\n  useGetChessDetailsCsvQuery,\n  useRegisterChessMutation,\n} from \"../../../generated/graphql\";\nimport {\n  Modal,\n  ModalCloseButton,\n  ModalContent,\n  ModalHeader,\n  ModalOverlay,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport fileDownload from \"js-file-download\";\nimport dotenv from \"dotenv\";\nimport { FaTimes } from \"react-icons/fa\";\n\ndotenv.config();\n\nfunction loadScript(src: string) {\n  return new Promise((resolve) => {\n    const script = document.createElement(\"script\");\n    script.src = src;\n    script.onload = () => {\n      resolve(true);\n    };\n    script.onerror = () => {\n      resolve(false);\n    };\n    document.body.appendChild(script);\n  });\n}\n\nfunction ChessBlitz() {\n  const theme = useColorModeValue(\"white\", \"black\");\n  const [username, setUsername] = useState(\"\");\n  const [rating, setRating] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  var { isOpen, onOpen, onClose } = useDisclosure();\n\n  const [\n    regitserChess,\n    { loading: registerChessLoading, error: registerChessError },\n  ] = useRegisterChessMutation({\n    /******** On create order completion, open Razorpay ********/\n    async onCompleted(data) {\n      if (data.registerChess) {\n        await loadRazorpay(data);\n      }\n    },\n  });\n\n  const [\n    capturePaymentChessMutation,\n    {\n      data: capturePaymentData,\n      loading: capturePaymentLoading,\n      error: capturePaymentError,\n    },\n  ] = useCapturePaymentChessMutation();\n\n  const [popup, setPopup] = useState(false);\n  const [isAlert, setIsAlert] = useState({\n    isVisible: false,\n    message: \"\",\n  });\n\n  // const [regitserChess, { data, loading, error }] = useRegisterChessMutation();\n  const { data: data1 } = useGetChessDetailsCsvQuery();\n  const [isAdmin, setIsAdmin] = useState(false);\n  useEffect(() => {\n    if (localStorage.getItem(\"role\") === \"Admin\") {\n      setIsAdmin(true);\n    }\n  }, []);\n\n  /******** Callback Functions ********/\n  const loadRazorpay = async (data: RegisterChessMutation) => {\n    /******** Load Razorpay Script ********/\n    const res = await loadScript(\n      \"https://checkout.razorpay.com/v1/checkout.js\"\n    );\n    if (!res) {\n      alert(\"Razorpay SDK failed to load\");\n      return;\n    }\n\n    /******** Razorpay Options ********/\n    const options = {\n      key: process.env.REACT_APP_RAZORPAY_KEY,\n      amount: \"20000\",\n      currency: \"INR\",\n      name: \"BlitzChess\",\n      image: \"\", //TODO: Add the shaastra link here\n      order_id: data.registerChess.orderId,\n\n      /******** Handler function to update the payment details ********/\n      handler: async function (response: any) {\n        try {\n          await capturePaymentChessMutation({\n            variables: {\n              input: {\n                orderId: response.razorpay_order_id,\n                payementId: response.razorpay_payment_id,\n                paymentSignature: response.razorpay_signature,\n              },\n            },\n          });\n        } catch (e) {\n          console.log(e);\n        }\n      },\n      theme: {\n        color: \"#3399cc\",\n      },\n    };\n\n    /******** Open Razorpay ********/\n    const rzp1 = new (window as any).Razorpay(options);\n    rzp1.open();\n  };\n\n  const handleChessRegister = async (e) => {\n    e.preventDefault();\n    await regitserChess({\n      variables: {\n        data: {\n          username,\n          rating,\n          title,\n        },\n      },\n    }).catch((err) => console.log(err));\n  };\n\n  useEffect(() => {\n    if (registerChessLoading) {\n      setIsAlert({\n        isVisible: true,\n        message: \"Loading ...\",\n      });\n    }\n  }, [registerChessLoading]);\n\n  useEffect(() => {\n    if (capturePaymentLoading) {\n      setIsAlert({\n        isVisible: true,\n        message:\n          \"Don't close or reload the site, until you get the payment confirmation. Loading...\",\n      });\n    }\n  }, [capturePaymentLoading]);\n\n  useEffect(() => {\n    if (registerChessError) {\n      setIsAlert({\n        isVisible: true,\n        message: registerChessError.message,\n      });\n    }\n  }, [registerChessError]);\n\n  useEffect(() => {\n    if (capturePaymentError) {\n      setIsAlert({\n        isVisible: true,\n        message: \"Payment Failed\",\n      });\n    }\n  }, [capturePaymentError]);\n\n  useEffect(() => {\n    if (capturePaymentData?.capturePaymentChess) {\n      setIsAlert({\n        isVisible: true,\n        message: \"Registration Successful\",\n      });\n      setPopup(false);\n    }\n  }, [capturePaymentData]);\n\n  useEffect(() => {\n    let ticking;\n    if (isAlert.isVisible) {\n      ticking = setTimeout(() => {\n        setIsAlert({\n          isVisible: false,\n          message: \"\",\n        });\n      }, 5000);\n    }\n    return () => {\n      clearTimeout(ticking);\n    };\n  }, [isAlert]);\n\n  return (\n    <CustomBox>\n      <div className={`ChessBlitz ${theme}`}>\n        <div className=\"ChessBlitz_landing\">\n          <div className=\"contentBox\">\n            <h1>BLITZ CHESS</h1>\n            <h2>SHAASTRA 2022</h2>\n            <p>\n              This year, Shaastra, IIT Madras, is hosting the Online Blitz Open\n              Chess Championship! Last year's competition drew over 450 players\n              from all over the world, including several notable grand masters.\n              While we continue to fight the pandemic, we've chosen to hold the\n              event online again this year. The competition offers a total prize\n              pool of INR 85000, as well as various goodies. Don't miss out on\n              your chance to play in the year's largest online blitz tournament!\n            </p>\n            <button onClick={() => setPopup(true)}>Register now</button>\n          </div>\n        </div>\n        <div className=\"ChessBlitz_Overview\">\n          <div className=\"contentBox\">\n            <div className=\"card\">\n              <h4>Prize Money</h4>\n              <h2>\n                85k <span>+ Chess Premium Memberships</span>\n              </h2>\n            </div>\n            <div className=\"card\">\n              <h4>Registration Fee</h4>\n              <h2>INR 200</h2>\n            </div>\n            <div className=\"card\">\n              <h4>Event Date</h4>\n              <h2>\n                16th <span>January 2022</span>\n              </h2>\n            </div>\n            <div className=\"card\">\n              <h4>Event Time</h4>\n              <h2>9 AM - 12 PM</h2>\n            </div>\n            <div className=\"card\">\n              <h4>Format</h4>\n              <h2>\n                3 min + 1 sec <span>12 rounds, Swiss tournament</span>\n              </h2>\n            </div>\n            <div className=\"card\">\n              <h4>Platform</h4>\n              <h2>Chess.com</h2>\n            </div>\n          </div>\n        </div>\n        <div className=\"ChessBlitz_PrizeDistribution\">\n          <h2>Prize Distribution</h2>\n          <div className=\"main_category\">\n            <h4>Main Category : </h4>\n            <div className=\"cardBox\">\n              <div className=\"card\">\n                <h4>1st</h4>\n                <h3>Rs 20000</h3>\n              </div>\n              <div className=\"card\">\n                <h4>2nd</h4>\n                <h3>Rs 15000</h3>\n              </div>\n              <div className=\"card\">\n                <h4>3rd</h4>\n                <h3>Rs 10000</h3>\n              </div>\n              <div className=\"card\">\n                <h4>4th</h4>\n                <h3>Rs 5000</h3>\n              </div>\n              <div className=\"card\">\n                <h4>5th</h4>\n                <h3>Rs 3000</h3>\n              </div>\n              <div className=\"card\">\n                <h4>6th</h4>\n                <h3>Rs 1500</h3>\n              </div>\n              <div className=\"card\">\n                <h4>7th - 11th</h4>\n                <h3>Rs 1250</h3>\n              </div>\n              <div className=\"card\">\n                <h4>12th - 16th</h4>\n                <h3>Rs 1000</h3>\n              </div>\n              <div className=\"card\">\n                <h4>17th - 21st</h4>\n                <h3>Rs 750</h3>\n              </div>\n              <div className=\"card\">\n                <h4>22th - 25th</h4>\n                <h3>Rs 500</h3>\n              </div>\n            </div>\n          </div>\n          <div className=\"rated_category\">\n            <h4>Rated Categories : </h4>\n            <div className=\"twrapper\">\n              <table>\n                <tr>\n                  <td>Rank</td>\n                  <td>Unrated</td>\n                  <td>Below 1400</td>\n                  <td>1400 - 1600</td>\n                  <td>1600 - 1800</td>\n                </tr>\n                <tr>\n                  <td>1st</td>\n                  <td>1000</td>\n                  <td>1000</td>\n                  <td>1000</td>\n                  <td>1000</td>\n                </tr>\n                <tr>\n                  <td>2nd</td>\n                  <td>750</td>\n                  <td>750</td>\n                  <td>750</td>\n                  <td>750</td>\n                </tr>\n                <tr>\n                  <td>3rd</td>\n                  <td>500</td>\n                  <td>500</td>\n                  <td>500</td>\n                  <td>500</td>\n                </tr>\n              </table>\n            </div>\n          </div>\n          <div className=\"rated_category\">\n            <h4>Age Categories : </h4>\n            <div className=\"twrapper\">\n              <table>\n                <tr>\n                  <td>Rank</td>\n                  <td>U - 16</td>\n                  <td>U - 14</td>\n                  <td>U - 12</td>\n                  <td>U - 10</td>\n                </tr>\n                <tr>\n                  <td>1st</td>\n                  <td>2 months Chess.com subscription</td>\n                  <td>2 months Chess.com subscription</td>\n                  <td>2 months Chess.com subscription</td>\n                  <td>2 months Chess.com subscription</td>\n                </tr>\n                <tr>\n                  <td>2nd</td>\n                  <td>1 month Chess.com subscription</td>\n                  <td>1 month Chess.com subscription</td>\n                  <td>1 month Chess.com subscription</td>\n                  <td>1 month Chess.com subscription</td>\n                </tr>\n                <tr>\n                  <td>3rd</td>\n                  <td>1 month Chess.com subscription</td>\n                  <td>1 month Chess.com subscription</td>\n                  <td>1 month Chess.com subscription</td>\n                  <td>1 month Chess.com subscription</td>\n                </tr>\n              </table>\n            </div>\n          </div>\n          <div className=\"rated_category\">\n            {/* <h4>Other Categories : </h4> */}\n            <div className=\"twrapper\">\n              <table>\n                <tr>\n                  <td>Rank</td>\n                  <td>Best Woman</td>\n                  <td>Best Veteran</td>\n                  <td>Best IITM</td>\n                </tr>\n                <tr>\n                  <td>1st</td>\n                  <td>1000</td>\n                  <td>1000</td>\n                  <td>1000</td>\n                </tr>\n                <tr>\n                  <td>2nd</td>\n                  <td>750</td>\n                  <td>750</td>\n                  <td>2 months Chess.com subscription</td>\n                </tr>\n              </table>\n            </div>\n          </div>\n        </div>\n        <div className=\"ChessBlitz_Contact\">\n          <h2>Contact</h2>\n          <div className=\"ContactBox\">\n            <div className=\"emailBox\">\n              <h4>Email</h4>\n              <p>rapidchess@shaastra.org</p>\n            </div>\n            <div className=\"emailBox\">\n              <h4>Phone</h4>\n              <p>\n                <span>Shyam Sundar PB : </span>\n                <span>+91 7397259369</span>\n              </p>\n              <p>\n                <span>Aditya S Sadhu : </span>\n                <span>+91 9566129422</span>\n              </p>\n            </div>\n          </div>\n        </div>\n        <Footer\n          designed={[{ name: \"Rohit\", mail: \"cs19b038@smail.iitm.ac.in\" }]}\n        />\n        <div className={popup ? \"ChessBlitz_Popup active\" : \"ChessBlitz_Popup\"}>\n          <div className=\"formWrapper\">\n            <button className=\"closeBtn\" onClick={() => setPopup(false)}>\n              <FaTimes />\n            </button>\n            <form onSubmit={handleChessRegister}>\n              <h2>Register</h2>\n              <label>Chess.com Username</label>\n              <input\n                type=\"text\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n              />\n              <label>FIDE Rating {\"(optional)\"}</label>\n              <input\n                type=\"text\"\n                value={rating}\n                onChange={(e) => setRating(e.target.value)}\n              />\n              <label>FIDE Title {\"(optional)\"}</label>\n              <input\n                type=\"text\"\n                value={title}\n                onChange={(e) => setTitle(e.target.value)}\n              />\n              <button type=\"submit\">Register</button>\n            </form>\n            {isAdmin === true ? (\n              <button\n                style={{\n                  padding: \"7px 24px\",\n                  width: \"fit-content\",\n                  backgroundColor: \"#311c1b\",\n                  borderRadius: \"4px\",\n                }}\n                onClick={() => {\n                  fileDownload(\n                    data1?.getChessDetailsCSV!,\n                    `BlitzChess_regristants.csv`\n                  );\n                }}\n              >\n                Download Users Data CSV\n              </button>\n            ) : null}\n          </div>\n        </div>\n        <div\n          className={`AlertPopupsContainer ${\n            isAlert.isVisible ? \"active\" : \"\"\n          }`}\n        >\n          <button\n            onClick={() => {\n              setIsAlert({\n                isVisible: false,\n                message: \"\",\n              });\n            }}\n          >\n            <FaTimes />\n          </button>\n          <div className=\"alertBox\">{isAlert.message}</div>\n        </div>\n      </div>\n    </CustomBox>\n  );\n}\n\nexport default ChessBlitz;\n","/home/ubuntu/shaastra-general-website/src/components/pages/Home.tsx",["609","610","611","612","613","614","615","616","617","618","619","620","621","622","623","624","625","626","627","628","629","630","631","632","633","634"],"import * as React from \"react\";\nimport { Text, VStack, Code, useColorModeValue, Flex } from \"@chakra-ui/react\";\nimport { ReactComponent as DiceOutlineDarkAnimated } from \"./../../images/logo/animated/non-looped/Text_Outline_Dark_animated.svg\";\nimport { ReactComponent as DiceOutlineLightAnimated } from \"./../../images/logo/animated/non-looped/Text_Outline_Light_animated.svg\";\nimport \"../../styles/Home.css\";\nimport CustomBox from \"../shared/CustomBox\";\nimport {\n  FaLinkedin,\n  FaInstagram,\n  FaYoutubeSquare,\n  FaYoutube,\n} from \"react-icons/fa\";\nimport SwiperCore, { Navigation, Pagination } from \"swiper\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport \"swiper/swiper.min.css\";\nimport \"swiper/components/navigation/navigation.min.css\";\nimport \"swiper/components/pagination/pagination.min.css\";\nimport \"swiper/swiper-bundle\";\nimport \"swiper/swiper-bundle.esm.browser\";\nimport { Link,withRouter } from \"react-router-dom\";\nimport prevArrow from \"../../images/prevArrow.svg\";\nimport robos1 from \"../../images/homepage_illustrations/ROBOS.png\";\nimport robo1 from \"../../images/homepage_illustrations/big.png\";\nimport robo2 from \"../../images/homepage_illustrations/small ribi.png\";\nimport barish from \"../../images/barish.jpg\";\nimport John_hennessy from \"../../images/John_hennessy.jpg\";\nimport das_nobel from \"../../images/das_nobel.jpeg\";\nimport Raghuram_Rajan from \"../../images/Raghuram_Rajan.jpg\";\nimport Footer from \"../shared/Footer\";\nimport Event1 from \"../../images/events_1.jpg\";\nimport Event2 from \"../../images/events_2.jpg\";\nimport Event3 from \"../../images/events_3.jpg\";\nimport Event4 from \"../../images/events_4.jpg\";\nimport Workshop1 from \"../../images/workshop_1.jpg\";\nimport Workshop2 from \"../../images/workshop_2.jpg\";\nimport Workshop3 from \"../../images/workshop_3.jpg\";\n// import codetochaos1 from \"../../images/logo/static/codetochaos.svg\";\nimport codetochaos1 from \"../../images/logo/static/codetochaos2.svg\";\nimport codetochaos2 from \"../../images/logo/static/codetochaos2.svg\";\nimport hero_logo from \"../../images/white-ILU.png\";\nimport Dan from \"../../images/night/Dan_img.jpg\";\nimport Gloves from \"../../images/night/Gloves02.jpg\";\nimport Harmony from \"../../images/night/Harmony-SonicSnares-2.jpg\";\nimport Heimdall from \"../../images/night/Heimdall1.jpg\";\nimport Mirage from \"../../images/night/Mirage.jpg\";\nimport Nothwind from \"../../images/night/Nothwind1.jpg\";\nimport Vivek from \"../../images/night/vivek patil.jpg\";\nimport Reverb from \"../../images/night/Reverb.jpg\";\nimport Soda from \"../../images/night/Comedy Night.jpeg\";\nimport Kenny from \"../../images/night/Kenny Sebastian.jpg\";\nimport Maraiana from \"../../images/night/Mariana bo.jpg\";\nimport Adeleida from \"../../images/night/Adelaida.jpg\";\nimport SuhaniPresent from \"../../images/night/Suhani.jpg\";\nimport Biswa from \"../../images/night/Biswa.jpg\";\nimport StefanHell from \"../../images/Speaker/newSpeakers/Stefan_W_Hell.jpg\";\nimport Andrew from \"../../images/Speaker/newSpeakers/andrew.jpg\";\nimport CarolinaFernando from \"../../images/Speaker/newSpeakers/CAROLINA_FERNANDO_RIVAS.jpg\";\nimport JaneGoodall from \"../../images/Speaker/newSpeakers/JaneGoodall.jpg\";\nimport Mbanzi from \"../../images/Speaker/newSpeakers/mbanzi.jpg\";\nimport Patterson from \"../../images/Speaker/newSpeakers/patterson.jpg\";\nimport RameshChandraLahoti from \"../../images/Speaker/newSpeakers/RameshChandraLahoti.jpg\";\nimport ShashiTharoor from \"../../images/Speaker/newSpeakers/ShashiTharoor.jpg\";\nimport VinodDham from \"../../images/Speaker/newSpeakers/VinodDham.jpg\";\nimport Wineland from \"../../images/Speaker/newSpeakers/wineland.jpg\";\nimport ReactGA from 'react-ga';\nconst TRACKING_ID = \"UA-216942538-1\"; // YOUR_OWN_TRACKING_ID\nReactGA.initialize(TRACKING_ID);\n\n\n\ninterface Props {}\n\nSwiperCore.use([Navigation, Pagination]);\n\nconst Home = (props: Props) => {\n  const Logo = useColorModeValue(\n    DiceOutlineDarkAnimated,\n    DiceOutlineLightAnimated\n  );\n\n  React.useEffect(()=>{\n    ReactGA.pageview(window.location.pathname + window.location.search);\n\n  });\n\n  const speakersData = [\n    {\n      \"Speaker Name\": \"Dr. Shashi Tharoor\",\n      Credentials:\n        \"Hon'ble Member of Parliament, Chairman of Parliamentary Standing Committee on IT, Renowned Author\",\n      Date: \"15th January\",\n      Time: \"6:00 PM IST\",\n      \"Youtube Link\": \"https://youtu.be/16Jm_IaSyp4\",\n      \"Photo Link\": ShashiTharoor,\n    },\n    {\n      \"Speaker Name\": \"Carolina Marin & Fernando Rivas\",\n      Credentials:\n        \"Rio Olympics Gold Medallist, Former Badminton World Champion with her coach\",\n      Date: \"15th January\",\n      Time: \"4:30 PM IST\",\n      \"Youtube Link\": \"https://youtu.be/bQjeawwtUqM\",\n      \"Photo Link\": CarolinaFernando,\n    },\n    {\n      \"Speaker Name\": \"Dr. Jane Goodall, DBE\",\n      Credentials:\n        \"Renowned Ethologist and Conservationist, Founder of the Jane Goodall Institute & UN Messenger of Peace\",\n      Date: \"13th January\",\n      Time: \"4:30 PM IST\",\n      \"Youtube Link\": \"https://youtu.be/ggGzYj57vpE\",\n      \"Photo Link\": JaneGoodall,\n    },\n    {\n      \"Speaker Name\": \"Dr. David Patterson\",\n      Credentials:\n        \"Renowned Computer Scientist, Vice Chair of RISC-V Foundation, Turing Awardee 2017\",\n      Date: \"14th January\",\n      Time: \"9:00 AM IST\",\n      \"Youtube Link\": \"https://youtu.be/0TdUz4AhaZ0\",\n      \"Photo Link\": Patterson,\n    },\n    {\n      \"Speaker Name\": \"Dr. David Wineland\",\n      Credentials: \"Nobel Prize in Physics, 2012\",\n      Date: \"15th January\",\n      Time: \"9:00 AM IST\",\n      \"Youtube Link\": \"https://youtu.be/rvN7nbbmuow\",\n      \"Photo Link\": Wineland,\n    },\n    {\n      \"Speaker Name\": \"Mr. Vinod Dham\",\n      Credentials:\n        'Father of the Pentium Chip\", Founder Managing Director, Indo-US Venture Capitals',\n      Date: \"16th January\",\n      Time: \"10:00 AM IST\",\n      \"Youtube Link\": \"https://youtu.be/yzSIH337kvg\",\n      \"Photo Link\": VinodDham,\n    },\n    {\n      \"Speaker Name\": \"Mr. Massimo Banzi\",\n      Credentials: \"Co Founder, Arduino\",\n      Date: \"14th January\",\n      Time: \"1:00 PM IST\",\n      \"Youtube Link\": \"https://youtu.be/i301BBMjmQw\",\n      \"Photo Link\": Mbanzi,\n    },\n    {\n      \"Speaker Name\": \"Dr. Stefan Hell\",\n      Credentials: \"Nobel Prize in Chemistry, 2014\",\n      Date: \"13th January\",\n      Time: \"3:30 PM IST\",\n      \"Youtube Link\": \"https://youtu.be/2dQWJ7KHfWM\",\n      \"Photo Link\": StefanHell,\n    },\n    {\n      \"Speaker Name\": \"Mr. Andrew Weinreich\",\n      Credentials: \"Founder of SixDegrees, the first social networking site\",\n      Date: \"16th January\",\n      Time: \"5:30 PM IST\",\n      \"Youtube Link\": \"https://youtu.be/kY5pWK24MRs\",\n      \"Photo Link\": Andrew,\n    },\n    {\n      \"Speaker Name\": \"Hon'ble Justice R.C. Lahoti\",\n      Credentials: \"Former Chief Justice of India\",\n      Date: \"14th January\",\n      Time: \"3:00 PM IST\",\n      \"Youtube Link\": \"https://youtu.be/al7Wn98g5tI\",\n      \"Photo Link\": RameshChandraLahoti,\n    },\n  ];\n\n  const plain = useColorModeValue(\"black\", \"white\");\n  const codetochoas = useColorModeValue(codetochaos1, codetochaos2);\n\n  const [sideNavBar_marker, setSideNavBar_marker] = React.useState<number>(\n    190 / 8\n  );\n\n  const update_sidenav_marker = (e) => {\n    var screenWidthSpacing = (window.innerWidth - 150) / 6;\n\n    if (\n      e.target.scrollTop < window.innerHeight - 20 &&\n      e.target.scrollTop >= 0\n    ) {\n      if (window.innerWidth > 600) {\n        setSideNavBar_marker(190 / 8 + 0 * (190 / 8 + 30));\n      } else {\n        setSideNavBar_marker(screenWidthSpacing - 5);\n      }\n    } else if (\n      e.target.scrollTop < 2 * window.innerHeight - 20 &&\n      e.target.scrollTop >= window.innerHeight - 20\n    )\n      if (window.innerWidth > 600)\n        setSideNavBar_marker(190 / 8 + 1 * (190 / 8 + 30));\n      else\n        setSideNavBar_marker(\n          screenWidthSpacing - 5 + 1 * (screenWidthSpacing + 30)\n        );\n    else if (\n      e.target.scrollTop < 3 * window.innerHeight - 20 &&\n      e.target.scrollTop >= 2 * window.innerHeight - 20\n    )\n      if (window.innerWidth > 600)\n        setSideNavBar_marker(190 / 8 + 2 * (190 / 8 + 30));\n      else\n        setSideNavBar_marker(\n          screenWidthSpacing - 5 + 2 * (screenWidthSpacing + 30)\n        );\n    else if (\n      e.target.scrollTop < 4 * window.innerHeight - 20 &&\n      e.target.scrollTop >= 3 * window.innerHeight - 20\n    )\n      if (window.innerWidth > 600)\n        setSideNavBar_marker(190 / 8 + 3 * (190 / 8 + 30));\n      else\n        setSideNavBar_marker(\n          screenWidthSpacing - 5 + 3 * (screenWidthSpacing + 30)\n        );\n    else if (\n      e.target.scrollTop < 5 * window.innerHeight - 20 &&\n      e.target.scrollTop >= 4 * window.innerHeight - 20\n    )\n      if (window.innerWidth > 600)\n        setSideNavBar_marker(190 / 8 + 4 * (190 / 8 + 30));\n      else\n        setSideNavBar_marker(\n          screenWidthSpacing - 5 + 4 * (screenWidthSpacing + 30)\n        );\n    else if (\n      e.target.scrollTop < 6 * window.innerHeight - 20 &&\n      e.target.scrollTop >= 5 * window.innerHeight - 20\n    )\n      if (window.innerWidth > 600)\n        setSideNavBar_marker(190 / 8 + 5 * (190 / 8 + 30));\n      else\n        setSideNavBar_marker(\n          screenWidthSpacing - 5 + 5 * (screenWidthSpacing + 30)\n        );\n    else if (\n      e.target.scrollTop < 7 * window.innerHeight - 20 &&\n      e.target.scrollTop >= 6 * window.innerHeight - 20\n    )\n      if (window.innerWidth > 600)\n        setSideNavBar_marker(190 / 8 + 6 * (190 / 8 + 30));\n      else\n        setSideNavBar_marker(\n          screenWidthSpacing - 5 + 5 * (screenWidthSpacing + 30)\n        );\n  };\n\n  const speaker_navigationPrevRef = React.useRef(null);\n  const speaker_navigationNextRef = React.useRef(null);\n  const speaker_paginationRef = React.useRef(null);\n  const shows_navigationPrevRef = React.useRef(null);\n  const shows_navigationNextRef = React.useRef(null);\n  const shows_paginationRef = React.useRef(null);\n  const events_navigationPrevRef = React.useRef(null);\n  const events_navigationNextRef = React.useRef(null);\n  const events_paginationRef = React.useRef(null);\n\n  const [scrollLeft, setScrollLeft] = React.useState({\n    left: 0,\n    right: 100,\n  });\n\n  const calculateTimeLeft = () => {\n    let difference = +new Date(`1/13/2022 0:0`) - +new Date();\n    let timeLeft = { days: 0, hrs: 0, mins: 0, secs: 0 };\n\n    if (difference > 0) {\n      timeLeft = {\n        days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n        hrs: Math.floor((difference / (1000 * 60 * 60)) % 24),\n        mins: Math.floor((difference / 1000 / 60) % 60),\n        secs: Math.floor((difference / 1000) % 60),\n      };\n    }\n\n    return timeLeft;\n  };\n  const [time, setTime] = React.useState<{\n    days: number;\n    hrs: number;\n    mins: number;\n    secs: number;\n  }>({\n    days: 0,\n    hrs: 0,\n    mins: 0,\n    secs: 0,\n  });\n\n  React.useEffect(() => {\n    setInterval(() => setTime(calculateTimeLeft()), 1000);\n  }, []);\n\n  return (\n    <CustomBox>\n      {/* <script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-216942538-1\"></script>\n      <script>\n        window.dataLayer = window.dataLayer || [];\n        function gtag(){dataLayer.push(arguments);}\n        gtag('js', new Date());\n\n        gtag('config', 'UA-216942538-1');\n      </script> */}\n      <div onScroll={update_sidenav_marker} className={`Home ${plain}`}>\n        <div\n          style={\n            window.innerWidth > 600 ? { display: \"flex\" } : { display: \"none\" }\n          }\n          className={`Home_sideNavBar ${plain}`}\n        >\n          <span\n            className=\"Home_sideNavBar_marker\"\n            style={\n              window.innerWidth > 600\n                ? {\n                    top: sideNavBar_marker,\n                  }\n                : {\n                    left: sideNavBar_marker,\n                  }\n            }\n          ></span>\n          <a href=\"#landing_page\">\n            <span>01</span>\n          </a>\n          <a href=\"#hero_section\">\n            <span>02</span>\n          </a>\n          <a href=\"#who_are_we\">\n            <span>03</span>\n          </a>\n          <a href=\"#workshop_events\">\n            <span>04</span>\n          </a>\n          <a href=\"#speakers\">\n            <span>05</span>\n          </a>\n          <a href=\"#pastshows\">\n            <span>06</span>\n          </a>\n          <a href=\"#testimonials\">\n            <span>07</span>\n          </a>\n        </div>\n        <section\n          id=\"landing_page\"\n          style={{\n            backgroundPosition: `calc(100% + ${\n              window.innerWidth < 800 ? 800 - window.innerWidth : 0\n            }) 50%`,\n          }}\n          className={`Home_landingPage ${plain}`}\n        >\n          <div className=\"ContentBox\">\n            <h1>SHAASTRA 2022</h1>\n            <div className=\"Theme\">\n              <h3 id=\"theme_name\">CODE TO CHAOS</h3>\n              <p id=\"themeDate\">\n                13th <span id=\"dash\"></span> 16th January\n              </p>\n            </div>\n            {/* <h3 id=\"salesLink\">\n              Mayhem Combo Offer\n              <br />\n              <a\n                href=\"https://www.shaastra.org/events/workshops\"\n                style={{ color: \"#FFFF00\", fontWeight: \"bold\" }}\n              >\n                WORKSHOPS\n              </a>\n              &nbsp;&&nbsp;\n              <a\n                href=\"https://sales.shaastra.org/\"\n                target=\"_blank\"\n                style={{ color: \"#FFB6C1\", fontWeight: \"bold\" }}\n              >\n                SALES\n              </a>\n              <br />\n              Limited seats available!!\n              <br />\n              Offer available until 12th January\n            </h3> */}\n            {/* <h3 id=\"salesLink\" style={{ marginTop: \"5px\" }}>\n              for&nbsp;\n            </h3> */}\n             <a href=\"https://shaastra2022.com\">Live Now</a>\n          </div>\n          <div className=\"imgBox\">\n            <img src={robos1} alt=\"\" />\n          </div>\n          {window.innerWidth > 600 ? (\n            <span className=\"Home_scroll_btn\">\n              <span></span>\n            </span>\n          ) : (\n            <></>\n          )}\n\n          <div className=\"Follow\">\n            <p>FOLLOW US</p>\n            <span></span>\n            <a\n              target=\"_blank\"\n              href=\"https://www.instagram.com/shaastra_iitm/?hl=en\"\n            >\n              <FaInstagram />\n            </a>\n            <span></span>\n            <a\n              target=\"_blank\"\n              href=\"https://www.linkedin.com/company/shaastra-iit-madras/?originalSubdomain=in\"\n            >\n              <FaLinkedin />\n            </a>\n            <span></span>\n            <a\n              target=\"_blank\"\n              href=\"https://www.youtube.com/channel/UCgY2ugmW-BV2nMRFu-0qPZA\"\n            >\n              <FaYoutubeSquare />\n            </a>\n            <span></span>\n            <a\n              target=\"_blank\"\n              href=\"https://forms.gle/JHqGdgWeUVLm6hwR8\"\n            >\n              Feedback\n            </a>\n\n            {window.innerWidth > 600 ? <span></span> : <></>}\n          </div>\n        </section>\n        <section id=\"hero_section\" className=\"Home_HeroPage\">\n          <div className=\"imgBox\">\n            <img src={hero_logo} alt=\"\" />\n          </div>\n          <div className=\"countdown\">\n            <div className=\"card\">\n              <div className=\"card-top\" id=\"days\">\n                {time.days}\n              </div>\n              <div className=\"card-bottom\">\n                <p>DAYS</p>\n              </div>\n            </div>\n            <span></span>\n            <div className=\"card\">\n              <div className=\"card-top\" id=\"hours\">\n                {time.hrs}\n              </div>\n              <div className=\"card-bottom\">\n                <p>HOURS</p>\n              </div>\n            </div>\n            <span></span>\n            <div className=\"card\">\n              <div className=\"card-top\" id=\"mins\">\n                {time.mins}\n              </div>\n              <div className=\"card-bottom\">\n                <p>MINS</p>\n              </div>\n            </div>\n            <span></span>\n            <div className=\"card\">\n              <div className=\"card-top\" id=\"secs\">\n                {time.secs}\n              </div>\n              <div className=\"card-bottom\">\n                <p>SECS</p>\n              </div>\n            </div>\n          </div>\n          {localStorage.getItem(\"role\") !== \"Admin\" &&\n              localStorage.getItem(\"role\") !== \"User\" && (\n                <a target=\"_blank\" href=\"/signup\">Register</a>\n              )}\n        </section>\n        <section id=\"who_are_we\" className=\"Home_whoAreWe\">\n          <img id=\"who_are_we_robo1\" src={robo1} alt=\"\" />\n          <img id=\"who_are_we_robo2\" src={robo2} alt=\"\" />\n          <h1 id=\"heading\">Who Are We?</h1>\n          <p id=\"text\">\n            Shaastra is the annual technical festival of the Indian Institute of\n            Technology Madras (IITM), Chennai, India.\n            <br />\n            <br />\n            The Sanskrit word ‘Shaastra’ means science and the festival\n            accordingly consists of various engineering, science, and technology\n            competitions, summits, lectures, video conferences, exhibitions,\n            demonstrations and workshops. The festival is traditionally held\n            over four days and four nights during the first week of January. It\n            has so far seen twenty-one editions, having started in its current\n            avatar in the year 2000.\n            <br />\n            <br />\n            Shaastra is entirely student-managed and is the first such event in\n            the world to be ISO 9001:2015 certified.\n          </p>\n        </section>\n        <section\n          id=\"workshop_events\"\n          className={`Home_WorkshopsEvents ${plain}`}\n        >\n          <h1>Past Workshops & Events</h1>\n          <div className=\"speaker_swiper_container\">\n            <div className=\"swiper-prev-con\" ref={events_navigationPrevRef}>\n              <img src={prevArrow} alt=\"\" />\n            </div>\n            <Swiper\n              spaceBetween={window.innerWidth > 600 ? 50 : 0}\n              navigation={{\n                prevEl: events_navigationPrevRef.current,\n                nextEl: events_navigationNextRef.current,\n              }}\n              loop={true}\n              pagination={\n                window.innerWidth < 600\n                  ? {\n                      el: events_paginationRef.current,\n                      clickable: true,\n                    }\n                  : false\n              }\n              slidesPerView={window.innerWidth > 600 ? \"auto\" : 1}\n            >\n              <SwiperSlide>\n                <img src={Workshop1} alt=\"\" />\n              </SwiperSlide>\n              <SwiperSlide>\n                <img src={Event1} alt=\"\" />\n              </SwiperSlide>\n              <SwiperSlide>\n                <img src={Workshop2} alt=\"\" />\n              </SwiperSlide>\n              <SwiperSlide>\n                <img src={Event2} alt=\"\" />\n              </SwiperSlide>\n              <SwiperSlide>\n                <img src={Workshop3} alt=\"\" />\n              </SwiperSlide>\n              <SwiperSlide>\n                <img src={Event3} alt=\"\" />\n              </SwiperSlide>\n              <SwiperSlide>\n                <img src={Event4} alt=\"\" />\n              </SwiperSlide>\n            </Swiper>\n            <div className=\"swiper-next-con\" ref={events_navigationNextRef}>\n              <img src={prevArrow} alt=\"\" />\n            </div>\n            <div className=\"swiper-pagination\" ref={events_paginationRef}></div>\n          </div>\n          {window.innerHeight > 300 ? (\n            <div className=\"swiperControllers\">\n              {/* <div className=\"swiper-prev-con\" ref={events_navigationPrevRef}>\n                <img src={prevArrow} alt=\"\" />\n              </div> */}\n              {/* <div\n                className=\"swiper-pagination\"\n                ref={events_paginationRef}\n              ></div> */}\n              {/* <div className=\"swiper-next-con\" ref={events_navigationNextRef}>\n                <img src={prevArrow} alt=\"\" />\n              </div> */}\n            </div>\n          ) : (\n            \"Swipe right ->\"\n          )}\n        </section>\n        <section id=\"speakers\" className={`Home_Speakers ${plain}`}>\n          <h1 className={`${plain}`}>Speakers</h1>\n          <div className={`speaker_swiper_container`}>\n            <div className=\"swiper-prev-con\" ref={speaker_navigationPrevRef}>\n              <img src={prevArrow} alt=\"\" />\n            </div>\n            <Swiper\n              spaceBetween={50}\n              navigation={{\n                prevEl: speaker_navigationPrevRef.current,\n                nextEl: speaker_navigationNextRef.current,\n              }}\n              loop={true}\n              pagination={\n                window.innerWidth < 600\n                  ? {\n                      el: speaker_paginationRef.current,\n                      clickable: true,\n                    }\n                  : false\n              }\n              slidesPerView={\"auto\"}\n            >\n              {speakersData.map((speaker) => (\n                <SwiperSlide>\n                  <img\n                    src={speaker[\"Photo Link\"]}\n                    alt={speaker[\"Speaker Name\"]}\n                  />\n                  <div className=\"contentBox\">\n                    <div className=\"left\">\n                      <h3>{speaker[\"Speaker Name\"]}</h3>\n                      <p>{speaker[\"Credentials\"]}</p>\n                    </div>\n                    <a target=\"_blank\" href={speaker[\"Youtube Link\"]}>\n                      <FaYoutube />\n                    </a>\n                  </div>\n                </SwiperSlide>\n              ))}\n            </Swiper>\n            <div className=\"swiper-next-con\" ref={speaker_navigationNextRef}>\n              <img src={prevArrow} alt=\"\" />\n            </div>\n            <div\n              className=\"swiper-pagination\"\n              ref={speaker_paginationRef}\n            ></div>\n          </div>\n        </section>\n        <section id=\"pastshows\" className={`Home_Speakers ${plain}`}>\n          <h1 className={`${plain}`}>Shows</h1>\n          <div className=\"Home_speakers_card_container\">\n            <div className=\"Home_speakers_card\">\n              <img src={Biswa} alt=\"\" style={{ objectFit: \"cover\" }} />\n              <div className=\"contentBox\">\n                <h3>Biswa Kalyan Rath</h3>\n                <p>\n                  CHAOS <span></span> Shaastra 2022\n                </p>\n              </div>\n            </div>\n            <div className=\"Home_speakers_card\">\n              <img src={SuhaniPresent} alt=\"\" style={{ objectFit: \"cover\" }} />\n              <div className=\"contentBox\">\n                <h3>Suhani Shah</h3>\n                <p>\n                  SPECTRE <span></span> Shaastra 2022\n                </p>\n              </div>\n            </div>\n          </div>\n          {/* <div className={`speaker_swiper_container`}>\n            <div className=\"swiper-prev-con\" ref={shows_navigationPrevRef}>\n              <img src={prevArrow} alt=\"\" />\n            </div>\n            <Swiper\n              spaceBetween={50}\n              navigation={{\n                prevEl: shows_navigationPrevRef.current,\n                nextEl: shows_navigationNextRef.current,\n              }}\n              loop={true}\n              pagination={\n                window.innerWidth < 600\n                  ? {\n                      el: shows_paginationRef.current,\n                      clickable: true,\n                    }\n                  : false\n              }\n              slidesPerView={\"auto\"}\n            >\n              \n                <SwiperSlide>\n                  <img src={Kenny} alt=\"\" style={{ objectFit: \"cover\" }} />\n                  <div className=\"contentBox\">\n                    <div className=\"left\">\n                      <h3>Kenny Sebastian</h3>\n                      <p>CHAOS</p>\n                      <p>Shaastra 2021</p>\n                    </div>\n                  </div>\n                </SwiperSlide>\n                <SwiperSlide>\n                  <img\n                    src={Harmony}\n                    alt=\"\"\n                    style={{ objectFit: \"contain\", background: \"#000\" }}\n                  />\n                  <div className=\"contentBox\">\n                    <div className=\"left\">\n                      <h3>Sonic Snares</h3>\n                      <p>HARMONY</p>\n                      <p>Shaastra 2021</p>\n                    </div>\n                  </div>\n                </SwiperSlide>\n                <SwiperSlide>\n                  <img src={Dan} alt=\"\" style={{ objectFit: \"cover\" }} />\n                  <div className=\"contentBox\">\n                    <div className=\"left\">\n                      <h3>Dan Rhodes</h3>\n                      <p>Virtual Magic Show</p>\n                      <p>Shaastra Juniors 2020</p>\n                    </div>\n                  </div>\n                </SwiperSlide>\n                <SwiperSlide>\n                  <img src={Heimdall} alt=\"\" style={{ objectFit: \"cover\" }} />\n                  <div className=\"contentBox\">\n                    <div className=\"left\">\n                      <h3>Heimdall</h3>\n                      <p>LASER HARP Live Performance </p>\n                      <p>Shaastra 2020</p>\n                    </div>\n                  </div>\n                </SwiperSlide>\n                <SwiperSlide>\n                  <img src={Maraiana} alt=\"\" style={{ objectFit: \"cover\" }} />\n                  <div className=\"contentBox\">\n                    <div className=\"left\">\n                      <h3>Mariana BO</h3>\n                      <p>EDM Night</p>\n                      <p>Shaastra 2018</p>\n                    </div>\n                  </div>\n                </SwiperSlide>\n                <SwiperSlide>\n                  <img src={Adeleida} alt=\"\" style={{ objectFit: \"cover\" }} />\n                  <div className=\"contentBox\">\n                    <div className=\"left\">\n                      <h3>Adelaida</h3>\n                      <p>LED & NEON Show</p>\n                      <p>Shaastra 2016</p>\n                    </div>\n                  </div>\n                </SwiperSlide>\n            </Swiper>\n            <div className=\"swiper-next-con\" ref={shows_navigationNextRef}>\n              <img src={prevArrow} alt=\"\" />\n            </div>\n            <div className=\"swiper-pagination\" ref={shows_paginationRef}></div>\n          </div> */}\n          <Link to=\"/shows\">SEE MORE</Link>\n        </section>\n        <section id=\"testimonials\" className={`Home_Testimonials ${plain}`}>\n          <h1>Testimonials</h1>\n          <div\n            className={`testimonial_card_container ${plain}`}\n            onScroll={(e: any) => {\n              window.innerWidth < 600 &&\n                setScrollLeft({\n                  left: e.target.scrollLeft,\n                  right: 990 - e.target.scrollLeft,\n                });\n            }}\n          >\n            <div className={`testimonialWrapper ${plain}`}>\n              <div className=\"testimonial_card_cover\">\n                <div className={`testimonial_card ${plain}`}>\n                  <p>\n                    It was a great privilege and honor to participate in\n                    Shaastra 2021. Science has no borders and sharing the\n                    knowledge of scientific advances is a joy, especially to a\n                    talented and appreciative audience, like for Shaastra.\n                  </p>\n                  <div className=\"profile\">\n                    <div className=\"imgBox\">\n                      <img src={barish} alt=\"\" />\n                    </div>\n                    <div className=\"contentBox\">\n                      <h3>Dr. Barry Barish</h3>\n                      <p>Nobel Prize in Physics, 2017</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"testimonial_card_cover\">\n                <div className={`testimonial_card ${plain}`}>\n                  <p>\n                    Thanks to the team at Shaastra 2021 for organizing a\n                    terrific event. I enjoyed the interview and a special thanks\n                    to the interviewer who did such an excellent job preparing.\n                    Thanks to the IIT madras students who asked excellent\n                    questions.\n                  </p>\n                  <div className=\"profile\">\n                    <div className=\"imgBox\">\n                      <img src={John_hennessy} alt=\"\" />\n                    </div>\n                    <div className=\"contentBox\">\n                      <h3>Dr. John Hennessy</h3>\n                      <p>Chairman, Alphabet Inc., Turing Awardee</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"testimonial_card_cover\">\n                <div className={`testimonial_card ${plain}`}>\n                  <p>\n                    It was an honor to connect with students from the IIT\n                    campuses especially from Indian Institute of Technology,\n                    Madras. Thank you for hosting me. Our Maverick Quantum AI\n                    team is committed to hiring 500 IITians in the next 3 years.\n                  </p>\n                  <div className=\"profile\">\n                    <div className=\"imgBox\">\n                      <img src={das_nobel} alt=\"\" />\n                    </div>\n                    <div className=\"contentBox\">\n                      <h3>Das Nobel</h3>\n                      <p>Founder & CEO at MTX Group</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"testimonial_card_cover\">\n                <div className={`testimonial_card ${plain}`}>\n                  <p>\n                    I spoke to the students at IIT Madras on a range of issues.\n                    I was impessed with how prepared they were. This is so\n                    refreshingly different from my student days. We are making\n                    progress !\n                  </p>\n                  <div className=\"profile\">\n                    <div className=\"imgBox\">\n                      <img src={Raghuram_Rajan} alt=\"\" />\n                    </div>\n                    <div className=\"contentBox\">\n                      <h3>Raghuram Rajan</h3>\n                      <p>Former Governor of the Reserve Bank of India</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          {window.innerWidth < 600 ? (\n            <>\n              <span\n                id=\"scrollLeft\"\n                style={scrollLeft.left < 50 ? { opacity: 1 } : { opacity: 0 }}\n              >\n                {scrollLeft.left < 50 ? \"Swipe right ->\" : \"\"}\n              </span>\n              <span\n                id=\"scrollLeft\"\n                style={scrollLeft.right < 50 ? { opacity: 1 } : { opacity: 0 }}\n              >\n                {scrollLeft.right < 50 ? \"<- Swipe left\" : \"\"}\n              </span>\n            </>\n          ) : (\n            <></>\n          )}\n        </section>\n        <Footer\n          designed={[\n            { name: \"Rohit\", mail: \"cs19b038@smail.iitm.ac.in\" },\n            { name: \"Krithikaa\", mail: \"be20b020@smail.iitm.ac.in\" },\n            { name: \"Yogesh\", mail: \"bs19b034@smail.iitm.ac.in\" },\n          ]}\n          curr_page=\"Home\"\n        />\n      </div>\n    </CustomBox>\n  );\n};\n\nexport default withRouter(Home);\n","/home/ubuntu/shaastra-general-website/src/components/pages/ShaastraJuniors/index.tsx",[],"/home/ubuntu/shaastra-general-website/src/components/shared/Footer.tsx",["635","636","637","638","639","640","641","642"],"import * as React from \"react\";\nimport LogoBlack from \"./../../images/logo/static/shaastra_tm_logo_black.svg\";\nimport LogoWhite from \"./../../images/logo/static/shaastra_tm_logo_white.svg\";\nimport { useColorModeValue } from \"@chakra-ui/color-mode\";\nimport { useBreakpointValue } from \"@chakra-ui/media-query\";\nimport { Link } from \"react-router-dom\";\nimport {\n  FaEnvelope,\n  FaInstagram,\n  FaLinkedin,\n  FaPhone,\n  FaTwitterSquare,\n  FaYoutubeSquare,\n} from \"react-icons/fa\";\nimport \"../../styles/Footer.css\";\n\ninterface Props {\n  designed: {\n    name: String;\n    mail: String;\n  }[];\n  curr_page?: String;\n}\n\nconst Footer = (props: Props) => {\n  const FooterLogo = useColorModeValue(LogoBlack, LogoWhite);\n  const theme = useColorModeValue(\"white\", \"black\");\n  return (\n    <section className={`Footer ${theme}`}>\n      {window.innerWidth > 600 ? (\n        <div className=\"top\">\n          <div className=\"Contact\">\n            <h3>NEED HELP</h3>\n            <p>\n              {props.curr_page === \"Home\" ? (\n                <a href=\"#who_are_we\">About us</a>\n              ) : (\n                <Link to=\"/\">About us</Link>\n              )}\n            </p>\n            <p>\n              <Link to=\"/team\">Team</Link>\n            </p>\n            <p>\n              <Link to=\"/sponsors\">Sponsors</Link>\n            </p>\n            {window.innerWidth <= 1000 ? <></> : <br />}\n          </div>\n          <div className=\"Contact\">\n            <h3>CONTACT</h3>\n            <p>\n              <a href=\"mailto:outreach@shaastra.org\">\n                <FaEnvelope /> outreach@shaastra.org\n              </a>\n            </p>\n            <p>\n              <a href=\"mailto:sponsorship@shaastra.org\">\n                <FaEnvelope /> sponsorship@shaastra.org\n              </a>\n            </p>\n            <p>\n              <a href=\"mailto:sec_cocur@smail.iitm.ac.in\">\n                <FaEnvelope /> sec_cocur@smail.iitm.ac.in\n              </a>\n            </p>\n            {window.innerWidth <= 1000 ? <></> : <br />}\n          </div>\n          <div className=\"Contact\">\n            <h3>ADDRESS</h3>\n            <p\n              className=\"address\"\n              style={{\n                display: \"initial\",\n                left: \"0\",\n              }}\n            >\n              IITM Students Activities Trust Shaastra,\n              <br /> 1st Floor, O/o Dean Of Students Office,\n              <br /> IIT Madras, Guindy, Chennai,\n              <br /> Tamil Nadu, India - 600036\n              <br /> Mobile : +91 9952729095\n            </p>\n          </div>\n          <div className=\"DesignedBy\">\n            <h3>LEGAL</h3>\n            <p>\n              <a href=\"policies/privacy-policy\">Privacy Policy</a>\n            </p>\n            <p>\n              <a href=\"policies/terms-conditions\">Terms and Conditions</a>\n            </p>\n            <p>\n              <a href=\"policies/shipping-policy\">Shipping Policy</a>\n            </p>\n            <p>\n              <a href=\"policies/return-refund-policy\">\n                Return and Refund Policy\n              </a>\n            </p>\n          </div>\n        </div>\n      ) : (\n        <div className=\"top\">\n          <div className=\"topleft\">\n            <div className=\"Contact\">\n              <h3>NEED HELP</h3>\n              <p>\n                {props.curr_page === \"Home\" ? (\n                  <a href=\"#who_are_we\">About us</a>\n                ) : (\n                  <Link to=\"/\">About us</Link>\n                )}\n              </p>\n              <p>\n                <Link to=\"/team\">Team</Link>\n              </p>\n              <p>\n                <Link to=\"/sponsors\">Sponsors</Link>\n              </p>\n              {window.innerWidth <= 1000 ? <></> : <br />}\n            </div>\n            <div className=\"DesignedBy\">\n              <h3>LEGAL</h3>\n              <p>\n                <a href=\"policies/privacy-policy\">Privacy Policy</a>\n              </p>\n              <p>\n                <a href=\"policies/terms-conditions\">Terms and Conditions</a>\n              </p>\n              <p>\n                <a href=\"policies/shipping-policy\">Shipping Policy</a>\n              </p>\n              <p>\n                <a href=\"policies/return-refund-policy\">\n                  Return and Refund Policy\n                </a>\n              </p>\n            </div>\n          </div>\n          <div className=\"Contact\">\n            <h3>CONTACT</h3>\n            <p>\n              <a href=\"mailto:outreach@shaastra.org\">\n                <FaEnvelope /> outreach@shaastra.org\n              </a>\n            </p>\n            <p>\n              <a href=\"mailto:sponsorship@shaastra.org\">\n                <FaEnvelope /> sponsorship@shaastra.org\n              </a>\n            </p>\n            <p>\n              <a href=\"mailto:sec_cocur@smail.iitm.ac.in\">\n                <FaEnvelope /> sec_cocur@smail.iitm.ac.in\n              </a>\n            </p>\n            {window.innerWidth <= 1000 ? <></> : <br />}\n          </div>\n          <div className=\"Contact\" style={{ marginTop: \"5px\" }}>\n            <h3>ADDRESS</h3>\n            <p\n              className=\"address\"\n              style={{\n                display: \"initial\",\n                left: \"0\",\n              }}\n            >\n              IITM Students Activities Trust Shaastra,\n              <br /> 1st Floor, O/o Dean Of Students Office,\n              <br /> IIT Madras, Guindy, Chennai,\n              <br /> Tamil Nadu, India - 600036\n              <br /> Mobile : +91 9952729095\n            </p>\n          </div>\n        </div>\n      )}\n      <div className=\"bottom\">\n        <p>\n          Ⓒ Developed by{\" \"}\n          {props.designed.map((item, key) => {\n            if (key == 0) {\n              return item.name;\n            } else {\n              return \", \" + item.name;\n            }\n          })}{\" \"}\n          | Web Operations | Shaastra | IIT Madras. All Rights Reserved\n        </p>\n        <div className=\"Follow\">\n          <p>FOLLOW US</p>\n          <span></span>\n          <a\n            target=\"_blank\"\n            href=\"https://www.instagram.com/shaastra_iitm/?hl=en\"\n          >\n            <FaInstagram />\n          </a>\n          <span></span>\n          <a\n            target=\"_blank\"\n            href=\"https://www.linkedin.com/company/shaastra-iit-madras/?originalSubdomain=in\"\n          >\n            <FaLinkedin />\n          </a>\n          <span></span>\n          <a\n            target=\"_blank\"\n            href=\"https://www.youtube.com/channel/UCgY2ugmW-BV2nMRFu-0qPZA\"\n          >\n            <FaYoutubeSquare />\n          </a>\n          <span></span>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Footer;\n","/home/ubuntu/shaastra-general-website/src/components/pages/ShaastraJuniors/SJEvents.tsx",[],"/home/ubuntu/shaastra-general-website/src/components/pages/ShaastraJuniors/SJStatsCard.tsx",[],"/home/ubuntu/shaastra-general-website/src/components/pages/ShaastraJuniors/SJSponsers.tsx",[],"/home/ubuntu/shaastra-general-website/src/components/pages/ShaastraJuniors/SJHome.tsx",[],"/home/ubuntu/shaastra-general-website/src/components/shared/CustomBox.tsx",["643"],"import { useColorModeValue } from \"@chakra-ui/color-mode\";\nimport { Box } from \"@chakra-ui/layout\";\nimport * as React from \"react\";\nimport Footer from \"./Footer\";\nimport Header from \"./Header\";\n\ninterface Props {\n  children: React.ReactChild[] | React.ReactChildren[] | React.ReactChild;\n}\n\nconst CustomBox = (props: Props) => {\n  const bg = useColorModeValue(\"highlight.200\", \"primary.default\");\n\n  return (\n    <Box bg={bg}>\n      <Header />\n      {props.children}\n    </Box>\n  );\n};\n\nexport default CustomBox;\n","/home/ubuntu/shaastra-general-website/src/components/pages/ShaastraJuniors/SJEvent.tsx",[],"/home/ubuntu/shaastra-general-website/src/components/pages/ShaastraJuniors/Data.tsx",[],"/home/ubuntu/shaastra-general-website/src/components/shared/Header.tsx",[],"/home/ubuntu/shaastra-general-website/src/styles/themes/ColorModeSwitcher.tsx",[],"/home/ubuntu/shaastra-general-website/src/components/shared/Drawer/CustomDrawer.tsx",[],"/home/ubuntu/shaastra-general-website/src/components/shared/Drawer/DrawerMenuItems.tsx",["644","645","646","647","648","649","650","651","652"],"import {\n  Accordion,\n  AccordionButton,\n  AccordionItem,\n  AccordionPanel,\n} from \"@chakra-ui/accordion\";\nimport { Flex, Spacer, Text as Box } from \"@chakra-ui/layout\";\nimport { time } from \"console\";\nimport React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { textChangeRangeNewSpan } from \"typescript\";\nimport { Button } from \"@chakra-ui/button\";\nimport { UserRole } from \"../../../generated/graphql\";\n\nexport const DrawerDesktopMenuItems = () => {\n  const [menu, setMenu] = useState<string>(\"e&w\");\n\n  const history = useHistory()\n\n  const menuItems = () => {\n    switch (menu) {\n      case \"exhibitions\":\n        return (\n          <>\n            <Link\n              style={{\n                textAlign: \"center\",\n                width: \"60%\",\n                borderRadius: 8,\n                padding: 5,\n                marginBottom: 5,\n                fontSize: 24,\n                background: \"#00000028\",\n              }}\n              to=\"/exhibitions\"\n            ></Link>\n          </>\n        );\n      case \"shaastra-nights\":\n        return (\n          <>\n            <Flex flexDirection=\"column\" justifyContent=\"flex-start\">\n              <Box\n                letterSpacing=\"normal\"\n                padding-left=\"8px\"\n                _hover={{\n                  padding: \"8px\",\n                  fontSize: \"26\",\n                  letterSpacing: \"6px\",\n                }}\n              >\n                <Link\n                  style={{\n                    textAlign: \"center\",\n                    width: \"60%\",\n                    borderRadius: 8,\n                    padding: 8,\n                    marginBottom: 5,\n                    fontSize: 24,\n                    background: \"rgba(0, 0, 0, 0.473)\",\n                  }}\n                  to=\"/shows\"\n                >\n                  Shows\n                </Link>\n              </Box>\n              <Box\n                letterSpacing=\"normal\"\n                _hover={{\n                  padding: \"8px\",\n                  fontSize: \"26\",\n                  letterSpacing: \"6px\",\n                }}\n              >\n                <Link\n                  style={{\n                    textAlign: \"center\",\n                    width: \"60%\",\n                    borderRadius: 8,\n                    padding: 8,\n                    marginBottom: 5,\n                    fontSize: 24,\n                    background: \"rgba(0, 0, 0, 0.473)\",\n                  }}\n                  to=\"/envisage\"\n                >\n                  Envisage\n                </Link>\n              </Box>\n            </Flex>\n          </>\n        );\n    }\n  };\n\n  return (\n    <>\n      <Flex\n        flexDirection=\"column\"\n        justifyContent=\"flex-start\"\n        height=\"90%\"\n        flex={1}\n      >\n        {\n          localStorage.getItem('role') !== 'Admin' && localStorage.getItem('role') !== 'User' &&\n          <Box\n            className=\"menu-text\"\n            width=\"100%\"\n            _hover={{ color: \"#cccccc\", padding: \"8px\", letterSpacing: \"7px\" }}\n            fontSize={28}\n            fontFamily={\"monospace\"}\n            fontStyle={\"italic\"}\n            pl={6}\n            p={2}\n            pr={12}\n            mb={4}\n          >\n            <Button backgroundColor=\"#addfd0\" color=\"black\" width=\"100%\" onClick={(e:any) => {e.preventDefault(); history.push(\"/signup\") } }>Signup</Button>\n          </Box>\n        }\n        <Box\n          className=\"menu-text\"\n          _hover={{ color: \"#cccccc\", padding: \"8px\", letterSpacing: \"7px\" }}\n          onMouseOver={() => setMenu(\"Home\")}\n          fontSize={28}\n          fontFamily={\"monospace\"}\n          fontStyle={\"italic\"}\n          pl={6}\n          p={2}\n          pr={12}\n          mb={4}\n        >\n          <Link to=\"/\">Home</Link>\n        </Box>\n        <Box\n          className=\"menu-text\"\n          _hover={{ color: \"#cccccc\", padding: \"8px\", letterSpacing: \"7px\" }}\n          fontSize={28}\n          onMouseOver={() => setMenu(\"click\")}\n          fontFamily={\"monospace\"}\n          fontStyle={\"italic\"}\n          pl={6}\n          p={2}\n          pr={12}\n          mb={4}\n        >\n          <Link to=\"/eventsworkshops\">Events and Workshops</Link>\n        </Box>\n        <Box\n          className=\"menu-text\"\n          _hover={{ color: \"#cccccc\", padding: \"8px\", letterSpacing: \"7px\" }}\n          fontSize={28}\n          onMouseOver={() => setMenu(\"click\")}\n          fontFamily={\"monospace\"}\n          fontStyle={\"italic\"}\n          pl={6}\n          p={2}\n          pr={12}\n          mb={4}\n        >\n          <a href=\"https://sales.shaastra.org\" target={\"_blank\"}>Sales</a>\n        </Box>\n        <Box\n          className=\"menu-text\"\n          _hover={{ color: \"#cccccc\", padding: \"8px\", letterSpacing: \"7px\" }}\n          fontSize={28}\n          onMouseOver={() => setMenu(\"click\")}\n          fontFamily={\"monospace\"}\n          fontStyle={\"italic\"}\n          pl={6}\n          p={2}\n          pr={12}\n          mb={4}\n        >\n          <Link to=\"/blitz-chess\">Blitz Chess</Link>\n        </Box>\n        <Box\n          className=\"menu-text\"\n          _hover={{ color: \"#cccccc\", padding: \"8px\", letterSpacing: \"7px\" }}\n          onMouseOver={() => setMenu(\"exhibitions\")}\n          fontSize={28}\n          fontFamily={\"monospace\"}\n          fontStyle={\"italic\"}\n          pl={6}\n          p={2}\n          pr={12}\n          mb={4}\n        >\n          <Link to=\"/exhibitions\">Exhibitions</Link>\n        </Box>\n        {/* <Box\n          className=\"menu-text\"\n          _hover={{ color: \"#cccccc\", padding: \"8px\", letterSpacing: \"7px\" }}\n          onMouseOver={() => setMenu(\"exhibitions\")}\n          fontSize={28}\n          fontFamily={\"monospace\"}\n          fontStyle={\"italic\"}\n          pl={6}\n          p={2}\n          pr={12}\n          mb={4}\n        >\n          <Link to=\"/events\">Events</Link>\n        </Box> */}\n        <Spacer />\n        <Box\n          className=\"menu-text\"\n          _hover={{\n            color: \"#cccccc\",\n            padding: \"8px\",\n            marginBottom: \"20px\",\n            letterSpacing: \"7px\",\n          }}\n          onMouseOver={() => setMenu(\"shaastra-nights\")}\n          fontSize={28}\n          fontFamily={\"monospace\"}\n          fontStyle={\"italic\"}\n          pl={6}\n          p={3}\n          pr={12}\n          mb={4}\n        >\n          Shaastra Nights\n          {menuItems()}\n        </Box>\n        <div style={{ color: \"white\", border: \"0.5px\" }} />\n        <Box\n          className=\"menu-text\"\n          _hover={{ color: \"#cccccc\", padding: \"8px\", letterSpacing: \"7px\" }}\n          onMouseOver={() => setMenu(\"click\")}\n          fontSize={28}\n          fontFamily={\"monospace\"}\n          fontStyle={\"italic\"}\n          pl={6}\n          p={3}\n          pr={12}\n          mb={4}\n        >\n          <a href=\"https://mindtrials.shaastra.org\" target=\"_blank\">Mind Trials</a>\n          {/* <Link to=\"https://mindtrials.shaastra.org\" target=\"_blank\">Mind Trials</Link> */}\n        </Box>\n        <Box\n          className=\"menu-text\"\n          _hover={{ color: \"#cccccc\", padding: \"8px\", letterSpacing: \"7px\" }}\n          onMouseOver={() => setMenu(\"click\")}\n          fontSize={28}\n          fontFamily={\"monospace\"}\n          fontStyle={\"italic\"}\n          pl={6}\n          p={3}\n          pr={12}\n          mb={4}\n        >\n          <Link to=\"/summit\">Summit</Link>\n        </Box>\n        <Box\n          className=\"menu-text\"\n          _hover={{ color: \"#cccccc\", padding: \"8px\", letterSpacing: \"7px\" }}\n          onMouseOver={() => setMenu(\"click\")}\n          fontSize={28}\n          fontFamily={\"monospace\"}\n          fontStyle={\"italic\"}\n          pl={6}\n          p={3}\n          pr={12}\n          mb={4}\n        >\n          <Link to=\"/tif\">Tech & Innovation Fair</Link>\n        </Box>\n        <Box\n          className=\"menu-text\"\n          _hover={{ color: \"#cccccc\", padding: \"8px\", letterSpacing: \"7px\" }}\n          onMouseOver={() => setMenu(\"schools\")}\n          fontSize={28}\n          fontFamily={\"monospace\"}\n          fontStyle={\"italic\"}\n          pl={6}\n          p={3}\n          pr={12}\n          mb={4}\n        >\n          <Link to=\"/shaastra-juniors\"> Schools</Link>\n        </Box>\n        <Box _hover={{}}></Box>\n        <Box\n          className=\"menu-text\"\n          _hover={{ color: \"#cccccc\", padding: \"8px\", letterSpacing: \"7px\" }}\n          onMouseOver={() => setMenu(\"click\")}\n          fontSize={28}\n          fontFamily={\"monospace\"}\n          fontStyle={\"italic\"}\n          pl={6}\n          p={3}\n          pr={12}\n          mb={4}\n        >\n          <a href=\"https://unmute.shaastra.org\" target=\"_blank\">Social Endeavours</a>\n          {/* <Link to=\"https://unmute.shaastra.org\" target=\"_blank\">Social Endeavours</Link> */}\n        </Box>\n        {/* <Box\n          className=\"menu-text\"\n          _hover={{ color: \"#cccccc\", padding: \"8px\", letterSpacing: \"7px\" }}\n          onMouseOver={() => setMenu(\"Click\")}\n          fontSize={28}\n          fontFamily={\"monospace\"}\n          fontStyle={\"italic\"}\n          pl={6}\n          p={3}\n          pr={12}\n          mb={4}\n        >\n          <Link to=\"/speakers\">Speakers</Link>\n        </Box> */}\n        <Box\n          className=\"menu-text\"\n          _hover={{ color: \"#cccccc\", padding: \"8px\", letterSpacing: \"7px\" }}\n          onMouseOver={() => setMenu(\"click\")}\n          fontSize={28}\n          fontFamily={\"monospace\"}\n          fontStyle={\"italic\"}\n          pl={6}\n          p={3}\n          pr={12}\n          mb={4}\n        >\n          <Link to=\"/sponsors\">Sponsors</Link>\n        </Box>\n        <Box\n          className=\"menu-text\"\n          _hover={{ color: \"#cccccc\", padding: \"8px\", letterSpacing: \"7px\" }}\n          onMouseOver={() => setMenu(\"click\")}\n          fontSize={28}\n          fontFamily={\"monospace\"}\n          fontStyle={\"italic\"}\n          pl={6}\n          p={3}\n          pr={12}\n          mb={4}\n        >\n          <Link to=\"/team\">Team</Link>\n        </Box>\n        <Box\n          className=\"menu-text\"\n          _hover={{ color: \"#cccccc\", padding: \"8px\", letterSpacing: \"7px\" }}\n          onMouseOver={() => setMenu(\"click\")}\n          fontSize={28}\n          fontFamily={\"monospace\"}\n          fontStyle={\"italic\"}\n          pl={6}\n          p={3}\n          pr={12}\n          mb={4}\n        >\n          <Link to=\"/contact\">Contact Us</Link>\n        </Box>\n        {\n          localStorage.getItem(\"role\") === \"User\" || localStorage.getItem(\"role\") === \"Admin\" ? \n            <Box\n              className=\"menu-text\"\n              _hover={{ color: \"#cccccc\", padding: \"8px\", letterSpacing: \"7px\" }}\n              fontSize={28}\n              width=\"100%\"\n              fontFamily={\"monospace\"}\n              fontStyle={\"italic\"}\n              pl={6}\n              p={2}\n              pr={12}\n              mb={4}\n            >\n              <Button backgroundColor=\"#addfd0\" color=\"black\" width=\"100%\" onClick={(e:any) => {e.preventDefault(); history.push(\"/profile\") } }>Profile</Button>\n              <Button backgroundColor=\"#DB7171\" color=\"black\" width=\"100%\" onClick={(e:any) => {e.preventDefault(); history.push(\"/signout\") } }>Logout</Button>\n            </Box>\n          :\n          null\n        }\n      </Flex>\n    </>\n  );\n};\n\nexport const DrawerMobileMenuItems = () => {\n  const history = useHistory()\n  return (\n    <Flex\n      flexDirection=\"column\"\n      justifyContent=\"flex-start\"\n      height=\"90%\"\n      flex={1}\n    >\n      {\n        localStorage.getItem('role') !=='Admin' && localStorage.getItem('role') !== 'User' && \n        <Box p={2} pl={0} fontSize={27} fontStyle={\"normal\"}>\n        <Button backgroundColor=\"#addfd0\" color=\"black\" width=\"100%\" onClick={(e:any) => {e.preventDefault(); history.push(\"/signup\") } }>SignUp</Button>\n      </Box>\n      }\n      <Accordion allowToggle>\n        <Box fontSize={27} fontStyle={\"normal\"}>\n          <Link to=\"/\">Home</Link>\n        </Box>\n        <Box fontSize={27} fontStyle={\"normal\"}>\n          <Link to=\"/eventsworkshops\">Events and Workshops</Link>\n        </Box>\n        <Box p={2} pl={0} fontSize={27} fontStyle={\"normal\"}>\n          {/* <Link to=\"/mind-trials\">Mind Trials</Link> */}\n          <a href=\"https://sales.shaastra.org\" target=\"_blank\">Sales</a>\n        </Box>\n        <Box fontSize={27} fontStyle={\"normal\"}>\n          <Link to=\"/exhibitions\">Exhibitions</Link>\n        </Box>\n        <Box fontSize={27} fontStyle={\"normal\"}>\n          <Link to=\"/blitz-chess\">Blitz Chess</Link>\n        </Box>\n        <AccordionItem border={0}>\n          <AccordionButton pl={0}>\n            <Box fontSize={27} fontStyle={\"normal\"}>\n              Shaastra Nights\n            </Box>\n          </AccordionButton>\n          <AccordionPanel>\n            <Box fontSize=\"xl\">\n              <Link to=\"/shows\">Shows</Link>\n            </Box>\n            <Box fontSize=\"xl\">\n              <Link to=\"/envisage\">Envisage</Link>\n            </Box>\n          </AccordionPanel>\n        </AccordionItem>\n        <Box p={2} pl={0} fontSize={27} fontStyle={\"normal\"}>\n          {/* <Link to=\"/mind-trials\">Mind Trials</Link> */}\n          <a href=\"https://mindtrials.shaastra.org\" target=\"_blank\">Mind Trials</a>\n        </Box>\n        <Box p={2} pl={0} fontSize={27} fontStyle={\"normal\"}>\n          <Link to=\"/summit\">Summit</Link>\n        </Box>\n        <Box p={2} pl={0} fontSize={27} fontStyle={\"normal\"}>\n          <Link to=\"/tif\">Tech & Innovation Fair</Link>\n        </Box>\n        <AccordionItem border={0}>\n          <Box fontSize={27} fontStyle={\"normal\"}>\n            <Link to=\"/shaastra-juniors\">School</Link>\n          </Box>\n        </AccordionItem>\n        <Box p={2} pl={0} fontSize={27} fontStyle={\"normal\"}>\n          {/* <Link to=\"/social-endeavours\">Social Endeavours</Link> */}\n          <a href=\"https://unmute.shaastra.org\" target=\"_blank\">Social Endeavours</a>\n        </Box>\n        {/* <Box p={2} pl={0} fontSize={27} fontStyle={\"normal\"}>\n          <Link to=\"/speakers\">Speakers</Link>\n        </Box> */}\n        <Box p={2} pl={0} fontSize={27} fontStyle={\"normal\"}>\n          <Link to=\"/sponsors\">Sponsors</Link>\n        </Box>\n        <Box p={2} pl={0} fontSize={27} fontStyle={\"normal\"}>\n          <Link to=\"/team\">Team</Link>\n        </Box>\n        <Box p={2} pl={0} fontSize={27} fontStyle={\"normal\"}>\n          <Link to=\"/contact\">Contact Us</Link>\n        </Box>\n        {\n        (localStorage.getItem(\"role\") === \"User\" || localStorage.getItem(\"role\") === \"Admin\") && \n          <Box p={2} pl={0} fontSize={27} fontStyle={\"normal\"}>\n          <Button backgroundColor=\"#addfd0\" color=\"black\" width=\"100%\" onClick={(e:any) => {e.preventDefault(); history.push(\"/profile\") } }>Profile</Button>\n          <Button backgroundColor=\"#DB7171\" color=\"black\" width=\"100%\" onClick={(e:any) => {e.preventDefault(); history.push(\"/signout\") } }>Logout</Button>\n        </Box>\n      }\n      </Accordion>\n    </Flex>\n  );\n};\n","/home/ubuntu/shaastra-general-website/src/components/pages/Login/branches.ts",[],"/home/ubuntu/shaastra-general-website/src/components/pages/Login/college.ts",[],"/home/ubuntu/shaastra-general-website/src/components/pages/Login/cities.ts",[],"/home/ubuntu/shaastra-general-website/src/generated/graphql.tsx",[],"/home/ubuntu/shaastra-general-website/src/components/pages/Events and Workshops/PayRegister.tsx",["653","654","655","656"],"import React from \"react\";\nimport {\n  GetEventQuery,\n  RegisterMutation,\n  useRegisterMutation,\n  useUpdateEventPayMutation,\n} from \"../../../generated/graphql\";\nimport dotenv from \"dotenv\";\nimport {\n  Alert,\n  AlertIcon,\n  Box,\n  Button,\n  Flex,\n  Input,\n  Modal,\n  ModalCloseButton,\n  ModalContent,\n  ModalHeader,\n  ModalOverlay,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\n\ndotenv.config();\n\ninterface Probs {\n  data: GetEventQuery[\"getEvent\"];\n  isAdmin: Boolean;\n}\n\nfunction loadScript(src: string) {\n  return new Promise((resolve) => {\n    const script = document.createElement(\"script\");\n    script.src = src;\n    script.onload = () => {\n      resolve(true);\n    };\n    script.onerror = () => {\n      resolve(false);\n    };\n    document.body.appendChild(script);\n  });\n}\n\nconst PayRegister = ({ data, isAdmin }: Probs) => {\n  const history = useHistory();\n  var { isOpen, onOpen, onClose } = useDisclosure();\n  const [referral , setReferral] = React.useState(\"\");\n const [register, { data: data1, error, loading }] = useRegisterMutation({\n    /******** On create order completion, open Razorpay ********/\n    async onCompleted(data) {\n      if (data.register.eventPay) {\n        await loadRazorpay(data.register.eventPay);\n      }\n    },\n  });\n\n  /******** Mutation Hook ********/\n  const [\n    updateEventPayMutation,\n    {\n      data: updateEventPayData,\n      loading: updateEventPayLoading,\n      error: updateEventPayError,\n    },\n  ] = useUpdateEventPayMutation();\n\n  const loadRazorpay = async (\n    data: RegisterMutation[\"register\"][\"eventPay\"]\n  ) => {\n    /******** Load Razorpay Script ********/\n    const res = await loadScript(\n      \"https://checkout.razorpay.com/v1/checkout.js\"\n    );\n    if (!res) {\n      alert(\"Razorpay SDK failed to load\");\n      return;\n    }\n\n    /******** Razorpay Options ********/\n    const options = {\n      key: process.env.REACT_APP_RAZORPAY_KEY,\n      amount: data?.amount,\n      currency: \"INR\",\n      name: data?.event.name,\n      image: \"\", //TODO: Add the shaastra link here\n      order_id: data?.orderId,\n\n      /******** Handler function to update the payment details ********/\n      handler: async function (response: any) {\n        try {\n          await updateEventPayMutation({\n            variables: {\n              eventId: data?.event.id!,\n              referral,\n              data: {\n                orderId: response.razorpay_order_id,\n                payementId: response.razorpay_payment_id,\n                paymentSignature: response.razorpay_signature,\n              },\n            },\n          });\n        } catch (e) {\n          console.log(e);\n        }\n      },\n      prefill: {\n        name: data?.user.name,\n        email: data?.user.email,\n        contact: data?.user.mobile,\n      },\n      notes: {\n        address: data?.user.address,\n      },\n      theme: {\n        color: \"#3399cc\",\n      },\n    };\n\n    /******** Open Razorpay ********/\n    const rzp1 = new (window as any).Razorpay(options);\n    rzp1.open();\n  };\n\n  /******** Register Handler ********/\n  const registerHandler = async () => {\n    try {\n      /******** Create OrderID ********/\n      await register({\n        variables: {\n          EventID: data.id,\n          referral \n        },\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  if (updateEventPayData?.updateEventPay) {\n    const onClose = () => {\n      window.location.reload();\n    };\n  //   if(referral){  \n  //   try {\n  //     const Func = async() => {\n  //       let coursename = data.name;\n  //       let referalcode = referral;\n  //       await axios.post('https://sheet.best/api/sheets/f8d10436-8ee1-42ef-87ab-3e17a9c99d1c',{\n  //         referalcode,coursename\n  //       }).then((response)=>{\n  //         sessionStorage.clear();\n  //         console.log(response);\n  //       }).catch(e=>{\n  //         console.log(e);\n  //       });\n  //     }\n  //     Func();\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // }\n    return (\n      <Modal isOpen={true} onClose={onClose}>\n        <ModalOverlay />\n        <ModalContent backgroundColor=\"#addfd0\" color=\"black\">\n          <ModalHeader>Registered Successfully</ModalHeader>\n          <ModalCloseButton />\n        </ModalContent>\n      </Modal>\n    );\n  }\n\n  if (updateEventPayError || error) {\n    error\n      ? (onClose = () => {\n          if (error.message === \"Please login to continue\") {\n            history.push(\"/login\");\n          }\n          window.location.reload();\n        })\n      : (onClose = () => {\n          window.location.reload();\n        });\n    return (\n      <Modal isOpen={true} onClose={onClose}>\n        <ModalOverlay />\n        <ModalContent backgroundColor=\"#f1aaaa\" color=\"black\">\n          <ModalHeader>\n            Some error occurred {updateEventPayError?.message} {error?.message}\n          </ModalHeader>\n          <ModalCloseButton />\n        </ModalContent>\n      </Modal>\n    );\n  }\n\n  if (loading || updateEventPayLoading)\n    return (\n      <Modal isOpen={true} onClose={() => window.location.reload()}>\n        <ModalOverlay />\n        <ModalContent backgroundColor=\"#addfd0\" color=\"black\">\n          <ModalHeader>\n            Don't refresh or close until you get a successfull message.\n            Loading...\n          </ModalHeader>\n          <ModalCloseButton />\n        </ModalContent>\n      </Modal>\n    );\n\n  return (\n    <div>\n      {!isAdmin &&\n        (data.registrationType === \"NONE\" ? (\n          <Box marginRight={\"2vw\"} marginTop=\"2vh\" height=\"1vw\">\n            <Alert status=\"info\" size={\"xs\"}>\n              <AlertIcon />\n              Registration is not required for this event\n            </Alert>\n          </Box>\n        ) : (\n          <Flex\n            marginRight={\"2vw\"}\n            marginTop=\"2vh\"\n            flexDirection={['column','column','row','row']}\n            height={[\n              \"fit-content\",\n              \"fit-content\",\n              \"fit-content\",\n              \"fit-content\",\n            ]}\n          >\n                     <Input\n                            width={[\"100%\",\"100%\",\"50%\",\"50%\"]}\n                            value={referral}\n                            mx={[0,0,3,3]}\n                            my={[2,2,0,0]}\n                            placeholder=\"Have a Referal Code?\"\n                            onChange={(e) => setReferral(e.target.value)}\n                            type={\"text\"}\n                            borderBottom=\"2px solid white\"\n                        />\n            <Button\n              backgroundColor={\"rgb(171, 228, 156)\"}\n              color=\"black\"\n              padding={[\"0.5vw\", \"0.5vw\", \"0.5vw\", \"1.25vw\"]}\n              fontSize={[\"2vw\", \"2vw\", \"2vw\", \"1vw\"]}\n              onClick={registerHandler}\n              // onClick={\n              //   //() => IndividualReg(data.id)\n              // }\n            >\n              REGISTER NOW\n            </Button>\n          </Flex>\n        ))}\n    </div>\n  );\n};\n\nexport default PayRegister;\n","/home/ubuntu/shaastra-general-website/src/components/pages/Events and Workshops/Timeline.tsx",[],"/home/ubuntu/shaastra-general-website/src/components/pages/Events and Workshops/RegisterNow.tsx",["657","658","659","660","661","662","663","664"],"import React, { useState } from \"react\";\nimport {\n  useCreateTeamandRegisterMutation,\n  useRegisterMutation,\n} from \"../../../generated/graphql\";\nimport {\n  Text,\n  Stack,\n  Flex,\n  Input,\n  Box,\n  RadioGroup,\n  Radio,\n  Image,\n  Button,\n  useColorModeValue,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useDisclosure,\n  FormControl,\n  FormLabel,\n  FormErrorMessage,\n  FormHelperText,\n  Heading,\n  Alert,\n  AlertIcon,\n  Center,\n} from \"@chakra-ui/react\";\nimport { AddIcon, MinusIcon } from \"@chakra-ui/icons\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst RegisterNow = ({ isAdmin, data }) => {\n  const [register, { data: data1, error, loading }] = useRegisterMutation();\n  const [members, setMembers] = React.useState<string[]>([]);\n  const [teamname, setTeamname] = React.useState<string>();\n  const buttoncolor = useColorModeValue(\"#ea8a94\", \"white\");\n  var { isOpen, onOpen, onClose } = useDisclosure();\n  const [radio, setRadio] = useState(\"i\");\n\n  if (radio === \"t\" && members.length === 0) {\n    setMembers([\"\"]);\n  }\n\n  const handleMembersInput = ({\n    index,\n    event,\n  }: {\n    index: number;\n    event: React.ChangeEvent<HTMLInputElement>;\n  }) => {\n    const values = [...members];\n\n    values[index] = event.target.value;\n    setMembers(values);\n  };\n  const IndividualReg = async (eventId: string) => {\n    await register({\n      variables: {\n        EventID: eventId,\n      },\n    }).catch((err) => console.log(err.message));\n  };\n  const history = useHistory();\n\n  const [teamreg, { data: data2, loading: loading2, error: error2 }] =\n    useCreateTeamandRegisterMutation();\n  const Teamregistration = async (eventID: string) => {\n    if (data.id === \"ckxcweoy60013y6p76ppx07rt\") {\n      const accept = prompt(\n        'Privacy Policy : \\n The data or the problem that is being shared under HackOlympics 2.0 shall not be shared or reused by the participants or stakeholders with anyone or any third party without prior written permission of MTX. The breach of this clause shall be considered a direct dispute between the violating individual and MTX, and is liable to legal action from MTX.\\n \\n Please type \"Agree\" without quotes'\n      );\n      if (accept?.toLowerCase() === \"agree\") {\n        await teamreg({\n          variables: {\n            createTeamAndRegisterData: {\n              eventID,\n              name: teamname!,\n              members,\n            },\n          },\n        }).catch((err) => console.log(err.message));\n      } else {\n        alert(\"Please agree the privacy policy\");\n      }\n    } else {\n      await teamreg({\n        variables: {\n          createTeamAndRegisterData: {\n            eventID,\n            name: teamname!,\n            members,\n          },\n        },\n      }).catch((err) => console.log(err.message));\n    }\n  };\n\n  if (loading || loading2) {\n    onClose = () => {\n      window.location.reload();\n    };\n    return (\n      <Modal isOpen={true} onClose={onClose}>\n        <ModalOverlay />\n        <ModalContent backgroundColor=\"#e2e19c\" color=\"black\">\n          <ModalHeader>Loading...</ModalHeader>\n          <ModalCloseButton />\n        </ModalContent>\n      </Modal>\n    );\n  }\n\n  if (data1?.register.registered || data2) {\n    onClose = () => {\n      window.location.reload();\n    };\n    return (\n      <Modal isOpen={true} onClose={onClose}>\n        <ModalOverlay />\n        <ModalContent backgroundColor=\"#addfd0\" color=\"black\">\n          <ModalHeader>Registered Successfully</ModalHeader>\n          <ModalCloseButton />\n        </ModalContent>\n      </Modal>\n    );\n  }\n\n  if (error || error2) {\n    error\n      ? (onClose = () => {\n          if (error.message === \"Please login to continue\") {\n            history.push(\"/login\");\n          }\n          window.location.reload();\n        })\n      : (onClose = () => {\n          window.location.reload();\n        });\n    return (\n      <Modal isOpen={true} onClose={onClose}>\n        <ModalOverlay />\n        <ModalContent backgroundColor=\"#f1aaaa\" color=\"black\">\n          <ModalHeader>{error ? error.message : error2?.message}</ModalHeader>\n          <ModalCloseButton />\n        </ModalContent>\n      </Modal>\n    );\n  }\n\n  return (\n    <div>\n      {!isAdmin ? (\n        data.registrationType === \"NONE\" ? (\n          <Box marginRight={\"2vw\"} marginTop=\"2vh\" height=\"1vw\">\n            <Alert status=\"info\" size={\"xs\"}>\n              <AlertIcon />\n              Registration is not required for this event\n            </Alert>\n          </Box>\n        ) : (\n          <Box\n            marginRight={\"2vw\"}\n            marginTop=\"2vh\"\n            height={[\n              \"fit-content\",\n              \"fit-content\",\n              \"fit-content\",\n              \"fit-content\",\n            ]}\n          >\n            <Button\n              backgroundColor={\"rgb(171, 228, 156)\"}\n              color=\"black\"\n              padding={[\"0.5vw\", \"0.5vw\", \"0.5vw\", \"1.25vw\"]}\n              fontSize={[\"2vw\", \"2vw\", \"2vw\", \"1vw\"]}\n              onClick={\n                data.registrationType === \"INDIVIDUAL\"\n                  ? () => {\n                      IndividualReg(data.id);\n                    }\n                  : onOpen\n              }\n            >\n              REGISTER NOW\n            </Button>\n          </Box>\n        )\n      ) : null}\n      <Modal isOpen={isOpen} onClose={onClose}>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Team Registration for {data.name}</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            <FormControl>\n              <FormLabel>Your Shaastra ID</FormLabel>\n              <Input type=\"text\"></Input>\n            </FormControl>\n            <FormControl marginTop=\"4vh\">\n              <RadioGroup onChange={setRadio} value={radio}>\n                <Radio value=\"i\" marginRight=\"2vw\">\n                  Register as Individual\n                </Radio>\n                <Radio value=\"t\">Register as Team</Radio>\n              </RadioGroup>\n            </FormControl>\n            <FormControl marginTop=\"1.5vh\" isRequired>\n              <FormLabel>Team Name</FormLabel>\n              <Input\n                type=\"text\"\n                value={teamname}\n                onChange={(e) => setTeamname(e.target.value)}\n              ></Input>\n              {radio === \"t\" ? (\n                <React.Fragment>\n                  <FormLabel marginTop=\"1.5vh\">\n                    Team Members Shaastra IDs\n                  </FormLabel>\n                  {members.map((member, index) => {\n                    return (\n                      <React.Fragment key={index}>\n                        <Flex width={\"100%\"}>\n                          <FormControl isRequired>\n                            <Flex width=\"100%\" justifyContent=\"space-between\">\n                              <Input\n                                id={\"member\" + index}\n                                placeholder={`Team Member ${\n                                  index + 1\n                                } Shaastra ID`}\n                                required\n                                onChange={(event) =>\n                                  handleMembersInput({ index, event })\n                                }\n                              ></Input>\n                            </Flex>\n                          </FormControl>\n\n                          <Flex p={[0, 3]} flexDirection={[\"column\", \"row\"]}>\n                            {index === 0 ? null : (\n                              <Button\n                                mx={2}\n                                my={1}\n                                size={\"xs\"}\n                                onClick={() => {\n                                  const values = [...members];\n                                  values.splice(index, 1);\n                                  setMembers(values);\n                                }}\n                              >\n                                <MinusIcon />\n                              </Button>\n                            )}\n                            {index >= data.teamSize - 2 ? null : (\n                              <Button\n                                mx={2}\n                                my={1}\n                                size={\"xs\"}\n                                onClick={() => {\n                                  if (members.length < data.teamSize - 1) {\n                                    setMembers([...members, \"\"]);\n                                  }\n                                }}\n                              >\n                                <AddIcon />\n                              </Button>\n                            )}\n                          </Flex>\n                        </Flex>\n                      </React.Fragment>\n                    );\n                  })}\n                  <FormLabel>Max team size :{data.teamSize}</FormLabel>\n                </React.Fragment>\n              ) : null}\n            </FormControl>\n          </ModalBody>\n\n          <ModalFooter>\n            <Button\n              colorScheme=\"blue\"\n              mr={3}\n              onClick={() => Teamregistration(data.id)}\n            >\n              Register\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </div>\n  );\n};\n\nexport default RegisterNow;\n","/home/ubuntu/shaastra-general-website/src/components/pages/Events and Workshops/EventFaqs.tsx",["665"],"import { DeleteIcon, EditIcon } from '@chakra-ui/icons';\nimport { Box, Button, Center, Container, Flex, FormControl, Heading, Input, Text, useColorModeValue } from '@chakra-ui/react';\nimport React, { useState } from 'react'\nimport { GetEventDocument, useCreateEventFaqMutation, useDeleteEventFaqMutation, useEditEventFaqMutation } from '../../../generated/graphql';\n\nconst EventFaqs = ({event} : any | null) =>{\n\n    const [role, setRole] = useState(\"\");\n    React.useEffect(()=>{\n        if(localStorage.getItem(\"role\")){\n            setRole(localStorage.getItem(\"role\")!)\n        }\n    })\n    const [faqId, setFaqId] = React.useState(\"\");\n    const [uquestion, setQuestion] = React.useState(\"\");\n    const [uanswer, setAnswer] = React.useState(\"\");\n\n    let faqs = event?.faqs ;\n\n    faqs = faqs.filter((faq)=>{\n      if(faq.question.split(\"field\",2).length > 1){\n        return false\n      }else  return true\n    })\n    console.log(faqs)\n    const [aquestion, setAQuestion] = React.useState(\"\");\n    const [aanswer, setAAnswer] = React.useState(\"\");\n  \n    const [editFaq] = useEditEventFaqMutation();\n    const [deleteFaq] = useDeleteEventFaqMutation();\n    const [addFaq] = useCreateEventFaqMutation();\n\n    const handleedit = (faqid: string) => {\n        editFaq({\n          variables: {\n            id : faqid,\n            data: {\n              question: uquestion,\n              answer: uanswer,\n            },\n          },\n          refetchQueries: [{ query: GetEventDocument, variables: { EventID: event.id} }],\n        }).catch((err) => console.log(err));\n        setFaqId(\"\");\n        setQuestion(\"\");\n        setAnswer(\"\");\n      };\n  \n    const handleUpdateFaq = (event: React.ChangeEvent<HTMLInputElement>) => {\n      if (event.target.name === \"uquestion\") {\n        setQuestion(event.target.value);\n      } else {\n        setAnswer(event.target.value);\n      }\n    };\n    const handleAddFaq = (event: React.ChangeEvent<HTMLInputElement>) => {\n      if (event.target.name === \"aquestion\") {\n        setAQuestion(event.target.value);\n      } else {\n        setAAnswer(event.target.value);\n      }\n    };\n  \n    const handleAdd = () => {\n      addFaq({\n        variables: {\n           id : event.id!,\n           data: {\n            question: aquestion,\n            answer: aanswer,\n          },\n        },\n        refetchQueries: [{ query: GetEventDocument, variables: { EventID: event.id} }],\n      }).catch((err) => console.log(err));\n      setAQuestion(\"\");\n      setAAnswer(\"\");\n    };\n    console.log(event)\n    const textcolor = useColorModeValue(\"black\",\"white\")\n    return (\n       <React.Fragment>\n           {faqs && faqs.length! > 0 ? (\n          <Box  width={\"100%\"}>\n            <Center textAlign={\"center\"}>\n              <Heading size={\"lg\"} m={4} mt=\"30px\" color={textcolor}>\n                FREQUENTLY ASKED QUESTIONS\n              </Heading>\n            </Center>\n            {role === \"Admin\" ? (\n              <Flex p={2} flexDirection={[\"column\", \"column\", \"row\"]}>\n                <FormControl m={2} width={[\"100%\", \"100%\", \"45%\"]}>\n                  <Input\n                    name=\"aquestion\"\n                    placeholder={\"Question\"}\n                    value={aquestion}\n                    onChange={(event) => handleAddFaq(event)}\n                    fontSize={\"small\"}\n                    p={2}\n                    borderColor={\"#2467a1\"}\n                  />\n                </FormControl>\n                <FormControl m={2} width={[\"100%\", \"100%\", \"45%\"]}>\n                  <Input\n                    name=\"aanswer\"\n                    placeholder={\"Answer\"}\n                    value={aanswer}\n                    onChange={(event) => handleAddFaq(event)}\n                    fontSize={\"small\"}\n                    p={2}\n                    borderColor={\"#2467a1\"}\n                  />\n                </FormControl>\n                <Button\n                  variant=\"solid\"\n                  border=\"2px solid\"\n                  borderColor=\"#2467a1\"\n                  p={3}\n                  m={3}\n                  size={\"lg\"} color={textcolor}\n                  onClick={() => handleAdd()}\n                >\n                  Add FAQ\n                </Button>\n              </Flex>\n            ) : null}\n\n            <Flex flexDirection={\"column\"}  width={\"100%\"} color={\"black\"}>\n              {faqs?.map((faq) => {\n                return (\n                  <Box m={2} key={faq.id}  paddingBottom={10}>\n                    <Flex>\n                      <Box\n                        p={3} shadow=\"lg\"\n                        borderTopWidth=\"2px\"\n                        borderLeftWidth={\"2px\"}\n                        borderRightWidth={\"2px\"}\n                        width={\"100%\"}\n                        borderTopRadius={\"lg\"}\n                      >\n                        <Text fontWeight={\"extrabold\"} color={'gray.500'} textAlign={\"left\"}>{faq.question}</Text>\n                        {faqId === faq.id ? (\n                          <FormControl m={3}>\n                            <Input\n                              onChange={handleUpdateFaq}\n                              name=\"uquestion\"\n                              value={uquestion}\n                              borderColor={\"black\"}\n                              placeholder=\"Question\"\n                              color={\"black\"}\n                            />\n                          </FormControl>\n                        ) : null}\n                      </Box>\n                    </Flex>\n                    <Flex>\n                      <Box\n                        p={3}  shadow=\"lg\"\n                        borderWidth=\"2px\"\n                        borderBottomRadius={\"lg\"}\n                        width={\"100%\"}\n                      >\n                        <Text fontWeight={\"semibold\"} color={'gray.500'} textAlign={\"left\"}>{faq.answer}</Text>\n                        {faqId === faq.id ? (\n                          <FormControl m={3}>\n                            <Input\n                              onChange={(event) => handleUpdateFaq(event)}\n                              name=\"uanswer\"\n                              value={uanswer}\n                              borderColor={\"#2467a1\"}\n                              placeholder=\"Answer\"\n                              color={\"black\"}\n                            />\n                          </FormControl>\n                        ) : null}\n\n                        {faqId === faq.id ? (\n                          <Box>\n                            <Button\n                              color={\"#2467a1\"}\n                              variant=\"solid\"\n                              border=\"2px solid\"\n                              borderColor=\"#2467a1\"\n                              size=\"sm\"\n                              p={2}\n                              m={2}\n                              onClick={() => handleedit(faq.id)}\n                              float={\"right\"}\n                            >\n                              Edit FAQ\n                            </Button>\n                          </Box>\n                        ) : role === \"Admin\" ? (\n                          <Box>\n                            <Button\n                              color={\"#2467a1\"}\n                              variant=\"outline\"\n                              border=\"2px solid\"\n                              borderColor=\"#2467a1\"\n                              size=\"sm\"\n                              p={2}\n                              m={2}\n                              onClick={() => {\n                                setFaqId(faq.id);\n                              }}\n                              float={\"right\"}\n                            >\n                              <EditIcon m={2} />\n                              Edit FAQ\n                            </Button>\n                            <Button\n                              color={\"#2467a1\"}\n                              variant=\"outline\"\n                              border=\"2px solid\"\n                              borderColor=\"#2467a1\"\n                              size=\"sm\"\n                              p={2}\n                              m={2}\n                              onClick={() => {\n                                deleteFaq({\n                                  variables: {\n                                    id : faq.id\n                                  },\n                                  refetchQueries: [\n                                    {\n                                      query: GetEventDocument,\n                                      variables: { EventID: event.id! },\n                                    },\n                                  ],\n                                });\n                              }}\n                              float={\"right\"}\n                            >\n                              <DeleteIcon m={2} />\n                              Delete FAQ\n                            </Button>\n                          </Box>\n                        ) : null}\n                      </Box>\n                    </Flex>\n                  </Box>\n                );\n              })}\n            </Flex>\n          </Box>\n        ) : (\n          <React.Fragment>\n            {role === \"Admin\" ? (\n              <Container maxWidth={\"5xl\"}>\n                <Center m={2} p={2}>\n                  <Heading>Add FAQs</Heading>\n                </Center>\n                <Flex>\n                  <FormControl m={2} width={\"45%\"}>\n                    <Input\n                      name=\"aquestion\"\n                      placeholder={\"Question\"}\n                      value={aquestion}\n                      onChange={(event) => handleAddFaq(event)}\n                      fontSize={\"small\"}\n                      p={2}\n                      borderColor={\"#2467a1\"}\n                    />\n                  </FormControl>\n                  <FormControl m={2} width={\"45%\"}>\n                    <Input\n                      name=\"aanswer\"\n                      placeholder={\"Answer\"}\n                      value={aanswer}\n                      onChange={(event) => handleAddFaq(event)}\n                      fontSize={\"small\"}\n                      p={2}\n                      borderColor={\"#2467a1\"}\n                    />\n                  </FormControl>\n                  <Button\n                    color={\"#2467a1\"}\n                    variant=\"solid\"\n                    border=\"2px solid\"\n                    borderColor=\"#2467a1\"\n                    size=\"sm\"\n                    p={2}\n                    m={3}\n                    onClick={() => handleAdd()}\n                  >\n                    Add FAQ\n                  </Button>\n                </Flex>\n              </Container>\n            ) : null}\n          </React.Fragment>\n        )}\n       </React.Fragment>\n    )\n}\n\nexport default EventFaqs\n","/home/ubuntu/shaastra-general-website/src/components/pages/Events and Workshops/EventVeticalComponent.tsx",["666","667","668","669","670","671","672","673","674","675","676","677","678","679","680","681","682","683","684","685","686","687","688","689","690","691","692","693","694"],"import * as React from \"react\";\nimport {\n  Text,\n  Stack,\n  Flex,\n  Input,\n  Box,\n  RadioGroup,\n  Radio,\n  Image,\n  Button,\n  useColorModeValue,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useDisclosure,\n  FormControl,\n  FormLabel,\n  FormErrorMessage,\n  FormHelperText,\n  Heading,\n  Alert,\n  AlertIcon,\n  Center,\n} from \"@chakra-ui/react\";\nimport { AddIcon, MinusIcon } from \"@chakra-ui/icons\";\nimport { useState } from \"react\";\nimport CustomBox from \"../../shared/CustomBox\";\nimport Footer from \"../../shared/Footer\";\nimport bg from \"../../../images/EventsWorkshops/events/bg.jpeg\";\nimport {\n  useCreateTeamandRegisterMutation,\n  useRegisterMutation,\n} from \"../../../generated/graphql\";\nimport { useHistory } from \"react-router-dom\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport RegisterNow from \"./RegisterNow\";\nimport Showdown from \"showdown\";\nimport PayRegister from \"./PayRegister\";\n\nconst EventVerticalComponent = ({ data, isAdmin }: any) => {\n  const converter = new Showdown.Converter();\n\n  // var { isOpen, onOpen, onClose } = useDisclosure()\n\n  const search = useColorModeValue(\"border\", \"noBorder\");\n  const font = useColorModeValue(\"black\", \"white\");\n  const gradient = useColorModeValue(\"blackG\", \"whiteG\");\n  const button = useColorModeValue(\"dark\", \"light\");\n\n  const [islarge, setLarge] = useState(false);\n  const [referenceCode, setReferenceCode] = useState(\"\");\n  // const [courseName, setCourseName] = useState(\"\");\n  // const ReferelCode = (e) => {\n  //   setReferenceCode(e.target.value);\n  //   let datas = e.target.value;\n  //   sessionStorage.setItem(\"referalcode\",`${datas}`);\n  // }\n  // const CourseNameCode = (e) => {\n  //   setCourseName(e.target.value);\n  //   let datas = e.target.value;\n  //   sessionStorage.setItem(\"coursename\",`${datas}`);\n  // }\n  React.useEffect(() => {\n    if (window.innerWidth < 900) {\n      setLarge(false);\n      \n    } else {\n      setLarge(true);\n    }\n  }, []);\n  // const [radio, setRadio] = useState(\"i\")\n  // const [register, {data : data1,error,loading}] = useRegisterMutation();\n  // const IndividualReg = async (eventId : string) =>{\n\n  //     await register({\n  //         variables : {\n  //             EventID : eventId\n  //         }\n  //     })\n  //     .catch(err => console.log(err.message))\n\n  // }\n\n  // const [members, setMembers] = React.useState<string[]>([]);\n  // const [teamname, setTeamname] = React.useState<string>();\n\n  // const handleMembersInput = ({ index, event }: { index: number, event: React.ChangeEvent<HTMLInputElement> }) => {\n  //     const values = [...members];\n\n  //     values[index] = event.target.value\n  //     setMembers(values)\n  // }\n  // const [teamreg,{data:data2, loading:loading2,error : error2}] = useCreateTeamandRegisterMutation();\n\n  // const Teamregistration = async (eventID : string)=>{\n  //     await teamreg({\n  //         variables : {\n  //            createTeamAndRegisterData : {\n  //                eventID,\n  //                name : teamname!,\n  //                members\n  //            }\n  //         }\n  //     }).catch(err => console.log(err.message))\n  // }\n\n  // if(radio === \"t\" && members.length === 0){\n  //     setMembers([''])\n  // }\n\n  const buttoncolor = useColorModeValue(\"#ea8a94\", \"white\");\n\n  const history = useHistory();\n  // if(data1 || data2)\n  // {\n  //     onClose = () => {window.location.reload()}\n  //     return(\n  //         <Modal isOpen={true} onClose={onClose}>\n  //             <ModalOverlay />\n  //             <ModalContent backgroundColor=\"#addfd0\" color=\"black\">\n  //                 <ModalHeader>Registrated Successfully</ModalHeader>\n  //                 <ModalCloseButton />\n  //              </ModalContent>\n  //         </Modal>\n  //     )\n  // }\n  // if(error || error2)\n  // {\n  //     error? onClose = () => {\n  //         if(error.message === \"Please login to continue\"){\n  //             history.push('/login')\n  //         }\n  //         window.location.reload()\n  //     } : onClose = () => {window.location.reload()}\n  //     return(\n  //         <Modal isOpen={true} onClose={onClose}>\n  //             <ModalOverlay />\n  //             <ModalContent backgroundColor=\"#f1aaaa\" color=\"black\">\n  //                 <ModalHeader>{error ? error.message : error2?.message}</ModalHeader>\n  //                 <ModalCloseButton />\n  //              </ModalContent>\n  //         </Modal>\n  //     )\n  // }\n  // if(loading || loading2)\n  // {\n  //     onClose = () => {window.location.reload()}\n  //     return(\n  //         <Modal isOpen={true} onClose={onClose}>\n  //             <ModalOverlay />\n  //             <ModalContent backgroundColor=\"#e2e19c\" color=\"black\">\n  //                 <ModalHeader>Loading...</ModalHeader>\n  //                 <ModalCloseButton />\n  //              </ModalContent>\n  //         </Modal>\n  //     )\n  // }\n\n  const description = (\n    <ReactMarkdown\n      children={data?.description!}\n      remarkPlugins={[remarkGfm]}\n    ></ReactMarkdown>\n  );\n\n  return (\n    <Box minHeight={\"15vw\"} m={2} p={2}>\n      <Stack spacing={8}>\n        <Box className=\"event-main-box\" minHeight={\"15vh\"}>\n          <Flex\n            width={[\"90vw\", \"90vw\", \"90vw\", \"80vw\"]}\n            margin=\"auto\"\n            alignItems={\"center\"}\n            justifyContent=\"space-evenly\"\n            marginBottom=\"2vh\"\n            height=\"fit-content\"\n            className=\"vertical-events-flex\"\n          >\n            {/* <div className=\"flip-card\">\n                            <div className=\"flip-card-inner\">\n                                <div className=\"flip-card-front\">\n                                    <Box position=\"relative\" boxSize=\"15vw\">\n                                        <Image src={data.pic ? data.pic : bg} boxSize=\"15vw\" borderRadius=\"24px\"></Image>\n                                        <Box content=\"\" position=\"absolute\" top=\"0.5vw\" left=\"0.5vw\" borderRadius=\"24px\"\n                                        opacity=\"0.7\" backgroundImage=\"linear-gradient(45deg, white, #ffffff00)\" \n                                        boxSize=\"14vw\" className=\"glass\"></Box>\n                                        <Flex boxSize=\"15vw\" alignItems=\"center\" justifyContent=\"center\" position=\"absolute\" top=\"0\" className=\"event-name\">\n                                            <Text width=\"10vw\" fontWeight=\"bold\" color=\"black\">{data?.name}</Text>\n                                        </Flex>\n                                    </Box>\n                                </div>\n                                <div className=\"flip-card-back\">\n                                    <Box width=\"15vw\" padding=\"2vw\" backgroundColor={buttoncolor} color=\"black\" height=\"15vw\" borderRadius=\"24px\">\n                                        <Heading as=\"h4\" size={\"sm\"}>Points Distribution</Heading>\n                                        <Flex justifyContent=\"space-between\">\n                                            <Text>1ST</Text>\n                                            <Text>{data.firstplace}</Text>\n                                        </Flex>\n                                        <Flex justifyContent=\"space-between\">\n                                            <Text>2ND</Text>\n                                            <Text>{data.secondplace}</Text>\n                                        </Flex>\n                                        <Flex justifyContent=\"space-between\">\n                                            <Text>3RD</Text>\n                                            <Text>{data.thirdplace}</Text>\n                                        </Flex>\n                                        <Flex justifyContent=\"space-between\">\n                                            <Text>PARTICIPATION</Text>\n                                            <Text>{data.participation}</Text>\n                                        </Flex>\n                                    </Box>\n                                </div>\n                            </div>\n                        </div> */}\n            <Flex\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n              flexDirection={\"column\"}\n              position=\"relative\"\n              width={[\"40vw\", \"25vw\"]}\n              height=\"fit-content\"\n            >\n              <Image\n                src={data.pic ? data.pic : bg}\n                boxSize={[\"30vw\", \"30vw\", \"30vw\", \"15vw\"]}\n                borderRadius=\"24px\"\n              ></Image>\n              <Text\n                width={[\"30vw\", \"30vw\", \"30vw\", \"15vw\"]}\n                fontSize={[\"3vw\", \"3vw\", \"3vw\", \"1.5vw\"]}\n                fontWeight=\"bold\"\n              >\n                {data?.name}\n              </Text>\n              {/* <Box content=\"\" position=\"absolute\" top=\"0\" left=\"0\" borderRadius=\"24px\"\n                                        opacity=\"0.7\" backgroundImage=\"linear-gradient(45deg, white, #ffffff00)\" \n                                        boxSize=\"15vw\" className=\"glass\"></Box>\n                                        <Flex boxSize=\"15vw\" alignItems=\"center\" justifyContent=\"center\" position=\"absolute\" top=\"0\" className=\"event-name\">\n                                            <Text width=\"10vw\" fontSize={\"1.5vw\"} fontWeight=\"bold\" color=\"black\">{data?.name}</Text>\n                                        </Flex> */}\n            </Flex>\n            <Box\n              height=\"fit-content\"\n              borderRadius=\"24px\"\n              width={[\"60%\", \"60%\", \"60%\", \"55vw\"]}\n              marginLeft=\"1vw\"\n              className=\"event-desp\"\n            >\n              <Flex\n                flexDirection=\"column\"\n                width=\"50vw\"\n                height=\"100%\"\n                alignItems=\"center\"\n                justifyContent=\"center\"\n                textAlign={\"justify\"}\n              >\n                <Text\n                  textAlign=\"left\"\n                  width={[\"100%\", \"100%\", \"100%\", \"100%\"]}\n                  className={font}\n                  fontSize={[\"10px\", \"10px\", \"lg\", \"lg\"]}\n                  borderRadius=\"24px\"\n                  padding=\"2vh\"\n                  color=\"white\"\n                  fontWeight=\"500\"\n                  backdropFilter=\"blur(25px)\"\n                >\n                  <Text>\n                    {islarge\n                      ? converter\n                        .makeHtml(description.props.children)\n                        .replace(/<[^>]+>/g, \"\")\n                        .slice(0, 400) + \"....\"\n                      : converter\n                        .makeHtml(description.props.children)\n                        .replace(/<[^>]+>/g, \"\")\n                        .slice(0, 100) + \"....\"}\n                  </Text>\n                  <Flex\n                    height=\"fit-content\"\n                    width={\"100%\"}\n                    flexDirection={[\"column\", \"column\", \"row\", \"row\"]}\n                    alignContent={[\"center\"]}\n                    justifyContent={[\"center\", \"center\"]}\n                  >\n                    {!isAdmin ? (\n                      data.registrationType === \"NONE\" ? (\n                        <Box marginTop=\"2vh\" height=\"1vw\" marginRight={\"2vw\"}>\n                          <Alert status=\"info\" size={\"xs\"}>\n                            <AlertIcon />\n                            Registration is not required for this event\n                          </Alert>\n                        </Box>\n                      ) : //    <Box marginTop=\"2vh\"  height=\"1vw\" >\n                        //    <Button backgroundColor={buttoncolor} color='black'\n                        //     onClick={\n                        //         data.registrationType === \"INDIVIDUAL\" ? ()=>{IndividualReg(data.id)} : onOpen\n                        //     }\n                        //    >REGISTER NOW</Button>\n                        //    </Box>\n                        data.registrationfee !== \"0\" ? (\n                          <PayRegister isAdmin={isAdmin} data={data!} />\n                        ) : (\n                          <RegisterNow isAdmin={isAdmin} data={data} />\n                        )\n                    ) : null}\n                    <Box marginTop=\"2vh\" height=\"1vw\">\n                      <Button\n                        fontSize={[\"3vw\", \"3vw\", \"3vw\", \"1vw\"]}\n                        padding={[\"1vw\", \"1.25vw\"]}\n                        backgroundColor={\"white\"}\n                        border=\"2px solid black\"\n                        color=\"black\"\n                        onClick={() => {\n                          history.push(`/eventpage/${data.id}`);\n                        }}\n                      >\n                        View Details\n                      </Button>\n                    </Box>\n                  </Flex>\n                  {/* <Flex marginTop=\"2vh\" height=\"7vh\" flexDirection={'row'}>\n                    <Text>Have Referal Code ?</Text>\n                    <Input\n                      id=\"referal\"\n                      width={'10px'}\n                      marginLeft={'18px'}\n                      border=\"2px solid black\"\n                      height={'19px'}\n                      placeholder=\"Enter Referal Code\"\n                      onChange={ReferelCode}\n                    >\n                    </Input>\n                    <Input\n                      id=\"referal\"\n                      width={'10px'}\n                      marginLeft={'18px'}\n                      border=\"2px solid black\"\n                      height={'19px'}\n                      placeholder=\"Enter Course Name\"\n                      onChange={CourseNameCode}\n                    >\n                    </Input>\n                  </Flex> */}\n\n                  {/* <Modal isOpen={isOpen} onClose={onClose}>\n                                            <ModalOverlay />\n                                            <ModalContent>\n                                            <ModalHeader>Team Registration for {data.name}</ModalHeader>\n                                            <ModalCloseButton />\n                                            <ModalBody>\n                                                <FormControl>\n                                                    <FormLabel>Your Shaastra ID</FormLabel>\n                                                    <Input type=\"text\"></Input>\n                                                </FormControl>\n                                                <FormControl marginTop=\"4vh\">\n                                                    <RadioGroup onChange={setRadio} value={radio}>\n                                                        <Radio value=\"i\" marginRight=\"2vw\">Register as Individual</Radio>\n                                                        <Radio value=\"t\">Register as Team</Radio>\n                                                    </RadioGroup>\n                                                </FormControl>\n                                                    <FormControl marginTop=\"1.5vh\" isRequired>\n                                                        <FormLabel>Team Name</FormLabel>\n                                                        <Input type=\"text\" value={teamname} onChange={e => setTeamname(e.target.value)}></Input>\n                                                        {\n                                                            radio === \"t\" ? (\n                                                        <React.Fragment>\n                                                        <FormLabel marginTop=\"1.5vh\">Team Members Shaastra IDs</FormLabel>\n                                                        {\n                                                            members.map((member, index) => {\n                                                                return (\n                                                                    <React.Fragment key={index}>\n                                                                        <Flex width={'100%'}  >\n                                                                            <FormControl isRequired>\n\n                                                                                <Flex width=\"100%\" justifyContent=\"space-between\">\n                                                                                <Input  id={\"member\" + index} placeholder={`Team Member ${index+1} Shaastra ID`} required\n                                                                                 onChange={(event) => handleMembersInput({ index, event })} \n                                                                                ></Input>\n                                                                                </Flex>\n                                                                            </FormControl>\n\n                                                                    <Flex p={[0, 3]} flexDirection={['column', 'row']}>\n                                                                        {\n                                                                            index === 0 ? null : (\n                                                                                <Button mx={2} my={1} size={'xs'}\n                                                                                    onClick={() => {\n                                                                                        const values = [...members];\n                                                                                        values.splice(index, 1)\n                                                                                        setMembers(values)\n                                                                                    }}\n                                                                                ><MinusIcon /></Button>)}\n                                                                        {\n                                                                            index >= data.teamSize - 2 ? null : (\n                                                                                <Button mx={2} my={1} size={'xs'}\n                                                                                    onClick={() => {\n                                                                                        if (members.length < data.teamSize - 1) {\n                                                                                            setMembers([...members, ''])\n                                                                                        }\n                                                                                    }\n                                                                                    }\n                                                                                ><AddIcon /></Button>\n                                                                            )\n                                                                        }\n                                                                     \n                                                                    </Flex>\n                                                                </Flex>\n                                                                        </React.Fragment>)\n                                                                })\n                                                                }\n                                                                <FormLabel>Max team size :{data.teamSize}</FormLabel>\n                                                                </React.Fragment>\n                                                            ) : null\n                                                        }\n                                                       \n                                                    </FormControl>\n                                                \n                                            </ModalBody>\n\n                                            <ModalFooter>\n                                                <Button colorScheme='blue' mr={3} onClick={()=>Teamregistration(data.id)}>\n                                                 Register\n                                                </Button>\n                                            </ModalFooter>\n                                            </ModalContent>\n                                        </Modal> */}\n                </Text>\n              </Flex>\n            </Box>\n          </Flex>\n        </Box>\n      </Stack>\n    </Box>\n  );\n};\n\nexport default EventVerticalComponent;\n","/home/ubuntu/shaastra-general-website/src/components/pages/Events and Workshops/EventsData.tsx",[],"/home/ubuntu/shaastra-general-website/src/components/pages/Team_page/photos.tsx",["695"],"import be17b022 from \"../../../images/profiles/be17b022.jpg\";\nimport be18b013 from \"../../../images/profiles/be18b013.jpeg\";\nimport be18b026 from \"../../../images/profiles/be18b026.jpeg\";\nimport be19b012 from \"../../../images/profiles/be19b012.jpeg\";\nimport ce18b003 from \"../../../images/profiles/ce18b003.jpeg\";\nimport ce18b112 from \"../../../images/profiles/ce18b112.jpg\";\nimport ce19b029 from \"../../../images/profiles/ce19b029.jpg\";\nimport ch18b020 from \"../../../images/profiles/ch18b020.jpg\";\nimport ch18b036 from \"../../../images/profiles/ch18b036.jpg\";\nimport ch18b037 from \"../../../images/profiles/ch18b037.jpeg\";\nimport cs18b050 from \"../../../images/profiles/cs18b050.jpeg\";\nimport ed18b031 from \"../../../images/profiles/ed18b031.jpeg\";\nimport ed18b050 from \"../../../images/profiles/ed18b050.jpg\";\nimport ed18b053 from \"../../../images/profiles/ed18b053.jpg\";\nimport ed18b057 from \"../../../images/profiles/ed18b057.jpg\";\nimport ee18b022 from \"../../../images/profiles/ee18b022.jpg\";\nimport ee18b054 from \"../../../images/profiles/ee18b054.jpeg\";\nimport ee18b138 from \"../../../images/profiles/ee18b138.jpg\";\nimport ep18b005 from \"../../../images/profiles/ep18b005.jpg\";\nimport ep18b006 from \"../../../images/profiles/ep18b006.jpg\";\nimport me18b145 from \"../../../images/profiles/me18b145.jpg\";\nimport be19b009 from \"../../../images/profiles/be19b009.jpeg\";\nimport ce18b060 from \"../../../images/profiles/ce18b060.jpg\";\n\nexport default {\n  be19b009,\n  ce18b060,\n  be17b022,\n  be18b013,\n  be18b026,\n  be19b012,\n  ce18b003,\n  ce18b112,\n  ce19b029,\n  ch18b020,\n  ch18b036,\n  ch18b037,\n  cs18b050,\n  ed18b031,\n  ed18b050,\n  ed18b053,\n  ed18b057,\n  ee18b022,\n  ee18b054,\n  ee18b138,\n  ep18b005,\n  ep18b006,\n  me18b145,\n};\n","/home/ubuntu/shaastra-general-website/src/components/pages/Team_page/SliderImgBox.tsx",["696","697","698","699","700","701"],"import * as React from \"react\";\nimport { Flex } from \"@chakra-ui/react\";\nimport {\n  FaGithub,\n  FaTwitter,\n  FaLinkedin,\n  FaEnvelope,\n  FaWhatsapp,\n  FaInstagram,\n} from \"react-icons/fa\";\nimport \"../../../styles/Team_styles/SliderImgBox.css\";\n\n// import profileIMG from \"../../../images/profile.jpg\";\n\ninterface Props {\n  profile: {\n    name?: string;\n    role?: string;\n    desc?: string;\n    imgURL?: string;\n    social_links: {\n      twitter?: string;\n      linkedIn?: string;\n      instagram?: string;\n      shastraMailId?: string;\n      github?: string;\n      contact?: string;\n      facebook?: string;\n    };\n    mailId?: string;\n    dept?: string;\n  };\n}\n\nconst SliderImgBox = (props: Props) => {\n  return (\n    <div className=\"sliderImgBox\">\n      <div className=\"profileCard\">\n        <div className=\"profileCard_header\">\n          <div>\n            <h2>{props.profile.name}</h2>\n            {/* <p>{props.profile.role}</p> */}\n          </div>\n          <Flex\n            width=\"140px\"\n            fontSize=\"20px\"\n            color=\"rgba(255,255,255)\"\n            justifyContent=\"space-evenly\"\n          >\n            <a\n              target=\"_blank\"\n              href={`https://api.whatsapp.com/send?phone=91${props.profile.social_links.contact}&text=&source=&data=&app_absent=`}\n            >\n              <FaWhatsapp />\n            </a>\n            <a target=\"_blank\" href={props.profile.social_links.linkedIn}>\n              <FaLinkedin />\n            </a>\n            <a\n              target=\"_blank\"\n              href={\"mailto:\" + props.profile.social_links.shastraMailId}\n            >\n              <FaEnvelope />\n            </a>\n          </Flex>\n        </div>\n        <div className=\"profileDescription\">{props.profile.desc}</div>\n      </div>\n      <div className=\"imgCover\">\n        <img src={props.profile.imgURL} alt={props.profile.imgURL} />\n      </div>\n    </div>\n  );\n};\n\nexport default SliderImgBox;\n","/home/ubuntu/shaastra-general-website/src/components/pages/Team_page/Card.tsx",["702","703","704","705","706","707","708"],"import * as React from \"react\";\nimport { Flex } from \"@chakra-ui/react\";\nimport {\n  FaGithub,\n  FaTwitter,\n  FaLinkedin,\n  FaEnvelope,\n  FaQuoteLeft,\n  FaQuoteRight,\n  FaWhatsappSquare,\n  FaWhatsapp,\n  FaInstagram,\n} from \"react-icons/fa\";\n// import profile from \"../../../images/profile.jpg\";\nimport \"../../../styles/Team_styles/Card.css\";\n\ninterface Props {\n  type: string;\n  profile: {\n    name?: string;\n    role?: string;\n    desc?: string;\n    imgURL?: string;\n    social_links: {\n      twitter?: string;\n      linkedIn?: string;\n      instagram?: string;\n      shastraMailId?: string;\n      github?: string;\n      contact?: string;\n      facebook?: string;\n    };\n    mailId?: string;\n    dept?: string;\n  };\n}\n\nconst Card = (props: Props) => {\n  return (\n    <div\n      className=\"Card\"\n      style={\n        props.type === \"all\" || props.type === props.profile.dept\n          ? { transform: \"scale(1)\", display: \"block\" }\n          : { transform: \"scale(0)\", display: \"none\" }\n      }\n    >\n      <div className=\"imageBox\">\n        <img src={props.profile.imgURL} alt=\"\" />\n        <div className=\"profileDescription\">\n          <FaQuoteLeft />\n          <p>{props.profile.desc}</p>\n          <FaQuoteRight />\n        </div>\n      </div>\n      <div className=\"profileCard\">\n        <div>\n          <h2>{props.profile.name}</h2>\n          <p>{props.profile.dept}</p>\n        </div>\n        <Flex\n          width=\"100%\"\n          fontSize=\"20px\"\n          p={3}\n          color=\"#111\"\n          justifyContent=\"space-evenly\"\n        >\n          <a\n            target=\"_blank\"\n            href={`https://api.whatsapp.com/send?phone=91${props.profile.social_links.contact}&text=&source=&data=&app_absent=`}\n          >\n            <FaWhatsapp />\n          </a>\n          <a target=\"_blank\" href={props.profile.social_links.linkedIn}>\n            <FaLinkedin />\n          </a>\n          <a\n            target=\"_blank\"\n            href={\"mailto:\" + props.profile.social_links.shastraMailId}\n          >\n            <FaEnvelope />\n          </a>\n        </Flex>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","/home/ubuntu/shaastra-general-website/src/components/pages/Exhibitions/Card.tsx",[],"/home/ubuntu/shaastra-general-website/src/components/pages/Exhibitions/Exhibitionsdata.tsx",["709","710"],"import EXHB1 from \"../../../images/Exhibitions/exhb_1.png\";\r\nimport EXHB3 from \"../../../images/Exhibitions/exhb_3.png\";\r\nimport EXHB4 from \"../../../images/Exhibitions/exhb_4.png\";\r\nimport EXHB5 from \"../../../images/Exhibitions/exhb_5.png\";\r\nimport EXHB6 from \"../../../images/Exhibitions/exhb_6.png\";\r\nimport EXHB7 from \"../../../images/Exhibitions/exhb_7.png\";\r\nimport EXHB8 from \"../../../images/Exhibitions/exhb_8.png\";\r\nimport EXHB9 from \"../../../images/Exhibitions/exhb_9.png\";\r\nimport EXHB10 from \"../../../images/Exhibitions/exhb_10.png\";\r\nimport EXHB11 from \"../../../images/Exhibitions/exhb_11.png\";\r\nimport EXHB12 from \"../../../images/Exhibitions/exhb_12.png\";\r\nimport EXHB13 from \"../../../images/Exhibitions/exhb_13.png\";\r\n\r\nexport const CauroselImages = [EXHB3,EXHB4,EXHB9,EXHB10,EXHB11,EXHB12];\r\n\r\nexport const Titlevariants = {\r\n  lhidden:{\r\n    x: \"-100vw\" \r\n  },\r\n  final : {\r\n    x: 0,\r\n    transition:{\r\n      duration : \"1\",\r\n    }\r\n  },\r\n  \r\n}\r\n\r\nexport const AboutusVariants = {\r\n  hidden : {\r\n    opacity : 0\r\n  },\r\n  visible : {\r\n    opacity : 1,\r\n    transition:{\r\n      duration : \"2\",\r\n      delay : 1\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport const AboutusData = `Shaastra Exhibitions is a platform to showcase cutting Edge technology.\r\nExhibitions provide an opportunity for a large number of buyers and sellers in an industry to interact with\r\neach other.\r\nThey are responsible for conveying the ideas of the participants from a \r\n technologically practical perspective and as well as give the audience a \r\n glimpse into the  latest developments in technology\r\n They offer an unparalleled and ideal opportunity to showcase innovative products to a broad\r\nspectrum of people.`;\r\n\r\ninterface exhibitions{\r\n    id: string,\r\n    year : string,\r\n    title : string,\r\n    description ?: string,\r\n    image : string\r\n}\r\n\r\nexport const exhibitions : exhibitions[] =[\r\n    {\r\n      id : \"1\",\r\n      year:\"2016\",\r\n      title : \"Vintage Car Exhibition\",\r\n      description : `In collaboration with the Madras Heritage Motoring Club,\r\n       We Presented  a vintage car exhibition. Some automobiles such as, Austin 8, 1952 Topolino, which\r\n       brought about revolution in the industry was presented. `,\r\n      image : EXHB1\r\n    },\r\n    {\r\n      id : \"2\",\r\n      year:\"2017\",\r\n      title : \" NAO: Autonomous humanoid Robot\",\r\n      description:`Manav: India’s first 3D printed humanoid robot which was developed by \r\n      Diwakar Vaish of A-SET training institutes.`,\r\n      image : EXHB10\r\n    },\r\n    {\r\n      id : \"3\",\r\n      year:\"2018\",\r\n      title : \"Defence and Aerospace models from ISRO\",\r\n      description:\"ISRO - GSLV and PSLV models were exhibited at Shaastra Exhibitions.\",\r\n      image : EXHB5\r\n    },\r\n    {\r\n      id : \"4\",\r\n      year:\"2018\",\r\n      title : \"Bike Expo\",\r\n      description : \"Shaastra 2018 unveiled the spectacular technological advancements in motorcycle history with its Bike Expo.\",\r\n      image : EXHB8\r\n    },\r\n    {\r\n      id:\"4\",\r\n      year : \"2019\",\r\n      title:\"International Expo\",\r\n      description : `Shaastra for the first time ever, presents International Exhibitions, in association with the US Consulate General of Chennai. \r\n      The International Exhibits was on three broad perspectives – Academics, Research and Business. `,\r\n      image : EXHB7\r\n    },\r\n    {\r\n      id:\"5\",\r\n      year : \"2020\",\r\n      title:\"Defence Expo\",\r\n      description:`The Defence Expo was an exhibition of the products of nascent defence technology start-ups,established\r\n      manufacturers,Defence PSUs and the Indian Armed Forces.It was conducted over the course of the 4 days of Shaastra 2020.\r\n      The Expo provided exposure to Defence Technology for the audience.`,\r\n      image : EXHB6\r\n    }\r\n  ];\r\n\r\n  \r\n",{"ruleId":"711","severity":1,"message":"712","line":6,"column":3,"nodeType":"713","messageId":"714","endLine":6,"endColumn":11},{"ruleId":"711","severity":1,"message":"715","line":8,"column":10,"nodeType":"713","messageId":"714","endLine":8,"endColumn":14},{"ruleId":"711","severity":1,"message":"716","line":16,"column":8,"nodeType":"713","messageId":"714","endLine":16,"endColumn":14},{"ruleId":"711","severity":1,"message":"717","line":17,"column":8,"nodeType":"713","messageId":"714","endLine":17,"endColumn":23},{"ruleId":"711","severity":1,"message":"718","line":21,"column":8,"nodeType":"713","messageId":"714","endLine":21,"endColumn":17},{"ruleId":"711","severity":1,"message":"719","line":23,"column":8,"nodeType":"713","messageId":"714","endLine":23,"endColumn":12},{"ruleId":"711","severity":1,"message":"720","line":24,"column":8,"nodeType":"713","messageId":"714","endLine":24,"endColumn":15},{"ruleId":"711","severity":1,"message":"721","line":10,"column":8,"nodeType":"713","messageId":"714","endLine":10,"endColumn":10},{"ruleId":"711","severity":1,"message":"722","line":15,"column":8,"nodeType":"713","messageId":"714","endLine":15,"endColumn":11},{"ruleId":"711","severity":1,"message":"723","line":21,"column":8,"nodeType":"713","messageId":"714","endLine":21,"endColumn":16},{"ruleId":"711","severity":1,"message":"724","line":23,"column":8,"nodeType":"713","messageId":"714","endLine":23,"endColumn":11},{"ruleId":"711","severity":1,"message":"725","line":24,"column":8,"nodeType":"713","messageId":"714","endLine":24,"endColumn":10},{"ruleId":"711","severity":1,"message":"726","line":26,"column":8,"nodeType":"713","messageId":"714","endLine":26,"endColumn":16},{"ruleId":"711","severity":1,"message":"727","line":29,"column":8,"nodeType":"713","messageId":"714","endLine":29,"endColumn":15},{"ruleId":"711","severity":1,"message":"728","line":30,"column":8,"nodeType":"713","messageId":"714","endLine":30,"endColumn":18},{"ruleId":"711","severity":1,"message":"729","line":33,"column":8,"nodeType":"713","messageId":"714","endLine":33,"endColumn":13},{"ruleId":"711","severity":1,"message":"730","line":43,"column":8,"nodeType":"713","messageId":"714","endLine":43,"endColumn":13},{"ruleId":"711","severity":1,"message":"731","line":45,"column":8,"nodeType":"713","messageId":"714","endLine":45,"endColumn":14},{"ruleId":"711","severity":1,"message":"732","line":47,"column":8,"nodeType":"713","messageId":"714","endLine":47,"endColumn":15},{"ruleId":"711","severity":1,"message":"733","line":50,"column":8,"nodeType":"713","messageId":"714","endLine":50,"endColumn":12},{"ruleId":"711","severity":1,"message":"734","line":51,"column":8,"nodeType":"713","messageId":"714","endLine":51,"endColumn":12},{"ruleId":"711","severity":1,"message":"735","line":52,"column":8,"nodeType":"713","messageId":"714","endLine":52,"endColumn":11},{"ruleId":"711","severity":1,"message":"736","line":53,"column":8,"nodeType":"713","messageId":"714","endLine":53,"endColumn":16},{"ruleId":"711","severity":1,"message":"737","line":55,"column":8,"nodeType":"713","messageId":"714","endLine":55,"endColumn":11},{"ruleId":"711","severity":1,"message":"738","line":59,"column":8,"nodeType":"713","messageId":"714","endLine":59,"endColumn":11},{"ruleId":"711","severity":1,"message":"739","line":61,"column":8,"nodeType":"713","messageId":"714","endLine":61,"endColumn":16},{"ruleId":"711","severity":1,"message":"740","line":64,"column":10,"nodeType":"713","messageId":"714","endLine":64,"endColumn":21},{"ruleId":"741","severity":1,"message":"742","line":147,"column":31,"nodeType":"743","messageId":"744","endLine":147,"endColumn":33},{"ruleId":"741","severity":1,"message":"742","line":225,"column":29,"nodeType":"743","messageId":"744","endLine":225,"endColumn":31},{"ruleId":"741","severity":1,"message":"742","line":333,"column":31,"nodeType":"743","messageId":"744","endLine":333,"endColumn":33},{"ruleId":"745","severity":1,"message":"746","line":389,"column":19,"nodeType":"747","endLine":389,"endColumn":31},{"ruleId":"741","severity":1,"message":"742","line":422,"column":31,"nodeType":"743","messageId":"744","endLine":422,"endColumn":33},{"ruleId":"741","severity":1,"message":"742","line":445,"column":31,"nodeType":"743","messageId":"744","endLine":445,"endColumn":33},{"ruleId":"741","severity":1,"message":"742","line":488,"column":31,"nodeType":"743","messageId":"744","endLine":488,"endColumn":33},{"ruleId":"741","severity":1,"message":"742","line":528,"column":31,"nodeType":"743","messageId":"744","endLine":528,"endColumn":33},{"ruleId":"741","severity":1,"message":"742","line":551,"column":31,"nodeType":"743","messageId":"744","endLine":551,"endColumn":33},{"ruleId":"741","severity":1,"message":"742","line":588,"column":31,"nodeType":"743","messageId":"744","endLine":588,"endColumn":33},{"ruleId":"745","severity":1,"message":"746","line":619,"column":19,"nodeType":"747","endLine":619,"endColumn":31},{"ruleId":"741","severity":1,"message":"742","line":654,"column":31,"nodeType":"743","messageId":"744","endLine":654,"endColumn":33},{"ruleId":"711","severity":1,"message":"748","line":7,"column":5,"nodeType":"713","messageId":"714","endLine":7,"endColumn":10},{"ruleId":"711","severity":1,"message":"715","line":8,"column":5,"nodeType":"713","messageId":"714","endLine":8,"endColumn":9},{"ruleId":"711","severity":1,"message":"749","line":10,"column":5,"nodeType":"713","messageId":"714","endLine":10,"endColumn":12},{"ruleId":"711","severity":1,"message":"750","line":11,"column":5,"nodeType":"713","messageId":"714","endLine":11,"endColumn":8},{"ruleId":"711","severity":1,"message":"751","line":12,"column":5,"nodeType":"713","messageId":"714","endLine":12,"endColumn":15},{"ruleId":"711","severity":1,"message":"752","line":13,"column":5,"nodeType":"713","messageId":"714","endLine":13,"endColumn":10},{"ruleId":"711","severity":1,"message":"753","line":15,"column":5,"nodeType":"713","messageId":"714","endLine":15,"endColumn":11},{"ruleId":"711","severity":1,"message":"754","line":16,"column":5,"nodeType":"713","messageId":"714","endLine":16,"endColumn":22},{"ruleId":"711","severity":1,"message":"755","line":17,"column":5,"nodeType":"713","messageId":"714","endLine":17,"endColumn":10},{"ruleId":"711","severity":1,"message":"756","line":18,"column":5,"nodeType":"713","messageId":"714","endLine":18,"endColumn":17},{"ruleId":"711","severity":1,"message":"757","line":19,"column":5,"nodeType":"713","messageId":"714","endLine":19,"endColumn":17},{"ruleId":"711","severity":1,"message":"758","line":20,"column":5,"nodeType":"713","messageId":"714","endLine":20,"endColumn":16},{"ruleId":"711","severity":1,"message":"759","line":21,"column":5,"nodeType":"713","messageId":"714","endLine":21,"endColumn":16},{"ruleId":"711","severity":1,"message":"760","line":22,"column":5,"nodeType":"713","messageId":"714","endLine":22,"endColumn":14},{"ruleId":"711","severity":1,"message":"761","line":23,"column":5,"nodeType":"713","messageId":"714","endLine":23,"endColumn":21},{"ruleId":"711","severity":1,"message":"762","line":24,"column":5,"nodeType":"713","messageId":"714","endLine":24,"endColumn":18},{"ruleId":"711","severity":1,"message":"763","line":25,"column":5,"nodeType":"713","messageId":"714","endLine":25,"endColumn":16},{"ruleId":"711","severity":1,"message":"764","line":26,"column":5,"nodeType":"713","messageId":"714","endLine":26,"endColumn":14},{"ruleId":"711","severity":1,"message":"765","line":27,"column":5,"nodeType":"713","messageId":"714","endLine":27,"endColumn":21},{"ruleId":"711","severity":1,"message":"766","line":28,"column":5,"nodeType":"713","messageId":"714","endLine":28,"endColumn":19},{"ruleId":"711","severity":1,"message":"767","line":30,"column":5,"nodeType":"713","messageId":"714","endLine":30,"endColumn":11},{"ruleId":"711","severity":1,"message":"768","line":31,"column":5,"nodeType":"713","messageId":"714","endLine":31,"endColumn":12},{"ruleId":"711","severity":1,"message":"769","line":32,"column":5,"nodeType":"713","messageId":"714","endLine":32,"endColumn":19},{"ruleId":"711","severity":1,"message":"770","line":33,"column":5,"nodeType":"713","messageId":"714","endLine":33,"endColumn":19},{"ruleId":"711","severity":1,"message":"771","line":34,"column":5,"nodeType":"713","messageId":"714","endLine":34,"endColumn":18},{"ruleId":"711","severity":1,"message":"772","line":35,"column":5,"nodeType":"713","messageId":"714","endLine":35,"endColumn":17},{"ruleId":"711","severity":1,"message":"773","line":36,"column":5,"nodeType":"713","messageId":"714","endLine":36,"endColumn":23},{"ruleId":"711","severity":1,"message":"774","line":37,"column":5,"nodeType":"713","messageId":"714","endLine":37,"endColumn":16},{"ruleId":"711","severity":1,"message":"775","line":38,"column":5,"nodeType":"713","messageId":"714","endLine":38,"endColumn":18},{"ruleId":"711","severity":1,"message":"776","line":39,"column":5,"nodeType":"713","messageId":"714","endLine":39,"endColumn":16},{"ruleId":"777","severity":1,"message":"778","line":59,"column":67,"nodeType":"747","messageId":"779","endLine":59,"endColumn":122,"fix":"780"},{"ruleId":"777","severity":1,"message":"778","line":63,"column":68,"nodeType":"747","messageId":"779","endLine":63,"endColumn":123,"fix":"781"},{"ruleId":"777","severity":1,"message":"778","line":75,"column":66,"nodeType":"747","messageId":"779","endLine":75,"endColumn":121,"fix":"782"},{"ruleId":"777","severity":1,"message":"778","line":79,"column":67,"nodeType":"747","messageId":"779","endLine":79,"endColumn":122,"fix":"783"},{"ruleId":"777","severity":1,"message":"778","line":91,"column":66,"nodeType":"747","messageId":"779","endLine":91,"endColumn":121,"fix":"784"},{"ruleId":"777","severity":1,"message":"778","line":95,"column":67,"nodeType":"747","messageId":"779","endLine":95,"endColumn":122,"fix":"785"},{"ruleId":"777","severity":1,"message":"778","line":107,"column":67,"nodeType":"747","messageId":"779","endLine":107,"endColumn":122,"fix":"786"},{"ruleId":"777","severity":1,"message":"778","line":114,"column":66,"nodeType":"747","messageId":"779","endLine":114,"endColumn":121,"fix":"787"},{"ruleId":"777","severity":1,"message":"778","line":126,"column":67,"nodeType":"747","messageId":"779","endLine":126,"endColumn":122,"fix":"788"},{"ruleId":"777","severity":1,"message":"778","line":133,"column":67,"nodeType":"747","messageId":"779","endLine":133,"endColumn":122,"fix":"789"},{"ruleId":"711","severity":1,"message":"790","line":21,"column":10,"nodeType":"713","messageId":"714","endLine":21,"endColumn":17},{"ruleId":"711","severity":1,"message":"791","line":21,"column":18,"nodeType":"713","messageId":"714","endLine":21,"endColumn":28},{"ruleId":"711","severity":1,"message":"792","line":22,"column":9,"nodeType":"713","messageId":"714","endLine":22,"endColumn":15},{"ruleId":"793","severity":1,"message":"794","line":47,"column":6,"nodeType":"795","endLine":47,"endColumn":14,"suggestions":"796"},{"ruleId":"777","severity":1,"message":"778","line":74,"column":13,"nodeType":"747","messageId":"779","endLine":74,"endColumn":71,"fix":"797"},{"ruleId":"711","severity":1,"message":"748","line":5,"column":3,"nodeType":"713","messageId":"714","endLine":5,"endColumn":8},{"ruleId":"711","severity":1,"message":"798","line":15,"column":8,"nodeType":"713","messageId":"714","endLine":15,"endColumn":17},{"ruleId":"711","severity":1,"message":"799","line":17,"column":28,"nodeType":"713","messageId":"714","endLine":17,"endColumn":37},{"ruleId":"711","severity":1,"message":"800","line":18,"column":28,"nodeType":"713","messageId":"714","endLine":18,"endColumn":37},{"ruleId":"711","severity":1,"message":"801","line":20,"column":8,"nodeType":"713","messageId":"714","endLine":20,"endColumn":14},{"ruleId":"711","severity":1,"message":"751","line":12,"column":5,"nodeType":"713","messageId":"714","endLine":12,"endColumn":15},{"ruleId":"711","severity":1,"message":"752","line":13,"column":5,"nodeType":"713","messageId":"714","endLine":13,"endColumn":10},{"ruleId":"711","severity":1,"message":"802","line":31,"column":10,"nodeType":"713","messageId":"714","endLine":31,"endColumn":16},{"ruleId":"711","severity":1,"message":"803","line":39,"column":10,"nodeType":"713","messageId":"714","endLine":39,"endColumn":15},{"ruleId":"711","severity":1,"message":"804","line":59,"column":10,"nodeType":"713","messageId":"714","endLine":59,"endColumn":16},{"ruleId":"711","severity":1,"message":"805","line":71,"column":13,"nodeType":"713","messageId":"714","endLine":71,"endColumn":19},{"ruleId":"711","severity":1,"message":"806","line":71,"column":21,"nodeType":"713","messageId":"714","endLine":71,"endColumn":27},{"ruleId":"711","severity":1,"message":"807","line":71,"column":29,"nodeType":"713","messageId":"714","endLine":71,"endColumn":36},{"ruleId":"711","severity":1,"message":"808","line":88,"column":9,"nodeType":"713","messageId":"714","endLine":88,"endColumn":16},{"ruleId":"711","severity":1,"message":"809","line":2,"column":10,"nodeType":"713","messageId":"714","endLine":2,"endColumn":14},{"ruleId":"711","severity":1,"message":"810","line":2,"column":16,"nodeType":"713","messageId":"714","endLine":2,"endColumn":22},{"ruleId":"711","severity":1,"message":"811","line":2,"column":24,"nodeType":"713","messageId":"714","endLine":2,"endColumn":28},{"ruleId":"711","severity":1,"message":"812","line":2,"column":49,"nodeType":"713","messageId":"714","endLine":2,"endColumn":53},{"ruleId":"711","severity":1,"message":"813","line":19,"column":9,"nodeType":"713","messageId":"714","endLine":19,"endColumn":13},{"ruleId":"711","severity":1,"message":"814","line":349,"column":13,"nodeType":"713","messageId":"714","endLine":349,"endColumn":18},{"ruleId":"711","severity":1,"message":"809","line":3,"column":3,"nodeType":"713","messageId":"714","endLine":3,"endColumn":7},{"ruleId":"711","severity":1,"message":"815","line":14,"column":8,"nodeType":"713","messageId":"714","endLine":14,"endColumn":10},{"ruleId":"711","severity":1,"message":"816","line":27,"column":10,"nodeType":"713","messageId":"714","endLine":27,"endColumn":26},{"ruleId":"711","severity":1,"message":"817","line":27,"column":28,"nodeType":"713","messageId":"714","endLine":27,"endColumn":51},{"ruleId":"711","severity":1,"message":"818","line":33,"column":9,"nodeType":"713","messageId":"714","endLine":33,"endColumn":17},{"ruleId":"711","severity":1,"message":"767","line":6,"column":3,"nodeType":"713","messageId":"714","endLine":6,"endColumn":9},{"ruleId":"711","severity":1,"message":"819","line":10,"column":3,"nodeType":"713","messageId":"714","endLine":10,"endColumn":13},{"ruleId":"711","severity":1,"message":"820","line":11,"column":3,"nodeType":"713","messageId":"714","endLine":11,"endColumn":12},{"ruleId":"711","severity":1,"message":"821","line":30,"column":8,"nodeType":"713","messageId":"714","endLine":30,"endColumn":15},{"ruleId":"711","severity":1,"message":"754","line":31,"column":10,"nodeType":"713","messageId":"714","endLine":31,"endColumn":27},{"ruleId":"777","severity":1,"message":"778","line":59,"column":15,"nodeType":"747","messageId":"779","endLine":59,"endColumn":71,"fix":"822"},{"ruleId":"711","severity":1,"message":"715","line":23,"column":10,"nodeType":"713","messageId":"714","endLine":23,"endColumn":14},{"ruleId":"777","severity":1,"message":"778","line":54,"column":11,"nodeType":"747","messageId":"779","endLine":54,"endColumn":67,"fix":"823"},{"ruleId":"711","severity":1,"message":"824","line":4,"column":12,"nodeType":"713","messageId":"714","endLine":4,"endColumn":17},{"ruleId":"711","severity":1,"message":"812","line":5,"column":5,"nodeType":"713","messageId":"714","endLine":5,"endColumn":9},{"ruleId":"711","severity":1,"message":"715","line":6,"column":5,"nodeType":"713","messageId":"714","endLine":6,"endColumn":9},{"ruleId":"711","severity":1,"message":"825","line":7,"column":10,"nodeType":"713","messageId":"714","endLine":7,"endColumn":16},{"ruleId":"711","severity":1,"message":"826","line":9,"column":5,"nodeType":"713","messageId":"714","endLine":9,"endColumn":10},{"ruleId":"711","severity":1,"message":"753","line":10,"column":5,"nodeType":"713","messageId":"714","endLine":10,"endColumn":11},{"ruleId":"711","severity":1,"message":"767","line":12,"column":5,"nodeType":"713","messageId":"714","endLine":12,"endColumn":11},{"ruleId":"711","severity":1,"message":"764","line":13,"column":5,"nodeType":"713","messageId":"714","endLine":13,"endColumn":14},{"ruleId":"711","severity":1,"message":"827","line":14,"column":5,"nodeType":"713","messageId":"714","endLine":14,"endColumn":10},{"ruleId":"711","severity":1,"message":"828","line":15,"column":5,"nodeType":"713","messageId":"714","endLine":15,"endColumn":14},{"ruleId":"711","severity":1,"message":"829","line":20,"column":8,"nodeType":"713","messageId":"714","endLine":20,"endColumn":23},{"ruleId":"711","severity":1,"message":"830","line":24,"column":10,"nodeType":"713","messageId":"714","endLine":24,"endColumn":15},{"ruleId":"711","severity":1,"message":"831","line":24,"column":36,"nodeType":"713","messageId":"714","endLine":24,"endColumn":61},{"ruleId":"711","severity":1,"message":"832","line":25,"column":8,"nodeType":"713","messageId":"714","endLine":25,"endColumn":11},{"ruleId":"711","severity":1,"message":"833","line":27,"column":8,"nodeType":"713","messageId":"714","endLine":27,"endColumn":19},{"ruleId":"711","severity":1,"message":"834","line":33,"column":11,"nodeType":"713","messageId":"714","endLine":33,"endColumn":17},{"ruleId":"711","severity":1,"message":"835","line":34,"column":11,"nodeType":"713","messageId":"714","endLine":34,"endColumn":15},{"ruleId":"711","severity":1,"message":"836","line":35,"column":11,"nodeType":"713","messageId":"714","endLine":35,"endColumn":19},{"ruleId":"711","severity":1,"message":"837","line":36,"column":11,"nodeType":"713","messageId":"714","endLine":36,"endColumn":17},{"ruleId":"711","severity":1,"message":"838","line":38,"column":19,"nodeType":"713","messageId":"714","endLine":38,"endColumn":26},{"ruleId":"711","severity":1,"message":"839","line":38,"column":28,"nodeType":"713","messageId":"714","endLine":38,"endColumn":33},{"ruleId":"711","severity":1,"message":"809","line":3,"column":3,"nodeType":"713","messageId":"714","endLine":3,"endColumn":7},{"ruleId":"711","severity":1,"message":"715","line":6,"column":3,"nodeType":"713","messageId":"714","endLine":6,"endColumn":7},{"ruleId":"711","severity":1,"message":"826","line":12,"column":3,"nodeType":"713","messageId":"714","endLine":12,"endColumn":8},{"ruleId":"711","severity":1,"message":"759","line":21,"column":3,"nodeType":"713","messageId":"714","endLine":21,"endColumn":14},{"ruleId":"711","severity":1,"message":"760","line":22,"column":3,"nodeType":"713","messageId":"714","endLine":22,"endColumn":12},{"ruleId":"711","severity":1,"message":"840","line":59,"column":10,"nodeType":"713","messageId":"714","endLine":59,"endColumn":15},{"ruleId":"711","severity":1,"message":"841","line":59,"column":17,"nodeType":"713","messageId":"714","endLine":59,"endColumn":25},{"ruleId":"711","severity":1,"message":"842","line":65,"column":23,"nodeType":"713","messageId":"714","endLine":65,"endColumn":37},{"ruleId":"711","severity":1,"message":"843","line":82,"column":9,"nodeType":"713","messageId":"714","endLine":82,"endColumn":21},{"ruleId":"711","severity":1,"message":"805","line":125,"column":9,"nodeType":"713","messageId":"714","endLine":125,"endColumn":15},{"ruleId":"711","severity":1,"message":"806","line":125,"column":17,"nodeType":"713","messageId":"714","endLine":125,"endColumn":23},{"ruleId":"741","severity":1,"message":"844","line":549,"column":25,"nodeType":"743","messageId":"744","endLine":549,"endColumn":27},{"ruleId":"711","severity":1,"message":"715","line":6,"column":5,"nodeType":"713","messageId":"714","endLine":6,"endColumn":9},{"ruleId":"711","severity":1,"message":"826","line":12,"column":5,"nodeType":"713","messageId":"714","endLine":12,"endColumn":10},{"ruleId":"711","severity":1,"message":"754","line":17,"column":5,"nodeType":"713","messageId":"714","endLine":17,"endColumn":22},{"ruleId":"711","severity":1,"message":"759","line":22,"column":5,"nodeType":"713","messageId":"714","endLine":22,"endColumn":16},{"ruleId":"711","severity":1,"message":"760","line":23,"column":5,"nodeType":"713","messageId":"714","endLine":23,"endColumn":14},{"ruleId":"711","severity":1,"message":"845","line":38,"column":7,"nodeType":"713","messageId":"714","endLine":38,"endColumn":17},{"ruleId":"711","severity":1,"message":"846","line":39,"column":7,"nodeType":"713","messageId":"714","endLine":39,"endColumn":19},{"ruleId":"711","severity":1,"message":"842","line":69,"column":25,"nodeType":"713","messageId":"714","endLine":69,"endColumn":39},{"ruleId":"711","severity":1,"message":"805","line":117,"column":11,"nodeType":"713","messageId":"714","endLine":117,"endColumn":17},{"ruleId":"711","severity":1,"message":"806","line":117,"column":19,"nodeType":"713","messageId":"714","endLine":117,"endColumn":25},{"ruleId":"711","severity":1,"message":"809","line":3,"column":5,"nodeType":"713","messageId":"714","endLine":3,"endColumn":9},{"ruleId":"711","severity":1,"message":"824","line":9,"column":4,"nodeType":"713","messageId":"714","endLine":9,"endColumn":9},{"ruleId":"711","severity":1,"message":"826","line":10,"column":5,"nodeType":"713","messageId":"714","endLine":10,"endColumn":10},{"ruleId":"711","severity":1,"message":"754","line":12,"column":5,"nodeType":"713","messageId":"714","endLine":12,"endColumn":22},{"ruleId":"711","severity":1,"message":"755","line":13,"column":5,"nodeType":"713","messageId":"714","endLine":13,"endColumn":10},{"ruleId":"711","severity":1,"message":"756","line":14,"column":5,"nodeType":"713","messageId":"714","endLine":14,"endColumn":17},{"ruleId":"711","severity":1,"message":"757","line":15,"column":5,"nodeType":"713","messageId":"714","endLine":15,"endColumn":17},{"ruleId":"711","severity":1,"message":"758","line":16,"column":5,"nodeType":"713","messageId":"714","endLine":16,"endColumn":16},{"ruleId":"711","severity":1,"message":"759","line":17,"column":5,"nodeType":"713","messageId":"714","endLine":17,"endColumn":16},{"ruleId":"711","severity":1,"message":"760","line":18,"column":5,"nodeType":"713","messageId":"714","endLine":18,"endColumn":14},{"ruleId":"711","severity":1,"message":"761","line":19,"column":5,"nodeType":"713","messageId":"714","endLine":19,"endColumn":21},{"ruleId":"711","severity":1,"message":"762","line":20,"column":5,"nodeType":"713","messageId":"714","endLine":20,"endColumn":18},{"ruleId":"711","severity":1,"message":"847","line":23,"column":10,"nodeType":"713","messageId":"714","endLine":23,"endColumn":17},{"ruleId":"711","severity":1,"message":"848","line":23,"column":29,"nodeType":"713","messageId":"714","endLine":23,"endColumn":38},{"ruleId":"711","severity":1,"message":"849","line":27,"column":56,"nodeType":"713","messageId":"714","endLine":27,"endColumn":79},{"ruleId":"711","severity":1,"message":"850","line":27,"column":81,"nodeType":"713","messageId":"714","endLine":27,"endColumn":97},{"ruleId":"711","severity":1,"message":"851","line":34,"column":12,"nodeType":"713","messageId":"714","endLine":34,"endColumn":17},{"ruleId":"711","severity":1,"message":"852","line":34,"column":19,"nodeType":"713","messageId":"714","endLine":34,"endColumn":27},{"ruleId":"711","severity":1,"message":"838","line":36,"column":18,"nodeType":"713","messageId":"714","endLine":36,"endColumn":25},{"ruleId":"711","severity":1,"message":"839","line":36,"column":27,"nodeType":"713","messageId":"714","endLine":36,"endColumn":32},{"ruleId":"711","severity":1,"message":"853","line":43,"column":35,"nodeType":"713","messageId":"714","endLine":43,"endColumn":41},{"ruleId":"711","severity":1,"message":"854","line":43,"column":51,"nodeType":"713","messageId":"714","endLine":43,"endColumn":59},{"ruleId":"711","severity":1,"message":"748","line":4,"column":3,"nodeType":"713","messageId":"714","endLine":4,"endColumn":8},{"ruleId":"711","severity":1,"message":"855","line":62,"column":9,"nodeType":"713","messageId":"714","endLine":62,"endColumn":16},{"ruleId":"711","severity":1,"message":"853","line":65,"column":12,"nodeType":"713","messageId":"714","endLine":65,"endColumn":18},{"ruleId":"711","severity":1,"message":"854","line":66,"column":14,"nodeType":"713","messageId":"714","endLine":66,"endColumn":22},{"ruleId":"711","severity":1,"message":"818","line":87,"column":9,"nodeType":"713","messageId":"714","endLine":87,"endColumn":17},{"ruleId":"741","severity":1,"message":"844","line":194,"column":32,"nodeType":"743","messageId":"744","endLine":194,"endColumn":34},{"ruleId":"741","severity":1,"message":"844","line":368,"column":45,"nodeType":"743","messageId":"744","endLine":368,"endColumn":47},{"ruleId":"711","severity":1,"message":"810","line":10,"column":5,"nodeType":"713","messageId":"714","endLine":10,"endColumn":11},{"ruleId":"711","severity":1,"message":"715","line":12,"column":5,"nodeType":"713","messageId":"714","endLine":12,"endColumn":9},{"ruleId":"711","severity":1,"message":"753","line":13,"column":5,"nodeType":"713","messageId":"714","endLine":13,"endColumn":11},{"ruleId":"711","severity":1,"message":"856","line":18,"column":10,"nodeType":"713","messageId":"714","endLine":18,"endColumn":16},{"ruleId":"711","severity":1,"message":"857","line":19,"column":8,"nodeType":"713","messageId":"714","endLine":19,"endColumn":11},{"ruleId":"711","severity":1,"message":"748","line":4,"column":5,"nodeType":"713","messageId":"714","endLine":4,"endColumn":10},{"ruleId":"711","severity":1,"message":"764","line":11,"column":5,"nodeType":"713","messageId":"714","endLine":11,"endColumn":14},{"ruleId":"711","severity":1,"message":"763","line":12,"column":5,"nodeType":"713","messageId":"714","endLine":12,"endColumn":16},{"ruleId":"711","severity":1,"message":"759","line":19,"column":5,"nodeType":"713","messageId":"714","endLine":19,"endColumn":16},{"ruleId":"711","severity":1,"message":"858","line":30,"column":10,"nodeType":"713","messageId":"714","endLine":30,"endColumn":20},{"ruleId":"711","severity":1,"message":"805","line":44,"column":11,"nodeType":"713","messageId":"714","endLine":44,"endColumn":17},{"ruleId":"711","severity":1,"message":"806","line":44,"column":19,"nodeType":"713","messageId":"714","endLine":44,"endColumn":25},{"ruleId":"711","severity":1,"message":"748","line":4,"column":5,"nodeType":"713","messageId":"714","endLine":4,"endColumn":10},{"ruleId":"711","severity":1,"message":"715","line":6,"column":5,"nodeType":"713","messageId":"714","endLine":6,"endColumn":9},{"ruleId":"711","severity":1,"message":"764","line":11,"column":5,"nodeType":"713","messageId":"714","endLine":11,"endColumn":14},{"ruleId":"711","severity":1,"message":"763","line":12,"column":5,"nodeType":"713","messageId":"714","endLine":12,"endColumn":16},{"ruleId":"711","severity":1,"message":"759","line":19,"column":5,"nodeType":"713","messageId":"714","endLine":19,"endColumn":16},{"ruleId":"711","severity":1,"message":"859","line":31,"column":37,"nodeType":"713","messageId":"714","endLine":31,"endColumn":70},{"ruleId":"711","severity":1,"message":"805","line":42,"column":11,"nodeType":"713","messageId":"714","endLine":42,"endColumn":17},{"ruleId":"711","severity":1,"message":"806","line":42,"column":19,"nodeType":"713","messageId":"714","endLine":42,"endColumn":25},{"ruleId":"711","severity":1,"message":"748","line":4,"column":5,"nodeType":"713","messageId":"714","endLine":4,"endColumn":10},{"ruleId":"711","severity":1,"message":"764","line":12,"column":5,"nodeType":"713","messageId":"714","endLine":12,"endColumn":14},{"ruleId":"711","severity":1,"message":"763","line":13,"column":5,"nodeType":"713","messageId":"714","endLine":13,"endColumn":16},{"ruleId":"711","severity":1,"message":"759","line":20,"column":5,"nodeType":"713","messageId":"714","endLine":20,"endColumn":16},{"ruleId":"711","severity":1,"message":"805","line":57,"column":11,"nodeType":"713","messageId":"714","endLine":57,"endColumn":17},{"ruleId":"711","severity":1,"message":"806","line":57,"column":19,"nodeType":"713","messageId":"714","endLine":57,"endColumn":25},{"ruleId":"711","severity":1,"message":"748","line":4,"column":5,"nodeType":"713","messageId":"714","endLine":4,"endColumn":10},{"ruleId":"711","severity":1,"message":"715","line":6,"column":5,"nodeType":"713","messageId":"714","endLine":6,"endColumn":9},{"ruleId":"711","severity":1,"message":"764","line":11,"column":5,"nodeType":"713","messageId":"714","endLine":11,"endColumn":14},{"ruleId":"711","severity":1,"message":"763","line":12,"column":5,"nodeType":"713","messageId":"714","endLine":12,"endColumn":16},{"ruleId":"711","severity":1,"message":"759","line":19,"column":5,"nodeType":"713","messageId":"714","endLine":19,"endColumn":16},{"ruleId":"711","severity":1,"message":"860","line":29,"column":22,"nodeType":"713","messageId":"714","endLine":29,"endColumn":31},{"ruleId":"711","severity":1,"message":"805","line":43,"column":11,"nodeType":"713","messageId":"714","endLine":43,"endColumn":17},{"ruleId":"711","severity":1,"message":"806","line":43,"column":19,"nodeType":"713","messageId":"714","endLine":43,"endColumn":25},{"ruleId":"711","severity":1,"message":"861","line":1,"column":17,"nodeType":"713","messageId":"714","endLine":1,"endColumn":26},{"ruleId":"711","severity":1,"message":"759","line":7,"column":5,"nodeType":"713","messageId":"714","endLine":7,"endColumn":16},{"ruleId":"711","severity":1,"message":"819","line":12,"column":5,"nodeType":"713","messageId":"714","endLine":12,"endColumn":15},{"ruleId":"711","severity":1,"message":"764","line":16,"column":5,"nodeType":"713","messageId":"714","endLine":16,"endColumn":14},{"ruleId":"711","severity":1,"message":"862","line":28,"column":10,"nodeType":"713","messageId":"714","endLine":28,"endColumn":18},{"ruleId":"711","severity":1,"message":"860","line":30,"column":10,"nodeType":"713","messageId":"714","endLine":30,"endColumn":19},{"ruleId":"711","severity":1,"message":"863","line":40,"column":25,"nodeType":"713","messageId":"714","endLine":40,"endColumn":29},{"ruleId":"711","severity":1,"message":"805","line":76,"column":11,"nodeType":"713","messageId":"714","endLine":76,"endColumn":17},{"ruleId":"711","severity":1,"message":"806","line":76,"column":19,"nodeType":"713","messageId":"714","endLine":76,"endColumn":25},{"ruleId":"711","severity":1,"message":"861","line":1,"column":17,"nodeType":"713","messageId":"714","endLine":1,"endColumn":26},{"ruleId":"711","severity":1,"message":"748","line":4,"column":5,"nodeType":"713","messageId":"714","endLine":4,"endColumn":10},{"ruleId":"711","severity":1,"message":"812","line":5,"column":5,"nodeType":"713","messageId":"714","endLine":5,"endColumn":9},{"ruleId":"711","severity":1,"message":"715","line":6,"column":5,"nodeType":"713","messageId":"714","endLine":6,"endColumn":9},{"ruleId":"711","severity":1,"message":"750","line":7,"column":5,"nodeType":"713","messageId":"714","endLine":7,"endColumn":8},{"ruleId":"711","severity":1,"message":"864","line":8,"column":5,"nodeType":"713","messageId":"714","endLine":8,"endColumn":12},{"ruleId":"711","severity":1,"message":"824","line":9,"column":5,"nodeType":"713","messageId":"714","endLine":9,"endColumn":10},{"ruleId":"711","severity":1,"message":"753","line":10,"column":5,"nodeType":"713","messageId":"714","endLine":10,"endColumn":11},{"ruleId":"711","severity":1,"message":"764","line":11,"column":5,"nodeType":"713","messageId":"714","endLine":11,"endColumn":14},{"ruleId":"711","severity":1,"message":"763","line":12,"column":5,"nodeType":"713","messageId":"714","endLine":12,"endColumn":16},{"ruleId":"711","severity":1,"message":"754","line":14,"column":5,"nodeType":"713","messageId":"714","endLine":14,"endColumn":22},{"ruleId":"711","severity":1,"message":"759","line":19,"column":5,"nodeType":"713","messageId":"714","endLine":19,"endColumn":16},{"ruleId":"711","severity":1,"message":"815","line":25,"column":8,"nodeType":"713","messageId":"714","endLine":25,"endColumn":10},{"ruleId":"711","severity":1,"message":"865","line":26,"column":8,"nodeType":"713","messageId":"714","endLine":26,"endColumn":17},{"ruleId":"711","severity":1,"message":"866","line":27,"column":8,"nodeType":"713","messageId":"714","endLine":27,"endColumn":14},{"ruleId":"711","severity":1,"message":"858","line":28,"column":10,"nodeType":"713","messageId":"714","endLine":28,"endColumn":20},{"ruleId":"711","severity":1,"message":"867","line":28,"column":22,"nodeType":"713","messageId":"714","endLine":28,"endColumn":38},{"ruleId":"711","severity":1,"message":"868","line":28,"column":63,"nodeType":"713","messageId":"714","endLine":28,"endColumn":84},{"ruleId":"711","severity":1,"message":"862","line":29,"column":10,"nodeType":"713","messageId":"714","endLine":29,"endColumn":18},{"ruleId":"711","severity":1,"message":"869","line":32,"column":10,"nodeType":"713","messageId":"714","endLine":32,"endColumn":16},{"ruleId":"711","severity":1,"message":"870","line":37,"column":12,"nodeType":"713","messageId":"714","endLine":37,"endColumn":17},{"ruleId":"711","severity":1,"message":"805","line":49,"column":11,"nodeType":"713","messageId":"714","endLine":49,"endColumn":17},{"ruleId":"711","severity":1,"message":"806","line":49,"column":19,"nodeType":"713","messageId":"714","endLine":49,"endColumn":25},{"ruleId":"711","severity":1,"message":"871","line":1,"column":17,"nodeType":"713","messageId":"714","endLine":1,"endColumn":26},{"ruleId":"711","severity":1,"message":"824","line":7,"column":5,"nodeType":"713","messageId":"714","endLine":7,"endColumn":10},{"ruleId":"711","severity":1,"message":"751","line":9,"column":5,"nodeType":"713","messageId":"714","endLine":9,"endColumn":15},{"ruleId":"711","severity":1,"message":"752","line":10,"column":5,"nodeType":"713","messageId":"714","endLine":10,"endColumn":10},{"ruleId":"711","severity":1,"message":"754","line":13,"column":5,"nodeType":"713","messageId":"714","endLine":13,"endColumn":22},{"ruleId":"711","severity":1,"message":"759","line":18,"column":5,"nodeType":"713","messageId":"714","endLine":18,"endColumn":16},{"ruleId":"711","severity":1,"message":"760","line":19,"column":5,"nodeType":"713","messageId":"714","endLine":19,"endColumn":14},{"ruleId":"711","severity":1,"message":"763","line":22,"column":5,"nodeType":"713","messageId":"714","endLine":22,"endColumn":16},{"ruleId":"711","severity":1,"message":"764","line":23,"column":5,"nodeType":"713","messageId":"714","endLine":23,"endColumn":14},{"ruleId":"711","severity":1,"message":"765","line":24,"column":5,"nodeType":"713","messageId":"714","endLine":24,"endColumn":21},{"ruleId":"711","severity":1,"message":"766","line":25,"column":5,"nodeType":"713","messageId":"714","endLine":25,"endColumn":19},{"ruleId":"711","severity":1,"message":"767","line":27,"column":5,"nodeType":"713","messageId":"714","endLine":27,"endColumn":11},{"ruleId":"711","severity":1,"message":"775","line":35,"column":5,"nodeType":"713","messageId":"714","endLine":35,"endColumn":18},{"ruleId":"711","severity":1,"message":"776","line":36,"column":5,"nodeType":"713","messageId":"714","endLine":36,"endColumn":16},{"ruleId":"711","severity":1,"message":"847","line":38,"column":10,"nodeType":"713","messageId":"714","endLine":38,"endColumn":17},{"ruleId":"711","severity":1,"message":"848","line":38,"column":19,"nodeType":"713","messageId":"714","endLine":38,"endColumn":28},{"ruleId":"711","severity":1,"message":"862","line":39,"column":10,"nodeType":"713","messageId":"714","endLine":39,"endColumn":18},{"ruleId":"711","severity":1,"message":"805","line":64,"column":11,"nodeType":"713","messageId":"714","endLine":64,"endColumn":17},{"ruleId":"711","severity":1,"message":"806","line":64,"column":19,"nodeType":"713","messageId":"714","endLine":64,"endColumn":25},{"ruleId":"711","severity":1,"message":"751","line":9,"column":5,"nodeType":"713","messageId":"714","endLine":9,"endColumn":15},{"ruleId":"711","severity":1,"message":"752","line":10,"column":5,"nodeType":"713","messageId":"714","endLine":10,"endColumn":10},{"ruleId":"711","severity":1,"message":"754","line":13,"column":5,"nodeType":"713","messageId":"714","endLine":13,"endColumn":22},{"ruleId":"711","severity":1,"message":"759","line":18,"column":5,"nodeType":"713","messageId":"714","endLine":18,"endColumn":16},{"ruleId":"711","severity":1,"message":"765","line":25,"column":5,"nodeType":"713","messageId":"714","endLine":25,"endColumn":21},{"ruleId":"711","severity":1,"message":"766","line":26,"column":5,"nodeType":"713","messageId":"714","endLine":26,"endColumn":19},{"ruleId":"711","severity":1,"message":"847","line":29,"column":10,"nodeType":"713","messageId":"714","endLine":29,"endColumn":17},{"ruleId":"711","severity":1,"message":"848","line":29,"column":19,"nodeType":"713","messageId":"714","endLine":29,"endColumn":28},{"ruleId":"711","severity":1,"message":"872","line":40,"column":10,"nodeType":"713","messageId":"714","endLine":40,"endColumn":16},{"ruleId":"711","severity":1,"message":"873","line":40,"column":18,"nodeType":"713","messageId":"714","endLine":40,"endColumn":29},{"ruleId":"711","severity":1,"message":"874","line":49,"column":10,"nodeType":"713","messageId":"714","endLine":49,"endColumn":18},{"ruleId":"711","severity":1,"message":"875","line":60,"column":33,"nodeType":"713","messageId":"714","endLine":60,"endColumn":44},{"ruleId":"711","severity":1,"message":"876","line":60,"column":53,"nodeType":"713","messageId":"714","endLine":60,"endColumn":62},{"ruleId":"711","severity":1,"message":"877","line":67,"column":12,"nodeType":"713","messageId":"714","endLine":67,"endColumn":18},{"ruleId":"711","severity":1,"message":"878","line":67,"column":20,"nodeType":"713","messageId":"714","endLine":67,"endColumn":29},{"ruleId":"711","severity":1,"message":"805","line":76,"column":11,"nodeType":"713","messageId":"714","endLine":76,"endColumn":17},{"ruleId":"711","severity":1,"message":"806","line":76,"column":19,"nodeType":"713","messageId":"714","endLine":76,"endColumn":25},{"ruleId":"711","severity":1,"message":"755","line":13,"column":3,"nodeType":"713","messageId":"714","endLine":13,"endColumn":8},{"ruleId":"711","severity":1,"message":"761","line":14,"column":3,"nodeType":"713","messageId":"714","endLine":14,"endColumn":19},{"ruleId":"711","severity":1,"message":"757","line":15,"column":3,"nodeType":"713","messageId":"714","endLine":15,"endColumn":15},{"ruleId":"711","severity":1,"message":"758","line":16,"column":3,"nodeType":"713","messageId":"714","endLine":16,"endColumn":14},{"ruleId":"711","severity":1,"message":"756","line":17,"column":3,"nodeType":"713","messageId":"714","endLine":17,"endColumn":15},{"ruleId":"711","severity":1,"message":"805","line":45,"column":9,"nodeType":"713","messageId":"714","endLine":45,"endColumn":15},{"ruleId":"711","severity":1,"message":"806","line":45,"column":17,"nodeType":"713","messageId":"714","endLine":45,"endColumn":23},{"ruleId":"711","severity":1,"message":"807","line":45,"column":25,"nodeType":"713","messageId":"714","endLine":45,"endColumn":32},{"ruleId":"711","severity":1,"message":"809","line":2,"column":10,"nodeType":"713","messageId":"714","endLine":2,"endColumn":14},{"ruleId":"711","severity":1,"message":"810","line":2,"column":16,"nodeType":"713","messageId":"714","endLine":2,"endColumn":22},{"ruleId":"711","severity":1,"message":"811","line":2,"column":24,"nodeType":"713","messageId":"714","endLine":2,"endColumn":28},{"ruleId":"711","severity":1,"message":"812","line":2,"column":49,"nodeType":"713","messageId":"714","endLine":2,"endColumn":53},{"ruleId":"711","severity":1,"message":"879","line":41,"column":8,"nodeType":"713","messageId":"714","endLine":41,"endColumn":11},{"ruleId":"711","severity":1,"message":"802","line":42,"column":8,"nodeType":"713","messageId":"714","endLine":42,"endColumn":14},{"ruleId":"711","severity":1,"message":"880","line":43,"column":8,"nodeType":"713","messageId":"714","endLine":43,"endColumn":15},{"ruleId":"711","severity":1,"message":"881","line":44,"column":8,"nodeType":"713","messageId":"714","endLine":44,"endColumn":16},{"ruleId":"711","severity":1,"message":"882","line":45,"column":8,"nodeType":"713","messageId":"714","endLine":45,"endColumn":14},{"ruleId":"711","severity":1,"message":"883","line":46,"column":8,"nodeType":"713","messageId":"714","endLine":46,"endColumn":16},{"ruleId":"711","severity":1,"message":"884","line":47,"column":8,"nodeType":"713","messageId":"714","endLine":47,"endColumn":13},{"ruleId":"711","severity":1,"message":"885","line":48,"column":8,"nodeType":"713","messageId":"714","endLine":48,"endColumn":14},{"ruleId":"711","severity":1,"message":"886","line":49,"column":8,"nodeType":"713","messageId":"714","endLine":49,"endColumn":12},{"ruleId":"711","severity":1,"message":"887","line":50,"column":8,"nodeType":"713","messageId":"714","endLine":50,"endColumn":13},{"ruleId":"711","severity":1,"message":"888","line":51,"column":8,"nodeType":"713","messageId":"714","endLine":51,"endColumn":16},{"ruleId":"711","severity":1,"message":"889","line":52,"column":8,"nodeType":"713","messageId":"714","endLine":52,"endColumn":16},{"ruleId":"711","severity":1,"message":"813","line":76,"column":9,"nodeType":"713","messageId":"714","endLine":76,"endColumn":13},{"ruleId":"711","severity":1,"message":"890","line":175,"column":9,"nodeType":"713","messageId":"714","endLine":175,"endColumn":20},{"ruleId":"711","severity":1,"message":"891","line":258,"column":9,"nodeType":"713","messageId":"714","endLine":258,"endColumn":32},{"ruleId":"711","severity":1,"message":"892","line":259,"column":9,"nodeType":"713","messageId":"714","endLine":259,"endColumn":32},{"ruleId":"711","severity":1,"message":"893","line":260,"column":9,"nodeType":"713","messageId":"714","endLine":260,"endColumn":28},{"ruleId":"777","severity":1,"message":"778","line":410,"column":13,"nodeType":"747","messageId":"779","endLine":413,"endColumn":14,"fix":"894"},{"ruleId":"777","severity":1,"message":"778","line":417,"column":13,"nodeType":"747","messageId":"779","endLine":420,"endColumn":14,"fix":"895"},{"ruleId":"777","severity":1,"message":"778","line":424,"column":13,"nodeType":"747","messageId":"779","endLine":427,"endColumn":14,"fix":"896"},{"ruleId":"777","severity":1,"message":"778","line":431,"column":13,"nodeType":"747","messageId":"779","endLine":434,"endColumn":14,"fix":"897"},{"ruleId":"777","severity":1,"message":"778","line":613,"column":21,"nodeType":"747","messageId":"779","endLine":613,"endColumn":71,"fix":"898"},{"ruleId":"711","severity":1,"message":"899","line":5,"column":10,"nodeType":"713","messageId":"714","endLine":5,"endColumn":28},{"ruleId":"711","severity":1,"message":"900","line":11,"column":3,"nodeType":"713","messageId":"714","endLine":11,"endColumn":10},{"ruleId":"711","severity":1,"message":"901","line":12,"column":3,"nodeType":"713","messageId":"714","endLine":12,"endColumn":18},{"ruleId":"711","severity":1,"message":"902","line":26,"column":9,"nodeType":"713","messageId":"714","endLine":26,"endColumn":19},{"ruleId":"741","severity":1,"message":"742","line":181,"column":21,"nodeType":"743","messageId":"744","endLine":181,"endColumn":23},{"ruleId":"777","severity":1,"message":"778","line":192,"column":11,"nodeType":"747","messageId":"779","endLine":195,"endColumn":12,"fix":"903"},{"ruleId":"777","severity":1,"message":"778","line":199,"column":11,"nodeType":"747","messageId":"779","endLine":202,"endColumn":12,"fix":"904"},{"ruleId":"777","severity":1,"message":"778","line":206,"column":11,"nodeType":"747","messageId":"779","endLine":209,"endColumn":12,"fix":"905"},{"ruleId":"711","severity":1,"message":"866","line":4,"column":8,"nodeType":"713","messageId":"714","endLine":4,"endColumn":14},{"ruleId":"711","severity":1,"message":"906","line":8,"column":10,"nodeType":"713","messageId":"714","endLine":8,"endColumn":14},{"ruleId":"711","severity":1,"message":"907","line":11,"column":10,"nodeType":"713","messageId":"714","endLine":11,"endColumn":32},{"ruleId":"711","severity":1,"message":"908","line":13,"column":10,"nodeType":"713","messageId":"714","endLine":13,"endColumn":18},{"ruleId":"777","severity":1,"message":"778","line":161,"column":11,"nodeType":"747","messageId":"779","endLine":161,"endColumn":66,"fix":"909"},{"ruleId":"777","severity":1,"message":"778","line":239,"column":11,"nodeType":"747","messageId":"779","endLine":239,"endColumn":69,"fix":"910"},{"ruleId":"777","severity":1,"message":"778","line":297,"column":11,"nodeType":"747","messageId":"779","endLine":297,"endColumn":65,"fix":"911"},{"ruleId":"777","severity":1,"message":"778","line":405,"column":11,"nodeType":"747","messageId":"779","endLine":405,"endColumn":64,"fix":"912"},{"ruleId":"777","severity":1,"message":"778","line":430,"column":11,"nodeType":"747","messageId":"779","endLine":430,"endColumn":69,"fix":"913"},{"ruleId":"777","severity":1,"message":"778","line":445,"column":11,"nodeType":"747","messageId":"779","endLine":445,"endColumn":65,"fix":"914"},{"ruleId":"711","severity":1,"message":"915","line":23,"column":8,"nodeType":"713","messageId":"714","endLine":23,"endColumn":13},{"ruleId":"711","severity":1,"message":"805","line":49,"column":9,"nodeType":"713","messageId":"714","endLine":49,"endColumn":15},{"ruleId":"711","severity":1,"message":"806","line":49,"column":17,"nodeType":"713","messageId":"714","endLine":49,"endColumn":23},{"ruleId":"711","severity":1,"message":"916","line":51,"column":27,"nodeType":"713","messageId":"714","endLine":51,"endColumn":32},{"ruleId":"711","severity":1,"message":"809","line":7,"column":3,"nodeType":"713","messageId":"714","endLine":7,"endColumn":7},{"ruleId":"711","severity":1,"message":"748","line":8,"column":3,"nodeType":"713","messageId":"714","endLine":8,"endColumn":8},{"ruleId":"711","severity":1,"message":"826","line":14,"column":3,"nodeType":"713","messageId":"714","endLine":14,"endColumn":8},{"ruleId":"711","severity":1,"message":"765","line":27,"column":3,"nodeType":"713","messageId":"714","endLine":27,"endColumn":19},{"ruleId":"711","severity":1,"message":"766","line":28,"column":3,"nodeType":"713","messageId":"714","endLine":28,"endColumn":17},{"ruleId":"711","severity":1,"message":"864","line":29,"column":3,"nodeType":"713","messageId":"714","endLine":29,"endColumn":10},{"ruleId":"711","severity":1,"message":"767","line":32,"column":3,"nodeType":"713","messageId":"714","endLine":32,"endColumn":9},{"ruleId":"711","severity":1,"message":"917","line":42,"column":9,"nodeType":"713","messageId":"714","endLine":42,"endColumn":20},{"ruleId":"793","severity":1,"message":"918","line":9,"column":5,"nodeType":"919","endLine":9,"endColumn":20,"suggestions":"920"},{"ruleId":"711","severity":1,"message":"824","line":6,"column":3,"nodeType":"713","messageId":"714","endLine":6,"endColumn":8},{"ruleId":"711","severity":1,"message":"751","line":8,"column":3,"nodeType":"713","messageId":"714","endLine":8,"endColumn":13},{"ruleId":"711","severity":1,"message":"752","line":9,"column":3,"nodeType":"713","messageId":"714","endLine":9,"endColumn":8},{"ruleId":"711","severity":1,"message":"755","line":13,"column":3,"nodeType":"713","messageId":"714","endLine":13,"endColumn":8},{"ruleId":"711","severity":1,"message":"756","line":14,"column":3,"nodeType":"713","messageId":"714","endLine":14,"endColumn":15},{"ruleId":"711","severity":1,"message":"757","line":15,"column":3,"nodeType":"713","messageId":"714","endLine":15,"endColumn":15},{"ruleId":"711","severity":1,"message":"758","line":16,"column":3,"nodeType":"713","messageId":"714","endLine":16,"endColumn":14},{"ruleId":"711","severity":1,"message":"759","line":17,"column":3,"nodeType":"713","messageId":"714","endLine":17,"endColumn":14},{"ruleId":"711","severity":1,"message":"760","line":18,"column":3,"nodeType":"713","messageId":"714","endLine":18,"endColumn":12},{"ruleId":"711","severity":1,"message":"761","line":19,"column":3,"nodeType":"713","messageId":"714","endLine":19,"endColumn":19},{"ruleId":"711","severity":1,"message":"762","line":20,"column":3,"nodeType":"713","messageId":"714","endLine":20,"endColumn":16},{"ruleId":"711","severity":1,"message":"763","line":21,"column":3,"nodeType":"713","messageId":"714","endLine":21,"endColumn":14},{"ruleId":"711","severity":1,"message":"764","line":22,"column":3,"nodeType":"713","messageId":"714","endLine":22,"endColumn":12},{"ruleId":"711","severity":1,"message":"765","line":23,"column":3,"nodeType":"713","messageId":"714","endLine":23,"endColumn":19},{"ruleId":"711","severity":1,"message":"766","line":24,"column":3,"nodeType":"713","messageId":"714","endLine":24,"endColumn":17},{"ruleId":"711","severity":1,"message":"864","line":25,"column":3,"nodeType":"713","messageId":"714","endLine":25,"endColumn":10},{"ruleId":"711","severity":1,"message":"767","line":28,"column":3,"nodeType":"713","messageId":"714","endLine":28,"endColumn":9},{"ruleId":"711","severity":1,"message":"847","line":30,"column":10,"nodeType":"713","messageId":"714","endLine":30,"endColumn":17},{"ruleId":"711","severity":1,"message":"848","line":30,"column":19,"nodeType":"713","messageId":"714","endLine":30,"endColumn":28},{"ruleId":"711","severity":1,"message":"865","line":32,"column":8,"nodeType":"713","messageId":"714","endLine":32,"endColumn":17},{"ruleId":"711","severity":1,"message":"866","line":33,"column":8,"nodeType":"713","messageId":"714","endLine":33,"endColumn":14},{"ruleId":"711","severity":1,"message":"921","line":36,"column":3,"nodeType":"713","messageId":"714","endLine":36,"endColumn":35},{"ruleId":"711","severity":1,"message":"922","line":37,"column":3,"nodeType":"713","messageId":"714","endLine":37,"endColumn":22},{"ruleId":"711","severity":1,"message":"834","line":51,"column":9,"nodeType":"713","messageId":"714","endLine":51,"endColumn":15},{"ruleId":"711","severity":1,"message":"836","line":53,"column":9,"nodeType":"713","messageId":"714","endLine":53,"endColumn":17},{"ruleId":"711","severity":1,"message":"837","line":54,"column":9,"nodeType":"713","messageId":"714","endLine":54,"endColumn":15},{"ruleId":"711","severity":1,"message":"923","line":57,"column":10,"nodeType":"713","messageId":"714","endLine":57,"endColumn":23},{"ruleId":"711","severity":1,"message":"924","line":57,"column":25,"nodeType":"713","messageId":"714","endLine":57,"endColumn":41},{"ruleId":"711","severity":1,"message":"917","line":117,"column":9,"nodeType":"713","messageId":"714","endLine":117,"endColumn":20},{"ruleId":"925","severity":1,"message":"926","line":25,"column":1,"nodeType":"927","endLine":49,"endColumn":3},{"ruleId":"711","severity":1,"message":"928","line":4,"column":3,"nodeType":"713","messageId":"714","endLine":4,"endColumn":11},{"ruleId":"711","severity":1,"message":"929","line":5,"column":3,"nodeType":"713","messageId":"714","endLine":5,"endColumn":12},{"ruleId":"711","severity":1,"message":"930","line":9,"column":3,"nodeType":"713","messageId":"714","endLine":9,"endColumn":14},{"ruleId":"777","severity":1,"message":"778","line":50,"column":13,"nodeType":"747","messageId":"779","endLine":53,"endColumn":14,"fix":"931"},{"ruleId":"777","severity":1,"message":"778","line":56,"column":13,"nodeType":"747","messageId":"779","endLine":56,"endColumn":75,"fix":"932"},{"ruleId":"777","severity":1,"message":"778","line":59,"column":13,"nodeType":"747","messageId":"779","endLine":62,"endColumn":14,"fix":"933"},{"ruleId":"711","severity":1,"message":"928","line":4,"column":3,"nodeType":"713","messageId":"714","endLine":4,"endColumn":11},{"ruleId":"711","severity":1,"message":"929","line":5,"column":3,"nodeType":"713","messageId":"714","endLine":5,"endColumn":12},{"ruleId":"711","severity":1,"message":"934","line":10,"column":3,"nodeType":"713","messageId":"714","endLine":10,"endColumn":19},{"ruleId":"711","severity":1,"message":"930","line":12,"column":3,"nodeType":"713","messageId":"714","endLine":12,"endColumn":14},{"ruleId":"777","severity":1,"message":"778","line":68,"column":11,"nodeType":"747","messageId":"779","endLine":71,"endColumn":12,"fix":"935"},{"ruleId":"777","severity":1,"message":"778","line":74,"column":11,"nodeType":"747","messageId":"779","endLine":74,"endColumn":73,"fix":"936"},{"ruleId":"777","severity":1,"message":"778","line":77,"column":11,"nodeType":"747","messageId":"779","endLine":80,"endColumn":12,"fix":"937"},{"ruleId":"711","severity":1,"message":"938","line":12,"column":8,"nodeType":"713","messageId":"714","endLine":12,"endColumn":14},{"ruleId":"939","severity":1,"message":"940","line":60,"column":14,"nodeType":"713","messageId":"941","endLine":60,"endColumn":41},"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Social' is defined but never used.","'Eventsworkshops' is defined but never used.","'Workshops' is defined but never used.","'Show' is defined but never used.","'Speaker' is defined but never used.","'BW' is defined but never used.","'GOW' is defined but never used.","'Atlasian' is defined but never used.","'CAT' is defined but never used.","'MB' is defined but never used.","'Mahindra' is defined but never used.","'foxmula' is defined but never used.","'innovaccer' is defined but never used.","'kamal' is defined but never used.","'subex' is defined but never used.","'Header' is defined but never used.","'binance' is defined but never used.","'HPCL' is defined but never used.","'catl' is defined but never used.","'www' is defined but never used.","'linkedin' is defined but never used.","'MEW' is defined but never used.","'ADW' is defined but never used.","'facebook' is defined but never used.","'invertScale' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Stack' is defined but never used.","'Tooltip' is defined but never used.","'Box' is defined but never used.","'RadioGroup' is defined but never used.","'Radio' is defined but never used.","'Button' is defined but never used.","'useColorModeValue' is defined but never used.","'Modal' is defined but never used.","'ModalOverlay' is defined but never used.","'ModalContent' is defined but never used.","'ModalHeader' is defined but never used.","'ModalFooter' is defined but never used.","'ModalBody' is defined but never used.","'ModalCloseButton' is defined but never used.","'useDisclosure' is defined but never used.","'FormControl' is defined but never used.","'FormLabel' is defined but never used.","'FormErrorMessage' is defined but never used.","'FormHelperText' is defined but never used.","'Center' is defined but never used.","'Popover' is defined but never used.","'PopoverTrigger' is defined but never used.","'PopoverContent' is defined but never used.","'PopoverHeader' is defined but never used.","'PopoverArrow' is defined but never used.","'PopoverCloseButton' is defined but never used.","'PopoverBody' is defined but never used.","'PopoverFooter' is defined but never used.","'ButtonGroup' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"942","text":"943"},{"range":"944","text":"943"},{"range":"945","text":"943"},{"range":"946","text":"943"},{"range":"947","text":"943"},{"range":"948","text":"943"},{"range":"949","text":"943"},{"range":"950","text":"943"},{"range":"951","text":"943"},{"range":"952","text":"943"},"'current' is assigned a value but never used.","'setCurrent' is assigned a value but never used.","'length' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'CardAnimations' and 'animation'. Either include them or remove the dependency array.","ArrayExpression",["953"],{"range":"954","text":"943"},"'Particles' is defined but never used.","'LogoBlack' is defined but never used.","'LogoWhite' is defined but never used.","'image2' is defined but never used.","'Gloves' is defined but never used.","'About' is defined but never used.","'Broken' is defined but never used.","'isOpen' is assigned a value but never used.","'onOpen' is assigned a value but never used.","'onClose' is assigned a value but never used.","'message' is assigned a value but never used.","'Text' is defined but never used.","'VStack' is defined but never used.","'Code' is defined but never used.","'Flex' is defined but never used.","'Logo' is assigned a value but never used.","'Value' is defined but never used.","'bg' is defined but never used.","'VerticalTimeline' is defined but never used.","'VerticalTimelineElement' is defined but never used.","'timeline' is assigned a value but never used.","'SimpleGrid' is defined but never used.","'Container' is defined but never used.","'summit7' is defined but never used.",{"range":"955","text":"943"},{"range":"956","text":"943"},"'Input' is defined but never used.","'Select' is defined but never used.","'Image' is defined but never used.","'Alert' is defined but never used.","'AlertIcon' is defined but never used.","'CardForWorkShop' is defined but never used.","'Event' is defined but never used.","'useUpdateReferralMutation' is defined but never used.","'bg2' is defined but never used.","'MayhemCombo' is defined but never used.","'search' is assigned a value but never used.","'font' is assigned a value but never used.","'gradient' is assigned a value but never used.","'button' is assigned a value but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'setRadioString' is assigned a value but never used.","'setEventType' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'uploadFile' is assigned a value but never used.","'S3FileUpload' is assigned a value but never used.","'AddIcon' is defined but never used.","'MinusIcon' is defined but never used.","'useGetUsersDataCsvQuery' is defined but never used.","'useGetUsersQuery' is defined but never used.","'event' is assigned a value but never used.","'setEvent' is assigned a value but never used.","'error1' is assigned a value but never used.","'loading1' is assigned a value but never used.","'bgcolor' is assigned a value but never used.","'summit' is defined but never used.","'tif' is defined but never used.","'LoginInput' is defined but never used.","'useResendVerificationMailMutation' is defined but never used.","'useParams' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'data' is assigned a value but never used.","'Heading' is defined but never used.","'CustomBox' is defined but never used.","'Footer' is defined but never used.","'useLoginMutation' is defined but never used.","'useVerifyUserMutation' is defined but never used.","'verify' is defined but never used.","'token' is assigned a value but never used.","'RefObject' is defined but never used.","'Swiper' is defined but never used.","'SwiperSlide' is defined but never used.","'FaSchool' is defined but never used.","'userLoading' is assigned a value but never used.","'userError' is assigned a value but never used.","'number' is assigned a value but never used.","'setNumber' is assigned a value but never used.","'Dan' is defined but never used.","'Harmony' is defined but never used.","'Heimdall' is defined but never used.","'Mirage' is defined but never used.","'Nothwind' is defined but never used.","'Vivek' is defined but never used.","'Reverb' is defined but never used.","'Soda' is defined but never used.","'Kenny' is defined but never used.","'Maraiana' is defined but never used.","'Adeleida' is defined but never used.","'codetochoas' is assigned a value but never used.","'shows_navigationPrevRef' is assigned a value but never used.","'shows_navigationNextRef' is assigned a value but never used.","'shows_paginationRef' is assigned a value but never used.",{"range":"957","text":"943"},{"range":"958","text":"943"},{"range":"959","text":"943"},{"range":"960","text":"943"},{"range":"961","text":"943"},"'useBreakpointValue' is defined but never used.","'FaPhone' is defined but never used.","'FaTwitterSquare' is defined but never used.","'FooterLogo' is assigned a value but never used.",{"range":"962","text":"943"},{"range":"963","text":"943"},{"range":"964","text":"943"},"'time' is defined but never used.","'textChangeRangeNewSpan' is defined but never used.","'UserRole' is defined but never used.",{"range":"965","text":"943"},{"range":"966","text":"943"},{"range":"967","text":"943"},{"range":"968","text":"943"},{"range":"969","text":"943"},{"range":"970","text":"943"},"'axios' is defined but never used.","'data1' is assigned a value but never used.","'buttoncolor' is assigned a value but never used.","React Hook useEffect contains a call to 'setRole'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.","MemberExpression",["971"],"'useCreateTeamandRegisterMutation' is defined but never used.","'useRegisterMutation' is defined but never used.","'referenceCode' is assigned a value but never used.","'setReferenceCode' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'FaGithub' is defined but never used.","'FaTwitter' is defined but never used.","'FaInstagram' is defined but never used.",{"range":"972","text":"943"},{"range":"973","text":"943"},{"range":"974","text":"943"},"'FaWhatsappSquare' is defined but never used.",{"range":"975","text":"943"},{"range":"976","text":"943"},{"range":"977","text":"943"},"'EXHB13' is defined but never used.","@typescript-eslint/no-redeclare","'exhibitions' is already defined.","redeclared",[1868,1868]," rel=\"noreferrer\"",[2219,2219],[2994,2994],[3344,3344],[4099,4099],[4448,4448],[5206,5206],[5754,5754],[6526,6526],[7075,7075],{"desc":"978","fix":"979"},[2807,2807],[3204,3204],[2028,2028],[14360,14360],[14588,14588],[14797,14797],[14990,14990],[21693,21693],[6081,6081],[6295,6295],[6490,6490],[4630,4630],[6862,6862],[8638,8638],[12238,12238],[13167,13167],[13833,13833],{"desc":"980","fix":"981"},[1292,1292],[1426,1426],[1592,1592],[1711,1711],[1837,1837],[1993,1993],"Update the dependencies array to be: [CardAnimations, animation, inView]",{"range":"982","text":"983"},"Add dependencies array: []",{"range":"984","text":"985"},[1694,1702],"[CardAnimations, animation, inView]",[589,589],", []"]
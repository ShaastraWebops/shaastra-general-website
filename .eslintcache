[{"F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\index.tsx":"1","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\reportWebVitals.ts":"2","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\serviceWorker.ts":"3","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\App.tsx":"4","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\styles\\themes\\theme.ts":"5","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\graphql\\index.ts":"6","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\styles\\themes\\components\\drawerStyles.ts":"7","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\styles\\themes\\components\\buttonStyles.ts":"8","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\shared\\Loader.tsx":"9","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\AppRoutes.tsx":"10","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\night\\Show.tsx":"11","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Home.tsx":"12","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Exhibitions\\Exhibitions.tsx":"13","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Events and Workshops\\Tif.tsx":"14","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\spons.tsx":"15","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\socialEndeavours\\SocialEnd.tsx":"16","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Team_page\\Team.tsx":"17","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Events and Workshops\\Summit.tsx":"18","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Speaker\\Speaker.tsx":"19","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\night\\Project.tsx":"20","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\night\\Envisage.tsx":"21","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Events and Workshops\\Events.tsx":"22","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Events and Workshops\\EventsHome.tsx":"23","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Events and Workshops\\EventVertical.tsx":"24","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Events and Workshops\\AddEvent.tsx":"25","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Events and Workshops\\EditEvent.tsx":"26","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Login\\Signup.tsx":"27","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Events and Workshops\\EventPage.tsx":"28","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Login\\Login.tsx":"29","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Events and Workshops\\EventsAdmin.tsx":"30","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Login\\Profile.tsx":"31","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Login\\ForgotAfterLink.tsx":"32","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Login\\SignOut.tsx":"33","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Login\\ForgotPassword.tsx":"34","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Login\\EditProfile.tsx":"35","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Login\\Verify.tsx":"36","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\ShaastraJuniors\\index.tsx":"37","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Speaker\\Image.tsx":"38","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\shared\\Footer.tsx":"39","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\shared\\CustomBox.tsx":"40","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Events and Workshops\\EventFaqs.tsx":"41","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Events and Workshops\\EventVeticalComponent.tsx":"42","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\generated\\graphql.tsx":"43","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\ShaastraJuniors\\SJEvents.tsx":"44","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\ShaastraJuniors\\SJStatsCard.tsx":"45","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\ShaastraJuniors\\SJSponsers.tsx":"46","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\ShaastraJuniors\\SJHome.tsx":"47","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\shared\\Header.tsx":"48","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Events and Workshops\\RegisterNow.tsx":"49","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\ShaastraJuniors\\SJEvent.tsx":"50","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\ShaastraJuniors\\Data.tsx":"51","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\styles\\themes\\ColorModeSwitcher.tsx":"52","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\shared\\Drawer\\CustomDrawer.tsx":"53","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Events and Workshops\\PayRegister.tsx":"54","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\shared\\Drawer\\DrawerMenuItems.tsx":"55","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Login\\branches.ts":"56","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Login\\cities.ts":"57","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Login\\college.ts":"58","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Events and Workshops\\EventsData.tsx":"59","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Team_page\\SliderImgBox.tsx":"60","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Team_page\\Card.tsx":"61","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Team_page\\photos.tsx":"62","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\socialEndeavours\\CustomBoxSE.tsx":"63","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\socialEndeavours\\script.tsx":"64","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Exhibitions\\Exhibitionsdata.tsx":"65","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Exhibitions\\Card.tsx":"66","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\night\\script.tsx":"67","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\socialEndeavours\\HeaderSE.tsx":"68","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\socialEndeavours\\ColorModeSwitcherSE.tsx":"69","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Policies\\Refund.tsx":"70","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Policies\\Shipping.tsx":"71","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Policies\\TermsConditions.tsx":"72","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Policies\\Privacy.tsx":"73"},{"size":1110,"mtime":1639502240013,"results":"74","hashOfConfig":"75"},{"size":431,"mtime":1624084876257,"results":"76","hashOfConfig":"75"},{"size":5404,"mtime":1624084876258,"results":"77","hashOfConfig":"75"},{"size":721,"mtime":1635618889219,"results":"78","hashOfConfig":"75"},{"size":1507,"mtime":1635618909258,"results":"79","hashOfConfig":"75"},{"size":316,"mtime":1639502239749,"results":"80","hashOfConfig":"75"},{"size":389,"mtime":1631003411392,"results":"81","hashOfConfig":"75"},{"size":502,"mtime":1631003411390,"results":"82","hashOfConfig":"75"},{"size":719,"mtime":1624084876227,"results":"83","hashOfConfig":"75"},{"size":4253,"mtime":1639632238474,"results":"84","hashOfConfig":"75"},{"size":8116,"mtime":1639629846872,"results":"85","hashOfConfig":"75"},{"size":28648,"mtime":1639586907535,"results":"86","hashOfConfig":"75"},{"size":7001,"mtime":1635618889836,"results":"87","hashOfConfig":"75"},{"size":12482,"mtime":1635618889738,"results":"88","hashOfConfig":"75"},{"size":18124,"mtime":1635618890583,"results":"89","hashOfConfig":"75"},{"size":24485,"mtime":1639629846890,"results":"90","hashOfConfig":"75"},{"size":23069,"mtime":1639629711202,"results":"91","hashOfConfig":"75"},{"size":9474,"mtime":1635618889599,"results":"92","hashOfConfig":"75"},{"size":1640,"mtime":1635618889867,"results":"93","hashOfConfig":"75"},{"size":21233,"mtime":1639502239740,"results":"94","hashOfConfig":"75"},{"size":15661,"mtime":1639502239733,"results":"95","hashOfConfig":"75"},{"size":5302,"mtime":1639502239715,"results":"96","hashOfConfig":"75"},{"size":15591,"mtime":1639502239718,"results":"97","hashOfConfig":"75"},{"size":3784,"mtime":1639502239713,"results":"98","hashOfConfig":"75"},{"size":20992,"mtime":1639502239709,"results":"99","hashOfConfig":"75"},{"size":18847,"mtime":1639502239710,"results":"100","hashOfConfig":"75"},{"size":9493,"mtime":1639502239727,"results":"101","hashOfConfig":"75"},{"size":6022,"mtime":1639502239712,"results":"102","hashOfConfig":"75"},{"size":8228,"mtime":1639502239723,"results":"103","hashOfConfig":"75"},{"size":3054,"mtime":1639502239716,"results":"104","hashOfConfig":"75"},{"size":15854,"mtime":1639502239724,"results":"105","hashOfConfig":"75"},{"size":6042,"mtime":1639502239722,"results":"106","hashOfConfig":"75"},{"size":3631,"mtime":1639502239726,"results":"107","hashOfConfig":"75"},{"size":5771,"mtime":1639502239723,"results":"108","hashOfConfig":"75"},{"size":10657,"mtime":1639502239721,"results":"109","hashOfConfig":"75"},{"size":8016,"mtime":1639502239727,"results":"110","hashOfConfig":"75"},{"size":1393,"mtime":1635618889862,"results":"111","hashOfConfig":"75"},{"size":7851,"mtime":1635618889865,"results":"112","hashOfConfig":"75"},{"size":3940,"mtime":1639633659194,"results":"113","hashOfConfig":"75"},{"size":535,"mtime":1635618890623,"results":"114","hashOfConfig":"75"},{"size":10823,"mtime":1639502239711,"results":"115","hashOfConfig":"75"},{"size":17770,"mtime":1639502239714,"results":"116","hashOfConfig":"75"},{"size":52380,"mtime":1639502239746,"results":"117","hashOfConfig":"75"},{"size":851,"mtime":1635618889845,"results":"118","hashOfConfig":"75"},{"size":796,"mtime":1635618889861,"results":"119","hashOfConfig":"75"},{"size":2328,"mtime":1635618889847,"results":"120","hashOfConfig":"75"},{"size":2483,"mtime":1635618889846,"results":"121","hashOfConfig":"75"},{"size":1620,"mtime":1635618890690,"results":"122","hashOfConfig":"75"},{"size":8569,"mtime":1639502239719,"results":"123","hashOfConfig":"75"},{"size":1150,"mtime":1635618889844,"results":"124","hashOfConfig":"75"},{"size":8118,"mtime":1635618889842,"results":"125","hashOfConfig":"75"},{"size":777,"mtime":1624084876261,"results":"126","hashOfConfig":"75"},{"size":1935,"mtime":1635618890624,"results":"127","hashOfConfig":"75"},{"size":3638,"mtime":1639502239719,"results":"128","hashOfConfig":"75"},{"size":11287,"mtime":1639502239742,"results":"129","hashOfConfig":"75"},{"size":989,"mtime":1639502239728,"results":"130","hashOfConfig":"75"},{"size":26350,"mtime":1639502239730,"results":"131","hashOfConfig":"75"},{"size":91813,"mtime":1639502239732,"results":"132","hashOfConfig":"75"},{"size":1766,"mtime":1639502239717,"results":"133","hashOfConfig":"75"},{"size":2003,"mtime":1635618890155,"results":"134","hashOfConfig":"75"},{"size":2207,"mtime":1635697377443,"results":"135","hashOfConfig":"75"},{"size":1781,"mtime":1635618890158,"results":"136","hashOfConfig":"75"},{"size":526,"mtime":1635618890443,"results":"137","hashOfConfig":"75"},{"size":2464,"mtime":1635618890548,"results":"138","hashOfConfig":"75"},{"size":3769,"mtime":1635618889837,"results":"139","hashOfConfig":"75"},{"size":1732,"mtime":1635618889741,"results":"140","hashOfConfig":"75"},{"size":341,"mtime":1635618890410,"results":"141","hashOfConfig":"75"},{"size":1491,"mtime":1635618890444,"results":"142","hashOfConfig":"75"},{"size":798,"mtime":1635618890442,"results":"143","hashOfConfig":"75"},{"size":2110,"mtime":1639632238478,"results":"144","hashOfConfig":"75"},{"size":1986,"mtime":1639632238479,"results":"145","hashOfConfig":"75"},{"size":11154,"mtime":1639632238480,"results":"146","hashOfConfig":"75"},{"size":8895,"mtime":1639632238476,"results":"147","hashOfConfig":"75"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},"p1bw6j",{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":7,"source":"173","usedDeprecatedRules":"150"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"150"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"150"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"150"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":6,"source":null},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"150"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"150"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"150"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"150"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"150"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"150"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"150"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"150"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"150"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"150"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"150"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"150"},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"150"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"150"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"150"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"150"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"150"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"150"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"150"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":3,"source":null},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"150"},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"150"},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"150"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"150"},{"filePath":"274","messages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"276","messages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"278","messages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"280","messages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"282","messages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"150"},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"150"},{"filePath":"288","messages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"292","messages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"294","messages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"296","messages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":3,"source":"298","usedDeprecatedRules":"150"},{"filePath":"299","messages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":3,"source":"301","usedDeprecatedRules":"150"},{"filePath":"302","messages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"150"},{"filePath":"305","messages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"307","messages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"310"},{"filePath":"311","messages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"150"},{"filePath":"314","messages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"316","messages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"150"},{"filePath":"321","messages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"323","messages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"325","messages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"327","messages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"329","messages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\index.tsx",[],["331","332"],"F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\reportWebVitals.ts",[],"F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\serviceWorker.ts",[],"F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\App.tsx",[],"F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\styles\\themes\\theme.ts",[],"F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\graphql\\index.ts",[],"F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\styles\\themes\\components\\drawerStyles.ts",[],"F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\styles\\themes\\components\\buttonStyles.ts",[],"F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\shared\\Loader.tsx",[],"F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\AppRoutes.tsx",["333","334"],"F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\night\\Show.tsx",["335","336"],"F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Home.tsx",["337","338","339","340","341","342","343","344","345","346","347","348","349","350","351"],"import * as React from \"react\";\r\nimport { Text, VStack, Code, useColorModeValue, Flex } from \"@chakra-ui/react\";\r\nimport { ReactComponent as DiceOutlineDarkAnimated } from \"./../../images/logo/animated/non-looped/Text_Outline_Dark_animated.svg\";\r\nimport { ReactComponent as DiceOutlineLightAnimated } from \"./../../images/logo/animated/non-looped/Text_Outline_Light_animated.svg\";\r\nimport \"../../styles/Home.css\";\r\nimport CustomBox from \"../shared/CustomBox\";\r\nimport {\r\n  FaLinkedin,\r\n  FaInstagram,\r\n  FaYoutubeSquare,\r\n  FaYoutube,\r\n} from \"react-icons/fa\";\r\nimport SwiperCore, { Navigation, Pagination } from \"swiper\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport \"swiper/swiper.min.css\";\r\nimport \"swiper/components/navigation/navigation.min.css\";\r\nimport \"swiper/components/pagination/pagination.min.css\";\r\nimport \"swiper/swiper-bundle\";\r\nimport \"swiper/swiper-bundle.esm.browser\";\r\nimport { Link } from \"react-router-dom\";\r\nimport atkins from \"../../images/Peter_Atkins.jpg\";\r\nimport prevArrow from \"../../images/prevArrow.svg\";\r\nimport robos1 from \"../../images/homepage_illustrations/ROBOS.png\";\r\nimport robo1 from \"../../images/homepage_illustrations/big.png\";\r\nimport robo2 from \"../../images/homepage_illustrations/small ribi.png\";\r\nimport barish from \"../../images/barish.jpg\";\r\nimport John_hennessy from \"../../images/John_hennessy.jpg\";\r\nimport das_nobel from \"../../images/das_nobel.jpeg\";\r\nimport Raghuram_Rajan from \"../../images/Raghuram_Rajan.jpg\";\r\nimport Footer from \"../shared/Footer\";\r\nimport Hennessy from \"../../images/Speaker/hennessy.jpg\";\r\nimport Radhakrishnan from \"../../images/Speaker/radhakrishnan.jpg\";\r\nimport Robo from \"../../images/Speaker/robothespian1.jpg\";\r\nimport Soumya from \"../../images/Speaker/soumya_swaminathan.jpg\";\r\nimport Capture from \"../../images/Speaker/Capture.jpg\";\r\nimport Robert from \"../../images/Speaker/robert.jpg\";\r\nimport Event1 from \"../../images/events_1.png\";\r\nimport Event2 from \"../../images/events_2.png\";\r\nimport Event3 from \"../../images/events_3.png\";\r\nimport Event4 from \"../../images/events_4.png\";\r\nimport Event6 from \"../../images/events_6.png\";\r\nimport Event7 from \"../../images/events_7.png\";\r\nimport Event8 from \"../../images/events_8.png\";\r\nimport Event9 from \"../../images/events_9.png\";\r\nimport Workshop1 from \"../../images/workshop_1.png\";\r\nimport Workshop2 from \"../../images/workshop_2.png\";\r\nimport Workshop3 from \"../../images/workshop_3.png\";\r\nimport Workshop4 from \"../../images/workshop_4.png\";\r\n\r\ninterface Props {}\r\n\r\nSwiperCore.use([Navigation, Pagination]);\r\n\r\nconst Home = (props: Props) => {\r\n  const Logo = useColorModeValue(\r\n    DiceOutlineDarkAnimated,\r\n    DiceOutlineLightAnimated\r\n  );\r\n\r\n  const plain = useColorModeValue(\"black\", \"white\");\r\n\r\n  const [sideNavBar_marker, setSideNavBar_marker] = React.useState<number>(\r\n    window.innerWidth > 600 ? 200 / 6 : (window.innerWidth - 150) / 6 - 5\r\n  );\r\n\r\n  const update_sidenav_marker = (e) => {\r\n    var screenWidthSpacing = (window.innerWidth - 150) / 6;\r\n\r\n    if (\r\n      e.target.scrollTop < window.innerHeight - 20 &&\r\n      e.target.scrollTop >= 0\r\n    ) {\r\n      if (window.innerWidth > 600) {\r\n        setSideNavBar_marker(200 / 6 + 0 * (200 / 6 + 30));\r\n      } else {\r\n        setSideNavBar_marker(screenWidthSpacing - 5);\r\n      }\r\n    } else if (\r\n      e.target.scrollTop < 2 * window.innerHeight - 20 &&\r\n      e.target.scrollTop >= window.innerHeight - 20\r\n    )\r\n      if (window.innerWidth > 600)\r\n        setSideNavBar_marker(200 / 6 + 1 * (200 / 6 + 30));\r\n      else\r\n        setSideNavBar_marker(\r\n          screenWidthSpacing - 5 + 1 * (screenWidthSpacing + 30)\r\n        );\r\n    else if (\r\n      e.target.scrollTop < 3 * window.innerHeight - 20 &&\r\n      e.target.scrollTop >= 2 * window.innerHeight - 20\r\n    )\r\n      if (window.innerWidth > 600)\r\n        setSideNavBar_marker(200 / 6 + 2 * (200 / 6 + 30));\r\n      else\r\n        setSideNavBar_marker(\r\n          screenWidthSpacing - 5 + 2 * (screenWidthSpacing + 30)\r\n        );\r\n    else if (\r\n      e.target.scrollTop < 4 * window.innerHeight - 20 &&\r\n      e.target.scrollTop >= 3 * window.innerHeight - 20\r\n    )\r\n      if (window.innerWidth > 600)\r\n        setSideNavBar_marker(200 / 6 + 3 * (200 / 6 + 30));\r\n      else\r\n        setSideNavBar_marker(\r\n          screenWidthSpacing - 5 + 3 * (screenWidthSpacing + 30)\r\n        );\r\n    else if (\r\n      e.target.scrollTop < 5 * window.innerHeight - 20 &&\r\n      e.target.scrollTop >= 4 * window.innerHeight - 20\r\n    )\r\n      if (window.innerWidth > 600)\r\n        setSideNavBar_marker(200 / 6 + 4 * (200 / 6 + 30));\r\n      else\r\n        setSideNavBar_marker(\r\n          screenWidthSpacing - 5 + 4 * (screenWidthSpacing + 30)\r\n        );\r\n  };\r\n\r\n  const speaker_navigationPrevRef = React.useRef(null);\r\n  const speaker_navigationNextRef = React.useRef(null);\r\n  const speaker_paginationRef = React.useRef(null);\r\n  const events_navigationPrevRef = React.useRef(null);\r\n  const events_navigationNextRef = React.useRef(null);\r\n  const events_paginationRef = React.useRef(null);\r\n\r\n  const [scrollLeft, setScrollLeft] = React.useState({\r\n    left: 0,\r\n    right: 100,\r\n  });\r\n\r\n  return (\r\n    <CustomBox>\r\n      <div onScroll={update_sidenav_marker} className={`Home ${plain}`}>\r\n        <div className={`Home_sideNavBar ${plain}`}>\r\n          <span\r\n            className=\"Home_sideNavBar_marker\"\r\n            style={\r\n              window.innerWidth > 600\r\n                ? {\r\n                    top: sideNavBar_marker,\r\n                  }\r\n                : {\r\n                    left: sideNavBar_marker,\r\n                  }\r\n            }\r\n          ></span>\r\n          <a href=\"#landing_page\">\r\n            <span>01</span>\r\n          </a>\r\n          <a href=\"#who_are_we\">\r\n            <span>02</span>\r\n          </a>\r\n          <a href=\"#workshop_events\">\r\n            <span>03</span>\r\n          </a>\r\n          <a href=\"#speakers\">\r\n            <span>04</span>\r\n          </a>\r\n          <a href=\"#testimonials\">\r\n            <span>05</span>\r\n          </a>\r\n        </div>\r\n        <section\r\n          id=\"landing_page\"\r\n          style={{\r\n            backgroundPosition: `calc(100% + ${\r\n              window.innerWidth < 800 ? 800 - window.innerWidth : 0\r\n            }) 50%`,\r\n          }}\r\n          className={`Home_landingPage ${plain}`}\r\n        >\r\n          <div className=\"ContentBox\">\r\n            <h1>SHAASTRA 2022</h1>\r\n            {window.innerWidth < 800 ? (\r\n              <></>\r\n            ) : (\r\n              <p>\r\n                Welcome to the Official website of first ISO certified\r\n                student-run technical festival, Shaastra! Here, we will take you\r\n                through all the amazing things you can do with us, from earning\r\n                lakhs of money by winning events, to fireside chats with your\r\n                favorite celebrities. So, what are you waiting for? Go ahead and\r\n                explore what we have to offer.\r\n              </p>\r\n            )}\r\n          </div>\r\n          <div className=\"imgBox\">\r\n            <img src={robos1} alt=\"\" />\r\n          </div>\r\n          {window.innerWidth > 600 ? (\r\n            <span className=\"Home_scroll_btn\">\r\n              <span></span>\r\n            </span>\r\n          ) : (\r\n            <></>\r\n          )}\r\n\r\n          <div className=\"Follow\">\r\n            <p>FOLLOW US</p>\r\n            <span></span>\r\n            <a\r\n              target=\"_blank\"\r\n              href=\"https://www.instagram.com/shaastra_iitm/?hl=en\"\r\n            >\r\n              <FaInstagram />\r\n            </a>\r\n            <span></span>\r\n            <a\r\n              target=\"_blank\"\r\n              href=\"https://www.linkedin.com/company/shaastra-iit-madras/?originalSubdomain=in\"\r\n            >\r\n              <FaLinkedin />\r\n            </a>\r\n            <span></span>\r\n            <a\r\n              target=\"_blank\"\r\n              href=\"https://www.youtube.com/channel/UCgY2ugmW-BV2nMRFu-0qPZA\"\r\n            >\r\n              <FaYoutubeSquare />\r\n            </a>\r\n            {window.innerWidth > 600 ? <span></span> : <></>}\r\n          </div>\r\n        </section>\r\n        <section id=\"who_are_we\" className=\"Home_whoAreWe\">\r\n          <img id=\"who_are_we_robo1\" src={robo1} alt=\"\" />\r\n          <img id=\"who_are_we_robo2\" src={robo2} alt=\"\" />\r\n          <h1 id=\"heading\">Who Are We?</h1>\r\n          <p id=\"text\">\r\n            Shaastra is the annual technical festival of the Indian Institute of\r\n            Technology Madras (IITM), Chennai, India.\r\n            <br />\r\n            <br />\r\n            The Sanskrit word ‘Shaastra’ means science and the festival\r\n            accordingly consists of various engineering, science, and technology\r\n            competitions, summits, lectures, video conferences, exhibitions,\r\n            demonstrations, and workshops. The festival is traditionally held\r\n            over four days and four nights during the first week of January. It\r\n            has so far seen twenty-one editions, having started in its current\r\n            avatar in the year 2000.\r\n            <br />\r\n            <br />\r\n            Shaastra is entirely student-managed and is the first such event in\r\n            the world to be ISO 9001:2015 certified.\r\n          </p>\r\n        </section>\r\n        <section\r\n          id=\"workshop_events\"\r\n          className={`Home_WorkshopsEvents ${plain}`}\r\n        >\r\n          <h1>Past Workshops & Events</h1>\r\n          <div className=\"speaker_swiper_container\">\r\n            <div className=\"swiper-prev-con\" ref={events_navigationPrevRef}>\r\n              <img src={prevArrow} alt=\"\" />\r\n            </div>\r\n            <Swiper\r\n              spaceBetween={window.innerWidth > 600 ? 50 : 0}\r\n              navigation={{\r\n                prevEl: events_navigationPrevRef.current,\r\n                nextEl: events_navigationNextRef.current,\r\n              }}\r\n              loop={true}\r\n              pagination={\r\n                window.innerWidth < 600\r\n                  ? {\r\n                      el: events_paginationRef.current,\r\n                      clickable: true,\r\n                    }\r\n                  : false\r\n              }\r\n              slidesPerView={window.innerWidth > 600 ? \"auto\" : 1}\r\n            >\r\n              <SwiperSlide>\r\n                <img src={Workshop1} alt=\"\" />\r\n                <div className=\"contentBox\">\r\n                  <p>\r\n                    1. Make a chat app using Socket.io, Node.js and MongoDB\r\n                    <br /> 2. Web Development in Python with Flask <br /> 3.\r\n                    Creative Coding\r\n                  </p>\r\n                </div>\r\n              </SwiperSlide>\r\n              <SwiperSlide>\r\n                <img src={Event1} alt=\"\" />\r\n                <div className=\"contentBox\">\r\n                  <h3>Capture the Flag (CTF)</h3>\r\n                  <p>\r\n                    Do \"hacking\" scenes in movies and TV Shows make you roll\r\n                    your eyes? Do you want to see what exploiting real life\r\n                    vulnerabilities in real life systems is like? Shaastra CTF\r\n                    is the event for you. Break programs, sneakily attack and\r\n                    search all over to find out encrypted hidden messages,\r\n                    fittingly called Flags. This is a one round, all online\r\n                    (fairly exciting) CTF event.\r\n                  </p>\r\n                </div>\r\n              </SwiperSlide>\r\n              <SwiperSlide>\r\n                <img src={Workshop2} alt=\"\" />\r\n                <div className=\"contentBox\">\r\n                  <p>\r\n                    1. Introduction to FPGA <br />\r\n                    2. CPU and GPU Parallel Computing <br />\r\n                    3. Quantum Computing\r\n                  </p>\r\n                </div>\r\n              </SwiperSlide>\r\n              <SwiperSlide>\r\n                <img src={Event2} alt=\"\" />\r\n                <div className=\"contentBox\">\r\n                  <h3>Caterpillar IDP</h3>\r\n                  <p>\r\n                    Are you a person who is curious about problem solving? Yes,\r\n                    you heard that right, you are at the right place. With mind\r\n                    blogging problem statements at our stake and with the\r\n                    collaboration of Caterpillar India Pvt ltd, we put forward\r\n                    the most anticipated event of Shaastra, IDP (Industry\r\n                    Defined Problems).\r\n                  </p>\r\n                </div>\r\n              </SwiperSlide>\r\n              <SwiperSlide>\r\n                <img src={Workshop3} alt=\"\" />\r\n                <div className=\"contentBox\">\r\n                  <p>\r\n                    1. Introduction to Arduino and IOT <br />\r\n                    2. Circuit Simulation and PCB Design <br />\r\n                    3. Hacking Processors : An Unconventional Hacking\r\n                    Methodology\r\n                  </p>\r\n                </div>\r\n              </SwiperSlide>\r\n              <SwiperSlide>\r\n                <img src={Event3} alt=\"\" />\r\n                <div className=\"contentBox\">\r\n                  <h3>Rapid Chess</h3>\r\n                  <p>\r\n                    The event is Blitz Chess. The event is going to be held on\r\n                    Chess.com. Both opponents get 3min+2sec each for the chess\r\n                    game. A player can win only if he checkmates the opponent or\r\n                    the opponent's time runs out first. Draw is possible due to\r\n                    stalemate or by insufficient pieces for checkmate. The event\r\n                    is to be held on 6th March.\r\n                  </p>\r\n                </div>\r\n              </SwiperSlide>\r\n              <SwiperSlide>\r\n                <img src={Workshop4} alt=\"\" />\r\n                <div className=\"contentBox\">\r\n                  <p>\r\n                    1. Stepping into the world of robotics <br />\r\n                    2. Python Algorithms for Robotics <br />\r\n                    3. Control of Robot Arm using Inverse Kinematics\r\n                  </p>\r\n                </div>\r\n              </SwiperSlide>\r\n              <SwiperSlide>\r\n                <img src={Event4} alt=\"\" />\r\n                <div className=\"contentBox\">\r\n                  <h3>Boeing Aeromodelling Competition</h3>\r\n                  <p>\r\n                    Have you ever wanted to work on modelling a real aeroplane?\r\n                    Shaastra brings you, The BOEING NATIONAL AEROMODELLING\r\n                    COMPETITION, conducted in collaboration between Boeing,\r\n                    Skyfi Labs, and the IITs, is a golden opportunity for all\r\n                    aeromodelling enthusiasts, to showcase your modelling skills\r\n                    at a national platform\r\n                  </p>\r\n                </div>\r\n              </SwiperSlide>\r\n              <SwiperSlide>\r\n                <img src={Event7} alt=\"\" />\r\n                <div className=\"contentBox\">\r\n                  <h3>Global Biotech Council</h3>\r\n                  <p>\r\n                    GBC is a debate-based event where the participants will have\r\n                    to submit a write up about the topic given and the top 12\r\n                    teams are selected for the final round that is a debate\r\n                    round where they have to argue for/against the topic. The\r\n                    topic for debate is “Gene Therapy – Boon or Bane?”\r\n                  </p>\r\n                </div>\r\n              </SwiperSlide>\r\n              <SwiperSlide>\r\n                <img src={Event6} alt=\"\" />\r\n                <div className=\"contentBox\">\r\n                  <h3>Shaastra Programming Contest</h3>\r\n                  <p>\r\n                    Truth can only be found in one place: the code. We are ready\r\n                    with the most innovative problem situations ever, testing\r\n                    algorithms and implementation in every way possible. Are you\r\n                    ready to prove your skill and emerge a programming champion?\r\n                    We have online prelims and an online finals\r\n                  </p>\r\n                </div>\r\n              </SwiperSlide>\r\n              <SwiperSlide>\r\n                <img src={Event8} alt=\"\" />\r\n                <div className=\"contentBox\">\r\n                  <h3>Reverse Coding</h3>\r\n                  <p>\r\n                    Coders are divided by language but united by logic. Before\r\n                    learning the mumbo-jumbo syntax of every programming\r\n                    language there is to offer, first one must develop a keen\r\n                    sense of how to approach problems. The RC event offers a\r\n                    brief test on your logical and analytical skills that are\r\n                    essential in becoming a good coder.\r\n                  </p>\r\n                </div>\r\n              </SwiperSlide>\r\n              <SwiperSlide>\r\n                <img src={Event9} alt=\"\" />\r\n                <div className=\"contentBox\">\r\n                  <h3>Mouse Maze challenge</h3>\r\n                  <p>\r\n                    Mouse Maze challenge is a simple, fun, and challenging task.\r\n                    This is the online version of Micro Mouse Maze, where an\r\n                    autonomous robotic mouse is programmed to reach the center\r\n                    of a maze. The problem is very practical and involves a\r\n                    great deal of algorithmic thinking and problem solving\r\n                    skills.\r\n                  </p>\r\n                </div>\r\n              </SwiperSlide>\r\n            </Swiper>\r\n            <div className=\"swiper-next-con\" ref={events_navigationNextRef}>\r\n              <img src={prevArrow} alt=\"\" />\r\n            </div>\r\n            <div className=\"swiper-pagination\" ref={events_paginationRef}></div>\r\n          </div>\r\n          {window.innerHeight > 300 ? (\r\n            <div className=\"swiperControllers\">\r\n              {/* <div className=\"swiper-prev-con\" ref={events_navigationPrevRef}>\r\n                <img src={prevArrow} alt=\"\" />\r\n              </div> */}\r\n              {/* <div\r\n                className=\"swiper-pagination\"\r\n                ref={events_paginationRef}\r\n              ></div> */}\r\n              {/* <div className=\"swiper-next-con\" ref={events_navigationNextRef}>\r\n                <img src={prevArrow} alt=\"\" />\r\n              </div> */}\r\n            </div>\r\n          ) : (\r\n            \"Swipe right ->\"\r\n          )}\r\n        </section>\r\n        <section id=\"speakers\" className={`Home_Speakers ${plain}`}>\r\n          <h1 className={`${plain}`}>Previous Speakers</h1>\r\n          <div className={`speaker_swiper_container`}>\r\n            <div className=\"swiper-prev-con\" ref={speaker_navigationPrevRef}>\r\n              <img src={prevArrow} alt=\"\" />\r\n            </div>\r\n            <Swiper\r\n              spaceBetween={50}\r\n              navigation={{\r\n                prevEl: speaker_navigationPrevRef.current,\r\n                nextEl: speaker_navigationNextRef.current,\r\n              }}\r\n              loop={true}\r\n              pagination={\r\n                window.innerWidth < 600\r\n                  ? {\r\n                      el: speaker_paginationRef.current,\r\n                      clickable: true,\r\n                    }\r\n                  : false\r\n              }\r\n              // breakpoints={{\r\n              //   200: {\r\n              //     slidesPerView: 1,\r\n              //   },\r\n              //   850: {\r\n              //     slidesPerView: 4,\r\n              //   },\r\n              // }}\r\n              slidesPerView={\"auto\"}\r\n            >\r\n              <SwiperSlide>\r\n                <img src={atkins} alt=\"\" />\r\n                <div className=\"contentBox\">\r\n                  <h3>Peter Atkins</h3>\r\n                  <p>FRSC, Prolific Author of popular chemistry textbooks</p>\r\n                  <a\r\n                    target=\"_blank\"\r\n                    href=\"https://www.youtube.com/watch?v=0G_-1SGhYTA&list=PLT4Wldw_lvk2vSGkMDcXazP3iJ3Wlvo4X&index=3\"\r\n                  >\r\n                    <FaYoutube />\r\n                  </a>\r\n                </div>\r\n              </SwiperSlide>\r\n              <SwiperSlide>\r\n                <img src={Hennessy} alt=\"\" />\r\n                <div className=\"contentBox\">\r\n                  <h3>Dr John Hennessy</h3>\r\n                  <p>\r\n                    Chairman of Alphabet Inc., Eminent Computer Scientist,\r\n                    Turing Award, 2017\r\n                  </p>\r\n                  <a\r\n                    href=\"https://www.youtube.com/watch?v=_ebUDIsbqkc&list=PLT4Wldw_lvk2vSGkMDcXazP3iJ3Wlvo4X&index=2\"\r\n                    target=\"_blank\"\r\n                  >\r\n                    <FaYoutube />\r\n                  </a>\r\n                </div>\r\n              </SwiperSlide>\r\n              <SwiperSlide>\r\n                <img src={Radhakrishnan} alt=\"\" />\r\n                <div className=\"contentBox\">\r\n                  <h3>Dr K. Radhakrishnan</h3>\r\n\r\n                  <p>Former Chairman, ISRO</p>\r\n                  <a\r\n                    href=\"https://www.youtube.com/watch?v=Wv_sea0tMrc&list=PLT4Wldw_lvk2vSGkMDcXazP3iJ3Wlvo4X\"\r\n                    target=\"_blank\"\r\n                  >\r\n                    <FaYoutube />\r\n                  </a>\r\n                </div>\r\n              </SwiperSlide>\r\n              <SwiperSlide>\r\n                <img src={Robo} alt=\"\" />\r\n                <div className=\"contentBox\">\r\n                  <h3>RoboThespian and Cleo</h3>\r\n\r\n                  <p>World’s First Acting Humanoid Robots</p>\r\n                  <a href=\"\" target=\"_blank\">\r\n                    <FaYoutube />\r\n                  </a>\r\n                </div>\r\n              </SwiperSlide>\r\n              <SwiperSlide>\r\n                <img src={Soumya} alt=\"\" />\r\n                <div className=\"contentBox\">\r\n                  <h3>Dr Soumya Swaminathan,</h3>\r\n\r\n                  <p>Chief Scientist, World Health Organisation (WHO)</p>\r\n                  <a href=\"\" target=\"_blank\">\r\n                    <FaYoutube />\r\n                  </a>\r\n                </div>\r\n              </SwiperSlide>\r\n              <SwiperSlide>\r\n                <img src={Capture} alt=\"\" />\r\n                <div className=\"contentBox\">\r\n                  <h3>Dr Joachim Frank</h3>\r\n                  <p>Nobel Prize in Chemistry, 2017</p>\r\n                  <a href=\"\" target=\"_blank\">\r\n                    <FaYoutube />\r\n                  </a>\r\n                </div>\r\n              </SwiperSlide>\r\n              <SwiperSlide>\r\n                <img src={Robert} alt=\"\" />\r\n                <div className=\"contentBox\">\r\n                  <h3>Mr Robert C. Martin</h3>\r\n                  <p>American Software Engineer, Popular Author</p>\r\n                  <a\r\n                    href=\"https://www.youtube.com/watch?v=FlbDg_iBCkw&list=PLT4Wldw_lvk2vSGkMDcXazP3iJ3Wlvo4X&index=7\"\r\n                    target=\"_blank\"\r\n                  >\r\n                    <FaYoutube />\r\n                  </a>\r\n                </div>\r\n              </SwiperSlide>\r\n            </Swiper>\r\n            <div className=\"swiper-next-con\" ref={speaker_navigationNextRef}>\r\n              <img src={prevArrow} alt=\"\" />\r\n            </div>\r\n            <div\r\n              className=\"swiper-pagination\"\r\n              ref={speaker_paginationRef}\r\n            ></div>\r\n          </div>\r\n          <Link to=\"/speakers\">SEE MORE</Link>\r\n        </section>\r\n        <section id=\"testimonials\" className={`Home_Testimonials ${plain}`}>\r\n          <h1>Testimonials</h1>\r\n          <div\r\n            className={`testimonial_card_container ${plain}`}\r\n            onScroll={(e: any) => {\r\n              window.innerWidth < 600 &&\r\n                setScrollLeft({\r\n                  left: e.target.scrollLeft,\r\n                  right: 990 - e.target.scrollLeft,\r\n                });\r\n            }}\r\n          >\r\n            <div className={`testimonialWrapper ${plain}`}>\r\n              <div className=\"testimonial_card_cover\">\r\n                <div className={`testimonial_card ${plain}`}>\r\n                  <p>\r\n                    It was a great privilege and honor to participate in\r\n                    Shaastra 2021. Science has no borders and sharing the\r\n                    knowledge of scientific advances is a joy, especially to a\r\n                    talented and appreciative audience, like for Shaastra.\r\n                  </p>\r\n                  <div className=\"profile\">\r\n                    <div className=\"imgBox\">\r\n                      <img src={barish} alt=\"\" />\r\n                    </div>\r\n                    <div className=\"contentBox\">\r\n                      <h3>Dr. Barry Barish</h3>\r\n                      <p>Noble Prize in Physics, 2017</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"testimonial_card_cover\">\r\n                <div className={`testimonial_card ${plain}`}>\r\n                  <p>\r\n                    Thanks to the team at Shaastra 2021 for organizing a\r\n                    terrific event. I enjoyed the interview and a special thanks\r\n                    to the interviewer who did such an excellent job preparing.\r\n                    Thanks to the IIT madras students who asked excellent\r\n                    questions.\r\n                  </p>\r\n                  <div className=\"profile\">\r\n                    <div className=\"imgBox\">\r\n                      <img src={John_hennessy} alt=\"\" />\r\n                    </div>\r\n                    <div className=\"contentBox\">\r\n                      <h3>Dr. John Hennessy</h3>\r\n                      <p>Chairman, Alphabet Inc., Turing Awardee</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"testimonial_card_cover\">\r\n                <div className={`testimonial_card ${plain}`}>\r\n                  <p>\r\n                    It was an honor to connect with students from the IIT\r\n                    campuses especially from Indian Institute of Technology,\r\n                    Madras. Thank you for hosting me. Our Maverick Quantum AI\r\n                    team is committed to hiring 500 IITians in the next 3 years.\r\n                  </p>\r\n                  <div className=\"profile\">\r\n                    <div className=\"imgBox\">\r\n                      <img src={das_nobel} alt=\"\" />\r\n                    </div>\r\n                    <div className=\"contentBox\">\r\n                      <h3>Das Nobel</h3>\r\n                      <p>Founder & CEO at MTX Group</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"testimonial_card_cover\">\r\n                <div className={`testimonial_card ${plain}`}>\r\n                  <p>\r\n                    I spoke to the students at IIT Madras on a range of issues.\r\n                    I was impessed with how prepared they were. This is so\r\n                    refreshingly different from my student days. We are making\r\n                    progress !\r\n                  </p>\r\n                  <div className=\"profile\">\r\n                    <div className=\"imgBox\">\r\n                      <img src={Raghuram_Rajan} alt=\"\" />\r\n                    </div>\r\n                    <div className=\"contentBox\">\r\n                      <h3>Raghuram Rajan</h3>\r\n                      <p>Former Governor of the Reserve Bank of India</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {window.innerWidth < 600 ? (\r\n            <>\r\n              <span\r\n                id=\"scrollLeft\"\r\n                style={scrollLeft.left < 50 ? { opacity: 1 } : { opacity: 0 }}\r\n              >\r\n                {scrollLeft.left < 50 ? \"Swipe right ->\" : \"\"}\r\n              </span>\r\n              <span\r\n                id=\"scrollLeft\"\r\n                style={scrollLeft.right < 50 ? { opacity: 1 } : { opacity: 0 }}\r\n              >\r\n                {scrollLeft.right < 50 ? \"<- Swipe left\" : \"\"}\r\n              </span>\r\n            </>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </section>\r\n        <Footer\r\n          designed={[\r\n            { name: \"Rohit\", mail: \"cs19b038@smail.iitm.ac.in\" },\r\n            { name: \"Krithikaa\", mail: \"be20b020@smail.iitm.ac.in\" },\r\n            { name: \"Yogesh\", mail: \"bs19b034@smail.iitm.ac.in\" },\r\n          ]}\r\n        />\r\n      </div>\r\n    </CustomBox>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Exhibitions\\Exhibitions.tsx",["352","353"],"import { Text,Flex ,Stack , Box,BoxProps,Heading,Image,Container,SimpleGrid, Center, TextProps, useColorModeValue, VStack} from \"@chakra-ui/react\";\r\n// import {ChevronLeftIcon,ChevronRightIcon} from \"@chakra-ui/icons\";\r\nimport * as React from \"react\";\r\nimport CustomBox from \"../../shared/CustomBox\";\r\nimport EXHB2 from \"../../../images/Exhibitions/exhb_2.png\";\r\nimport \"../../../styles/Exhibitions.css\";\r\nimport {  exhibitions,CauroselImages, Titlevariants, AboutusVariants, AboutusData } from \"./Exhibitionsdata\";\r\nimport Card from \"./Card\";\r\nimport { motion ,useAnimation } from 'framer-motion';\r\nimport Footer from \"../../shared/Footer\";\r\nimport ParticlesBg from 'particles-bg';\r\nimport { useInView } from \"react-intersection-observer\";\r\n\r\nconst MotionBox = motion<BoxProps>(Box);\r\nconst MotionText = motion<TextProps>(Text);\r\n// const MotionChevronLeftIcon = motion(ChevronLeftIcon);\r\n// const MotionChevronRightIcon = motion(ChevronRightIcon);\r\n\r\nconst Exhibitions = ()=>{\r\n\r\n  const [current,setCurrent] = React.useState(0);\r\n  const length = CauroselImages.length;\r\n  const {ref,inView} = useInView();\r\n  const animation = useAnimation();\r\n  const CardAnimations = [{x:\"-100vw\"},{opacity:0},{x:\"+100vw\"}];\r\n  const Titlecolor = useColorModeValue(\"#1c72c7\",\"#00d0ff\");\r\n\r\n  React.useEffect(()=>{\r\n\r\n    if(inView){\r\n      animation.start({\r\n          x:0,\r\n          opacity:1,\r\n          transition: { duration: 1 }\r\n      })\r\n    }else{\r\n      animation.start( (i : any) =>\r\n        CardAnimations[i]\r\n      )\r\n    }\r\n\r\n    const timer =  setInterval(()=>{\r\n      setCurrent((prev)=>{ return prev+1 === length ? 0 : prev +1 });\r\n    },5000)\r\n\r\n    return ()=> clearInterval(timer);\r\n\r\n  }, [inView] )\r\n\r\n  // const prevSlide = ()=>{\r\n  //       setCurrent(current ===0 ? length-1 : current-1);\r\n  // }\r\n  // const nextSlide = ()=>{\r\n  //   setCurrent(current === length-1 ? 0 : current+1);\r\n  // }\r\n\r\n    return(\r\n      <CustomBox>\r\n       <Container maxW={'7xl'} className=\"AboutUsContainer\">\r\n        <div className=\"App-particles__container\">\r\n        <ParticlesBg color={\"#4492b3\"} num={150} type=\"cobweb\" bg={true}/>\r\n        </div>\r\n\r\n        <Heading lineHeight={1.1} fontWeight={600} fontSize={\"5xl\"}>\r\n        <Center pt={{ base:20, md: 20 }} mb={5}>\r\n        <MotionText as={'h1'}\r\n            initial={\"lhidden\"}\r\n            animate = {\"final\"}\r\n            variants={Titlevariants}\r\n            className = \"Title\"\r\n            color={Titlecolor}> EXHIBITIONS </MotionText>\r\n          </Center>\r\n  \r\n          </Heading>\r\n          <Stack\r\n          align={'center'}\r\n          spacing={{ base: 8, md: 10 }}\r\n          my={5} p={15}\r\n          direction={{ base: 'column-reverse', md: 'row' }}>\r\n\r\n          <Stack flex={1} spacing={{ base: 5, md: 10 }}>\r\n\r\n              <MotionBox\r\n              initial = {\"hidden\"}\r\n              animate = {\"visible\"}\r\n              variants = {AboutusVariants}>\r\n              <Heading as={'h1'} mb={\"3\"}>\r\n                About Us\r\n              </Heading>\r\n               <Text \r\n                style = {{\r\n                  fontSize: \"20px\",\r\n                  letterSpacing : \"1px\",\r\n                  fontFamily : 'Roboto',\r\n                  zIndex : 1\r\n                }}>\r\n                 {AboutusData}\r\n                </Text>\r\n              </MotionBox>\r\n\r\n          </Stack>\r\n\r\n          <Flex\r\n            flex={1}\r\n            justify={'center'}\r\n            align={'center'}\r\n            position={'relative'}\r\n            w={'full'}>\r\n            <MotionBox\r\n              whileHover={{ scale: 1.1 }}\r\n              whileTap={{ scale: 0.9 }}\r\n              initial = {\"hidden\"}\r\n              animate = {\"visible\"}\r\n              variants = {AboutusVariants}\r\n               height={[\"full\",\"300px\"]}\r\n               width ={[\"full\",\"90%\"]}\r\n              rounded={'2xl'}\r\n              boxShadow={'2xl'}\r\n              overflow={'hidden'}\r\n              mt={[\"0px\",\"60px\"]}\r\n              >\r\n              <Image\r\n                alt={'Display Image'}\r\n                fit={\"cover\"}\r\n                align={'center'}\r\n                w={'100%'}\r\n                h={'100%'}\r\n                src={EXHB2}\r\n              />\r\n            </MotionBox>\r\n          </Flex>\r\n        </Stack>\r\n\r\n      </Container>\r\n           \r\n      <Center mb={5}>\r\n      <VStack>\r\n      <Heading\r\n              fontWeight={500}\r\n              fontSize={[\"2xl\",\"3xl\",\"3xl\"]}\r\n               m={[2,5]} \r\n              className = \"Title\"\r\n              color={Titlecolor}\r\n              p={3}\r\n             >\r\n              PREVIOUS EXHIBITIONS\r\n            </Heading>\r\n        <SimpleGrid columns={[1,1,2,3]} spacing={[10,20]} ref={ref} mb={5} pb={20}> \r\n        {\r\n\r\n          exhibitions.map( (item,index) => {\r\n            let i = index%3;\r\n            return(\r\n              <MotionBox\r\n              custom = {i}\r\n              animate = {animation}\r\n              className=\"ECard\"\r\n              key= {index}\r\n              >\r\n              <Card data={item} />\r\n              </MotionBox>\r\n            )\r\n          })\r\n        }\r\n        </SimpleGrid>\r\n      </VStack>\r\n      </Center>\r\n\r\n        {/* <Center className=\"slider\" mb={2}>\r\n        <MotionChevronLeftIcon\r\n         whileHover={{ scale: 1.1 }}\r\n         whileTap={{ scale: 0.9 }}\r\n         className=\"left-arrow\" onClick={prevSlide}\r\n         />\r\n        <MotionChevronRightIcon \r\n        whileHover={{ scale: 1.1 }}\r\n        whileTap={{ scale: 0.9 }}\r\n        className=\"right-arrow\" onClick={nextSlide} />\r\n          {\r\n            CauroselImages.map((img,index)=>{\r\n              return(\r\n               \r\n               <Center\r\n               className={index===current ? 'slide active':'slide'}\r\n               key = {index}\r\n               >\r\n                \r\n                 <MotionBox\r\n                 whileHover={{scale : 1.1}}\r\n                 >\r\n                 {\r\n                   index === current && (<Image\r\n                    alt={'Carousel Image'}\r\n                    fit={'cover'}\r\n                    align={'center'}\r\n                    className=\"CarouselImg\"\r\n                    borderRadius=\"10px\"\r\n                    src={img}\r\n    \r\n                  />)\r\n                  }\r\n                 </MotionBox>\r\n               </Center>\r\n    \r\n              )\r\n            })\r\n          }\r\n       </Center> */}\r\n       {/* <SimpleGrid columns={[1,1,2,3]}  spacingX={1} spacingY={1}  m={5}>\r\n          {\r\n            CauroselImages.map((img,index)=>{\r\n              return(\r\n                  <Image\r\n                    alt={'Carousel Image'}\r\n                    className=\"CarouselImg\"\r\n                    borderRadius=\"10px\"\r\n                    src={img}\r\n                    margin={-1}\r\n                  />\r\n              )\r\n            })\r\n          }\r\n        </SimpleGrid> */}\r\n       <Footer designed={[{name : \"Srinivas\",mail :\"ch19b052@smail.iitm.ac.in\"}]} />\r\n     </CustomBox>\r\n    \r\n    );\r\n\r\n}\r\n\r\nexport default Exhibitions;","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Events and Workshops\\Tif.tsx",["354"],"import React from \"react\";\r\nimport {\r\n  Text,\r\n  Stack,\r\n  Center,\r\n  Box,\r\n  Heading,\r\n  Image,\r\n  SimpleGrid,\r\n  Flex,\r\n} from \"@chakra-ui/react\";\r\nimport { useColorModeValue } from \"@chakra-ui/color-mode\";\r\nimport CustomBox from \"../../shared/CustomBox\";\r\nimport tif1 from \"../../../images/EventsWorkshops/tif/tif_1.png\";\r\nimport tif2 from \"../../../images/EventsWorkshops/tif/tif_2.png\";\r\nimport tif3 from \"../../../images/EventsWorkshops/tif/tif_3.png\";\r\nimport tif4 from \"../../../images/EventsWorkshops/tif/tif_4.png\";\r\nimport tif5 from \"../../../images/EventsWorkshops/tif/tif_6.png\";\r\nimport tif6 from \"../../../images/EventsWorkshops/tif/tif_9.png\";\r\nimport \"../../../styles/Events.css\";\r\nimport Footer from \"../../shared/Footer\";\r\n\r\nfunction Tif() {\r\n  return (\r\n    <CustomBox>\r\n      <Box>\r\n        <Stack\r\n          textAlign={\"center\"}\r\n          align={\"center\"}\r\n          spacing={{ base: 8, md: 8 }}\r\n          py={{ base: 20, md: 20 }}\r\n        >\r\n          <Heading\r\n            noOfLines={2}\r\n            fontWeight={600}\r\n            fontSize={{ base: \"3xl\", sm: \"4xl\", md: \"6xl\" }}\r\n            lineHeight={\"110%\"}\r\n            textAlign=\"center\"\r\n          >\r\n            Explore{\" \"}\r\n            <Text as={\"span\"} color={\"orange.400\"}>\r\n              Tech and Innovation Fair\r\n            </Text>\r\n          </Heading>\r\n          <Text color={\"gray.500\"} maxW={\"3xl\"} fontSize={\"20px\"} padding={2}>\r\n            The event helps the participants to take their tech-based prototype\r\n            to the next level by converting it into an MVP (Minimum-viable\r\n            product).These benchmark models can further be incubated for the\r\n            commencement of a start-up.\r\n          </Text>\r\n        </Stack>\r\n        <Center marginBottom={10}>\r\n          <Heading fontWeight={700} lineHeight={\"110%\"} textAlign=\"center\">\r\n            Our{\"   \"}\r\n            <Text as={\"span\"} color={\"orange.400\"}>\r\n              Partners\r\n            </Text>\r\n          </Heading>\r\n        </Center>\r\n        <Center>\r\n          <Image src={tif1} alt=\"tif_1\" h=\"300px\" w=\"600px\"></Image>\r\n        </Center>\r\n        <Stack\r\n          textAlign={\"center\"}\r\n          align={\"center\"}\r\n          spacing={{ base: 8, md: 8 }}\r\n          py={{ base: 20, md: 20 }}\r\n        >\r\n          <Box shadow=\"lg\" borderWidth=\"2px\" marginBottom={3} marginTop={3}>\r\n            <Text padding={2} color={\"gray.500\"} maxW={\"3xl\"} fontSize={\"17px\"}>\r\n              The fair comprises multiple stages of professional guidance in the\r\n              form of Workshops, Panel discussions and seminars based on\r\n              entrepreneurship and management and a culmination event during\r\n              Shaastra where they will exhibit their product to the massive\r\n              crowd of Shaastra.The event concludes with the final pitching\r\n              competition which takes place at IITM research park. By the end of\r\n              the event, participants will be equipped with the knowledge,\r\n              resources, and opportunities they need to kickstart their startup\r\n              journey.\r\n            </Text>\r\n          </Box>\r\n        </Stack>\r\n        <Center>\r\n          <Heading fontWeight={700} lineHeight={\"110%\"} textAlign=\"center\">\r\n            Workshops and{\"   \"}\r\n            <Text as={\"span\"} color={\"orange.400\"}>\r\n              Seminar\r\n            </Text>\r\n          </Heading>\r\n        </Center>\r\n        <SimpleGrid\r\n          minChildWidth=\"300px\"\r\n          spacing=\"30px\"\r\n          marginBottom={12}\r\n          marginTop={12}\r\n        >\r\n          <Center alignItems=\"center\">\r\n            <Image\r\n              src={tif2}\r\n              alt=\"tif_2\"\r\n              width=\"301px\"\r\n              height=\"301px\"\r\n              objectFit=\"fill\"\r\n            ></Image>\r\n            <Box zIndex=\"-1\" position=\"absolute\" height=\"350px\" width=\"350px\">\r\n              <Box\r\n                bgGradient={useColorModeValue(\r\n                  \"radial(orange.600 1px, transparent 1px)\",\r\n                  \"radial(orange.300 1px, transparent 1px)\"\r\n                )}\r\n                backgroundSize=\"11px 11px\"\r\n                opacity=\"1\"\r\n                height=\"100%\"\r\n              />\r\n            </Box>\r\n          </Center>\r\n          <Center alignItems=\"center\">\r\n            <Image\r\n              src={tif3}\r\n              alt=\"tif_3\"\r\n              w=\"301px\"\r\n              h=\"301px\"\r\n              objectFit=\"fill\"\r\n            ></Image>\r\n            <Box zIndex=\"-1\" width=\"350px\" position=\"absolute\" height=\"350px\">\r\n              <Box\r\n                bgGradient={useColorModeValue(\r\n                  \"radial(orange.600 1px, transparent 1px)\",\r\n                  \"radial(orange.300 1px, transparent 1px)\"\r\n                )}\r\n                backgroundSize=\"11px 11px\"\r\n                opacity=\"1\"\r\n                height=\"100%\"\r\n              />\r\n            </Box>\r\n          </Center>\r\n          <Center alignItems=\"center\">\r\n            <Image\r\n              src={tif4}\r\n              alt=\"tif_4\"\r\n              w=\"301px\"\r\n              h=\"301px\"\r\n              objectFit=\"fill\"\r\n            ></Image>\r\n            <Box zIndex=\"-1\" width=\"350px\" position=\"absolute\" height=\"350px\">\r\n              <Box\r\n                bgGradient={useColorModeValue(\r\n                  \"radial(orange.600 1px, transparent 1px)\",\r\n                  \"radial(orange.300 1px, transparent 1px)\"\r\n                )}\r\n                backgroundSize=\"11px 11px\"\r\n                opacity=\"1\"\r\n                height=\"100%\"\r\n              />\r\n            </Box>\r\n          </Center>\r\n        </SimpleGrid>\r\n        <Center>\r\n          <Heading fontWeight={700} textAlign=\"center\" lineHeight={\"110%\"}>\r\n            Success{\"   \"}\r\n            <Text as={\"span\"} color={\"orange.400\"}>\r\n              Stories\r\n            </Text>\r\n          </Heading>\r\n        </Center>\r\n        <SimpleGrid\r\n          textAlign={\"center\"}\r\n          columns={2}\r\n          marginLeft={5}\r\n          marginRight={5}\r\n          spacing={30}\r\n          marginTop={5}\r\n          marginBottom={12}\r\n        >\r\n          <Box\r\n            shadow=\"lg\"\r\n            borderWidth=\"2px\"\r\n            borderRadius=\"md\"\r\n            maxwidth={500}\r\n            padding={2}\r\n          >\r\n            <Heading\r\n              fontSize=\"xl\"\r\n              fontWeight=\"bold\"\r\n              color={\"gray.500\"}\r\n              marginTop={2}\r\n            >\r\n              Scavenger robot to eradicate manual scavenging (1st Runners up-\r\n              TIF 2021)\r\n            </Heading>\r\n            <Text padding={2} color={\"gray.500\"} maxW={\"3xl\"}>\r\n              “Competition has a lot things we can learn even if we win or not,\r\n              these learnings will be useful throughout our lives. The team of\r\n              Shaastra did a great job. The volunteers guided us patiently and\r\n              virtual creation of IIT Madras was great.”\r\n              <br />\r\n              <Text fontStyle=\"italic\" fontWeight=\"bold\">\r\n                -Harikrishnan, Team Scavenger\r\n              </Text>\r\n            </Text>\r\n          </Box>\r\n          <Box\r\n            shadow=\"lg\"\r\n            borderWidth=\"2px\"\r\n            borderRadius=\"md\"\r\n            maxwidth={500}\r\n            padding={2}\r\n          >\r\n            <Heading\r\n              fontSize=\"xl\"\r\n              fontWeight=\"bold\"\r\n              color={\"gray.500\"}\r\n              marginTop={2}\r\n            >\r\n              Drowning rescue kit - Finds drowning people and launches life\r\n              jackets for rescue (Winner TIF- 2020)\r\n            </Heading>\r\n            <Text padding={2} color={\"gray.500\"} maxW={\"3xl\"}>\r\n              “Initially, when we got the mail saying we’ve been shortlisted for\r\n              TIF at IIT Madras, we were surprised. No one in our entire family,\r\n              our generation, had ever seen an IIT. We got a really good mentor\r\n              and, Tech and Innovation Fair was really supportive from Day 0. I\r\n              thank the entire team for everything they’ve done for us.”\r\n              <br />\r\n              <Text fontStyle=\"italic\" fontWeight=\"bold\">\r\n                -Mohammed Safi, Team Night Fury\r\n              </Text>\r\n            </Text>\r\n          </Box>\r\n          <Box\r\n            shadow=\"lg\"\r\n            borderWidth=\"2px\"\r\n            borderRadius=\"md\"\r\n            maxwidth={500}\r\n            padding={2}\r\n          >\r\n            <Heading\r\n              fontSize=\"xl\"\r\n              fontWeight=\"bold\"\r\n              color={\"gray.500\"}\r\n              marginTop={2}\r\n            >\r\n              Non Invasive Measurement of Blood Glucose &Haemoglobin (Winner\r\n              TIF-2019)\r\n            </Heading>\r\n            <Text padding={2} color={\"gray.500\"} maxW={\"3xl\"}>\r\n              “We were working on our device for few months and always wanted to\r\n              make it into a startup to help people. That’s when we came across\r\n              Tech and Innovation Fair at Shaastra ‘19 in IIT Madras. The TIF\r\n              platform helped us by organising workshops on IPR and Pitching. At\r\n              the end of the day, we were also given an opportunity for\r\n              pre-incubation at the IITM Research Park. This event helped us\r\n              take our product to the next phase.”\r\n              <br />\r\n              <Text fontStyle=\"italic\" fontWeight=\"bold\">\r\n                -Sriram Shreedharan, Team Leader Glucoglobin.\r\n              </Text>\r\n            </Text>\r\n          </Box>\r\n          <Box\r\n            shadow=\"lg\"\r\n            borderWidth=\"2px\"\r\n            borderRadius=\"md\"\r\n            maxwidth={500}\r\n            padding={2}\r\n          >\r\n            <Heading\r\n              fontSize=\"xl\"\r\n              fontWeight=\"bold\"\r\n              color={\"gray.500\"}\r\n              marginTop={2}\r\n            >\r\n              Foldable House (Winner TIF-2018)\r\n            </Heading>\r\n            <Text padding={2} color={\"gray.500\"} maxW={\"3xl\"}>\r\n              “We were a project prototype while we registered for Shaastra TIF\r\n              2018. TIF 2018 gave us much insights through its mentoring\r\n              sessions and webinars. It helped us to work more aggressively on\r\n              our project and now its soon to be launched as a startup.”\r\n              <br />\r\n              <Text fontStyle=\"italic\" fontWeight=\"bold\">\r\n                -Shree Ram, CEO & Co-founder, Modulus Housing\r\n              </Text>\r\n            </Text>\r\n          </Box>\r\n        </SimpleGrid>\r\n        <Center>\r\n          <Heading textAlign=\"center\" fontWeight={700} lineHeight={\"110%\"}>\r\n            Exhibitions and{\"   \"}\r\n            <Text as={\"span\"} color={\"orange.400\"}>\r\n              Research Park Visit\r\n            </Text>\r\n          </Heading>\r\n        </Center>\r\n        <SimpleGrid\r\n          minChildWidth=\"320px\"\r\n          spacing=\"40px\"\r\n          marginBottom={10}\r\n          marginTop={10}\r\n          paddingBottom={12}\r\n        >\r\n          <Center>\r\n            <Image\r\n              src={tif5}\r\n              alt=\"tif_5\"\r\n              w=\"301px\"\r\n              h=\"301px\"\r\n              objectFit=\"fill\"\r\n            ></Image>\r\n            <Box zIndex=\"-1\" width=\"350px\" position=\"absolute\" height=\"350px\">\r\n              <Box\r\n                bgGradient={useColorModeValue(\r\n                  \"radial(orange.600 1px, transparent 1px)\",\r\n                  \"radial(orange.300 1px, transparent 1px)\"\r\n                )}\r\n                backgroundSize=\"11px 11px\"\r\n                opacity=\"1\"\r\n                height=\"100%\"\r\n              />\r\n            </Box>\r\n          </Center>\r\n          <Center>\r\n            <Image\r\n              src={tif6}\r\n              alt=\"tif_6\"\r\n              w=\"301px\"\r\n              h=\"301px\"\r\n              objectFit=\"fill\"\r\n            ></Image>\r\n            <Box zIndex=\"-1\" width=\"350px\" position=\"absolute\" height=\"350px\">\r\n              <Box\r\n                bgGradient={useColorModeValue(\r\n                  \"radial(orange.600 1px, transparent 1px)\",\r\n                  \"radial(orange.300 1px, transparent 1px)\"\r\n                )}\r\n                backgroundSize=\"11px 11px\"\r\n                opacity=\"1\"\r\n                height=\"100%\"\r\n              />\r\n            </Box>\r\n          </Center>\r\n        </SimpleGrid>\r\n      </Box>\r\n      <Footer\r\n        designed={[{ name: \"Drishti\", mail: \"me19b100@smail.iitm.ac.in\" }]}\r\n      />\r\n    </CustomBox>\r\n  );\r\n}\r\n\r\nexport default Tif;\r\n","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\spons.tsx",["355","356","357","358","359"],"import React from \"react\";\r\n// import ParticleBackground from './particle';\r\nimport \"../../styles/button.scss\";\r\nimport \"../../styles/spons.scss\";\r\nimport \"../../styles/tooltip.scss\";\r\nimport Astra from \"../../images/logo/static/Astra.svg\";\r\nimport Atlasian from \"../../images/logo/static/Atlasian.svg\";\r\nimport Boeing from \"../../images/logo/static/Boeing.svg\";\r\nimport CAT from \"../../images/logo/static/CAT.svg\";\r\nimport KLA from \"../../images/logo/static/KLA.svg\";\r\nimport Mahindra from \"../../images/logo/static/Mahindra.svg\";\r\nimport Salesforces from \"../../images/logo/static/Salesforce.svg\";\r\nimport Wells from \"../../images/logo/static/Wells_Fargo.svg\";\r\nimport foxmula from \"../../images/logo/static/foxmula.png\";\r\nimport innovaccer from \"../../images/logo/static/innovaccer.png\";\r\nimport kamal from \"../../images/logo/static/kamal_wears.png\";\r\nimport LT from \"../../images/logo/static/L&T.png\";\r\nimport mtx from \"../../images/logo/static/mtx.png\";\r\nimport subex from \"../../images/logo/static/subex.png\";\r\nimport surana from \"../../images/logo/static/surana.png\";\r\nimport Header from \"../shared/Header\";\r\nimport Footer from \"../shared/Footer\";\r\nimport CustomBox from \"../shared/CustomBox\";\r\nimport catl from \"../../images/logo/static/caterpillar22.png\";\r\nimport www from \"../../images/logo/static/www.png\";\r\nimport linkedin from \"../../images/logo/static/linkedin (1).png\";\r\nimport facebook from \"../../images/logo/static/facebook.png\";\r\nimport { useColorModeValue } from \"@chakra-ui/color-mode\";\r\nimport { invertScale } from \"framer-motion/types/value/use-inverted-scale\";\r\n\r\nfunction Spons() {\r\n  const theme = useColorModeValue(\"white\",\"black\");\r\n  return (\r\n    <>\r\n      <CustomBox>\r\n        <Header />\r\n        <div className=\"sponsBox\">\r\n          <meta\r\n            name=\"viewport\"\r\n            content=\"width=device-width, initial-scale=1.0\"\r\n          />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <script src=\"https://cdnjs.cloudflare.com/ajax/libs/animejs/2.0.2/anime.min.js\"></script>\r\n          <div className=\"main-boxx\">\r\n            {\" \"}\r\n            <br />\r\n            <br />\r\n            <div className=\"aboutus\">\r\n              <p id=\"about\">About Us</p>\r\n            </div>\r\n            <br />\r\n            <br />\r\n            <div className=\"maintextspons\">\r\n              <p className=\"boxx\">\r\n                Shaastra, ever since it's conception has been growing by leaps\r\n                and bounds and this wouldn't have been achieved without the\r\n                support of the student community and our corporate partners. We\r\n                are continuously on the look out for long-term and mutually\r\n                beneficial associations with reputed organizations from around\r\n                the globe. In case your organization shares and believes in\r\n                Shaastra’s vision, we would love to work out an association. We\r\n                always welcome ideas, queries and criticism of any kind and\r\n                hence, do feel free to contact us.\r\n              </p>\r\n            </div>\r\n            <br />\r\n            <br />\r\n            <div className=\"card__collection\">\r\n              <div className=\"card\" id=\"photo\">\r\n                <div className=\"card-front\">\r\n                  <img src={Astra} className=\"img-responsive\" alt=\"\" />\r\n                </div>\r\n                <div className=\"card-back\">\r\n                  <p className=\"text\">\r\n                    <a href=\"https://www.astrazeneca.com/\">\r\n                      <img src={www} id=\"www1\" alt=\"\"></img>\r\n                    </a>\r\n                    <a href=\"https://www.linkedin.com/company/astrazeneca/\">\r\n                      <img alt=\"\" src={linkedin} id=\"www2\"></img>\r\n                    </a>\r\n                    <a href=\"https://www.facebook.com/astrazenecacareers/\">\r\n                      <img alt=\"\" src={facebook} id=\"www3\"></img>\r\n                    </a>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\" id=\"photo\">\r\n                <div className=\"card-front\">\r\n                  <img src={Atlasian} className=\"img-responsive\" alt=\"\" />\r\n                </div>\r\n                <div className=\"card-back\">\r\n                  <p className=\"text\">\r\n                    <a href=\"https://www.atlassian.com/\">\r\n                      <img src={www} id=\"www1\" alt=\"\"></img>\r\n                    </a>\r\n                    <a href=\"https://www.linkedin.com/company/atlassian/?originalSubdomain=in\">\r\n                      <img alt=\"\" src={linkedin} id=\"www2\"></img>\r\n                    </a>\r\n                    <a href=\"https://www.facebook.com/Atlassian/\">\r\n                      <img alt=\"\" src={facebook} id=\"www3\"></img>\r\n                    </a>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\" id=\"photo\">\r\n                <div className=\"card-front\">\r\n                  <img src={Boeing} className=\"img-responsive\" alt=\"\" />\r\n                </div>\r\n                <div className=\"card-back\">\r\n                  <p className=\"text\">\r\n                    <a href=\"https://www.boeing.com/\">\r\n                      <img src={www} id=\"www1\" alt=\"\"></img>\r\n                    </a>\r\n                    <a href=\"https://www.linkedin.com/company/boeing/\">\r\n                      <img alt=\"\" src={linkedin} id=\"www2\"></img>\r\n                    </a>\r\n                    <a href=\"https://www.facebook.com/Boeing/\">\r\n                      <img alt=\"\" src={facebook} id=\"www3\"></img>\r\n                    </a>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\" id=\"photo\">\r\n                <div className=\"card-front\">\r\n                  <img\r\n                    src={CAT}\r\n                    className=\"img-responsive\"\r\n                    alt=\"\"\r\n                    style={\r\n                      theme == \"black\"\r\n                        ? {\r\n                            filter: \"invert(1)\",\r\n                          }\r\n                        : {\r\n                            filter: \"invert(0)\",\r\n                          }\r\n                    }\r\n                  />\r\n                </div>\r\n                <div className=\"card-back\">\r\n                  <p className=\"text\">\r\n                    <a href=\"https://www.caterpillar.com/\">\r\n                      <img src={www} id=\"www1\" alt=\"\"></img>\r\n                    </a>\r\n                    <a href=\"https://www.linkedin.com/company/caterpillar-inc/\">\r\n                      <img alt=\"\" src={linkedin} id=\"www2\"></img>\r\n                    </a>\r\n                    <a href=\"https://www.facebook.com/caterpillarinc/\">\r\n                      <img alt=\"\" src={facebook} id=\"www3\"></img>\r\n                    </a>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\" id=\"photo\">\r\n                <div className=\"card-front\">\r\n                  <img src={KLA} className=\"img-responsive\" alt=\"\" />\r\n                </div>\r\n                <div className=\"card-back\">\r\n                  <p className=\"text\">\r\n                    <a href=\"https://www.kla-tencor.com/company\">\r\n                      <img src={www} id=\"www1\" alt=\"\"></img>\r\n                    </a>\r\n                    <a href=\"https://www.linkedin.com/company/klacorp/\">\r\n                      <img alt=\"\" src={linkedin} id=\"www2\"></img>\r\n                    </a>\r\n                    <a href=\"https://www.facebook.com/KLAcorp/\">\r\n                      <img alt=\"\" src={facebook} id=\"www3\"></img>\r\n                    </a>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\" id=\"photo\">\r\n                <div className=\"card-front\">\r\n                  <img src={Mahindra} className=\"img-responsive\" alt=\"\" />\r\n                </div>\r\n                <div className=\"card-back\">\r\n                  <p className=\"text\">\r\n                    <a href=\"https://www.mahindra.com/\">\r\n                      <img src={www} id=\"www1\" alt=\"\"></img>\r\n                    </a>\r\n                    <a href=\"https://www.linkedin.com/company/mahindragroup/?originalSubdomain=in\">\r\n                      <img alt=\"\" src={linkedin} id=\"www2\"></img>\r\n                    </a>\r\n                    <a href=\"https://www.facebook.com/MahindraRise/\">\r\n                      <img alt=\"\" src={facebook} id=\"www3\"></img>\r\n                    </a>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\" id=\"photo\">\r\n                <div className=\"card-front\">\r\n                  <img src={Salesforces} className=\"img-responsive\" alt=\"\" />\r\n                </div>\r\n                <div className=\"card-back\">\r\n                  <p className=\"text\">\r\n                    <a href=\"https://www.salesforce.com/in/\">\r\n                      <img src={www} id=\"www1\" alt=\"\"></img>\r\n                    </a>\r\n                    <a href=\"https://www.linkedin.com/company/salesforce/\">\r\n                      <img alt=\"\" src={linkedin} id=\"www2\"></img>\r\n                    </a>\r\n                    <a href=\"https://www.facebook.com/salesforce/\">\r\n                      <img alt=\"\" src={facebook} id=\"www3\"></img>\r\n                    </a>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\" id=\"photo\">\r\n                <div className=\"card-front\">\r\n                  <img src={foxmula} className=\"img-responsive\" alt=\"\" />\r\n                </div>\r\n                <div className=\"card-back\">\r\n                  <p className=\"text\">\r\n                    <a href=\"https://foxmula.com/\">\r\n                      <img src={www} id=\"www1\" alt=\"\"></img>\r\n                    </a>\r\n                    <a href=\"https://www.linkedin.com/company/foxmula-official/?originalSubdomain=in\">\r\n                      <img alt=\"\" src={linkedin} id=\"www2\"></img>\r\n                    </a>\r\n                    <a href=\"https://www.facebook.com/foxmulaOfficial/\">\r\n                      <img alt=\"\" src={facebook} id=\"www3\"></img>\r\n                    </a>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\" id=\"photo\">\r\n                <div className=\"card-front\">\r\n                  <img\r\n                    src={innovaccer}\r\n                    className=\"img-responsive\"\r\n                    id=\"inno\"\r\n                    alt=\"\"\r\n                    style={\r\n                      theme == \"black\"\r\n                        ? {\r\n                            filter: \"invert(1)\",\r\n                          }\r\n                        : {\r\n                            filter: \"invert(0)\",\r\n                          }\r\n                    }\r\n                  />\r\n                </div>\r\n                <div className=\"card-back\">\r\n                  <p className=\"text\">\r\n                    <a href=\"https://innovaccer.com/\">\r\n                      <img src={www} id=\"www1\" alt=\"\"></img>\r\n                    </a>\r\n                    <a href=\"https://www.linkedin.com/company/innovaccer/?originalSubdomain=in\">\r\n                      <img alt=\"\" src={linkedin} id=\"www2\"></img>\r\n                    </a>\r\n                    <a href=\"https://www.facebook.com/InnovAccer/\">\r\n                      <img alt=\"\" src={facebook} id=\"www3\"></img>\r\n                    </a>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\" id=\"photo\">\r\n                <div className=\"card-front\">\r\n                  <img\r\n                    src={kamal}\r\n                    className=\"img-responsive\"\r\n                    id=\"kamal\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <div className=\"card-back\">\r\n                  <p className=\"text\">\r\n                    <a href=\"https://www.kla-tencor.com/company\">\r\n                      <img src={www} id=\"www1\" alt=\"\"></img>\r\n                    </a>\r\n                    <a href=\"https://www.linkedin.com/company/klacorp/\">\r\n                      <img alt=\"\" src={linkedin} id=\"www2\"></img>\r\n                    </a>\r\n                    <a href=\"https://www.facebook.com/KLAcorp/\">\r\n                      <img alt=\"\" src={facebook} id=\"www3\"></img>\r\n                    </a>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\" id=\"photo\">\r\n                <div className=\"card-front\">\r\n                  <img src={LT} className=\"img-responsive\" id=\"lt\" alt=\"\" />\r\n                </div>\r\n                <div className=\"card-back\">\r\n                  <p className=\"text\">\r\n                    <a href=\"https://www.larsentoubro.com/\">\r\n                      <img src={www} id=\"www1\" alt=\"\"></img>\r\n                    </a>\r\n                    <a href=\"https://www.linkedin.com/company/larsen-&-toubro-limited/?originalSubdomain=in\">\r\n                      <img alt=\"\" src={linkedin} id=\"www2\"></img>\r\n                    </a>\r\n                    <a href=\"https://www.facebook.com/LT-Construction-364964870240516/\">\r\n                      <img alt=\"\" src={facebook} id=\"www3\"></img>\r\n                    </a>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\" id=\"photo\">\r\n                <div className=\"card-front\">\r\n                  <img src={mtx} className=\"img-responsive\" id=\"mtx\" alt=\"\" />\r\n                </div>\r\n                <div className=\"card-back\">\r\n                  <p className=\"text\">\r\n                    <a href=\"https://www.mtxb2b.com/s/\">\r\n                      <img src={www} id=\"www1\" alt=\"\"></img>\r\n                    </a>\r\n                    <a href=\"https://www.linkedin.com/company/mtx-group/?originalSubdomain=in\">\r\n                      <img alt=\"\" src={linkedin} id=\"www2\"></img>\r\n                    </a>\r\n                    <a href=\"https://www.facebook.com/mtxb2b/\">\r\n                      <img alt=\"\" src={facebook} id=\"www3\"></img>\r\n                    </a>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\" id=\"photo\">\r\n                <div className=\"card-front\">\r\n                  <img\r\n                    src={subex}\r\n                    className=\"img-responsive\"\r\n                    id=\"subex\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <div className=\"card-back\">\r\n                  <p className=\"text\">\r\n                    <a href=\"https://www.subex.com/\">\r\n                      <img src={www} id=\"www1\" alt=\"\"></img>\r\n                    </a>\r\n                    <a href=\"https://www.linkedin.com/company/subex-ltd/?originalSubdomain=in\">\r\n                      <img alt=\"\" src={linkedin} id=\"www2\"></img>\r\n                    </a>\r\n                    <a href=\"https://www.facebook.com/SubexLimited/\">\r\n                      <img alt=\"\" src={facebook} id=\"www3\"></img>\r\n                    </a>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n\r\n              {/* <div className=\"card\" id=\"photo\">\r\n                <div className=\"card-front\">\r\n                  <img\r\n                    src={surana}\r\n                    className=\"img-responsive\"\r\n                    id=\"surana\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <div className=\"card-back\">\r\n                  <p className=\"text\">\r\n                    <a href=\"https://suranaandsurana.com/\">\r\n                      <img src={www} id=\"www1\" alt=\"\"></img>\r\n                    </a>\r\n                    <a href=\"https://www.linkedin.com/company/surana-&-surana-internartional-attorneys/?originalSubdomain=in\">\r\n                      <img alt=\"\" src={linkedin} id=\"www2\"></img>\r\n                    </a>\r\n                    <a href=\"https://www.facebook.com/Surana-Surana-International-Attorneys-125263729279918/\">\r\n                      <img alt=\"\" src={facebook} id=\"www3\"></img>\r\n                    </a>\r\n                  </p>\r\n                </div>\r\n              </div> */}\r\n\r\n              <div className=\"card\" id=\"photo\">\r\n                <div className=\"card-front\">\r\n                  <img\r\n                    src={Wells}\r\n                    className=\"img-responsive\"\r\n                    id=\"surana\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <div className=\"card-back\">\r\n                  {/* <p>Hello world</p> */}\r\n                  <p className=\"text\">\r\n                    <a href=\"https://www.wellsfargo.com/\">\r\n                      <img src={www} id=\"www1\" alt=\"\"></img>\r\n                    </a>\r\n                    <a href=\"https://www.linkedin.com/company/wellsfargo/\">\r\n                      <img alt=\"\" src={linkedin} id=\"www2\"></img>\r\n                    </a>\r\n                    <a href=\"https://www.facebook.com/wellsfargo/\">\r\n                      <img alt=\"\" src={facebook} id=\"www3\"></img>\r\n                    </a>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <br />\r\n          <br />\r\n          <div className=\"tooltip\">\r\n            <button id=\"flip\" className=\"fill\">\r\n              Approach Us\r\n            </button>\r\n            <span className=\"tooltiptext\">\r\n              <a href=\"mailto:sponsorship@shaastra.org\">\r\n                sponsorship@shaastra.org\r\n              </a>\r\n              <br />\r\n              Nithish Venkatesh - 7200939339\r\n              <br />\r\n              Anand Logesh RR - 7358232804\r\n            </span>\r\n          </div>\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n        </div>\r\n        <Footer\r\n          designed={[{ name: \"Mitesh\", mail: \"ce20b025@smail.iitm.ac.in\" }]}\r\n        />\r\n      </CustomBox>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Spons;\r\n","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\socialEndeavours\\SocialEnd.tsx",["360","361","362","363","364","365","366","367","368","369","370"],"F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Team_page\\Team.tsx",["371","372","373","374","375","376"],"F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Events and Workshops\\Summit.tsx",["377","378"],"import React from \"react\";\r\nimport {\r\n  Text,\r\n  Stack,\r\n  Flex,\r\n  Center,\r\n  Box,\r\n  Heading,\r\n  Image,\r\n  SimpleGrid,\r\n  Container,\r\n} from \"@chakra-ui/react\";\r\nimport summit1 from \"../../../images/EventsWorkshops/summit/Summit_news.jpg\";\r\nimport summit2 from \"../../../images/EventsWorkshops/summit/summit_2.jpg\";\r\nimport summit3 from \"../../../images/EventsWorkshops/summit/summit_3.jpg\";\r\nimport summit4 from \"../../../images/EventsWorkshops/summit/summit_4.jpg\";\r\nimport summit5 from \"../../../images/EventsWorkshops/summit/summit_5.jpg\";\r\nimport summit6 from \"../../../images/EventsWorkshops/summit/summit_6.jpg\";\r\nimport summit7 from \"../../../images/EventsWorkshops/summit/summit_7.jpg\";\r\nimport { useColorModeValue } from \"@chakra-ui/color-mode\";\r\nimport CustomBox from \"../../shared/CustomBox\";\r\nimport Footer from \"../../shared/Footer\";\r\n\r\nfunction Summit() {\r\n  return (\r\n    <CustomBox>\r\n      <Box className=\"container\">\r\n        <Stack\r\n          textAlign={\"center\"}\r\n          align={\"center\"}\r\n          spacing={{ base: 8, md: 8 }}\r\n          py={{ base: 20, md: 20 }}\r\n        >\r\n          <Heading\r\n            fontWeight={600}\r\n            fontSize={{ base: \"3xl\", sm: \"4xl\", md: \"6xl\" }}\r\n            lineHeight={\"110%\"}\r\n            textAlign=\"center\"\r\n          >\r\n            Explore{\" \"}\r\n            <Text as={\"span\"} color={\"orange.400\"}>\r\n              Summit\r\n            </Text>\r\n          </Heading>\r\n          <Text padding={2} color={\"gray.500\"} maxW={\"3xl\"} fontSize={\"20px\"}>\r\n            Previously we have successfully organised Archi-Tech Summit (2021),\r\n            Defence Tech Summit (2020), Sports Tech and Law Tech Summit (2019),\r\n            Green Energy Summit (2018), Accessibility Summit (2017) and Makers\r\n            Summit (2016) collaborating with the likes of L&T Construction, L&T\r\n            Defence, Star Sports, Shell, etc.\r\n          </Text>\r\n        </Stack>\r\n        <Center>\r\n          <Image src={summit3} alt=\"summit_3\" w=\"500px\" h=\"300px\"></Image>\r\n        </Center>\r\n        <Stack\r\n          textAlign={\"center\"}\r\n          align={\"center\"}\r\n          spacing={{ base: 8, md: 8 }}\r\n          py={{ base: 20, md: 20 }}\r\n        >\r\n          <Box shadow=\"lg\" borderWidth=\"2px\">\r\n            <Text padding={2} color={\"gray.500\"} maxW={\"3xl\"} fontSize={\"17px\"}>\r\n              Shaastra 2021 saw IIT Madras hosting it’s very first virtual\r\n              Summit that was attended by 120 delegates. The theme for Summit\r\n              2021 was Archi-Tech which brought together the fields of\r\n              architecture and technology. With developments in technology like\r\n              virtual reality, 3D printing and advancements in material science,\r\n              Shaastra Summit 2021 brought these technologies to light, to help\r\n              our participants upskill in the field of architecture\r\n            </Text>\r\n          </Box>\r\n        </Stack>\r\n        <SimpleGrid minChildWidth=\"320px\" spacing=\"40px\" marginBottom={5}>\r\n          <Box>\r\n            <Center>\r\n              <Image\r\n                src={summit2}\r\n                alt=\"summit_2\"\r\n                w=\"301px\"\r\n                h=\"301px\"\r\n                objectFit=\"fill\"\r\n              ></Image>\r\n              <Box zIndex=\"-1\" width=\"350px\" position=\"absolute\" height=\"350px\">\r\n                <Box\r\n                  bgGradient={useColorModeValue(\r\n                    \"radial(orange.600 1px, transparent 1px)\",\r\n                    \"radial(orange.300 1px, transparent 1px)\"\r\n                  )}\r\n                  backgroundSize=\"11px 11px\"\r\n                  opacity=\"1\"\r\n                  height=\"100%\"\r\n                />\r\n              </Box>\r\n            </Center>\r\n          </Box>\r\n          <Box>\r\n            <Center>\r\n              <Image\r\n                src={summit1}\r\n                alt=\"summit_1\"\r\n                w=\"301px\"\r\n                h=\"301px\"\r\n                objectFit=\"fill\"\r\n              ></Image>\r\n              <Box zIndex=\"-1\" width=\"350px\" position=\"absolute\" height=\"350px\">\r\n                <Box\r\n                  bgGradient={useColorModeValue(\r\n                    \"radial(orange.600 1px, transparent 1px)\",\r\n                    \"radial(orange.300 1px, transparent 1px)\"\r\n                  )}\r\n                  backgroundSize=\"11px 11px\"\r\n                  opacity=\"1\"\r\n                  height=\"100%\"\r\n                />\r\n              </Box>\r\n            </Center>\r\n          </Box>\r\n          <Box>\r\n            <Center>\r\n              <Image\r\n                src={summit4}\r\n                alt=\"summit_4\"\r\n                w=\"301px\"\r\n                h=\"301px\"\r\n                objectFit=\"fill\"\r\n              ></Image>\r\n              <Box zIndex=\"-1\" width=\"350px\" position=\"absolute\" height=\"350px\">\r\n                <Box\r\n                  bgGradient={useColorModeValue(\r\n                    \"radial(orange.600 1px, transparent 1px)\",\r\n                    \"radial(orange.300 1px, transparent 1px)\"\r\n                  )}\r\n                  backgroundSize=\"11px 11px\"\r\n                  opacity=\"1\"\r\n                  height=\"100%\"\r\n                />\r\n              </Box>\r\n            </Center>\r\n          </Box>\r\n        </SimpleGrid>\r\n        <Stack\r\n          textAlign={\"center\"}\r\n          align={\"center\"}\r\n          spacing={{ base: 2, md: 2 }}\r\n          py={{ base: 10, md: 10 }}\r\n        >\r\n          <Box shadow=\"lg\" borderWidth=\"2px\">\r\n            <Text padding={2} color={\"gray.500\"} maxW={\"3xl\"} fontSize={\"17px\"}>\r\n              Summit successfully hosted talks by Ar. Rahul Mehrotra, Ar. Brinda\r\n              Somaya and other renowned architects as a part of the Summit\r\n              Masterclass series. Archi-Tech Summit also organized the Post\r\n              Covid Redesign Contest and Innovation Hub Design Challenge that\r\n              provided a platform for professionals and enthusiasts in the field\r\n              of architecture and design to leverage the power of designing\r\n              spaces to solve societal problems and build better communities.\r\n            </Text>\r\n          </Box>\r\n        </Stack>\r\n        <Stack\r\n          textAlign={\"center\"}\r\n          align={\"center\"}\r\n          spacing={{ base: 2, md: 2 }}\r\n          py={{ base: 15, md: 12.5 }}\r\n        >\r\n          <Box shadow=\"lg\" borderWidth=\"2px\">\r\n            <Text padding={2} color={\"gray.500\"} maxW={\"3xl\"} fontSize={\"17px\"}>\r\n              With Sports-Tech Summit Shaastra tried to expand into bringing its\r\n              participants up to speed on the latest developments by\r\n              successfully organizing a case-study competition as a part of the\r\n              Summit and a Hackathon as a pre-event. Similarly, the Law-Tech\r\n              Summit explored the influence of modern day technology in legal\r\n              practice by organising a one of a kind Moot court.\r\n            </Text>\r\n          </Box>\r\n        </Stack>\r\n        <SimpleGrid\r\n          minChildWidth=\"320px\"\r\n          spacing=\"40px\"\r\n          marginTop={12}\r\n          paddingBottom={12}\r\n        >\r\n          <Box>\r\n            <Center>\r\n              <Image\r\n                src={summit5}\r\n                alt=\"summit_5\"\r\n                w=\"301px\"\r\n                h=\"301px\"\r\n                objectFit=\"fill\"\r\n              ></Image>\r\n              <Box zIndex=\"-1\" width=\"350px\" position=\"absolute\" height=\"350px\">\r\n                <Box\r\n                  bgGradient={useColorModeValue(\r\n                    \"radial(orange.600 1px, transparent 1px)\",\r\n                    \"radial(orange.300 1px, transparent 1px)\"\r\n                  )}\r\n                  backgroundSize=\"11px 11px\"\r\n                  opacity=\"1\"\r\n                  height=\"100%\"\r\n                />\r\n              </Box>\r\n            </Center>\r\n          </Box>\r\n          <Box>\r\n            <Center>\r\n              <Image\r\n                src={summit6}\r\n                alt=\"summit_6\"\r\n                w=\"301px\"\r\n                h=\"301px\"\r\n                objectFit=\"fill\"\r\n              ></Image>\r\n              <Box zIndex=\"-1\" width=\"350px\" position=\"absolute\" height=\"350px\">\r\n                <Box\r\n                  bgGradient={useColorModeValue(\r\n                    \"radial(orange.600 1px, transparent 1px)\",\r\n                    \"radial(orange.300 1px, transparent 1px)\"\r\n                  )}\r\n                  backgroundSize=\"11px 11px\"\r\n                  opacity=\"1\"\r\n                  height=\"100%\"\r\n                />\r\n              </Box>\r\n            </Center>\r\n          </Box>\r\n          <Box>\r\n            <Center>\r\n              <Image\r\n                src={summit7}\r\n                alt=\"summit_7\"\r\n                w=\"301px\"\r\n                h=\"301px\"\r\n                objectFit=\"fill\"\r\n              ></Image>\r\n              <Box zIndex=\"-1\" width=\"350px\" position=\"absolute\" height=\"350px\">\r\n                <Box\r\n                  bgGradient={useColorModeValue(\r\n                    \"radial(orange.600 1px, transparent 1px)\",\r\n                    \"radial(orange.300 1px, transparent 1px)\"\r\n                  )}\r\n                  backgroundSize=\"11px 11px\"\r\n                  opacity=\"1\"\r\n                  height=\"100%\"\r\n                />\r\n              </Box>\r\n            </Center>\r\n          </Box>\r\n        </SimpleGrid>\r\n      </Box>\r\n      <Footer\r\n        designed={[{ name: \"Drishti\", mail: \"me19b100@smail.iitm.ac.in\" }]}\r\n      />\r\n    </CustomBox>\r\n  );\r\n}\r\n\r\nexport default Summit;\r\n","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Speaker\\Speaker.tsx",["379","380"],"import React from \"react\";\r\nimport CustomBox from \"../../shared/CustomBox\";\r\nimport \"../../../styles/Speaker.css\";\r\nimport Images from \"./Image\";\r\nimport Video from \"../../../images/Speaker/video/speaker.mp4\";\r\nimport { useState } from \"react\";\r\n\r\n// import { Row, Col } from \"react-bootstrap\";\r\nimport { useBreakpointValue } from \"@chakra-ui/media-query\";\r\nimport { useColorModeValue } from \"@chakra-ui/color-mode\";\r\n\r\nfunction App() {\r\n  const [mute, setMute] = useState(false);\r\n\r\n  const muteTheVideo = () => {\r\n    //console.log(window.scrollY)\r\n    if (window.scrollY >= 724) {\r\n      setMute(true);\r\n    } else {\r\n      setMute(false);\r\n    }\r\n  };\r\n\r\n  window.addEventListener(\"scroll\", muteTheVideo);\r\n\r\n  return (\r\n    <CustomBox>\r\n      <div className=\"Speaker\">\r\n        <section>\r\n          <video autoPlay loop muted={mute} src={Video} />\r\n          <div className=\"mu-hero-featured-content\">\r\n            <h1> SPOTLIGHT </h1>\r\n            <h2>\r\n              {\" \"}\r\n              Spanning Science, Technology, Art, Entertainment & more, Spotlight\r\n              is the flagship lecture series of Shaastra which brings\r\n              visionaries from across the world, creating a unique platform for\r\n              learning and interaction with pioneers who have transformed the\r\n              world in remarkable ways. Spotlight stands for the convergence of\r\n              brilliance, love of knowledge and the very spirit of engineering\r\n              that Shaastra embodies.{\" \"}\r\n            </h2>\r\n          </div>\r\n        </section>\r\n        <Images />\r\n      </div>\r\n    </CustomBox>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\night\\Project.tsx",[],"F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\night\\Envisage.tsx",["381","382","383","384","385"],"import React from 'react'\r\nimport {\r\n  Heading,\r\n  useColorModeValue,\r\n  Stack,\r\n  Text,\r\n  Box,\r\n  Center,\r\n  Flex,\r\n  Image,\r\n  SimpleGrid,\r\n} from '@chakra-ui/react'\r\nimport './../../../styles/night/night.css'\r\nimport { Link } from 'react-router-dom'\r\nimport Particles from 'react-tsparticles'\r\nimport CustomBox from './../../shared/CustomBox'\r\nimport { ReactComponent as LogoBlack } from './../../../images/night/Envisage_black.svg'\r\nimport { ReactComponent as LogoWhite } from './../../../images/night/Envisage_white (1).svg'\r\nimport image1 from './../../../images/night/envisage_1.png'\r\nimport image2 from './../../../images/night/envisage_2.png'\r\nimport project1 from '../../../images/night/projects/image1.png'\r\nimport project2 from '../../../images/night/projects/image2.jpg'\r\nimport project3 from '../../../images/night/projects/image3.jpg'\r\nimport Footer from '../../shared/Footer'\r\nimport '../../../styles/night/Envisage.css'\r\nimport { FaArrowsAltV } from 'react-icons/fa'\r\nimport {\r\n  VerticalTimeline,\r\n  VerticalTimelineElement,\r\n} from 'react-vertical-timeline-component'\r\nimport 'react-vertical-timeline-component/style.min.css'\r\n\r\nexport default function Main() {\r\n  const color = useColorModeValue('white', 'black')\r\n  const bgcolor = useColorModeValue('gray.700', 'gray.200')\r\n\r\n  return (\r\n    <CustomBox>\r\n      <Flex\r\n        alignItems='center'\r\n        justifyContent='center'\r\n        direction='column'\r\n        minHeight='100vh'\r\n        className='main-ctn'\r\n        maxW='100%'\r\n        overflowX='hidden'\r\n      >\r\n        <Box className='header-ctn' marginTop={12}>\r\n          <Heading marginTop={12} fontSize='7xl'>\r\n            <span>ENVISAGE</span>\r\n          </Heading>\r\n        </Box>\r\n        <Box\r\n          rounded={'lg'}\r\n          bg={useColorModeValue('gray.700', 'gray.200')}\r\n          textColor={useColorModeValue('white', 'black')}\r\n          boxShadow={'lg'}\r\n          p={8}\r\n          marginTop={8}\r\n          marginLeft={8}\r\n          marginRight={8}\r\n          marginBottom={8}\r\n          justifyContent='center'\r\n          alignItems='center'\r\n          textAlign='center'\r\n        >\r\n          <SimpleGrid columns={[1, 1, 2]} spacing='40px'>\r\n            <Center>\r\n              <Image\r\n                alt='image1'\r\n                src={image1}\r\n                rounded='xl'\r\n                width='100%'\r\n                height='auto'\r\n              ></Image>\r\n            </Center>\r\n            <Flex flexDirection='column'>\r\n              <Heading margin={2} padding={2} className='sub-heading'>\r\n                ABOUT US\r\n              </Heading>\r\n              <Text fontSize='lg' padding={2}>\r\n                The Annual Technical Festival of IIT Madras, Shaastra introduced\r\n                a technologically aided cultural show in the year 2013,\r\n                capitalizing on the entertainment factor. This techno – cultural\r\n                show was named Envisage and today it is India’s first and only\r\n                student organised techno-entertainment show. The projects\r\n                exhibited by Envisage attract a bunch of not-so-technically\r\n                oriented guests too. The projects are designed in conformity\r\n                with the tagline of Envisage – “Technology meets Entertainment”.\r\n                Alongside conducting the show on 1st day of Shaastra, a number\r\n                of other interactive projects and video games are also\r\n                developed and exhibited to a vast crowd at KV Stalls during\r\n                Shaastra. Over the past few years Envisage has been exploring\r\n                and presenting projects at various avenues like IIM Bangalore,\r\n                Anna University and in several other universities as part of\r\n                Samparks, Publicity event of Shaastra. The coming version marks\r\n                the entry of Envisage into its very 10th year.\r\n              </Text>\r\n              <Heading margin={2} padding={2} className='sub-heading'>\r\n                VISION\r\n              </Heading>\r\n              <Text fontSize='lg' padding={2}>\r\n                As the tagline “Where Technology Meets Entertainment” suggests,\r\n                we inspire and enable students to explore their creative and\r\n                engineering skills through various technical projects for the\r\n                techno cultural show and the tech exhibition during Shaastra.\r\n              </Text>\r\n            </Flex>\r\n          </SimpleGrid>\r\n        </Box>\r\n         <Flex\r\n            flexDirection='column'\r\n            alignItems='center'\r\n            justifyContent='center'\r\n          >\r\n            <Box>\r\n              <Heading marginTop={5} padding={2} className='sub-heading'>\r\n                VERTICALS\r\n              </Heading>\r\n            </Box>\r\n            <SimpleGrid\r\n              columns = {[1,1,1,2,3]}\r\n              spacing='18px'\r\n              justifyContent='center'\r\n              alignItems='center'\r\n            >\r\n              <Box\r\n                textColor='black'\r\n                bgColor='white'\r\n                rounded={'lg'}\r\n                boxShadow={'lg'}\r\n                p={8}\r\n                marginTop={8}\r\n                marginLeft={8}\r\n                marginRight={8}\r\n                marginBottom={8}\r\n                minHeight = {300}\r\n                justifyContent='center'\r\n                alignItems='center'\r\n                textAlign='center'\r\n              >\r\n                <Heading margin={2}>Shows</Heading>\r\n                <Text>\r\n                  This vertical comprises large scale projects which are\r\n                  presented in the Envisage show, which is organized on the\r\n                  first day of Shaastra. This is the first and only student-run\r\n                  techno-entertainment show in India and witnessed by an\r\n                  audience of around 5000.\r\n                </Text>\r\n              </Box>\r\n              <Box\r\n                rounded={'lg'}\r\n                boxShadow={'lg'}\r\n                p={8}\r\n                marginTop={8}\r\n                marginLeft={8}\r\n                marginRight={8}\r\n                marginBottom={8}\r\n                justifyContent='center'\r\n                alignItems='center'\r\n                textAlign='center'\r\n                minHeight={300}\r\n                bgColor='white'\r\n                textColor='black'\r\n              >\r\n                <Heading margin={2}>Tech Ambience</Heading>\r\n                <Text>\r\n                  This vertical comprises interactive projects which are\r\n                  presented at KV grounds during Shaastra as a part of tech-\r\n                  exhibition of Envisage.\r\n                </Text>\r\n              </Box>\r\n              <Box\r\n                rounded={'lg'}\r\n                boxShadow={'lg'}\r\n                p={8}\r\n                marginTop={8}\r\n                marginLeft={8}\r\n                marginRight={8}\r\n                marginBottom={8}\r\n                justifyContent='center'\r\n                alignItems='center'\r\n                textAlign='center'\r\n                minHeight={300}\r\n                bgColor='white'\r\n                textColor='black'\r\n              >\r\n                <Heading margin={2}>Game Dev</Heading>\r\n                <Text>\r\n                  This vertical is involved in creating video games from scratch\r\n                  and are displayed at KV stalls during Shaastra as a part of\r\n                  our Tech-Exhibition. We also compete in a lot of entertaining\r\n                  game jam sessions and conduct game development workshops as a\r\n                  team to show the entertaining aspect of game development to\r\n                  others.\r\n                </Text>\r\n              </Box>\r\n            </SimpleGrid>\r\n          </Flex>\r\n        <Flex\r\n          justifyContent='center'\r\n          flexDirection='column'\r\n          margin={2}\r\n          padding={2}\r\n        >\r\n          <Heading marginBottom={12} className='sub-heading'>\r\n            PREVIOUS YEAR'S PROJECTS\r\n          </Heading>\r\n          <VerticalTimeline className='timeline'>\r\n            <VerticalTimelineElement\r\n              className='vertical-timeline-element--work'\r\n              contentStyle={{\r\n                background: '#EDEDED',\r\n                color: 'black',\r\n              }}\r\n              iconStyle={{ background: '#E63E6D', color: '#fff' }}\r\n              contentArrowStyle={{\r\n                borderRight: '7px solid  #EDEDED',\r\n              }}\r\n              icon={<FaArrowsAltV />}\r\n            >\r\n              <h3 className='vertical-timeline-element-title'>Envisage 7.0</h3>\r\n              <p>Click below to explore and learn more about the projects that were conducted during Shaastra 2018-2019.</p>\r\n              <Link\r\n                to={{ pathname: `/project/1`, state: 'Envisage 7.0' }}\r\n                className='link-ctn '\r\n              >\r\n                Explore Projects\r\n              </Link>\r\n            </VerticalTimelineElement>\r\n\r\n            <VerticalTimelineElement\r\n              className='vertical-timeline-element--work'\r\n              contentStyle={{\r\n                background: '#EDEDED',\r\n                color: 'black',\r\n              }}\r\n              contentArrowStyle={{\r\n                borderRight: '7px solid  #EDEDED',\r\n              }}\r\n              iconStyle={{ background: '#E63E6D', color: '#fff' }}\r\n              icon={<FaArrowsAltV />}\r\n            >\r\n              <h3 className='vertical-timeline-element-title'>Envisage 8.0</h3>\r\n              <p>Click below to explore and learn more about the projects that were conducted during Shaastra 2019-2020.</p>\r\n              <Link\r\n                to={{ pathname: `/project/2`, state: 'Envisage 8.0' }}\r\n                className='link-ctn'\r\n              >\r\n                Explore Projects\r\n              </Link>\r\n            </VerticalTimelineElement>\r\n            <VerticalTimelineElement\r\n              width='50%'\r\n              className='vertical-timeline-element--work'\r\n              iconStyle={{ background: '#E63E6D', color: '#fff' }}\r\n              contentArrowStyle={{\r\n                borderRight: '7px solid  #EDEDED',\r\n              }}\r\n              contentStyle={{\r\n                background: '#EDEDED',\r\n                color: 'black',\r\n              }}\r\n              icon={<FaArrowsAltV />}\r\n            >\r\n              <h3 className='vertical-timeline-element-title'>Envisage 9.0</h3>\r\n              <p>Click below to explore and learn more about the projects that were conducted during Shaastra 2020-2021.</p>\r\n              <Link\r\n                to={{ pathname: `/project/3`, state: 'Envisage 9.0' }}\r\n                className='link-ctn'\r\n              >\r\n                Explore Projects\r\n              </Link>\r\n            </VerticalTimelineElement>\r\n          </VerticalTimeline>\r\n        </Flex>\r\n        <Flex\r\n          flexDirection='column'\r\n          justifyContent='center'\r\n          alignItems='center'\r\n          textAlign='center'\r\n        >\r\n          <Heading marginBottom={12} className='sub-heading'>\r\n            <span>PATENTED PROJECTS</span>\r\n          </Heading>\r\n          <Box\r\n            rounded={'lg'}\r\n            boxShadow={'lg'}\r\n            textColor={color}\r\n            bgColor={bgcolor}\r\n            p={8}\r\n            marginTop={8}\r\n            marginLeft={8}\r\n            marginRight={8}\r\n            marginBottom={8}\r\n            justifyContent='center'\r\n            alignItems='center'\r\n            textAlign='center'\r\n          >\r\n            <SimpleGrid columns={[1, 1, 2]} spacing='40px'>\r\n              <Center>\r\n                <Image\r\n                  alt='image1'\r\n                  src={project1}\r\n                  rounded='xl'\r\n                  width='100%'\r\n                  height='auto'\r\n                  maxH='400px'\r\n                ></Image>\r\n              </Center>\r\n              <Flex\r\n                flexDirection='column'\r\n                alignItems='center'\r\n                justifyContent='center'\r\n                textAlign='center'\r\n              >\r\n                <Heading margin={2} padding={2} className='sub-heading'>\r\n                  Speed Painting Bot (SPB)\r\n                </Heading>\r\n                <Text fontSize='lg' padding={2}>\r\n                  It is a bot that can create a painting by punching colored (5\r\n                  colors) pixels on a canvas.It involves painting a huge picture\r\n                  within 3-4 minutes using close synchronisation between more\r\n                  than 40 stepper motors. A concept called pixelation is used\r\n                  wherein an image is converted to pixels of size 3 cm X 3 cm\r\n                  and 40 multi coloured brushes simultaneously paint the entire\r\n                  image in a row wise fashion. The project is an entirely new\r\n                  concept, which hasn't been tried anywhere else.\r\n                </Text>\r\n              </Flex>\r\n              <Center>\r\n                <Image\r\n                  alt='image1'\r\n                  src={project2}\r\n                  rounded='xl'\r\n                  width='100%'\r\n                  height='auto'\r\n                  maxH='400px'\r\n                ></Image>\r\n              </Center>\r\n              <Flex\r\n                flexDirection='column'\r\n                alignItems='center'\r\n                justifyContent='center'\r\n                textAlign='center'\r\n              >\r\n                <Heading margin={2} padding={2} className='sub-heading'>\r\n                  3D Waterfall\r\n                </Heading>\r\n                <Text fontSize='lg' padding={2}>\r\n                  This project can be subtly described as a cylindrical water\r\n                  screen. Usually lights and other lighting devices are used as\r\n                  a display element but here we are doing the same thing in a\r\n                  quite unique way, through water i.e using water as an element\r\n                  of display. We achieved this using our own electrical design\r\n                  and controlling it through an Arduino-Uno. The structure which\r\n                  bears the project has a unique portable design.\r\n                </Text>\r\n              </Flex>\r\n              <Center>\r\n                <Image\r\n                  alt='image1'\r\n                  src={project3}\r\n                  rounded='xl'\r\n                  width='100%'\r\n                  height='auto'\r\n                  maxH='400px'\r\n                ></Image>\r\n              </Center>\r\n              <Flex\r\n                flexDirection='column'\r\n                alignItems='center'\r\n                justifyContent='center'\r\n                textAlign='center'\r\n              >\r\n                <Heading margin={2} padding={2} className='sub-heading'>\r\n                  Virtual Instruments\r\n                </Heading>\r\n                <Text fontSize='lg' padding={2}>\r\n                  Did the thought of making music out of thin air ever crossed\r\n                  your mind? What if you come across some nice music at some\r\n                  random place and you want to play it then and there. Here\r\n                  comes the virtual instruments, where one can play drums,\r\n                  flute, piano, guitar and so on without the need of carrying\r\n                  the whole instrument set up everywhere.\r\n                </Text>\r\n              </Flex>\r\n            </SimpleGrid>\r\n          </Box>\r\n        </Flex>\r\n      </Flex>\r\n      <Footer\r\n        designed={[\r\n          { name: 'Prithiviraj P', mail: 'na19b052@smail.iitm.ac.in' },\r\n        ]}\r\n      />\r\n    </CustomBox>\r\n  )\r\n}\r\n","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Events and Workshops\\Events.tsx",["386","387"],"import React from 'react'\r\nimport {\r\n  Text,\r\n  Stack,\r\n  Flex,\r\n  Link,\r\n  Box,\r\n  Heading,\r\n  Image,\r\n  useColorModeValue\r\n} from '@chakra-ui/react'\r\nimport bg from \"../../../images/EventsWorkshops/events/bg.jpeg\"\r\nimport BE from \"../../../images/EventsWorkshops/events/BE.jpg\"\r\nimport Aero from \"../../../images/EventsWorkshops/events/Aerofest.jpeg\"\r\nimport Bio from \"../../../images/EventsWorkshops/events/Biogen.jpg\"\r\nimport Cl from \"../../../images/EventsWorkshops/events/Coding&Logic.png\"\r\nimport DB from \"../../../images/EventsWorkshops/events/Design&Build.png\"\r\nimport Elec from \"../../../images/EventsWorkshops/events/Elecfest.png\"\r\nimport CustomBox from '../../shared/CustomBox'\r\nimport Footer from '../../shared/Footer';\r\nimport \"../../../styles/Events.css\"\r\nimport { VerticalTimeline, VerticalTimelineElement }  from 'react-vertical-timeline-component';\r\nimport 'react-vertical-timeline-component/style.min.css';\r\n\r\n\r\nfunction Events() {\r\n\r\n  const timeline = useColorModeValue(\"pink\", \"white-events\")\r\n\r\n  return (\r\n    <CustomBox>\r\n      <Box className=\"events\">\r\n        <Stack\r\n          textAlign={'center'}\r\n          align={'center'}\r\n          spacing={{ base: 8, md: 8 }}\r\n          py={{ base: 20, md: 20 }}\r\n        >\r\n         <Flex>\r\n           <Heading textAlign=\"right\" fontSize=\"7xl\">EVENTS <br /> WORKSHOPS</Heading>\r\n           <Heading alignSelf=\"center\" color=\"#ea8a94\" fontSize=\"7xl\">&</Heading>\r\n         </Flex>\r\n         <Box zIndex=\"5\" width=\"100vw\" backgroundRepeat=\"no-repeat\" backgroundPosition=\"center\" backgroundSize=\"cover\">\r\n            <VerticalTimeline className={timeline}>\r\n              <VerticalTimelineElement\r\n                 className=\"vertical-timeline-element--work\"\r\n                 contentStyle={{ background: 'transparent', color: '#fff', fontSize: \"1.5vw\" }}\r\n                 iconStyle={{color: '#fff' }}\r\n              >\r\n                <Link href=\"/events/AEROFEST\"><Image src={Aero}></Image></Link>\r\n              </VerticalTimelineElement>\r\n              <VerticalTimelineElement\r\n                 className=\"vertical-timeline-element--work\"\r\n                 contentStyle={{ background: 'transparent', color: '#fff', fontSize: \"1.5vw\" }}\r\n                 iconStyle={{color: '#fff' }}\r\n              >\r\n                <Link href=\"/events/BIOGEN\"><Image src={Bio}></Image></Link>\r\n              </VerticalTimelineElement>\r\n              <VerticalTimelineElement\r\n                 className=\"vertical-timeline-element--work\"\r\n                 contentStyle={{background: 'transparent', color: '#fff', fontSize: \"1.5vw\" }}\r\n                 iconStyle={{color: '#fff' }}\r\n              >\r\n                <Link href=\"/events/BEVENTS\"> <Image src={BE} boxSize=\"100%\"></Image>\r\n                  BEvents</Link>\r\n              </VerticalTimelineElement>\r\n              <VerticalTimelineElement\r\n                 className=\"vertical-timeline-element--work\"\r\n                 contentStyle={{ background: 'transparent', color: '#fff', fontSize: \"1.5vw\" }}\r\n                 iconStyle={{color: '#fff' }}\r\n              >\r\n                <Link href=\"/events/CL\"><Image src={Cl}></Image></Link>\r\n              </VerticalTimelineElement>\r\n              <VerticalTimelineElement\r\n                 className=\"vertical-timeline-element--work\"\r\n                 contentStyle={{ background: 'transparent', color: '#fff', fontSize: \"1.5vw\" }}\r\n                 iconStyle={{color: '#fff' }}\r\n              >\r\n                <Link href=\"/events/DB\"><Image src={DB}></Image></Link>\r\n              </VerticalTimelineElement>\r\n              <VerticalTimelineElement\r\n                 className=\"vertical-timeline-element--work\"\r\n                 contentStyle={{ background: 'transparent', color: '#fff', fontSize: \"1.5vw\" }}\r\n                 iconStyle={{color: '#fff' }}\r\n              >\r\n                <Link href=\"/events/ELECFEST\"><Image src={Elec}></Image></Link>\r\n              </VerticalTimelineElement>\r\n              <VerticalTimelineElement\r\n                 className=\"vertical-timeline-element--work\"\r\n                 contentStyle={{ background: 'transparent', color: '#fff', fontSize: \"1.5vw\" }}\r\n                 iconStyle={{color: '#fff' }}\r\n              >\r\n                <Link href=\"/events/IGNITE\">Ignite</Link>\r\n              </VerticalTimelineElement>\r\n              <VerticalTimelineElement\r\n                 className=\"vertical-timeline-element--work\"\r\n                 contentStyle={{ background: 'transparent', color: '#fff', fontSize: \"1.5vw\" }}\r\n                 iconStyle={{color: '#fff' }}\r\n              >\r\n                <Link href=\"/events/STRATEGISTS\">Strategists</Link>\r\n              </VerticalTimelineElement>\r\n              <VerticalTimelineElement\r\n                 className=\"vertical-timeline-element--work\"\r\n                 contentStyle={{ background: 'transparent', color: '#fff', fontSize: \"1.5vw\" }}\r\n                 iconStyle={{color: '#fff' }}\r\n              >\r\n                <Link href=\"/events/WORKSHOPS\">Workshops</Link>\r\n              </VerticalTimelineElement>\r\n            </VerticalTimeline>\r\n         </Box>\r\n        </Stack>\r\n      </Box>\r\n      <Footer\r\n        designed={[{ name: 'Drishti', mail: 'me19b100@smail.iitm.ac.in' }]}\r\n      />\r\n    </CustomBox>\r\n  )\r\n}\r\n\r\nexport default Events\r\n","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Events and Workshops\\EventsHome.tsx",["388"],"import React from 'react'\r\nimport {\r\n  Flex,\r\n  Text,\r\n  Heading,\r\n  Center,\r\n  Box,\r\n  VStack,\r\n  Image,\r\n  Link,\r\n} from '@chakra-ui/react'\r\nimport { useColorModeValue } from '@chakra-ui/color-mode'\r\nimport { Link as ReachLink } from 'react-router-dom'\r\nimport summit from '../../../images/EventsWorkshops/summit/summit_5.jpg'\r\nimport tif from '../../../images/EventsWorkshops/tif/tif_4.png'\r\nimport Particles from 'react-tsparticles'\r\nimport '../../../styles/particles.css'\r\nimport CustomBox from '../../shared/CustomBox'\r\nimport Footer from '../../shared/Footer'\r\n\r\nfunction EventsHome() {\r\n  return (\r\n    <Box>\r\n      <CustomBox>\r\n        <Center h='300px'>\r\n          <Particles\r\n            className='particles'\r\n            id='tsparticles'\r\n            options={{\r\n              fpsLimit: 60,\r\n              interactivity: {\r\n                detectsOn: 'canvas',\r\n                events: {\r\n                  onClick: {\r\n                    enable: true,\r\n                    mode: 'push',\r\n                  },\r\n                  onHover: {\r\n                    enable: true,\r\n                    mode: 'repulse',\r\n                  },\r\n                  resize: true,\r\n                },\r\n                modes: {\r\n                  bubble: {\r\n                    distance: 400,\r\n                    duration: 2,\r\n                    opacity: 0.8,\r\n                    size: 40,\r\n                  },\r\n                  push: {\r\n                    quantity: 4,\r\n                  },\r\n                  repulse: {\r\n                    distance: 200,\r\n                    duration: 0.4,\r\n                  },\r\n                },\r\n              },\r\n              particles: {\r\n                color: {\r\n                  value: '#FECD1A',\r\n                },\r\n                links: {\r\n                  color: '#FECD1A',\r\n                  distance: 150,\r\n                  enable: true,\r\n                  opacity: 0.5,\r\n                  width: 1,\r\n                },\r\n                collisions: {\r\n                  enable: true,\r\n                },\r\n                move: {\r\n                  direction: 'none',\r\n                  enable: true,\r\n                  outMode: 'bounce',\r\n                  random: false,\r\n                  speed: 6,\r\n                  straight: false,\r\n                },\r\n                number: {\r\n                  density: {\r\n                    enable: true,\r\n                    value_area: 900,\r\n                  },\r\n                  value: 60,\r\n                },\r\n                opacity: {\r\n                  value: 1,\r\n                },\r\n                shape: {\r\n                  type: 'circle',\r\n                },\r\n                size: {\r\n                  random: true,\r\n                  value: 5,\r\n                },\r\n              },\r\n              detectRetina: true,\r\n            }}\r\n          />\r\n\r\n          <Heading\r\n            fontWeight={600}\r\n            fontSize={{ base: '3xl', sm: '4xl', md: '6xl' }}\r\n            lineHeight={'110%'}\r\n            textAlign='center'\r\n          >\r\n            Events and{' '}\r\n            <Text as={'span'} color={'orange.400'}>\r\n              Workshops\r\n            </Text>\r\n          </Heading>\r\n        </Center>\r\n        <VStack spacing={10} align='stretch' paddingBottom={8}>\r\n          {/*Events*/}\r\n          <Box\r\n            marginTop={{ base: '1', sm: '5' }}\r\n            display='flex'\r\n            flexDirection={{ base: 'column', sm: 'row' }}\r\n            justifyContent='space-between'\r\n          >\r\n            <Box\r\n              display='flex'\r\n              flex='1'\r\n              marginRight='3'\r\n              position='relative'\r\n              alignItems='center'\r\n            >\r\n              <Box\r\n                width={{ base: '100%', sm: '75%' }}\r\n                zIndex='2'\r\n                marginLeft={{ base: '0', sm: '10%' }}\r\n                marginTop='5%'\r\n              >\r\n                <Image\r\n                  borderRadius='lg'\r\n                  src={\r\n                    'https://images.unsplash.com/photo-1499951360447-b19be8fe80f5?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=800&q=80'\r\n                  }\r\n                  alt='events'\r\n                  objectFit='contain'\r\n                />\r\n              </Box>\r\n              <Box\r\n                zIndex='1'\r\n                width='90%'\r\n                position='absolute'\r\n                height='100%'\r\n                marginLeft={{ base: '0', sm: '3%' }}\r\n              >\r\n                <Box\r\n                  bgGradient={useColorModeValue(\r\n                    'radial(orange.600 1px, transparent 1px)',\r\n                    'radial(orange.300 1px, transparent 1px)'\r\n                  )}\r\n                  backgroundSize='20px 20px'\r\n                  opacity='1'\r\n                  height='100%'\r\n                />\r\n              </Box>\r\n            </Box>\r\n            <Box\r\n              display='flex'\r\n              flex='1'\r\n              flexDirection='column'\r\n              justifyContent='center'\r\n              marginTop={{ base: '3', sm: '0' }}\r\n              marginRight={8}\r\n            >\r\n              <Heading marginTop='1' textAlign='center' color={'yellow.400'}>\r\n                Events\r\n              </Heading>\r\n              <Text\r\n                textAlign='center'\r\n                as='p'\r\n                marginTop='2'\r\n                color={useColorModeValue('gray.700', 'gray.200')}\r\n                fontSize='lg'\r\n              >\r\n                Have you ever wanted to work on modeling a real airplane? Do\r\n                \"hacking\" scenes in movies and TV Shows make you roll your eyes?\r\n                Shaastra brings you several events every year. Some of the\r\n                events conducted last year as a part of Shaastra were Boeing\r\n                Aeromodelling Competition, Global Biotech Council, Shaastra\r\n                Programming Contest. Capture the Flag (CTF) and many more.\r\n              </Text>\r\n              <Text fontSize=\"2xl\" textAlign='center' marginTop={8}  \r\n           _hover={{\r\n               color: \"teal.500\",\r\n  }}><Link as={ReachLink} to=\"/events\">Explore Events</Link></Text>\r\n            </Box>\r\n          </Box>\r\n          {/*Workshops*/}\r\n          <Box\r\n            marginTop={{ base: '1', sm: '5' }}\r\n            display='flex'\r\n            flexDirection={{ base: 'column', sm: 'row' }}\r\n            justifyContent='space-between'\r\n          >\r\n            <Box\r\n              display='flex'\r\n              flex='1'\r\n              marginRight='3'\r\n              position='relative'\r\n              alignItems='center'\r\n            >\r\n              <Box\r\n                width={{ base: '100%', sm: '75%' }}\r\n                zIndex='2'\r\n                marginLeft={{ base: '0', sm: '10%' }}\r\n                marginTop='5%'\r\n              >\r\n                <Image\r\n                  borderRadius='lg'\r\n                  src={\r\n                    'https://images.unsplash.com/photo-1499951360447-b19be8fe80f5?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=800&q=80'\r\n                  }\r\n                  alt='workshops'\r\n                  objectFit='contain'\r\n                />\r\n              </Box>\r\n              <Box\r\n                zIndex='1'\r\n                width='90%'\r\n                position='absolute'\r\n                height='100%'\r\n                marginLeft={{ base: '0', sm: '3%' }}\r\n              >\r\n                <Box\r\n                  bgGradient={useColorModeValue(\r\n                    'radial(orange.600 1px, transparent 1px)',\r\n                    'radial(orange.300 1px, transparent 1px)'\r\n                  )}\r\n                  backgroundSize='20px 20px'\r\n                  opacity='1'\r\n                  height='100%'\r\n                />\r\n              </Box>\r\n            </Box>\r\n            <Box\r\n              display='flex'\r\n              flex='1'\r\n              flexDirection='column'\r\n              justifyContent='center'\r\n              marginTop={{ base: '3', sm: '0' }}\r\n              marginRight={8}\r\n            >\r\n              <Heading marginTop='1' textAlign='center' color={'yellow.400'}>\r\n                Workshops\r\n              </Heading>\r\n              <Text\r\n                as='p'\r\n                marginTop='2'\r\n                color={useColorModeValue('gray.700', 'gray.200')}\r\n                fontSize='lg'\r\n                textAlign='center'\r\n              >\r\n                As a part of Shaastra, we conduct several workshops every year,\r\n                ranging over multiple topics. Some of the workshops that were\r\n                conducted last year were Introduction to Data Science and\r\n                Machine Learning, Cryptocurrency, and blockchain, How to Design\r\n                a Mars Rover, Parallel Programming with Python, Make a chat app\r\n                using Socket.io, Node.js, and MongoDB, and many more.\r\n              </Text>\r\n              <Text fontSize=\"2xl\" textAlign='center' marginTop={8}  _hover={{\r\n               color: \"teal.500\",\r\n              }}><Link as={ReachLink} to=\"/events/WORKSHOPS\"\r\n            >Explore Workshops</Link></Text>\r\n            </Box>\r\n          </Box>\r\n          {/*Summit*/}\r\n          <Box\r\n            marginTop={{ base: '1', sm: '5' }}\r\n            display='flex'\r\n            flexDirection={{ base: 'column', sm: 'row' }}\r\n            justifyContent='space-between'\r\n          >\r\n            <Box\r\n              display='flex'\r\n              flex='1'\r\n              marginRight='3'\r\n              position='relative'\r\n              alignItems='center'\r\n            >\r\n              <Box\r\n                width={{ base: '100%', sm: '75%' }}\r\n                zIndex='2'\r\n                marginLeft={{ base: '0', sm: '10%' }}\r\n                marginTop='5%'\r\n              >\r\n                <Image\r\n                  borderRadius='lg'\r\n                  src={summit}\r\n                  alt='summit'\r\n                  objectFit='contain'\r\n                />\r\n              </Box>\r\n              <Box\r\n                zIndex='1'\r\n                width='90%'\r\n                position='absolute'\r\n                height='100%'\r\n                marginLeft={{ base: '0', sm: '3%' }}\r\n              >\r\n                <Box\r\n                  bgGradient={useColorModeValue(\r\n                    'radial(orange.600 1px, transparent 1px)',\r\n                    'radial(orange.300 1px, transparent 1px)'\r\n                  )}\r\n                  backgroundSize='20px 20px'\r\n                  opacity='1'\r\n                  height='100%'\r\n                />\r\n              </Box>\r\n            </Box>\r\n            <Box\r\n              display='flex'\r\n              flex='1'\r\n              flexDirection='column'\r\n              justifyContent='center'\r\n              marginTop={{ base: '3', sm: '0' }}\r\n              marginRight={8}\r\n            >\r\n              <Heading marginTop='1' textAlign='center' color={'yellow.400'}>\r\n                Summit\r\n              </Heading>\r\n              <Text\r\n                as='p'\r\n                marginTop='2'\r\n                color={useColorModeValue('gray.700', 'gray.200')}\r\n                fontSize='lg'\r\n                textAlign='center'\r\n              >\r\n                Summit is the flagship conference of Shaastra, which provides a\r\n                networking platform for its participants to interact with the\r\n                pioneers of today, and opportunities to enhance their expertise.\r\n                With a line-up of lectures, panel discussions and workshops\r\n                spanning over 3 days, participants, which include college\r\n                students, personnel from startups and professionals are ensured\r\n                to get an all-round experience. Every year Summit ventures into\r\n                a unique and relevant theme to contribute to the developments in\r\n                these fields of technology and to create an impact on society.\r\n              </Text>\r\n              <Text\r\n                fontSize='2xl'\r\n                textAlign='center'\r\n                marginTop={8}\r\n                _hover={{\r\n                  color: 'teal.500',\r\n                }}\r\n              >\r\n                <Link as={ReachLink} to='/summit'>\r\n                  Explore Summit\r\n                </Link>\r\n              </Text>\r\n            </Box>\r\n          </Box>\r\n          {/*Tif*/}\r\n          <Box\r\n            marginTop={{ base: '1', sm: '5' }}\r\n            display='flex'\r\n            flexDirection={{ base: 'column', sm: 'row' }}\r\n            justifyContent='space-between'\r\n          >\r\n            <Box\r\n              display='flex'\r\n              flex='1'\r\n              marginRight='3'\r\n              position='relative'\r\n              alignItems='center'\r\n            >\r\n              <Box\r\n                width={{ base: '100%', sm: '75%' }}\r\n                zIndex='2'\r\n                marginLeft={{ base: '0', sm: '10%' }}\r\n                marginTop='5%'\r\n              >\r\n                <Image\r\n                  borderRadius='lg'\r\n                  src={tif}\r\n                  alt='tif'\r\n                  objectFit='contain'\r\n                />\r\n              </Box>\r\n              <Box\r\n                zIndex='1'\r\n                width='90%'\r\n                position='absolute'\r\n                height='100%'\r\n                marginLeft={{ base: '0', sm: '3%' }}\r\n              >\r\n                <Box\r\n                  bgGradient={useColorModeValue(\r\n                    'radial(orange.600 1px, transparent 1px)',\r\n                    'radial(orange.300 1px, transparent 1px)'\r\n                  )}\r\n                  backgroundSize='20px 20px'\r\n                  opacity='1'\r\n                  height='100%'\r\n                />\r\n              </Box>\r\n            </Box>\r\n            <Box\r\n              display='flex'\r\n              flex='1'\r\n              flexDirection='column'\r\n              justifyContent='center'\r\n              marginTop={{ base: '3', sm: '0' }}\r\n              marginRight={8}\r\n            >\r\n              <Heading marginTop='1' textAlign='center' color={'yellow.400'}>\r\n                Tech and Innovation Fair\r\n              </Heading>\r\n              <Text\r\n                as='p'\r\n                marginTop='2'\r\n                color={useColorModeValue('gray.700', 'gray.200')}\r\n                fontSize='lg'\r\n                textAlign='center'\r\n              >\r\n                Tech and Innovation fair is one of the flagship events in\r\n                Shaastra that scouts for budding entrepreneurs by providing a\r\n                platform to develop tech based projects and enhance their\r\n                potential to grow into a commercial product. TIF envisions\r\n                leveraging IIT Madras’s rich startup ecosystem in its mission to\r\n                promote innovation and address the dearth of hardcore tech\r\n                startups in India\r\n              </Text>\r\n              <Text\r\n                fontSize='2xl'\r\n                textAlign='center'\r\n                marginTop={8}\r\n                _hover={{\r\n                  color: 'teal.500',\r\n                }}\r\n              >\r\n                <Link as={ReachLink} to='/tif'>\r\n                  Explore TIF\r\n                </Link>\r\n              </Text>\r\n            </Box>\r\n          </Box>\r\n        </VStack>\r\n        <Footer\r\n          designed={[{ name: 'Drishti', mail: 'me19b100@smail.iitm.ac.in' }]}\r\n        />\r\n      </CustomBox>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default EventsHome\r\n","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Events and Workshops\\EventVertical.tsx",["389","390","391","392","393","394","395","396","397","398","399","400","401","402"],"import * as React from \"react\"\r\nimport {\r\n    Text,\r\n    Stack,\r\n    Flex,\r\n    Link,\r\n    Box,\r\n    Heading,\r\n    Image,\r\n    Button,\r\n    useColorModeValue,\r\n    Center\r\n  } from '@chakra-ui/react'\r\nimport { useParams } from \"react-router-dom\"\r\nimport CustomBox from '../../shared/CustomBox'\r\nimport Footer from '../../shared/Footer';\r\n\r\nimport EventsData from \"./EventsData\";\r\n\r\nimport bg from \"../../../images/EventsWorkshops/events/bg.jpeg\"\r\nimport EventVerticalComponent from \"./EventVeticalComponent\"\r\nimport { Event, useGetEventsQuery } from \"../../../generated/graphql\";\r\nimport bg2 from '../../../images/EventsWorkshops/events/bg2.jpg'\r\n\r\nconst EventVertical = () => {\r\n\r\n    const {name} : any = useParams()\r\n    const desp = EventsData.filter(v => v.vertical === name)[0].desp\r\n\r\n    const search = useColorModeValue(\"border\", \"noBorder\")\r\n    const font = useColorModeValue(\"black\", \"white\")\r\n    const gradient = useColorModeValue(\"blackG\", \"whiteG\")\r\n    const button = useColorModeValue(\"dark\", \"light\")\r\n\r\n    const {data , loading , error} = useGetEventsQuery({\r\n        variables : {\r\n            filter : name\r\n        }\r\n    })\r\n    console.log(data?.getEvents.events)\r\n    const filter = () => {\r\n\r\n    }\r\n\r\n    return(\r\n        <CustomBox>\r\n        <Box className=\"events-vertical\">\r\n            <Stack\r\n                textAlign={'center'}\r\n                align={'center'}\r\n                spacing={{ base: 8, md: 8 }}\r\n                py={{ base: 20, md: 20 }}\r\n            >\r\n            <Box backgroundImage={bg} width=\"100vw\" height=\"fit-content\" padding=\"4vw\" backgroundRepeat=\"no-repeat\" backgroundPosition=\"center\"> \r\n                {\r\n                    name===\"AEROFEST\" ? <Heading textTransform=\"uppercase\" backdropBlur=\"20px\" fontSize=\"7xl\" color=\"white\">AERO<span>FEST</span></Heading>\r\n                    : \r\n                    name===\"CL\" ? <Heading textTransform=\"uppercase\" backdropBlur=\"20px\" fontSize=\"7xl\" color=\"white\">Coding <span>&</span> Logic</Heading>\r\n                    :\r\n                    name===\"ELECFEST\" ? <Heading textTransform=\"uppercase\" backdropBlur=\"20px\" fontSize=\"7xl\" color=\"white\">ELEC<span>FEST</span></Heading>\r\n                    :\r\n                    name===\"DB\" ? <Heading textTransform=\"uppercase\" backdropBlur=\"20px\" fontSize=\"7xl\" color=\"white\">Design <span>&</span> Build</Heading>\r\n                    :\r\n                    name===\"WORKSHOPS\" ? <Heading textTransform=\"uppercase\" backdropBlur=\"20px\" fontSize=\"7xl\" color=\"white\">{name}</Heading>\r\n                    :\r\n                    name===\"BIOGEN\" ? <Heading textTransform=\"uppercase\" backdropBlur=\"20px\" fontSize=\"7xl\" color=\"white\">BIO<span>GEN</span></Heading>\r\n                    :\r\n                    name===\"BEVENTS\" ? <Heading textTransform=\"uppercase\" backdropBlur=\"20px\" fontSize=\"7xl\" color=\"white\">B<span>Events</span></Heading>\r\n                    : null\r\n                }\r\n                <Text color=\"white\" width=\"50vw\" margin=\"auto\" className=\"vertical-desp\">{desp}</Text>\r\n            </Box>\r\n            {/* <Flex width=\"100vw\" justifyContent=\"space-evenly\" alignItems=\"center\">\r\n                <input type=\"text\" className={search} />\r\n                <Button backgroundColor=\"white\" className={search} color=\"black\" onClick={filter}>Search</Button>\r\n            </Flex> */}\r\n            {\r\n                data?.getEvents.events.map((event)=>{\r\n                        return(\r\n                            <EventVerticalComponent data= {event} isAdmin = {false}/>\r\n                        )\r\n                }) \r\n            }\r\n            </Stack>\r\n        </Box>\r\n        <Footer designed={[{ name: 'Krithikaa', mail: 'be20b020@smail.iitm.ac.in' }]} />\r\n    </CustomBox>\r\n    )\r\n}\r\n\r\nexport default EventVertical;","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Events and Workshops\\AddEvent.tsx",["403","404","405","406","407","408","409","410","411","412","413","414"],"import * as React from \"react\";\r\nimport {\r\n  Text,\r\n  Stack,\r\n  Flex,\r\n  Link,\r\n  Box,\r\n  Heading,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Image,\r\n  Button,\r\n  Select,\r\n  RadioGroup,\r\n  Radio,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport CustomBox from \"../../shared/CustomBox\";\r\nimport ReactMde from \"react-mde\";\r\nimport * as Showdown from \"showdown\";\r\nimport \"../../../styles/Events.css\";\r\n\r\nimport bg from \"../../../images/EventsWorkshops/events/bg.jpeg\";\r\nimport {\r\n  GetEventsDocument,\r\n  RegistraionType,\r\n  useAddEventMutation,\r\n  useCreateEventFaqMutation,\r\n} from \"../../../generated/graphql\";\r\n\r\nimport AWS from \"aws-sdk\";\r\nimport { AddIcon, MinusIcon } from \"@chakra-ui/icons\";\r\ndeclare module \"react\" {\r\n  interface HTMLAttributes<T> extends AriaAttributes, DOMAttributes<T> {\r\n    directory?: string;\r\n    webkitdirectory?: string;\r\n    moxdirectory?: string;\r\n  }\r\n}\r\n\r\nconst converter = new Showdown.Converter({\r\n  tables: true,\r\n  simplifiedAutoLink: true,\r\n  strikethrough: true,\r\n  tasklists: true,\r\n});\r\n\r\nconst EventAdmin = () => {\r\n  const [value, setValue] = React.useState(\"Hello!\");\r\n  const [selectedTab, setSelectedTab] = React.useState<\"write\" | \"preview\">(\r\n    \"write\"\r\n  );\r\n\r\n  const [radio, setRadio] = useState<RegistraionType>(RegistraionType.None);\r\n  const [radioString, setRadioString] = useState(\"None\");\r\n  const [name, setName] = React.useState(\"\");\r\n  const [vertical, setVertical] = React.useState(\"\");\r\n  const [desp, setDesp] = React.useState(\"\");\r\n  const [platform, setPlatform] = React.useState(\"\");\r\n  const [req, setReq] = useState(\"\");\r\n  const [regStart, setRegStart] = useState(\"\");\r\n  const [regEn, setRegEnd] = useState(\"\");\r\n  const [eventStart, setEventStart] = useState(\"\");\r\n  const [eventEnd, setEventEnd] = useState(\"\");\r\n  const [teamSize, setTeamSize] = useState(0);\r\n  const [participation, setParticipation] = useState(\"\");\r\n  const [first, setFirst] = useState(\"\");\r\n  const [second, setSecond] = useState(\"\");\r\n  const [third, setThird] = useState(\"\");\r\n  const [fee, setFee] = useState(\"\");\r\n\r\n  const setEventType = () => {\r\n    switch (radioString) {\r\n      case \"Individual\":\r\n        setRadio(RegistraionType.Individual);\r\n        break;\r\n      case \"Team\":\r\n        setRadio(RegistraionType.Team);\r\n        break;\r\n      default:\r\n        setRadio(RegistraionType.None);\r\n    }\r\n  };\r\n\r\n  const [addEventMutation, { data, loading, error }] = useAddEventMutation();\r\n  const history = useHistory();\r\n\r\n  var [file, setFile] = useState<File>();\r\n  var [newFile, setNewFile] = useState<string>(\"\");\r\n\r\n  AWS.config.update({\r\n    accessKeyId: \"AKIA4VXHNASLCGXPQAHM\",\r\n    secretAccessKey: \"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\",\r\n  });\r\n  const myBucket = new AWS.S3({\r\n    params: { Bucket: \"shaastra\" },\r\n    region: \"ap-south-1\",\r\n  });\r\n  const UploadImageToS3WithNativeSdk = async (file: any) => {\r\n    const params = {\r\n      ACL: \"public-read\",\r\n      Body: file,\r\n      Bucket: \"shaastra\",\r\n      Key: file.name,\r\n    };\r\n\r\n    await myBucket\r\n      .putObject(params)\r\n      .on(\"httpUploadProgress\", (evt) => {})\r\n      .send((err) => {\r\n        if (err) console.log(err);\r\n      });\r\n  };\r\n\r\n  var { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const [faqs, setfaqs] = React.useState([{ question: \"\", answer: \"\" }]);\r\n  const [addfaq] = useCreateEventFaqMutation();\r\n\r\n  const handleFqsInput = ({\r\n    index,\r\n    event,\r\n  }: {\r\n    index: number;\r\n    event: React.ChangeEvent<HTMLInputElement>;\r\n  }) => {\r\n    const values = [...faqs];\r\n\r\n    if (event.target.name === \"question\") {\r\n      values[index][\"question\"] = event.target.value;\r\n    } else {\r\n      values[index][\"answer\"] = event.target.value;\r\n    }\r\n    setfaqs(values);\r\n  };\r\n\r\n  if (data) {\r\n    onClose = () => {\r\n      history.push(\"/admin\");\r\n    };\r\n    return (\r\n      <Modal isOpen={true} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent backgroundColor=\"#addfd0\" color=\"black\">\r\n          <ModalHeader>Event Added</ModalHeader>\r\n          <ModalCloseButton />\r\n        </ModalContent>\r\n      </Modal>\r\n    );\r\n  }\r\n  if (error) {\r\n    onClose = () => {\r\n      window.location.reload();\r\n    };\r\n    return (\r\n      <Modal isOpen={true} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent backgroundColor=\"#f1aaaa\" color=\"black\">\r\n          <ModalHeader>Error Occurred</ModalHeader>\r\n          <ModalCloseButton />\r\n        </ModalContent>\r\n      </Modal>\r\n    );\r\n  }\r\n  if (loading) {\r\n    onClose = () => {\r\n      history.push(\"/admin/add\");\r\n    };\r\n    return (\r\n      <Modal isOpen={true} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent backgroundColor=\"#e2e19c\" color=\"black\">\r\n          <ModalHeader>Loading...</ModalHeader>\r\n          <ModalCloseButton />\r\n        </ModalContent>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <CustomBox>\r\n      <Stack\r\n        textAlign={\"center\"}\r\n        align={\"center\"}\r\n        spacing={{ base: 8, md: 8 }}\r\n        py={{ base: 20, md: 20 }}\r\n      >\r\n        <Heading>ADD EVENT</Heading>\r\n        <Box\r\n          backgroundImage={bg}\r\n          width=\"100vw\"\r\n          padding=\"4vw\"\r\n          className=\"admin-add\"\r\n        >\r\n          <Box\r\n            backgroundImage=\"linear-gradient(-45deg, #ffffff98, #ffffff09)\"\r\n            borderRadius=\"24px\"\r\n            backdropFilter=\"blur(30px)\"\r\n            padding=\"5vw\"\r\n          >\r\n            <Flex\r\n              width=\"100%\"\r\n              justifyContent=\"space-between\"\r\n              alignItems=\"flex-end\"\r\n            >\r\n              <FormControl>\r\n                <FormLabel fontSize=\"1.5vw\">Name of Event</FormLabel>\r\n                <Input\r\n                  type=\"text\"\r\n                  outline=\"none\"\r\n                  color=\"black\"\r\n                  backgroundColor=\"transparent\"\r\n                  borderBottom=\"5px solid white\"\r\n                  onChange={(e: any) => {\r\n                    setName(e.target.value);\r\n                  }}\r\n                ></Input>\r\n              </FormControl>\r\n              <Select\r\n                placeholder=\"Vertical\"\r\n                width=\"30vw\"\r\n                marginLeft=\"5vw\"\r\n                onChange={(e: any) => {\r\n                  setVertical(e.target.value);\r\n                }}\r\n              >\r\n                <option value=\"AEROFEST\">AeroFest</option>\r\n                <option value=\"BIOGEN\">Biogen</option>\r\n                <option value=\"BEVENTS\">BEvents</option>\r\n                <option value=\"CL\">Coding & Logic</option>\r\n                <option value=\"DB\">Design & Build</option>\r\n                <option value=\"ELECFEST\">ElecFest</option>\r\n                <option value=\"IGNITE\">Ignite</option>\r\n                <option value=\"STRATEGISTS\">Strategists</option>\r\n                <option value=\"WORKSHOPS\">Workshops</option>\r\n              </Select>\r\n            </Flex>\r\n            <FormControl marginTop=\"4vh\">\r\n              <FormLabel fontSize=\"1.5vw\">Description</FormLabel>\r\n              <ReactMde\r\n                value={desp}\r\n                onChange={setDesp}\r\n                selectedTab={selectedTab}\r\n                onTabChange={setSelectedTab}\r\n                generateMarkdownPreview={(markdown) => {\r\n                  return Promise.resolve(converter.makeHtml(markdown));\r\n                }}\r\n              ></ReactMde>\r\n            </FormControl>\r\n            <Flex width=\"100%\" marginBottom=\"4vh\">\r\n              <FormControl>\r\n                <FormLabel>Platform</FormLabel>\r\n                <Input\r\n                  type=\"text\"\r\n                  outline=\"none\"\r\n                  color=\"black\"\r\n                  backgroundColor=\"transparent\"\r\n                  borderBottom=\"5px solid white\"\r\n                  onChange={(e: any) => {\r\n                    setPlatform(e.target.value);\r\n                  }}\r\n                ></Input>\r\n              </FormControl>\r\n              <FormControl width=\"150%\" marginLeft=\"2vw\">\r\n                <FormLabel>Requirements</FormLabel>\r\n                <Input\r\n                  type=\"text\"\r\n                  outline=\"none\"\r\n                  color=\"black\"\r\n                  backgroundColor=\"transparent\"\r\n                  borderBottom=\"5px solid white\"\r\n                  onChange={(e: any) => {\r\n                    setReq(e.target.value);\r\n                  }}\r\n                ></Input>\r\n              </FormControl>\r\n            </Flex>\r\n            <Flex width=\"100%\" marginBottom=\"4vh\">\r\n              <FormControl>\r\n                <FormLabel>Registration Start</FormLabel>\r\n                <Input\r\n                  type=\"date\"\r\n                  outline=\"none\"\r\n                  color=\"black\"\r\n                  backgroundColor=\"transparent\"\r\n                  borderBottom=\"5px solid white\"\r\n                  onChange={(e: any) => {\r\n                    setRegStart(e.target.value);\r\n                  }}\r\n                  value={regStart}\r\n                ></Input>\r\n              </FormControl>\r\n              <FormControl marginLeft=\"2vw\">\r\n                <FormLabel>Registration End</FormLabel>\r\n                <Input\r\n                  type=\"date\"\r\n                  outline=\"none\"\r\n                  color=\"black\"\r\n                  backgroundColor=\"transparent\"\r\n                  borderBottom=\"5px solid white\"\r\n                  onChange={(e: any) => {\r\n                    setRegEnd(e.target.value);\r\n                  }}\r\n                ></Input>\r\n              </FormControl>\r\n            </Flex>\r\n            <Flex width=\"100%\" marginBottom=\"4vh\">\r\n              <FormControl>\r\n                <FormLabel>Event Start</FormLabel>\r\n                <Input\r\n                  type=\"date\"\r\n                  outline=\"none\"\r\n                  color=\"black\"\r\n                  backgroundColor=\"transparent\"\r\n                  borderBottom=\"5px solid white\"\r\n                  onChange={(e: any) => {\r\n                    setEventStart(e.target.value);\r\n                  }}\r\n                ></Input>\r\n              </FormControl>\r\n              <FormControl marginLeft=\"2vw\">\r\n                <FormLabel>Event End</FormLabel>\r\n                <Input\r\n                  type=\"date\"\r\n                  outline=\"none\"\r\n                  color=\"black\"\r\n                  backgroundColor=\"transparent\"\r\n                  borderBottom=\"5px solid white\"\r\n                  onChange={(e: any) => {\r\n                    setEventEnd(e.target.value);\r\n                  }}\r\n                ></Input>\r\n              </FormControl>\r\n            </Flex>\r\n            <Flex marginBottom=\"4vh\">\r\n              <FormControl>\r\n                <FormLabel>Participation Points</FormLabel>\r\n                <Input\r\n                  type=\"text\"\r\n                  outline=\"none\"\r\n                  color=\"black\"\r\n                  backgroundColor=\"transparent\"\r\n                  borderBottom=\"5px solid white\"\r\n                  onChange={(e: any) => {\r\n                    setParticipation(e.target.value);\r\n                  }}\r\n                ></Input>\r\n              </FormControl>\r\n              <FormControl marginLeft=\"2vw\">\r\n                <FormLabel>Winner Up points</FormLabel>\r\n                <Input\r\n                  type=\"text\"\r\n                  outline=\"none\"\r\n                  color=\"black\"\r\n                  backgroundColor=\"transparent\"\r\n                  borderBottom=\"5px solid white\"\r\n                  onChange={(e: any) => {\r\n                    setFirst(e.target.value);\r\n                  }}\r\n                ></Input>\r\n              </FormControl>\r\n              <FormControl marginLeft=\"2vw\">\r\n                <FormLabel>Runner Up points</FormLabel>\r\n                <Input\r\n                  type=\"text\"\r\n                  outline=\"none\"\r\n                  color=\"black\"\r\n                  backgroundColor=\"transparent\"\r\n                  borderBottom=\"5px solid white\"\r\n                  onChange={(e: any) => {\r\n                    setSecond(e.target.value);\r\n                  }}\r\n                ></Input>\r\n              </FormControl>\r\n              <FormControl marginLeft=\"2vw\">\r\n                <FormLabel>Third position points</FormLabel>\r\n                <Input\r\n                  type=\"text\"\r\n                  outline=\"none\"\r\n                  color=\"black\"\r\n                  backgroundColor=\"transparent\"\r\n                  borderBottom=\"5px solid white\"\r\n                  onChange={(e: any) => {\r\n                    setThird(e.target.value);\r\n                  }}\r\n                ></Input>\r\n              </FormControl>\r\n            </Flex>\r\n            <FormControl>\r\n              <FormLabel>Upload picture</FormLabel>\r\n              <Input\r\n                type=\"file\"\r\n                outline=\"none\"\r\n                color=\"black\"\r\n                backgroundColor=\"transparent\"\r\n                borderBottom=\"5px solid white\"\r\n                onChange={(e: any) => {\r\n                  setFile(e.target.files[0]); console.log(e.target.files[0])\r\n                  setNewFile(`https://shaastra.s3.ap-south-1.amazonaws.com/${e.target.files[0].name}`)\r\n                }}\r\n              ></Input>\r\n            </FormControl>\r\n            <FormControl>\r\n              <FormLabel fontSize=\"1.5vw\">Registration fee (Enter the fee in INR)</FormLabel>\r\n              <Input\r\n                type=\"text\"\r\n                outline=\"none\"\r\n                color=\"black\"\r\n                backgroundColor=\"transparent\"\r\n                borderBottom=\"5px solid white\"\r\n                onChange={(e: any) => {\r\n                  setFee(e.target.value);\r\n                }}\r\n              ></Input>\r\n            </FormControl>\r\n            <Flex\r\n              alignItems=\"center\"\r\n              justifyContent=\"space-between\"\r\n              width=\"100%\"\r\n              className=\"admin-team\"\r\n            >\r\n              <FormControl color=\"black\" marginTop=\"4vh\">\r\n                <RadioGroup\r\n                  onChange={(e: any) => {\r\n                    switch (e) {\r\n                      case \"Individual\":\r\n                        setRadio(RegistraionType.Individual);\r\n                        break;\r\n                      case \"Team\":\r\n                        setRadio(RegistraionType.Team);\r\n                        break;\r\n                      default:\r\n                        setRadio(RegistraionType.None);\r\n                    }\r\n                  }}\r\n                >\r\n                  <Radio value=\"Individual\" marginRight=\"2vw\">\r\n                    Individual\r\n                  </Radio>\r\n                  <Radio value=\"Team\" marginRight=\"2vw\">\r\n                    Team\r\n                  </Radio>\r\n                  <Radio value=\"None\">None</Radio>\r\n                </RadioGroup>\r\n              </FormControl>\r\n              {radio === RegistraionType.Team && (\r\n                <FormControl marginTop=\"4vh\" width=\"10vw\">\r\n                  <FormLabel color=\"black\">Team size</FormLabel>\r\n                  <Input\r\n                    type=\"number\"\r\n                    outline=\"none\"\r\n                    color=\"black\"\r\n                    backgroundColor=\"transparent\"\r\n                    borderBottom=\"5px solid white\"\r\n                    onChange={(e: any) => {\r\n                      setTeamSize(e.target.value);\r\n                    }}\r\n                  ></Input>\r\n                </FormControl>\r\n              )}\r\n            </Flex>\r\n            <Flex p={2}>\r\n              <Heading size={\"md\"} m={2}>\r\n                Add Fqs{\" \"}\r\n              </Heading>\r\n            </Flex>\r\n            {faqs.map((faq, index) => {\r\n              return (\r\n                <React.Fragment key={index}>\r\n                  <Flex p={2}>\r\n                    <FormControl m={2}>\r\n                      <Input\r\n                        name=\"question\"\r\n                        placeholder={\"Question\"}\r\n                        id={\"faqq\" + index}\r\n                        outline=\"none\"\r\n                        color=\"black\"\r\n                        backgroundColor=\"transparent\"\r\n                        borderBottom=\"5px solid white\"\r\n                        value={faq.question}\r\n                        onChange={(event) => handleFqsInput({ index, event })}\r\n                      />\r\n                    </FormControl>\r\n                    <FormControl m={2}>\r\n                      <Input\r\n                        name=\"answer\"\r\n                        placeholder={\"Answer\"}\r\n                        onChange={(event) => handleFqsInput({ index, event })}\r\n                        id={\"faqa\" + index}\r\n                        outline=\"none\"\r\n                        color=\"black\"\r\n                        backgroundColor=\"transparent\"\r\n                        borderBottom=\"5px solid white\"\r\n                        value={faq.answer}\r\n                      />\r\n                    </FormControl>\r\n                    <Flex\r\n                      p={[0, 3]}\r\n                      width={\"40px\"}\r\n                      flexDirection={[\"column\", \"row\"]}\r\n                    >\r\n                      {index === 0 ? null : (\r\n                        <Button\r\n                          mx={2}\r\n                          my={1}\r\n                          size={\"xs\"}\r\n                          onClick={() => {\r\n                            const values = [...faqs];\r\n                            values.splice(index, 1);\r\n                            setfaqs(values);\r\n                          }}\r\n                        >\r\n                          <MinusIcon />\r\n                        </Button>\r\n                      )}\r\n                      <Button\r\n                        mx={2}\r\n                        my={1}\r\n                        size={\"xs\"}\r\n                        onClick={() =>\r\n                          setfaqs([...faqs, { question: \"\", answer: \"\" }])\r\n                        }\r\n                      >\r\n                        <AddIcon />\r\n                      </Button>\r\n                    </Flex>\r\n                  </Flex>\r\n                </React.Fragment>\r\n              );\r\n            })}\r\n            <Button\r\n              marginTop=\"4vh\"\r\n              width=\"100%\"\r\n              backgroundColor=\"white\"\r\n              color=\"#0e101b\"\r\n              onClick={async (e: any) => {\r\n                e.preventDefault();\r\n                console.log(file);\r\n                if( fee != \"0\" && !parseInt(fee)){\r\n                  alert(\"Enter a valid registration fee\")\r\n                }else{\r\n                try {\r\n                  await UploadImageToS3WithNativeSdk(file)\r\n                  await addEventMutation({\r\n                    variables: {\r\n                      data: {\r\n                        name: name,\r\n                        description: desp,\r\n                        eventTimeFrom: new Date(eventStart).toDateString(),\r\n                        eventTimeTo: new Date(eventEnd).toDateString(),\r\n                        registrationType: radio,\r\n                        platform: platform,\r\n                        requirements: req,\r\n                        vertical: vertical,\r\n                        pic: newFile,\r\n                        finalistst: \"\",\r\n                        firstplace: first,\r\n                        participation: participation,\r\n                        secondplace: second,\r\n                        thirdplace: third,\r\n                        teamSize: teamSize,\r\n                        registrationCloseTime: new Date(regEn).toDateString(),\r\n                        registrationOpenTime: new Date(regStart).toDateString(),\r\n                        registrationfee: fee,\r\n                      },\r\n                    },\r\n                    refetchQueries: [\r\n                      {\r\n                        query: GetEventsDocument,\r\n                        variables: { getEventsFilter: vertical },\r\n                      },\r\n                    ],\r\n                  }).then((res) => {\r\n                    if (res.data?.addEvent.id) {\r\n                      faqs.map(async (faq) => {\r\n                        await addfaq({\r\n                          variables: {\r\n                            id: res.data?.addEvent.id!,\r\n                            data: {\r\n                              question: faq.question,\r\n                              answer: faq.answer,\r\n                            },\r\n                          },\r\n                        }).catch((err) => console.log(error));\r\n                      });\r\n                    }\r\n                  });\r\n                } catch (err) {\r\n                  console.log(err);\r\n                }\r\n              }\r\n              }}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Stack>\r\n    </CustomBox>\r\n  );\r\n};\r\n\r\nexport default EventAdmin;\r\n","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Events and Workshops\\EditEvent.tsx",["415","416","417","418","419","420","421","422","423","424"],"import * as React from \"react\"\r\nimport {\r\n    Text,\r\n    Stack,\r\n    Flex,\r\n    Link,\r\n    Box,\r\n    Heading,\r\n    FormControl,\r\n    FormLabel,\r\n    Input,\r\n    Image,\r\n    Button,\r\n    Select,\r\n    RadioGroup,\r\n    Radio,\r\n    useColorModeValue,\r\nModal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    useDisclosure,  } from '@chakra-ui/react'\r\nimport { useHistory, useParams } from \"react-router-dom\"\r\nimport { useState } from \"react\"\r\nimport CustomBox from '../../shared/CustomBox'\r\nimport ReactMde from \"react-mde\";\r\nimport * as Showdown from \"showdown\";\r\nimport { RegistraionType, useGetEventQuery } from \"../../../generated/graphql\"\r\nimport \"../../../styles/Events.css\"\r\nimport moment from 'moment'\r\nimport bg from \"../../../images/EventsWorkshops/events/bg.jpeg\"\r\nimport { useEditEventMutation } from \"../../../generated/graphql\";\r\n\r\nimport AWS from 'aws-sdk'\r\nconst uploadFile = require('react-s3')\r\nconst S3FileUpload = require('react-s3')\r\n\r\ndeclare module 'react' {\r\n    interface HTMLAttributes<T> extends AriaAttributes, DOMAttributes<T> {\r\n      directory?: string\r\n      webkitdirectory?: string\r\n      moxdirectory?: string\r\n    }\r\n  }\r\n\r\nconst converter = new Showdown.Converter({\r\n    tables: true,\r\n    simplifiedAutoLink: true,\r\n    strikethrough: true,\r\n    tasklists: true\r\n  });\r\n\r\nconst EditEvent = () => {\r\n\r\n    const {id} : {id: string} = useParams()\r\n\r\n    const [selectedTab, setSelectedTab] = React.useState<\"write\" | \"preview\">(\"write\");\r\n    const history = useHistory()\r\n\r\n     const {data: event, loading: eventLoading, error: eventError} = useGetEventQuery({variables: {EventID: id}})\r\n\r\n\r\n    console.log(event)\r\n\r\n    const [radio, setRadio] = React.useState<RegistraionType>()\r\n    const [radioString, setRadioString] = useState()\r\n    const [name, setName] = React.useState(event?.getEvent.name ? event?.getEvent.name : \"\")\r\n    const [vertical, setVertical] = React.useState(event?.getEvent.vertical ? event?.getEvent.vertical : \"\")\r\n    const [desp, setDesp] = React.useState(event?.getEvent.description ? event?.getEvent.description : \"\")\r\n    const [platform, setPlatform] = React.useState(event?.getEvent.platform ? event?.getEvent.platform: \"\")\r\n    const [req, setReq] = useState(event?.getEvent.requirements ? event?.getEvent.requirements : \"\")\r\n    const [regStart, setRegStart] = useState(event?.getEvent.registrationOpenTime ? event?.getEvent.registrationOpenTime : \"2021/12/30\")\r\n    const [regEn, setRegEnd] = useState(event?.getEvent.registrationCloseTime ? event?.getEvent.registrationCloseTime : \"\")\r\n    const [eventStart, setEventStart] = useState(event?.getEvent.eventTimeFrom ? event?.getEvent.eventTimeFrom : \"\")\r\n    const [eventEnd, setEventEnd] = useState(event?.getEvent.eventTimeTo ? event?.getEvent.eventTimeTo : \"\")\r\n    const [teamSize, setTeamSize] = useState(event?.getEvent.teamSize ? event?.getEvent.teamSize : 0)\r\n    const [participation, setParticipation] = useState(event?.getEvent.participation ? event?.getEvent.participation : \"\")\r\n    const [first, setFirst] = useState(event?.getEvent.firstplace ? event?.getEvent.firstplace : \"\")\r\n    const [second, setSecond] = useState(event?.getEvent.secondplace ? event?.getEvent.secondplace : \"\")\r\n    const [third, setThird] = useState(event?.getEvent.thirdplace ? event?.getEvent.thirdplace: \"\")\r\n    const [pic, setPic] = useState(event?.getEvent.pic!)\r\n    const [file, setFile] = useState<File>()\r\n    const [fee, setFee] = useState(event?.getEvent.registrationfee ? event.getEvent.registrationfee : \"\")\r\n\r\n    \r\n\r\n    const [editEventMutation, {data, loading, error}] = useEditEventMutation()\r\n\r\n    AWS.config.update({\r\n        accessKeyId: 'AKIA4VXHNASLCGXPQAHM',\r\n        secretAccessKey: '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',\r\n      })\r\n      const myBucket = new AWS.S3({\r\n        params: { Bucket: 'shaastra' },\r\n        region: 'ap-south-1',\r\n      })\r\n      const UploadImageToS3WithNativeSdk = async (file: any) => {\r\n        const params = {\r\n          ACL: 'public-read',\r\n          Body: file,\r\n          Bucket: 'shaastra',\r\n          Key: file.name,\r\n        }\r\n    \r\n        await myBucket\r\n          .putObject(params)\r\n          .on('httpUploadProgress', (evt) => {})\r\n          .send((err) => {\r\n            if (err) console.log(err)\r\n          })\r\n      }\r\n\r\n\r\n    var { isOpen, onOpen, onClose } = useDisclosure()\r\n\r\n    if(data)\r\n    {\r\n        onClose = () => {\r\n            history.push('/admin')\r\n            window.location.reload()\r\n        }\r\n        return(\r\n            <Modal isOpen={true} onClose={onClose}>\r\n                <ModalOverlay />\r\n                <ModalContent backgroundColor=\"#addfd0\" color=\"black\">\r\n                    <ModalHeader>Event Edited</ModalHeader>\r\n                    <ModalCloseButton />\r\n                 </ModalContent>\r\n            </Modal>\r\n        )\r\n    }\r\n    if(error || eventError)\r\n    {\r\n        onClose = () => {history.push('/admin')}\r\n        return(\r\n            <Modal isOpen={true} onClose={onClose}>\r\n                <ModalOverlay />\r\n                <ModalContent backgroundColor=\"#f1aaaa\" color=\"black\">\r\n                    <ModalHeader>Error Occurred</ModalHeader>\r\n                    <ModalCloseButton />\r\n                 </ModalContent>\r\n            </Modal>\r\n        )\r\n    }\r\n    if(loading || eventLoading)\r\n    {\r\n        onClose = () => {history.push('/admin/add')}\r\n        return(\r\n            <Modal isOpen={true} onClose={onClose}>\r\n                <ModalOverlay />\r\n                <ModalContent backgroundColor=\"#e2e19c\" color=\"black\">\r\n                    <ModalHeader>Loading...</ModalHeader>\r\n                    <ModalCloseButton />\r\n                 </ModalContent>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <CustomBox>\r\n            <Stack\r\n                textAlign={'center'}\r\n                align={'center'}\r\n                spacing={{ base: 8, md: 8 }}\r\n                py={{ base: 20, md: 20 }}\r\n            >\r\n            <Heading>EDIT EVENT</Heading>\r\n            <Box backgroundImage={bg} width=\"100vw\" padding=\"4vw\" className=\"admin-add\">\r\n                <Box backgroundImage=\"linear-gradient(-45deg, #ffffff98, #ffffff09)\" borderRadius=\"24px\" backdropFilter=\"blur(30px)\" padding=\"5vw\">\r\n                    <Flex width=\"100%\" justifyContent=\"space-between\" alignItems=\"flex-end\">\r\n                        <FormControl>\r\n                            <FormLabel fontSize=\"1.5vw\">Name of Event</FormLabel>\r\n                            <Input \r\n                                value={name}\r\n                                type=\"text\" outline=\"none\" color=\"black\"\r\n                                backgroundColor=\"transparent\" borderBottom=\"5px solid white\"\r\n                                onChange={(e:any) => {setName(e.target.value)}}    \r\n                            >\r\n                            </Input>\r\n                        </FormControl>\r\n                        <Select value={vertical} placeholder=\"Vertical\" width=\"30vw\" marginLeft=\"5vw\" onChange={(e:any) => {setVertical(e.target.value)}}>\r\n                            <option value=\"AEROFEST\">AeroFest</option>\r\n                            <option value=\"BIOGEN\">Biogen</option>\r\n                            <option value=\"BEVENTS\">BEvents</option>\r\n                            <option value=\"CL\">Coding & Logic</option>\r\n                            <option value=\"DB\">Design & Build</option>\r\n                            <option value=\"ELECFEST\">ElecFest</option>\r\n                            <option value=\"IGNITE\">Ignite</option>\r\n                            <option value=\"STRATEGISTS\">Strategists</option>\r\n                            <option value=\"WORKSHOPS\">Workshops</option>\r\n                        </Select>\r\n                    </Flex>\r\n                    <FormControl marginTop=\"4vh\">\r\n                            <FormLabel>Change picture</FormLabel>\r\n                            <Input type=\"file\" onChange={(e:any) => {setFile(e.target.files[0]);setPic(`https://shaastra.s3.ap-south-1.amazonaws.com/${e.target.files[0].name}`)}}></Input>\r\n                        </FormControl>\r\n                    <FormControl marginTop=\"4vh\">\r\n                        <FormLabel fontSize=\"1.5vw\">Description</FormLabel>\r\n                        <ReactMde\r\n                        value={desp}\r\n                        onChange={setDesp}\r\n                        selectedTab={selectedTab}\r\n                        onTabChange={setSelectedTab}\r\n                        generateMarkdownPreview={markdown =>\r\n                          {\r\n                            setDesp(converter.makeHtml(markdown))\r\n                            return(Promise.resolve(converter.makeHtml(markdown)))\r\n                          }\r\n                        }\r\n                       ></ReactMde>\r\n                    </FormControl>\r\n                    <Flex width=\"100%\">\r\n                        <FormControl>\r\n                            <FormLabel>Platform</FormLabel>\r\n                            <Input type=\"text\" outline=\"none\" color=\"black\"\r\n                                value={platform}\r\n                                backgroundColor=\"transparent\" borderBottom=\"5px solid white\"\r\n                                onChange={(e:any) => {setPlatform(e.target.value)}}    \r\n                            ></Input>\r\n                        </FormControl>\r\n                        <FormControl width=\"150%\" marginLeft=\"2vw\">\r\n                            <FormLabel>Requirements</FormLabel>\r\n                            <Input type=\"text\" outline=\"none\" color=\"black\" \r\n                                value={req}\r\n                                backgroundColor=\"transparent\" borderBottom=\"5px solid white\"\r\n                                onChange={(e:any) => {setReq(e.target.value)}}    \r\n                            ></Input>\r\n                        </FormControl>\r\n                    </Flex>\r\n                    <Flex width=\"100%\">\r\n                        <FormControl>\r\n                        {console.log(regStart)}\r\n                            <FormLabel>Registration Start: {moment(parseInt(event?.getEvent.registrationOpenTime!)).format(\r\n                    \"MMMM Do YYYY\"\r\n                  )}</FormLabel>\r\n                            <Input type=\"date\" outline=\"none\" color=\"black\"\r\n                            placeholder=\"12/30/2021\"\r\n                                backgroundColor=\"transparent\" borderBottom=\"5px solid white\"\r\n                                onChange={(e:any) => {setRegStart(e.target.value)}}    \r\n                            ></Input>\r\n                        </FormControl>\r\n                        <FormControl marginLeft=\"2vw\">\r\n                            <FormLabel>Registration End: {moment(parseInt(event?.getEvent.registrationCloseTime!)).format(\r\n                    \"MMMM Do YYYY\"\r\n                  )}</FormLabel>\r\n                            <Input type=\"date\" outline=\"none\" color=\"black\"\r\n                                backgroundColor=\"transparent\" borderBottom=\"5px solid white\"\r\n                                onChange={(e:any) => {setRegEnd(e.target.value)}}\r\n                            ></Input>\r\n                        </FormControl>\r\n                    </Flex>\r\n                    <Flex width=\"100%\">\r\n                        <FormControl>\r\n                            <FormLabel>Event Start: {moment(parseInt(event?.getEvent.eventTimeFrom!)).format(\r\n                    \"MMMM Do YYYY\"\r\n                  )}</FormLabel>\r\n                            <Input type=\"date\" outline=\"none\" color=\"black\"\r\n                                backgroundColor=\"transparent\" borderBottom=\"5px solid white\"\r\n                                onChange={(e:any) => {setEventStart(e.target.value)}}\r\n                            ></Input>\r\n                        </FormControl>\r\n                        <FormControl marginLeft=\"2vw\">\r\n                            <FormLabel>Event End: {moment(parseInt(event?.getEvent.eventTimeTo!)).format(\r\n                    \"MMMM Do YYYY\"\r\n                  )}</FormLabel>\r\n                            <Input type=\"date\" outline=\"none\" color=\"black\"\r\n                                backgroundColor=\"transparent\" borderBottom=\"5px solid white\"\r\n                                onChange={(e:any) => {setEventEnd(e.target.value)}}    \r\n                            ></Input>\r\n                        </FormControl>\r\n                    </Flex>\r\n                    <Flex>\r\n                        <FormControl>\r\n                            <FormLabel>Participation</FormLabel>\r\n                            <Input type=\"text\" outline=\"none\" color=\"black\" value={participation}\r\n                                backgroundColor=\"transparent\" borderBottom=\"5px solid white\"\r\n                                onChange={(e:any) => {setParticipation(e.target.value)}}></Input>\r\n                        </FormControl>\r\n                        <FormControl marginLeft=\"2vw\">\r\n                            <FormLabel>First</FormLabel>\r\n                            <Input type=\"text\" outline=\"none\" color=\"black\" value={first}\r\n                                backgroundColor=\"transparent\" borderBottom=\"5px solid white\"\r\n                                onChange={(e:any) => {setFirst(e.target.value)}}></Input>\r\n                        </FormControl>\r\n                        <FormControl marginLeft=\"2vw\">\r\n                            <FormLabel>Second</FormLabel>\r\n                            <Input type=\"text\" outline=\"none\" color=\"black\" value={second}\r\n                                backgroundColor=\"transparent\" borderBottom=\"5px solid white\"\r\n                                onChange={(e:any) => {setSecond(e.target.value)}}></Input>\r\n                        </FormControl>\r\n                        <FormControl marginLeft=\"2vw\">\r\n                            <FormLabel>Third</FormLabel>\r\n                            <Input type=\"text\" outline=\"none\" color=\"black\" value={third}\r\n                                backgroundColor=\"transparent\" borderBottom=\"5px solid white\"\r\n                                onChange={(e:any) => {setThird(e.target.value)}}></Input>\r\n                        </FormControl>\r\n                    </Flex>\r\n                    <FormControl>\r\n                            <FormLabel fontSize=\"1.5vw\">Registration fee</FormLabel>\r\n                            <Input \r\n                                type=\"text\" outline=\"none\" color=\"black\" placeholder={fee}\r\n                                backgroundColor=\"transparent\" borderBottom=\"5px solid white\"\r\n                                onChange={(e:any) => {setFee(e.target.value)}}    \r\n                            >\r\n                            </Input>\r\n                        </FormControl>\r\n                    <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\" className=\"admin-team\">\r\n                        <FormControl color=\"black\" marginTop=\"4vh\">\r\n                            <Text>{event?.getEvent.registrationType}</Text>\r\n                            <RadioGroup value={radioString} onChange={(e:any) => {\r\n                                switch(e)\r\n                                {\r\n                                    case \"Individual\": setRadio(RegistraionType.Individual); break;\r\n                                case \"Team\": setRadio(RegistraionType.Team); break;\r\n                                default: setRadio(RegistraionType.None);   \r\n                                }\r\n                            }}>\r\n                                <Radio value=\"Individual\" marginRight=\"2vw\">Individual</Radio>\r\n                                <Radio value=\"Team\" marginRight=\"2vw\">Team</Radio>\r\n                                <Radio value=\"None\">None</Radio>\r\n                            </RadioGroup>\r\n                        </FormControl>\r\n                        {\r\n                            radio === RegistraionType.Team &&\r\n                            <FormControl marginTop=\"4vh\" width=\"10vw\">\r\n                                <FormLabel color=\"black\">Team size</FormLabel>\r\n                                <Input type=\"number\" outline=\"none\" color=\"black\" \r\n                                    backgroundColor=\"transparent\" borderBottom=\"5px solid white\"\r\n                                    onChange={(e:any) => {setTeamSize(e.target.value)}}    \r\n                                ></Input>\r\n                            </FormControl>\r\n                        }\r\n                    </Flex>\r\n                    <Button marginTop=\"4vh\" width=\"100%\" backgroundColor=\"white\" color=\"#0e101b\"\r\n                        onClick={async (e:any) => {\r\n                            e.preventDefault();\r\n                            // await setEventType()\r\n                            if(file !== undefined)\r\n                            {\r\n                                await UploadImageToS3WithNativeSdk(file)\r\n                            }\r\n                            try{\r\n                                await editEventMutation({\r\n                                    variables: {\r\n                                        data: {\r\n                                        name: name,\r\n                                        description: desp,\r\n                                        eventTimeFrom: new Date(eventStart).toDateString(),\r\n                                        eventTimeTo: new Date(eventEnd).toDateString(),\r\n                                        registrationType: radio!,\r\n                                        platform: platform,\r\n                                        requirements: req,\r\n                                        pic: pic,\r\n                                        vertical: vertical,\r\n                                        firstplace: first,\r\n                                        participation: participation,\r\n                                        secondplace: second,\r\n                                        thirdplace: third,\r\n                                        teamSize: Math.round(teamSize),\r\n                                        registrationCloseTime: new Date(regEn).toDateString(),\r\n                                        registrationOpenTime: new Date(regStart).toDateString(),\r\n                                        registrationfee: fee\r\n                                        },\r\n                                        id: id\r\n                                    }\r\n                                })\r\n                            }\r\n                            catch(err) {console.log(err)}\r\n                        }}\r\n                    >Submit</Button>\r\n                </Box>\r\n            </Box>\r\n            </Stack>\r\n        </CustomBox>  \r\n    )\r\n}\r\n\r\nexport default EditEvent","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Login\\Signup.tsx",["425","426","427","428","429","430"],"import React, { useState } from \"react\"\r\nimport {\r\n    Text,\r\n    Stack,\r\n    Flex,\r\n    Link,\r\n    Box,\r\n    Heading,\r\n    Input,\r\n    Select,\r\n    Button,\r\n    FormLabel,\r\n    FormControl,\r\n    Image,\r\n    useColorModeValue,\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    useDisclosure,\r\n  } from '@chakra-ui/react'\r\nimport \"../../../styles/Login.css\"\r\nimport bg from \"../../../images/Login/login.svg\"\r\nimport CustomBox from '../../shared/CustomBox'\r\nimport Footer from '../../shared/Footer'\r\nimport { useCreateUserMutation } from \"../../../generated/graphql\"\r\nimport { useHistory } from \"react-router\"\r\nimport success from \"../../../images/Login/login-success.svg\"\r\nimport errorSVG from \"../../../images/Login/login-error.svg\"\r\n\r\nimport {cities} from \"./cities\"\r\nimport {colleges} from \"./college\"\r\nimport { branches } from \"./branches\"\r\n\r\nconst Signup = () => {\r\n\r\n    const gradient = useColorModeValue(\"blackG\", \"whiteG\")\r\n    const history = useHistory()\r\n\r\n    const [email, setEmail] = useState(\"\")\r\n    const [name, setName]  = useState(\"\")\r\n    const [number, setNumber] = useState(\"\")\r\n    const [pw, setPw] = useState(\"\")\r\n    const [confirm, setConfirm] = useState(\"\")\r\n    const [college, setCollege] = useState(\"\")\r\n    const [branch, setBranch] = useState(\"\")\r\n    const [State, setState] = useState(\"Andaman and Nicobar Islands\")\r\n    const [city, setCity] = useState(\"\")\r\n    const [address, setAddress] = useState(\"\")\r\n\r\n    const [createUser, {data, loading, error}] = useCreateUserMutation()\r\n\r\n    var { isOpen, onOpen, onClose } = useDisclosure()\r\n\r\n    if(data)\r\n    {\r\n        onClose = () => {history.push('/')}\r\n        return(\r\n            <Modal isOpen={true} onClose={onClose} isCentered>\r\n                <ModalOverlay />\r\n                <ModalContent color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\r\n                    <Image src={success} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\r\n                    <ModalCloseButton />\r\n                    <ModalBody backgroundColor=\"#A7EAAA\" width=\"100%\" padding=\"2vw\">\r\n                        <Text textAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]} backgroundColor=\"#A7EAAA\" borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Signed up successfully! <br />Check your Email ID for the verification link.</Text>\r\n                    </ModalBody>\r\n                 </ModalContent>\r\n            </Modal>\r\n        )\r\n    }\r\n    if(error)\r\n    {  onClose = () => {window.location.reload()}\r\n            return(\r\n                <Modal isOpen={true} onClose={onClose} isCentered>\r\n                    <ModalOverlay />\r\n                    <ModalContent color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\r\n                        <Image src={errorSVG} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\r\n                        <ModalBody backgroundColor=\"#f1aaaa\" width=\"100%\" padding=\"2vw\">\r\n                            <Text textAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]}  borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Some error occurred</Text>\r\n                        </ModalBody>\r\n                        <ModalCloseButton />\r\n                    </ModalContent>\r\n                </Modal>\r\n            )\r\n    }\r\n    if(loading)\r\n    {\r\n        return(\r\n            <Modal isOpen={true} onClose={() => {}}>\r\n                <ModalOverlay />\r\n                <ModalContent backgroundColor=\"#e2e19c\" color=\"black\">\r\n                    <ModalHeader>Loading...</ModalHeader>\r\n                    <ModalCloseButton />\r\n                 </ModalContent>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <CustomBox>\r\n            <Flex className=\"login\" width=\"100vw\" height=\"fit-content\" justifyContent=\"center\" alignItems=\"center\" padding=\"4vw\" position=\"relative\" zIndex=\"1\">\r\n            <Box positon=\"relative\" width=\"60vw\" className={`${gradient} login-main-box`} height=\"fit-content\" padding=\"4vw\">\r\n                    <Heading fontSize=\"4vw\" marginBottom=\"6vh\">SIGN<span>UP</span></Heading>\r\n                    <Input placeholder=\"Name\" marginBottom=\"4vh\" type=\"text\" onChange={(e:any) => {setName(e.target.value)}}></Input>\r\n                    <Flex marginBottom=\"6vh\">\r\n                        <Input placeholder=\"Email ID\" marginRight=\"2vw\" type=\"email\" onChange={(e:any) => {setEmail(e.target.value)}}></Input>\r\n                        <Input placeholder=\"Mobile number\" type=\"text\" onChange={(e:any) => {setNumber(e.target.value)}}></Input>\r\n                    </Flex>\r\n                    <Input placeholder=\"Password\" marginBottom=\"4vh\" type=\"password\" onChange={(e:any) => {setPw(e.target.value)}}></Input>\r\n                    <Input placeholder=\"Confirm password\" marginBottom=\"6vh\" type=\"password\" onChange={(e:any) => {setConfirm(e.target.value)}}></Input>\r\n                    <Flex marginBottom=\"6vh\">\r\n                        <Select placeholder=\"College\" marginRight=\"2vw\" onChange={(e:any) => {setCollege(e.target.value)}}>\r\n                            {\r\n                                colleges.map(o => {\r\n                                    return(\r\n                                        <option value={o[\"University\"]}>{o[\"University\"]}</option>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </Select>\r\n                        <Select placeholder=\"Branch\" onChange={(e:any) => {setBranch(e.target.value)}}>\r\n                            {\r\n                                branches.map(b => {\r\n                                    return(\r\n                                        <option value={b}>{b}</option>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </Select>\r\n                    </Flex>\r\n                    <Flex marginBottom=\"6vh\">\r\n                        <Select placeholder=\"State\" onChange={(e:any) => {setState(e.target.value)}}>\r\n                            {\r\n                                Object.keys(cities).map(s => {\r\n                                    return(<option value={s}>{s}</option>)\r\n                                })\r\n                            }\r\n                        </Select>\r\n                        <Select placeholder=\"City\" marginLeft=\"2vw\" onChange={(e:any) => {setCity(e.target.value)}}>\r\n                            {\r\n                                cities[State].map(c => {\r\n                                    return(<option value={c}>{c}</option>)\r\n                                })\r\n                            }\r\n                        </Select>\r\n                    </Flex>\r\n                    <Input placeholder=\"Address\" type=\"text\" onChange={(e:any) => {setAddress(e.target.value)}}></Input>\r\n                    <Button width=\"100%\"  backgroundColor=\"#2467a1\" color=\"white\" marginTop=\"6vh\"\r\n                        onClick={async (e:any) => {\r\n                            e.preventDefault();\r\n                            if(pw === confirm)\r\n                                {\r\n                                    try{\r\n                                        await createUser(\r\n                                            {variables: {CreateUserInput: \r\n                                                {name: name, email: email, mobile: number, password: pw, college: college, department: branch, state: State, city: city, address: address}}})\r\n                                                .then(res => {\r\n                                                    if(res.data?.createUser)\r\n                                                    history.push(\"/verify\")\r\n                                                })\r\n                                    }\r\n                                    catch(err)\r\n                                    {\r\n                                        console.log(err)\r\n                                    }\r\n                                }\r\n                            else \r\n                               {\r\n                                const onClose = () => {window.location.reload()}\r\n                                return(\r\n                                    <Modal isOpen={true} onClose={onClose}>\r\n                                        <ModalOverlay />\r\n                                        <ModalContent backgroundColor=\"#f1aaaa\" color=\"black\">\r\n                                            <ModalHeader>Confirm password and Password should have the same values. \r\n                                                <br />\r\n                                                Please enter the same password in both fields</ModalHeader>\r\n                                            <ModalCloseButton />\r\n                                        </ModalContent>\r\n                                    </Modal>\r\n                                )\r\n                               }\r\n                        }}\r\n                    >Sign Up</Button>\r\n                    <Text align=\"center\" marginTop=\"2vh\">Already registered? <Link href=\"/login\">Login</Link></Text>\r\n                </Box>\r\n                <Image src={bg} boxSize=\"35vw\" bottom=\"30%\" right=\"0%\" className=\"login-image\"></Image>\r\n            </Flex>\r\n            <Footer designed={[{ name: 'Krithikaa', mail: 'be20b020@smail.iitm.ac.in' }]} ></Footer>\r\n        </CustomBox>  \r\n    )\r\n}\r\n\r\nexport default Signup","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Events and Workshops\\EventPage.tsx",["431","432","433","434"],"import { Box, Flex, Stack , Image, Text, Button, Heading, Center, Container, useColorModeValue } from '@chakra-ui/react'\r\nimport React from 'react'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\nimport { GetEventsDocument, useDeleteEventMutation, useGetEventQuery } from '../../../generated/graphql'\r\nimport bg from \"../../../images/EventsWorkshops/events/bg.jpeg\"\r\nimport CustomBox from '../../shared/CustomBox'\r\nimport ReactMarkdown from 'react-markdown'\r\nimport remarkGfm from 'remark-gfm'\r\nimport moment from 'moment'\r\nimport EventFaqs from './EventFaqs'\r\n\r\nconst EventPage = () => {\r\n    const {id} : {id : string | undefined} = useParams();\r\n\r\n    const history = useHistory()\r\n\r\n    const {data, error , loading} = useGetEventQuery({\r\n        variables : {\r\n            EventID : id!\r\n        }\r\n    })\r\n    const [deleteevent] = useDeleteEventMutation();\r\n    const bgcolor = useColorModeValue(\"#ea8a94\",\"#ffffff\")\r\n    return (\r\n        <CustomBox>\r\n          <Container maxWidth=\"6xl\" alignItems=\"center\" justifyItems={\"center\"} marginBottom={5} paddingBottom={2}>\r\n          <Center>\r\n            <Image\r\n              h={[\"2%\", \"300px\", \"300px\"]}\r\n              width={'auto'}\r\n              objectFit={\"contain\"}\r\n              src={data?.getEvent.pic ? data.getEvent.pic : bg}\r\n              marginTop={\"50px\"}\r\n              p={4}\r\n              rounded={[\"3xl\", \"3xl\"]}\r\n            />\r\n          </Center>\r\n          <Center style={{  borderRadius: 8 }} backgroundColor={bgcolor} p={4}>\r\n            <Text fontWeight={\"medium\"} fontSize={\"lg\"} p={6} color={'black'}>\r\n              <ReactMarkdown\r\n                children={data?.getEvent.description!}\r\n                remarkPlugins={[remarkGfm]}\r\n              ></ReactMarkdown>\r\n            </Text>\r\n          </Center>\r\n\r\n          <Flex className=\"events-details-box\" marginTop=\"12px\" backgroundColor={bgcolor}>\r\n            <strong>Requirements: &nbsp;</strong> {data?.getEvent.requirements}\r\n          </Flex>\r\n\r\n          <Flex className=\"events-details-box-container\" >\r\n            {/* <Flex className=\"events-details-box\" backgroundColor={bgcolor}>\r\n              <strong>Audience: &nbsp;</strong>\r\n            </Flex> */}\r\n            <Flex className=\"events-details-box\" backgroundColor={bgcolor}>\r\n              <strong>Platform: &nbsp;</strong>\r\n              {data?.getEvent.platform}\r\n            </Flex>\r\n          </Flex>\r\n\r\n          <Flex className=\"events-details-box-container\" >\r\n            <Flex className=\"events-details-box\" backgroundColor={bgcolor}>\r\n              <strong>Registration Type: &nbsp;</strong>\r\n              {data?.getEvent.registrationType}\r\n            </Flex>\r\n            {data?.getEvent.registrationType === \"TEAM\" && (\r\n              <Flex className=\"events-details-box\" backgroundColor={bgcolor}>\r\n                <strong>Max. team size: &nbsp;</strong>\r\n                {data.getEvent.teamSize}\r\n              </Flex>\r\n            )}\r\n          </Flex>\r\n          {\r\n              localStorage.getItem(\"role\") === \"Admin\" && \r\n              (<Box m={2} width={\"100%\"}>\r\n               <Flex flexDirection={[\"column\",\"column\",\"row\",\"row\"]}>\r\n               <Button m={2} p={2} width={[\"100%\",\"100%\",\"50%\",\"50%\"]} onClick={(e:any)=> {e.preventDefault(); history.push( `/admin/edit/${data?.getEvent.id}`)}}>Edit</Button>\r\n               <Button m={2} p={2} width={[\"100%\",\"100%\",\"50%\",\"50%\"]}\r\n               onClick={async()=>{\r\n\r\n                await deleteevent({\r\n                  variables : {\r\n                    id : data?.getEvent.id!\r\n                  },\r\n                  refetchQueries: [\r\n                    {\r\n                      query: GetEventsDocument,\r\n                      variables: { getEventsFilter: data?.getEvent.vertical },\r\n                    }]\r\n                  }).then(res => {\r\n                  if(res.data?.deleteEvent){\r\n                    history.push(\"/admin\")\r\n                  }\r\n                })\r\n                .catch(err => alert(err.message))\r\n               }}\r\n               \r\n               >Delete</Button>\r\n               </Flex>\r\n               </Box>\r\n              )}\r\n        </Container>\r\n        <Container maxWidth=\"6xl\" alignItems=\"center\" justifyItems={\"center\"} color={\"black\"}>\r\n          {data?.getEvent.registrationType !== \"NONE\" && (\r\n            <Flex className=\"datetime-container\">\r\n              <Flex className=\"datetime-head\">Registrations</Flex>\r\n              <Flex className=\"datetime-box\">\r\n                <Flex className=\"datetime\">\r\n                  {moment(parseInt(data?.getEvent.registrationOpenTime!)).format(\r\n                    \"MMMM Do YYYY, h:mm a\"\r\n                  )}\r\n                </Flex>\r\n                <div style={{ width: \"10%\" }} className=\"datetime\">\r\n                  to\r\n                </div>\r\n                <Flex className=\"datetime\">\r\n                  {moment(parseInt(data?.getEvent.registrationCloseTime!)).format(\r\n                    \"MMMM Do YYYY, h:mm a\"\r\n                  )}\r\n                </Flex>\r\n              </Flex>\r\n            </Flex>\r\n          )}\r\n\r\n          <Flex className=\"datetime-container\">\r\n            <Flex className=\"datetime-head\">Event Timeline</Flex>\r\n            <Flex className=\"datetime-box\">\r\n              <Flex className=\"datetime\">\r\n                {moment(parseInt(data?.getEvent.eventTimeFrom!)).format(\r\n                  \"MMMM Do YYYY, h:mm a\"\r\n                )}\r\n              </Flex>\r\n              <div style={{ width: \"10%\" }} className=\"datetime\">\r\n                to\r\n              </div>\r\n              <Flex className=\"datetime\">\r\n                {moment(parseInt(data?.getEvent.eventTimeTo!)).format(\r\n                  \"MMMM Do YYYY, h:mm a\"\r\n                )}\r\n              </Flex>\r\n            </Flex>\r\n          </Flex>\r\n          {  data?.getEvent &&\r\n            <EventFaqs   event ={data?.getEvent!}  /> \r\n        \r\n        }\r\n        </Container>  \r\n    </CustomBox>\r\n    )\r\n}\r\n\r\nexport default EventPage\r\n","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Login\\Login.tsx",["435","436","437","438","439","440","441"],"import React from \"react\"\r\nimport {\r\n    Text,\r\n    Stack,\r\n    Flex,\r\n    Link,\r\n    Box,\r\n    Heading,\r\n    Input,\r\n    Button,\r\n    FormLabel,\r\n    FormControl,\r\n    Image,\r\n    useColorModeValue,\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    useDisclosure,\r\n  } from '@chakra-ui/react'\r\nimport \"../../../styles/Login.css\"\r\nimport bg from \"../../../images/Login/login.svg\"\r\nimport success from \"../../../images/Login/login-success.svg\"\r\nimport errorSVG from \"../../../images/Login/login-error.svg\"\r\nimport CustomBox from '../../shared/CustomBox'\r\nimport Footer from '../../shared/Footer'\r\nimport { LoginInput, useLoginMutation, UserRole } from \"../../../generated/graphql\"\r\nimport { useState } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\nconst Login = () => {\r\n\r\n    const gradient = useColorModeValue(\"blackG\", \"whiteG\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const history = useHistory()\r\n\r\n\r\n    const [loginMutation, {data, loading, error}] = useLoginMutation()\r\n\r\n    var { isOpen, onOpen, onClose } = useDisclosure()\r\n\r\n    if(data)\r\n    {\r\n        if(data.login?.isVerified === false) history.push(\"/verify\")\r\n        else\r\n        if(data.login?.role === UserRole.User) localStorage.setItem(\"role\", \"User\")\r\n        else \r\n         if(data.login?.role === UserRole.Admin)\r\n         { \r\n             localStorage.setItem(\"role\", \"Admin\") \r\n             history.push(\"/admin\")\r\n\r\n        }\r\n        onClose = () => {history.push('/')}\r\n        return(\r\n            <Modal isOpen={true} onClose={onClose} isCentered>\r\n                <ModalOverlay />\r\n                <ModalContent color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\r\n                    <Image src={success} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\r\n                    <ModalCloseButton />\r\n                    <ModalBody backgroundColor=\"#A7EAAA\" width=\"100%\" padding=\"2vw\">\r\n                        <Text textAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]} backgroundColor=\"#A7EAAA\" borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Logged in successfully!</Text>\r\n                    </ModalBody>\r\n                 </ModalContent>\r\n            </Modal>\r\n        )\r\n    }\r\n    if(error)\r\n    {\r\n        if(error.message === \"Oops, email not verified!\")\r\n        {\r\n            onClose = () => {history.push('/')}\r\n            return(\r\n                <Modal isOpen={true} onClose={onClose} isCentered>\r\n                    <ModalOverlay />\r\n                    <ModalContent  color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\r\n                        <Image src={errorSVG} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\r\n                        <ModalBody backgroundColor=\"#f1aaaa\" width=\"100%\" padding=\"2vw\">\r\n                            <Text xtAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]} backgroundColor=\"#A7EAAA\" borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Email not verified. Check your registered Email ID for the verification link</Text>\r\n                        </ModalBody>\r\n                        <ModalCloseButton />\r\n                    </ModalContent>\r\n                </Modal>\r\n            )\r\n        }\r\n        else \r\n         \r\n        if(error.message.includes(\"Could not find any entity of type\"))\r\n         {\r\n                onClose = () => {history.push('/signup')}\r\n                return(\r\n                    <Modal isOpen={true} onClose={onClose} isCentered>\r\n                    <ModalOverlay />\r\n                    <ModalContent color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\r\n                        <Image src={errorSVG} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\r\n                        <ModalBody backgroundColor=\"#f1aaaa\" width=\"100%\" padding=\"2vw\">\r\n                            <Text textAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]}  borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Email ID not registered. <br />Sign up to continue</Text>\r\n                        </ModalBody>\r\n                        <ModalCloseButton />\r\n                    </ModalContent>\r\n                </Modal>\r\n                )\r\n         }\r\n         else\r\n          if(error.message === \"Invalid Credential\")\r\n          {\r\n            onClose = () => {window.location.reload()}\r\n                return(\r\n                    <Modal isOpen={true} onClose={onClose} isCentered>\r\n                    <ModalOverlay />\r\n                    <ModalContent color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\r\n                        <Image src={errorSVG} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\r\n                        <ModalBody backgroundColor=\"#f1aaaa\" width=\"100%\" padding=\"2vw\">\r\n                            <Text textAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]}  borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Invalid Credentials</Text>\r\n                        </ModalBody>\r\n                        <ModalCloseButton />\r\n                    </ModalContent>\r\n                </Modal>\r\n                )\r\n          }\r\n          else \r\n          {\r\n            onClose = () => {window.location.reload()}\r\n            return(\r\n                <Modal isOpen={true} onClose={onClose} isCentered>\r\n                    <ModalOverlay />\r\n                    <ModalContent color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\r\n                        <Image src={errorSVG} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\r\n                        <ModalBody backgroundColor=\"#f1aaaa\" width=\"100%\" padding=\"2vw\">\r\n                            <Text textAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]}  borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Some error occurred</Text>\r\n                        </ModalBody>\r\n                        <ModalCloseButton />\r\n                    </ModalContent>\r\n                </Modal>\r\n            )\r\n          }\r\n    }\r\n    if(loading)\r\n    {\r\n        onClose = () => {}\r\n        return(\r\n            <Modal isOpen={true} onClose={onClose}>\r\n                <ModalOverlay />\r\n                <ModalContent backgroundColor=\"#e2e19c\" color=\"black\">\r\n                    <ModalHeader>Loading...</ModalHeader>\r\n                    <ModalCloseButton />\r\n                 </ModalContent>\r\n            </Modal>\r\n        )\r\n    }\r\n    return(\r\n        <CustomBox>\r\n            <Flex className=\"login\" width=\"100vw\" height=\"100vh\" justifyContent=\"center\" alignItems=\"center\" position=\"relative\" zIndex=\"1\">\r\n            <Box width=\"60vw\"  className={`${gradient} login-main-box`} height=\"fit-content\" padding=\"5vw\" borderRadius=\"24px\">\r\n                    <Heading fontSize=\"4vw\" marginBottom=\"6vh\">LOG<span>IN</span></Heading>\r\n                    <Input placeholder=\"Email ID\" marginBottom=\"4vh\" type=\"email\" onChange={(e:any) => {setEmail(e.target.value)}}></Input>\r\n                    <Input placeholder=\"Password\" type=\"password\" onChange={(e:any) => {setPassword(e.target.value)}}></Input>\r\n                    <Button width=\"100%\"  backgroundColor=\"#2467a1\" marginBottom=\"4vh\" marginTop=\"6vh\"\r\n                        onClick={async (e) => {\r\n                            e.preventDefault();\r\n                            try\r\n                            {\r\n                                await loginMutation({variables: {LoginInput: {email: email, password: password}}})\r\n                            }\r\n                            catch(err) {console.log(err)}\r\n                        }}\r\n                        color=\"white\"\r\n                    >Login</Button>\r\n                    <Flex width=\"100%\" justifyContent=\"space-between\" >\r\n                        <Link href=\"/forgotpassword\">Forgot password?</Link>\r\n                        <Link href=\"/signup\">Sign Up</Link>\r\n                    </Flex>\r\n                </Box>\r\n                <Image src={bg} boxSize=\"25vw\" bottom=\"30%\" right=\"0%\" className=\"login-image\"></Image>\r\n            </Flex>\r\n            <Footer designed={[{ name: 'Krithikaa', mail: 'be20b020@smail.iitm.ac.in' }]} ></Footer>\r\n        </CustomBox>  \r\n    )\r\n}\r\n\r\nexport default Login","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Events and Workshops\\EventsAdmin.tsx",["442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459"],"import React from \"react\"\r\nimport {\r\n    Text,\r\n    Stack,\r\n    Flex,\r\n    Heading,\r\n    Box,\r\n    Select,\r\n   Input,\r\n    Image,\r\n    Button,\r\n    useColorModeValue,\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    useDisclosure,\r\n  } from '@chakra-ui/react'\r\nimport { AddIcon, MinusIcon } from '@chakra-ui/icons';\r\nimport { useState } from \"react\";\r\nimport {useHistory} from \"react-router-dom\"\r\nimport CustomBox from '../../shared/CustomBox'\r\nimport { useGetEventsQuery } from \"../../../generated/graphql\";\r\nimport EventVerticalComponent from \"./EventVeticalComponent\";\r\n\r\nconst EventsAdmin = () => {\r\n\r\n    const [vertical, setVertical] = useState<string>(\"AEROFEST\")\r\n    const [event, setEvent] = useState<string>(\"\")\r\n\r\n    const {data, loading, error} = useGetEventsQuery({\r\n        variables : {\r\n            filter : vertical\r\n        }\r\n    })\r\n\r\n    var events = data?.getEvents.events;\r\n\r\n    const history = useHistory()\r\n\r\n    return(\r\n       <CustomBox>\r\n           <Box width=\"100vw\" padding=\"2vw 6vw\">\r\n            <Flex width=\"100%\" justifyContent=\"center\" marginBottom=\"8vh\">\r\n                <Heading textAlign=\"right\" fontSize=\"7xl\">EVENTS <br /> WORKSHOPS</Heading>\r\n                <Heading alignSelf=\"center\" color=\"#ea8a94\" fontSize=\"7xl\">&</Heading>\r\n            </Flex>\r\n            <Button width=\"100%\" padding=\"1.5vw\" backgroundColor=\"#75c9b0\" marginBottom=\"4vh\" onClick={(e:any) => {history.push('/admin/add')}}>Add Event</Button>\r\n            <Flex width=\"88vw\" marginBottom=\"4vh\">\r\n                <Select placeholder=\"Vertical\" marginLeft=\"2vw\" width=\"15vw\" value={vertical} onChange={e=> setVertical(e.target.value)}>\r\n                            <option value=\"AEROFEST\">AeroFest</option>\r\n                            <option value=\"BIOGEN\">Biogen</option>\r\n                            <option value=\"BEVENTS\">BEvents</option>\r\n                            <option value=\"CL\">Coding & Logic</option>\r\n                            <option value=\"DB\">Design & Build</option>\r\n                            <option value=\"ELECFEST\">ElecFest</option>\r\n                            <option value=\"IGNITE\">Ignite</option>\r\n                            <option value=\"STRATEGISTS\">Strategists</option>\r\n                            <option value=\"WORKSHOPS\">Workshops</option>\r\n                </Select>\r\n            </Flex>\r\n            <Box className=\"events-vertical\">\r\n                <Stack\r\n                 textAlign={'center'}\r\n                 align={'center'}\r\n                 spacing={{ base: 8, md: 8 }}\r\n                 paddingBottom={{ base: 20, md: 20 }}>\r\n                {\r\n                events?.map((event)=>{\r\n                        return(\r\n                            <EventVerticalComponent data= {event} isAdmin ={true} />\r\n                        )\r\n                }) \r\n            }\r\n                </Stack>\r\n            </Box>\r\n           \r\n           </Box>\r\n       </CustomBox>\r\n    )\r\n}\r\n\r\nexport default EventsAdmin","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Login\\Profile.tsx",["460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479"],"import React, { RefObject } from \"react\"\r\nimport {\r\n    Text,\r\n    Stack,\r\n    Link,\r\n    Flex,\r\n    Input,\r\n    Box,\r\n    RadioGroup,\r\n    Radio,\r\n    Image,\r\n    Button,\r\n    useColorModeValue,\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    useDisclosure,\r\n    FormControl,\r\n    FormLabel,\r\n    FormErrorMessage,\r\n    FormHelperText,\r\n    Heading,\r\n    Center,\r\n    Popover,\r\n    PopoverTrigger,\r\n    PopoverContent,\r\n    PopoverHeader,\r\n    PopoverArrow,\r\n    PopoverCloseButton,\r\n    PopoverBody,\r\n    PopoverFooter,\r\n    ButtonGroup,\r\n  } from '@chakra-ui/react'\r\nimport { AddIcon, MinusIcon } from '@chakra-ui/icons';\r\nimport { useState } from \"react\";\r\nimport CustomBox from '../../shared/CustomBox'\r\nimport Footer from '../../shared/Footer';\r\nimport \"../../../styles/Login.css\"\r\n\r\nimport bg from \"../../../images/homepage_illustrations/small ribi.png\"\r\nimport bg2 from \"../../../images/EventsWorkshops/events/bg.jpeg\"\r\n\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport SwiperCore, {\r\n    Scrollbar\r\n  } from 'swiper';\r\n  \r\nimport 'swiper/swiper-bundle.min.css'  \r\nimport 'swiper/swiper.min.css'\r\nimport { useHistory } from \"react-router\";\r\nimport {RegistraionType, useLeaveTeamMutation, useMeQuery} from \"../../../generated/graphql\"\r\nimport moment from \"moment\";\r\n\r\nSwiperCore.use([Scrollbar]);\r\n\r\nconst Profile = () => {\r\n\r\n    const history = useHistory()\r\n    const {data, loading, error} = useMeQuery()\r\n    var { isOpen, onOpen, onClose } = useDisclosure()\r\n    const [leaveteam] = useLeaveTeamMutation();\r\n    if(loading)\r\n        {\r\n            onClose = () => {}\r\n            return(\r\n                <Modal isOpen={true} onClose={onClose}>\r\n                    <ModalOverlay />\r\n                    <ModalContent backgroundColor=\"#e2e19c\" color=\"black\">\r\n                        <ModalHeader>Loading...</ModalHeader>\r\n                        <ModalCloseButton />\r\n                    </ModalContent>\r\n                </Modal>\r\n            )\r\n        }\r\n    else if(error)\r\n    {\r\n        onClose = () => {window.location.reload()}\r\n                return(\r\n                    <Modal isOpen={true} onClose={onClose}>\r\n                        <ModalOverlay />\r\n                        <ModalContent backgroundColor=\"#f1aaaa\" color=\"black\">\r\n                            <ModalHeader>Error Occurred</ModalHeader>\r\n                            <ModalCloseButton />\r\n                        </ModalContent>\r\n                    </Modal>\r\n                )\r\n    }\r\n\r\n    return(\r\n        <CustomBox>\r\n            <Stack\r\n                    textAlign={'center'}\r\n                    align={'center'}\r\n                    spacing={{ base: 8, md: 8 }}\r\n                    py={{ base: 20, md: 20 }}\r\n                    padding=\"4vw\"\r\n            >\r\n                <Heading className=\"profile-heading\" fontSize=\"3.5vw\">Hi! {data?.me?.name}</Heading>\r\n                <Text>{data?.me?.shaastraID}</Text>\r\n                <Flex width=\"100vw\" className=\"profile-main-flex\" alignItems=\"flex-start\" minHeight=\"80vh\" justifyContent=\"space-evenly\">\r\n                    <Flex alignSelf=\"flex-start\" height={[\"fit-content\",\"80vh\"]} padding={[\"1vw\", \"0vw\"]}  flexDirection=\"column\" alignItems=\"center\" width={[\"100%\", \"20vw\"]} fontSize=\"1.5vw\" justifyContent=\"space-between\">\r\n                        <Link href=\"/profile\" color=\"#C2C4FF\" marginBottom=\"2vh\">Profile Details</Link>\r\n                        <Link href=\"/editprofile\">Edit Profile</Link>\r\n                        <Button fontSize={[\"5vw\",\"1.5vw\"]} onClick={(e) => {e.preventDefault(); history.push('/signout')}} width={[\"fit-content\",\"100%\"]} margin=\"auto\" backgroundColor=\"#DB7171\">Logout</Button>\r\n                        <Image className=\"profile-image\" src={bg} boxSize=\"22vw\" alignSelf=\"center\"></Image>\r\n                    </Flex>\r\n                    <Flex flexDirection=\"column\">\r\n                        <Box width={[\"100%\", \"60vw\"]} margin=\"auto\" fontSize={[\"5vw\",\"1.5vw\"]} padding={[\"1vw\", \"4vw\"]} borderRadius=\"24px\" marginBottom=\"4vh\">\r\n                            <Flex marginBottom=\"4vh\" textAlign=\"left\" justifyContent=\"space-between\" flexDirection=\"column\">\r\n                                    <Text>Email ID</Text>\r\n                                    <Text width=\"100%\" backgroundColor=\"#C2C4FF\" color=\"black\" padding=\"1vh\" borderRadius=\"12px\">{data?.me?.email}</Text>\r\n                            </Flex>\r\n                            <Flex marginBottom=\"4vh\" textAlign=\"left\" justifyContent=\"space-between\" flexDirection=\"column\">\r\n                                    <Text>Mobile Number</Text>\r\n                                    <Text width=\"100%\" backgroundColor=\"#C2C4FF\" color=\"black\" padding=\"1vh\" borderRadius=\"12px\">{data?.me?.mobile}</Text>\r\n                            </Flex>\r\n                           <Flex width=\"100%\" justifyContent=\"space-between\" marginBottom=\"4vh\">\r\n                                <Flex marginBottom=\"4vh\" width=\"40%\" textAlign=\"left\" justifyContent=\"space-between\" flexDirection=\"column\">\r\n                                        <Text>College</Text>\r\n                                        <Text width=\"100%\" backgroundColor=\"#C2C4FF\" color=\"black\" padding=\"1vh\" borderRadius=\"12px\">{data?.me?.college}</Text>\r\n                                </Flex>\r\n                                <Flex width=\"40%\" marginBottom=\"4vh\" textAlign=\"left\" justifyContent=\"space-between\" flexDirection=\"column\">\r\n                                    <Text>Branch</Text>\r\n                                    <Text width=\"100%\" backgroundColor=\"#C2C4FF\" color=\"black\" padding=\"1vh\" borderRadius=\"12px\">{data?.me?.department}</Text>\r\n                                </Flex>\r\n                           </Flex>\r\n                           <Flex marginBottom=\"4vh\" textAlign=\"left\" justifyContent=\"space-between\" flexDirection=\"column\">\r\n                                    <Text>Address</Text>\r\n                                    <Text width=\"100%\" backgroundColor=\"#C2C4FF\" color=\"black\" padding=\"1vh\" borderRadius=\"12px\">{data?.me?.address}</Text>\r\n                            </Flex>\r\n                           <Flex width=\"100%\" justifyContent=\"space-between\">\r\n                                <Flex marginBottom=\"4vh\" width=\"40%\" textAlign=\"left\" justifyContent=\"space-between\" flexDirection=\"column\">\r\n                                        <Text>City</Text>\r\n                                        <Text width=\"100%\" backgroundColor=\"#C2C4FF\" color=\"black\" padding=\"1vh\" borderRadius=\"12px\">{data?.me?.city}</Text>\r\n                                </Flex>\r\n                                <Flex marginBottom=\"4vh\" width=\"40%\" textAlign=\"left\" justifyContent=\"space-between\" flexDirection=\"column\">\r\n                                        <Text>State</Text>\r\n                                        <Text width=\"100%\" backgroundColor=\"#C2C4FF\" color=\"black\" padding=\"1vh\" borderRadius=\"12px\">{data?.me?.state}</Text>\r\n                                </Flex>\r\n                           </Flex>\r\n                        </Box>\r\n                        <Heading m={2} p={2}>Registered Events</Heading>\r\n                         <Swiper\r\n                            scrollbar={{hide: false}}\r\n                            // slidesPerView={3}\r\n                            spaceBetween={10}\r\n                            breakpoints={\r\n                                {\r\n                                    300:{\r\n                                        slidesPerView: 1\r\n                                    },\r\n                                    1000: {\r\n                                        slidesPerView: 3\r\n                                    }\r\n                                }\r\n                            }\r\n                        >\r\n                                              \r\n                            {\r\n                                data?.me?.registeredEvents.map(e => {\r\n                                   return(\r\n                                    e.registrationType === RegistraionType.Individual ?\r\n                                    <SwiperSlide >\r\n                                            <Flex flexDirection=\"column\" alignItems=\"center\" justifyItems={\"center\"} textAlign=\"center\"\r\n                                             color={'white'} boxShadow=\"5px\"\r\n                                            >\r\n                                            <a href={`/eventpage/${e.id}`}>\r\n                                                <Image src={e.pic!} height={\"12vw\"} width={\"100%\"} borderTopRadius={\"9px\"} objectFit={\"fill\"}></Image>\r\n                                                <Box fontWeight={\"600\"} p={2}>\r\n                                                <Text fontSize=\"2xl\">{e.name}</Text>\r\n                                                <Flex flexDirection={\"column\"}>\r\n                                                <Text>Events Starts From</Text>\r\n                                                <Text> {moment(parseInt(e.eventTimeFrom)).format(\"MMMM Do YYYY\")}</Text>\r\n                                                </Flex>\r\n                                                </Box>\r\n                                                </a>\r\n                                            </Flex>\r\n                                        </SwiperSlide>\r\n                                    :\r\n                                    <SwiperSlide>\r\n                                    <div className=\"flip-card\">\r\n                                    <div className=\"flip-card-inner\">\r\n                                        <div className=\"flip-card-front\">\r\n                                        <Flex flexDirection=\"column\" alignItems=\"center\" justifyItems={\"center\"} textAlign=\"center\"\r\n                                            height={\"300px\"} color={\"white\"}\r\n                                            >\r\n                                            <a href={`/eventpage/${e.id}`}>\r\n                                                <Image src={e.pic!} height={\"12vw\"} width={\"100%\"} borderTopRadius={\"9px\"} objectFit={\"fill\"}></Image>\r\n                                                </a>\r\n                                                <Box  fontWeight={\"600\"} p={2}>\r\n                                                <Text fontSize=\"2xl\">{e.name}</Text>\r\n                                                <Flex flexDirection={\"column\"}>\r\n                                                <Text>Events Starts From</Text>\r\n                                                <Text> {moment(parseInt(e.eventTimeFrom)).format(\"MMMM Do YYYY\")}</Text>\r\n                                                </Flex>\r\n                                                </Box>\r\n                                                \r\n                                            </Flex>\r\n                                        </div>\r\n                                        <div className=\"flip-card-back\">\r\n                                            <Flex  width=\"100%\" height=\"100%\"  alignItems=\"center\" color={\"white\"} flexDirection=\"column\">\r\n                                                       <Text fontSize={\"2xl\"} pt={2} fontWeight={\"700\"}>Your Team</Text>\r\n                                                       <Box m={1} p={2}>\r\n                                                       <Text>{e.yourTeam?.name}</Text>\r\n                                                       <Text fontSize={\"2xl\"} fontWeight={\"700\"}>Members</Text>\r\n                                                        {\r\n                                                            e.yourTeam?.members.map((m,index) => {\r\n                                                                return(\r\n                                                                    <Text>{index+1}. {m.name}</Text>                                                                )\r\n                                                            })\r\n                                                        }\r\n                                                        <Popover\r\n                                                            placement=\"top\"\r\n                                                            closeOnBlur={false}\r\n                                                            trigger=\"hover\"\r\n                                                            >\r\n                                                            <PopoverTrigger>\r\n                                                            <Button height={[\"25px\"]} color={\"white\"} colorScheme={\"red\"} p={2} position={\"absolute\"} bottom={\"4%\"} right={\"4%\"}\r\n                                                            onClick={async ()=>{\r\n                                                                await leaveteam({\r\n                                                                    variables : {\r\n                                                                        id : e.yourTeam?.id!\r\n                                                                    }\r\n                                                                }).then(res =>{\r\n                                                                    if(res.data?.leaveTeam) {\r\n                                                                        window.location.reload()\r\n                                                                    }\r\n                                                                })\r\n                                                        }}\r\n                                                        >Leave Team</Button>\r\n                                                            </PopoverTrigger>\r\n                                                            <PopoverContent\r\n                                                                zIndex={4}\r\n                                                                color=\"white\"\r\n                                                                bg=\"blue.800\"\r\n                                                                borderColor=\"blue.800\"\r\n                                                            >\r\n                                                                <PopoverHeader pt={4} fontWeight=\"bold\" border=\"0\">\r\n                                                                Are you sure you want to leave the team\r\n                                                                </PopoverHeader>\r\n                                                                <PopoverArrow />\r\n                                                                <PopoverCloseButton />\r\n                                                                <PopoverBody>\r\n                                                                 Once you leave you wont be able to join again\r\n                                                                </PopoverBody>\r\n                                                            </PopoverContent>\r\n                                                            </Popover>\r\n                                                    \r\n\r\n                                                       </Box>\r\n                                            </Flex>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                    </SwiperSlide>\r\n                                   )\r\n                                })\r\n                            }\r\n                        </Swiper>\r\n                    </Flex>\r\n                </Flex>\r\n            </Stack>    \r\n            <Footer designed={[{ name: 'Krithikaa', mail: 'be20b020@smail.iitm.ac.in' }]} ></Footer>      \r\n        </CustomBox>\r\n    )\r\n}\r\n\r\nexport default Profile;","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Login\\ForgotAfterLink.tsx",["480","481","482","483","484","485","486","487"],"import React, { useState } from \"react\"\r\nimport {\r\n    Text,\r\n    Stack,\r\n    Flex,\r\n    Link,\r\n    Box,\r\n    Heading,\r\n    Input,\r\n    Button,\r\n    FormLabel,\r\n    FormControl,\r\n    Image,\r\n    useColorModeValue,\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    useDisclosure,\r\n  } from '@chakra-ui/react'\r\nimport \"../../../styles/Login.css\"\r\nimport bg from \"../../../images/Login/login.svg\"\r\nimport CustomBox from '../../shared/CustomBox'\r\nimport Footer from '../../shared/Footer'\r\nimport { useResetPasswordMutation } from \"../../../generated/graphql\"\r\nimport { useHistory, useParams } from \"react-router\"\r\nimport success from \"../../../images/Login/login-success.svg\"\r\nimport errorSVG from \"../../../images/Login/login-error.svg\"\r\n\r\nconst ForgotAfter = () => {\r\n\r\n    const gradient = useColorModeValue(\"blackG\", \"whiteG\")\r\n    const history = useHistory()\r\n    const [email, setEmail] = useState(\"\")\r\n    const [pw, setPw] = useState(\"\")\r\n    const [otp, setOtp] = useState(\"\")\r\n\r\n    const [resetPasswordMutation, {data, loading, error}] = useResetPasswordMutation()\r\n\r\n    var { isOpen, onOpen, onClose } = useDisclosure()\r\n\r\n    if(data)\r\n    {\r\n        onClose = () => {history.push('/login')}\r\n        return(\r\n            <Modal isOpen={true} onClose={onClose} isCentered>\r\n                <ModalOverlay />\r\n                <ModalContent color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\r\n                    <Image src={success} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\r\n                    <ModalCloseButton />\r\n                    <ModalBody backgroundColor=\"#A7EAAA\" width=\"100%\" padding=\"2vw\">\r\n                        <Text textAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]} backgroundColor=\"#A7EAAA\" borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Password reset</Text>\r\n                    </ModalBody>\r\n                 </ModalContent>\r\n            </Modal>\r\n        )\r\n    }\r\n    else \r\n    {\r\n        if(loading)\r\n        {\r\n            onClose = () => {}\r\n            return(\r\n                <Modal isOpen={true} onClose={onClose}>\r\n                    <ModalOverlay />\r\n                    <ModalContent backgroundColor=\"#e2e19c\" color=\"black\">\r\n                        <ModalHeader>Loading...</ModalHeader>\r\n                        <ModalCloseButton />\r\n                    </ModalContent>\r\n                </Modal>\r\n            )\r\n        }\r\n        else \r\n        if(error)\r\n        {\r\n            if(error.message === \"Invalid Otp\")\r\n            {\r\n                \r\n                onClose = () => {history.push('/')}\r\n                return(\r\n                    <Modal isOpen={true} onClose={onClose} isCentered>\r\n                    <ModalOverlay />\r\n                    <ModalContent color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\r\n                        <Image src={errorSVG} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\r\n                        <ModalBody backgroundColor=\"#f1aaaa\" width=\"100%\" padding=\"2vw\">\r\n                            <Text textAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]}  borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Invalid OTP</Text>\r\n                        </ModalBody>\r\n                        <ModalCloseButton />\r\n                    </ModalContent>\r\n                </Modal>\r\n                )\r\n            }\r\n            else \r\n            {\r\n                onClose = () => {history.push('/')}\r\n                return(\r\n                    <Modal isOpen={true} onClose={onClose} isCentered>\r\n                    <ModalOverlay />\r\n                    <ModalContent color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\r\n                        <Image src={errorSVG} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\r\n                        <ModalBody backgroundColor=\"#f1aaaa\" width=\"100%\" padding=\"2vw\">\r\n                            <Text textAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]}  borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Error Occurred</Text>\r\n                        </ModalBody>\r\n                        <ModalCloseButton />\r\n                    </ModalContent>\r\n                </Modal>\r\n                )  \r\n            }\r\n        }\r\n    }\r\n\r\n    return(\r\n        <CustomBox>\r\n            <Flex className=\"login\" width=\"100vw\" height=\"100vh\" justifyContent=\"center\" alignItems=\"center\" position=\"relative\" zIndex=\"1\">\r\n            <Box width=\"60vw\"  className={`${gradient} login-main-box`} height=\"fit-content\" padding=\"5vw\">\r\n                    <Heading fontSize=\"4vw\" marginBottom=\"6vh\">Reset <span>Password</span></Heading>\r\n                    <Input placeholder=\"Enter registered Email ID\" type=\"text\" marginBottom=\"4vh\" onChange={(e:any) => {setEmail(e.target.value)}}></Input>\r\n                    <Input placeholder=\"Reset Password OTP\" type=\"text\" marginBottom=\"4vh\" value={otp} onChange={(e:any) => {setOtp(e.target.value)}}></Input>\r\n                    <Input placeholder=\"Enter new password\" marginBottom=\"4vh\" type=\"password\" onChange={(e: any) => {setPw(e.target.value)}}></Input>\r\n                    <Button width=\"100%\"  backgroundColor=\"#2467a1\" marginBottom=\"4vh\" marginTop=\"6vh\"\r\n                        color=\"white\"\r\n                        onClick={async (e:any) => {\r\n                            e.preventDefault();\r\n                            try{\r\n                                await resetPasswordMutation({variables: {resetPasswordInput:{email: email, otp:otp, newPassword: pw}}})\r\n                            }\r\n                            catch(err) {console.log(err)}\r\n                        } }\r\n                    >Reset Password</Button>\r\n                </Box>\r\n                <Image src={bg} boxSize=\"25vw\" bottom=\"30%\" right=\"0%\" className=\"login-image\"></Image>\r\n            </Flex>\r\n            <Footer designed={[{ name: 'Krithikaa', mail: 'be20b020@smail.iitm.ac.in' }]} ></Footer>\r\n        </CustomBox>  \r\n    )\r\n}\r\n\r\nexport default ForgotAfter","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Login\\SignOut.tsx",["488","489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510"],"import React, { useEffect } from \"react\"\r\nimport {\r\n    Text,\r\n    Stack,\r\n    Flex,\r\n    Link,\r\n    Box,\r\n    Heading,\r\n    Input,\r\n    Button,\r\n    FormLabel,\r\n    FormControl,\r\n    Image,\r\n    useColorModeValue,\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    useDisclosure,\r\n  } from '@chakra-ui/react'\r\nimport \"../../../styles/Login.css\"\r\nimport bg from \"../../../images/Login/login.svg\"\r\nimport CustomBox from '../../shared/CustomBox'\r\nimport Footer from '../../shared/Footer'\r\nimport { LoginInput, useLoginMutation, useLogoutUserMutation, useVerifyUserMutation } from \"../../../generated/graphql\"\r\nimport { useState } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { useParams } from \"react-router\"\r\nimport { verify } from \"crypto\"\r\nimport success from \"../../../images/Login/login-success.svg\"\r\nimport errorSVG from \"../../../images/Login/login-error.svg\"\r\n\r\nconst SignOut = () => {\r\n    const {token} = useParams<{token: string}>();\r\n    const history = useHistory()\r\n\r\n    const [logoutMutation, {data, loading, error}] = useLogoutUserMutation()\r\n    const logout = async () => {\r\n        try{\r\n            await logoutMutation()\r\n        }\r\n        catch(err) {console.log(err)}\r\n    }\r\n    logout();\r\n\r\n    var { isOpen, onOpen, onClose } = useDisclosure()\r\n\r\n    if(data?.logoutUser)\r\n    {\r\n        localStorage.removeItem(\"role\")\r\n        onClose = () => {\r\n            history.push('/') \r\n        }\r\n\r\n        return(\r\n            <Modal isOpen={true} onClose={onClose} isCentered>\r\n                <ModalOverlay />\r\n                <ModalContent color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\r\n                    <Image src={success} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\r\n                    <ModalCloseButton />\r\n                    <ModalBody backgroundColor=\"#A7EAAA\" width=\"100%\" padding=\"2vw\">\r\n                        <Text textAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]} backgroundColor=\"#A7EAAA\" borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Logged out successfully!</Text>\r\n                    </ModalBody>\r\n                 </ModalContent>\r\n            </Modal>\r\n        )\r\n    }\r\n    else \r\n        if(loading)\r\n        {\r\n            onClose = () => {}\r\n            return(\r\n                <Modal isOpen={true} onClose={onClose}>\r\n                    <ModalOverlay />\r\n                    <ModalContent backgroundColor=\"#e2e19c\" color=\"black\">\r\n                        <ModalHeader>Loading...</ModalHeader>\r\n                        <ModalCloseButton />\r\n                    </ModalContent>\r\n                </Modal>\r\n            )\r\n        }\r\n        else\r\n        if(error)\r\n        {\r\n            onClose = () => {history.push('/')}\r\n                return(\r\n                    <Modal isOpen={true} onClose={onClose} isCentered>\r\n                    <ModalOverlay />\r\n                    <ModalContent color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\r\n                        <Image src={errorSVG} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\r\n                        <ModalBody backgroundColor=\"#f1aaaa\" width=\"100%\" padding=\"2vw\">\r\n                            <Text textAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]}  borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Some error occurred</Text>\r\n                        </ModalBody>\r\n                        <ModalCloseButton />\r\n                    </ModalContent>\r\n                </Modal>\r\n                )   \r\n        }\r\n        else return null\r\n}\r\n\r\nexport default SignOut","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Login\\ForgotPassword.tsx",["511","512","513","514","515","516","517","518"],"import React from \"react\"\r\nimport {\r\n    Text,\r\n    Stack,\r\n    Flex,\r\n    Link,\r\n    Box,\r\n    Heading,\r\n    Input,\r\n    Button,\r\n    FormLabel,\r\n    FormControl,\r\n    Image,\r\n    useColorModeValue,\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    useDisclosure,\r\n  } from '@chakra-ui/react'\r\nimport \"../../../styles/Login.css\"\r\nimport { useState } from \"react\"\r\nimport bg from \"../../../images/Login/login.svg\"\r\nimport success from \"../../../images/Login/login-success.svg\"\r\nimport errorSVG from \"../../../images/Login/login-error.svg\"\r\nimport CustomBox from '../../shared/CustomBox'\r\nimport Footer from '../../shared/Footer'\r\nimport { useGetPasswordOtpMutation, useResendVerificationMailMutation } from \"../../../generated/graphql\"\r\nimport { useHistory } from \"react-router\"\r\n\r\n\r\nconst Forgot = () => {\r\n\r\n    const gradient = useColorModeValue(\"blackG\", \"whiteG\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const history = useHistory()\r\n\r\n    const [getPasswordOtpMutation, {data, loading, error}] = useGetPasswordOtpMutation()\r\n    var { isOpen, onOpen, onClose } = useDisclosure()\r\n    if(data)\r\n    {\r\n        onClose = () => {history.push('/resetpassword')}\r\n        return(\r\n            <Modal isOpen={true} onClose={onClose} isCentered>\r\n                <ModalOverlay />\r\n                <ModalContent color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\r\n                    <Image src={success} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\r\n                    <ModalCloseButton />\r\n                    <ModalBody backgroundColor=\"#A7EAAA\" width=\"100%\" padding=\"2vw\">\r\n                        <Text textAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]} backgroundColor=\"#A7EAAA\" borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Check your registered email ID for reset password OTP</Text>\r\n                    </ModalBody>\r\n                 </ModalContent>\r\n            </Modal>\r\n        )\r\n    }\r\n    else\r\n        if(loading)\r\n        {\r\n            onClose = () => {}\r\n            return(\r\n                <Modal isOpen={true} onClose={onClose}>\r\n                    <ModalOverlay />\r\n                    <ModalContent backgroundColor=\"#e2e19c\" color=\"black\">\r\n                        <ModalHeader>Loading...</ModalHeader>\r\n                        <ModalCloseButton />\r\n                    </ModalContent>\r\n                </Modal>\r\n            )\r\n        }\r\n        else \r\n            if(error)\r\n            {\r\n                if(error.message === \"Email Not found\")\r\n                {\r\n                onClose = () => {history.push('/signup')}\r\n                return(\r\n                    <Modal isOpen={true} onClose={onClose} isCentered>\r\n                    <ModalOverlay />\r\n                    <ModalContent  color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\r\n                        <Image src={errorSVG} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\r\n                        <ModalBody backgroundColor=\"#f1aaaa\" width=\"100%\" padding=\"2vw\">\r\n                            <Text xtAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]} backgroundColor=\"#A7EAAA\" borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Email ID not registered. <br />Kindly sign up.</Text>\r\n                        </ModalBody>\r\n                        <ModalCloseButton />\r\n                    </ModalContent>\r\n                </Modal>\r\n                )\r\n                }\r\n                else \r\n                {\r\n                onClose = () => {window.location.reload()}\r\n                return(\r\n                    <Modal isOpen={true} onClose={onClose} isCentered>\r\n                    <ModalOverlay />\r\n                    <ModalContent  color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\r\n                        <Image src={errorSVG} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\r\n                        <ModalBody backgroundColor=\"#f1aaaa\" width=\"100%\" padding=\"2vw\">\r\n                            <Text xtAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]} backgroundColor=\"#A7EAAA\" borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Error Occurred</Text>\r\n                        </ModalBody>\r\n                        <ModalCloseButton />\r\n                    </ModalContent>\r\n                </Modal>\r\n                )\r\n                }\r\n            }\r\n\r\n    return(\r\n        <CustomBox>\r\n            <Flex className=\"login\" width=\"100vw\" height=\"100vh\" justifyContent=\"center\" alignItems=\"center\" position=\"relative\" zIndex=\"1\">\r\n            <Box width=\"60vw\"  className={`${gradient} login-main-box`} height=\"fit-content\" padding=\"5vw\">\r\n                    <Heading fontSize=\"4vw\" marginBottom=\"6vh\">Forgot <span>Password</span></Heading>\r\n                    <Input placeholder=\"Enter Email ID\" marginBottom=\"4vh\" type=\"email\" onChange={(e:any) => {setEmail(e.target.value)}}></Input>\r\n                    <Button width=\"100%\"  backgroundColor=\"#2467a1\" marginBottom=\"4vh\" marginTop=\"6vh\"\r\n                        color=\"white\"\r\n                        onClick={async (e:any) => {\r\n                            e.preventDefault();\r\n                            try{\r\n                                await getPasswordOtpMutation({variables: {email: email}})\r\n                            }\r\n                            catch(err) {console.log(err)}\r\n                        }}\r\n                    >Submit</Button>\r\n                </Box>\r\n                <Image src={bg} boxSize=\"25vw\" bottom=\"30%\" right=\"0%\" className=\"login-image\"></Image>\r\n            </Flex>\r\n            <Footer designed={[{ name: 'Krithikaa', mail: 'be20b020@smail.iitm.ac.in' }]} ></Footer>\r\n        </CustomBox>  \r\n    )\r\n}\r\n\r\nexport default Forgot","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Login\\EditProfile.tsx",["519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536"],"import React from \"react\"\r\nimport {\r\n    Text,\r\n    Stack,\r\n    Link,\r\n    Flex,\r\n    Input,\r\n    Box,\r\n    RadioGroup,\r\n    Radio,\r\n    Image,\r\n    Button,\r\n    useColorModeValue,\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    useDisclosure,\r\n    FormControl,\r\n    FormLabel,\r\n    Select,\r\n    FormErrorMessage,\r\n    FormHelperText,\r\n    Heading,\r\n  } from '@chakra-ui/react'\r\nimport { AddIcon, MinusIcon } from '@chakra-ui/icons';\r\nimport { useState } from \"react\";\r\nimport CustomBox from '../../shared/CustomBox'\r\nimport Footer from '../../shared/Footer';\r\nimport \"../../../styles/Login.css\"\r\n\r\n\r\nimport {cities} from \"./cities\"\r\n\r\nimport bg from \"../../../images/homepage_illustrations/small ribi.png\"\r\n\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport SwiperCore, {\r\n    Scrollbar\r\n  } from 'swiper';\r\n  \r\nimport 'swiper/swiper-bundle.min.css'  \r\nimport 'swiper/swiper.min.css'\r\nimport { useEditProfileMutation, useMeQuery } from \"../../../generated/graphql\";\r\nimport {useHistory} from \"react-router-dom\"\r\nimport { FaSchool } from \"react-icons/fa\";\r\nimport success from \"../../../images/Login/login-success.svg\"\r\nimport errorSVG from \"../../../images/Login/login-error.svg\"\r\n\r\nimport {colleges} from \"./college\"\r\nimport { branches } from \"./branches\"\r\n\r\nSwiperCore.use([Scrollbar]);\r\n\r\nconst EditProfile = () => {\r\n\r\n    const {data: user, loading: userLoading, error: userError} = useMeQuery()\r\n    console.log(user)\r\n\r\n    const history = useHistory()\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [name, setName]  = useState('')\r\n    const [number, setNumber] = useState('')\r\n    const [college, setCollege] = useState('')\r\n    const [branch, setBranch] = useState('')\r\n    const [State, setState] = useState('')\r\n    const [city, setCity] = useState('')\r\n    const [address, setAddress] = useState('')\r\n    const [mobile, setMobile] = useState('')\r\n\r\n    const [editProfileMutation, {data, loading, error}] = useEditProfileMutation()\r\n    var { isOpen, onOpen, onClose } = useDisclosure()\r\n\r\n    if(data)\r\n    {\r\n        onClose = () => {\r\n            history.push('/profile')\r\n            window.location.reload()\r\n        }\r\n\r\n        return(\r\n            <Modal isOpen={true} onClose={onClose} isCentered>\r\n                <ModalOverlay />\r\n                <ModalContent color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\r\n                    <Image src={success} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\r\n                    <ModalCloseButton />\r\n                    <ModalBody backgroundColor=\"#A7EAAA\" width=\"100%\" padding=\"2vw\">\r\n                        <Text textAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]} backgroundColor=\"#A7EAAA\" borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Details edited successfully!</Text>\r\n                    </ModalBody>\r\n                 </ModalContent>\r\n            </Modal>\r\n        )\r\n    }\r\n    if(loading)\r\n        {\r\n            onClose = () => {}\r\n            return(\r\n                <Modal isOpen={true} onClose={onClose}>\r\n                    <ModalOverlay />\r\n                    <ModalContent backgroundColor=\"#e2e19c\" color=\"black\">\r\n                        <ModalHeader>Loading...</ModalHeader>\r\n                        <ModalCloseButton />\r\n                    </ModalContent>\r\n                </Modal>\r\n            )\r\n        }\r\n        else if(error)\r\n        {\r\n            onClose = () => {window.location.reload()}\r\n                return(\r\n                    <Modal isOpen={true} onClose={onClose} isCentered>\r\n                    <ModalOverlay />\r\n                    <ModalContent color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\r\n                        <Image src={errorSVG} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\r\n                        <ModalBody backgroundColor=\"#f1aaaa\" width=\"100%\" padding=\"2vw\">\r\n                            <Text textAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]}  borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Some error occurred</Text>\r\n                        </ModalBody>\r\n                        <ModalCloseButton />\r\n                    </ModalContent>\r\n                </Modal>\r\n                )   \r\n        }\r\n    \r\n    return(\r\n        <CustomBox>\r\n            <Stack\r\n                    textAlign={'center'}\r\n                    align={'center'}\r\n                    spacing={{ base: 8, md: 8 }}\r\n                    py={{ base: 20, md: 20 }}\r\n                    padding=\"4vw\"\r\n            >\r\n                <Heading fontSize=\"3.5vw\" className=\"profile-heading\">Hi! {user?.me?.name}</Heading>\r\n                <Flex width=\"100%\" className=\"profile-main-flex\" minHeight=\"80vh\" justifyContent=\"space-evenly\">\r\n                    <Flex height={[\"fit-content\",\"80vh\"]} padding={[\"1vw\", \"0vw\"]}  flexDirection=\"column\" margin=\"auto\"  width={[\"100%\", \"20vw\"]} fontSize=\"1.5vw\" justifyContent=\"space-between\">\r\n                        <Link href=\"/profile\" marginBottom=\"4vh\">Profile Details</Link>\r\n                        <Link href=\"/editprofile\" color=\"#C2C4FF\">Edit Profile</Link>\r\n                        <Button fontSize={[\"5vw\",\"1.5vw\"]} onClick={(e) => {e.preventDefault(); history.push('/signout')}} width={[\"fit-content\",\"100%\"]} margin=\"auto\" backgroundColor=\"#DB7171\">Logout</Button>\r\n                        <Image src={bg} boxSize=\"22vw\" alignSelf=\"center\"></Image>\r\n                    </Flex>\r\n                    <Flex flexDirection=\"column\">\r\n                        <Box width={[\"100%\", \"60vw\"]} margin=\"auto\" fontSize={[\"5vw\",\"1.5vw\"]} padding={[\"1vw\", \"4vw\"]} borderRadius=\"24px\" marginBottom=\"4vh\">\r\n                           <FormControl marginBottom=\"4vh\">\r\n                               <FormLabel>Name</FormLabel>\r\n                               <Input color=\"black\" value={name} placeholder={user?.me?.name} onChange={(e:any) => {setName(e.target.value)}} type=\"text\"></Input>\r\n                           </FormControl>\r\n                           <FormControl marginBottom=\"4vh\">\r\n                               <FormLabel>Email</FormLabel>\r\n                               <Input value={email} placeholder={user?.me?.email} onChange={(e:any) => {setEmail(e.target.value)}} type=\"email\"></Input>\r\n                           </FormControl>\r\n                           <Flex marginBottom=\"6vh\">\r\n                        <Select placeholder={user?.me?.college} marginRight=\"2vw\" value={college} onChange={(e:any) => {setCollege(e.target.value)}}>\r\n                            {\r\n                                colleges.map(o => {\r\n                                    return(\r\n                                        <option value={o[\"University\"]}>{o[\"University\"]}</option>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </Select>\r\n                        <Select placeholder={user?.me?.department} value={branch} onChange={(e:any) => {setBranch(e.target.value)}}>\r\n                            {\r\n                                branches.map(b => {\r\n                                    return(\r\n                                        <option value={b}>{b}</option>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </Select>\r\n                    </Flex>\r\n                    <FormControl marginBottom=\"4vh\">\r\n                        <FormLabel>Address</FormLabel>\r\n                        <Input type=\"text\" value={address} placeholder={user?.me?.address} onChange={(e:any) => {setAddress(e.target.value)}}></Input>\r\n                    </FormControl>\r\n                    <Flex marginBottom=\"6vh\">\r\n                        <Select placeholder={user?.me?.state} value={State} onChange={(e:any) => {setState(e.target.value)}}>\r\n                            {\r\n                                \r\n                                Object.keys(cities).map(s => {\r\n                                    return(<option value={s}>{s}</option>)\r\n                                })\r\n                            }\r\n                        </Select>\r\n                        <Select placeholder={user?.me?.city} marginLeft=\"2vw\" value={city} onChange={(e:any) => {setCity(e.target.value)}}>\r\n                            {\r\n                                user?.me?.state &&\r\n                                cities[user?.me?.state!].map(c => {\r\n                                    return(<option value={c}>{c}</option>)\r\n                                })\r\n                            }\r\n                        </Select>\r\n                    </Flex>\r\n                    <Flex width=\"100%\" justifyContent=\"space-between\" className=\"profile-button-flex\">\r\n                        <Button backgroundColor=\"#DB7171\" onClick={(e:any) => {e.preventDefault(); history.push('/forgotpassword')}}>Change password</Button>\r\n                        <Button backgroundColor=\"#9FDB71\"\r\n                            onClick={async (e:any) => {\r\n                                e.preventDefault();\r\n                                try\r\n                                {\r\n                                    await editProfileMutation({variables: {data:\r\n                                         {\r\n                                            name: name !=='' ? name! : user?.me?.name!, \r\n                                            college: college !== '' ? college! : user?.me?.college!, \r\n                                            state: State !== '' ? State! : user?.me?.state!,\r\n                                            city: city !== '' ? city! : user?.me?.city!,\r\n                                            email : email !== '' ? email! : user?.me?.email! , \r\n                                            address : address !== '' ? address! : user?.me?.address!,\r\n                                            department : branch !== '' ? branch! : user?.me?.department!, \r\n                                            mobile : mobile !== '' ? mobile! : user?.me?.mobile!\r\n\r\n                                        }}})\r\n                                }\r\n                                catch(err) {console.log(err)}\r\n                            }}\r\n                        >Submit changes</Button>\r\n                    </Flex>\r\n                        </Box>\r\n                    </Flex>\r\n                </Flex>\r\n            </Stack>    \r\n            <Footer designed={[{ name: 'Krithikaa', mail: 'be20b020@smail.iitm.ac.in' }]} ></Footer>      \r\n        </CustomBox>\r\n    )\r\n}\r\n\r\nexport default EditProfile;","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Login\\Verify.tsx",["537","538","539","540","541","542","543","544","545"],"import React, { useEffect } from \"react\"\r\nimport {\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    useDisclosure,\r\n    Flex,\r\n    SimpleGrid,\r\n    Box,\r\n    Heading,\r\n    FormControl,\r\n    FormLabel,\r\n    Input,\r\n    Button,\r\n    Alert,\r\n    AlertIcon,\r\n    Text,\r\n    Image,\r\n    Link,\r\n    useColorModeValue,\r\n  } from '@chakra-ui/react'\r\nimport \"../../../styles/Login.css\"\r\nimport { useResendVerificationMailMutation, useVerifyUserMutation } from \"../../../generated/graphql\"\r\nimport { useState } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { useParams } from \"react-router\"\r\nimport successSVG from \"../../../images/Login/login-success.svg\"\r\nimport errorSVG from \"../../../images/Login/login-error.svg\"\r\nimport Footer from \"../../shared/Footer\"\r\nimport CustomBox from \"../../shared/CustomBox\"\r\n\r\nconst Verify = () => {\r\n    const gradient = useColorModeValue(\"blackG\", \"whiteG\")\r\n    const [otp, setOtp] = React.useState('')\r\n    const history = useHistory()\r\n    const [verifyuser, {data, loading, error}] = useVerifyUserMutation()\r\n    const [resendmail] = useResendVerificationMailMutation();\r\n    const [email , setemail] = React.useState('');\r\n    const [input , setInput] = React.useState(false);\r\n    const [alert , setalert] = React.useState(false)\r\n    const [success, setSuccess] = React.useState(false)\r\n\r\n\r\n    const handlesubmit = () => {\r\n        verifyuser({\r\n          variables: {\r\n            otp,\r\n          },\r\n        })\r\n          .then((res) => {\r\n            if (res.data?.verifyUser) {\r\n             setSuccess(true)\r\n            }\r\n          })\r\n          .catch((err) => console.log(err))\r\n      }\r\n\r\n      const resend = () =>{\r\n        resendmail({variables:{\r\n          requestForgotPassInput : {\r\n            email\r\n          }\r\n        }}).then(res => {\r\n          if(res.data?.resendVerificationMail){\r\n            setalert(true)\r\n          }\r\n        })\r\n        .catch(err => console.error(err)\r\n        )\r\n      }\r\n  \r\n    var { isOpen, onOpen, onClose } = useDisclosure()\r\n    if(success)\r\n    {\r\n        onClose = () => {history.push('/login')}\r\n        return(\r\n            <Modal isOpen={true} onClose={onClose} isCentered>\r\n                <ModalOverlay />\r\n                <ModalContent color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\r\n                    <Image src={successSVG} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\r\n                    <ModalCloseButton />\r\n                    <ModalBody backgroundColor=\"#A7EAAA\" width=\"100%\" padding=\"2vw\">\r\n                        <Text textAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]} backgroundColor=\"#A7EAAA\" borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Email verified! Please login to register for workshops</Text>\r\n                    </ModalBody>\r\n                 </ModalContent>\r\n            </Modal>\r\n        )\r\n    }\r\n    else \r\n        if(loading)\r\n        {\r\n            onClose = () => {}\r\n            return(\r\n                <Modal isOpen={true} onClose={onClose}>\r\n                    <ModalOverlay />\r\n                    <ModalContent backgroundColor=\"#e2e19c\" color=\"black\">\r\n                        <ModalHeader>Loading...</ModalHeader>\r\n                        <ModalCloseButton />\r\n                    </ModalContent>\r\n                </Modal>\r\n            )\r\n        }\r\n        else\r\n        if(error)\r\n        {\r\n            if(error.message === \"Invalid OTP!\")\r\n            {\r\n                onClose = () => {window.location.reload()}\r\n                return(\r\n                    <Modal isOpen={true} onClose={onClose} isCentered>\r\n                    <ModalOverlay />\r\n                    <ModalContent color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\r\n                        <Image src={errorSVG} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\r\n                        <ModalBody backgroundColor=\"#f1aaaa\" width=\"100%\" padding=\"2vw\">\r\n                            <Text textAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]}  borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Invalid OTP</Text>\r\n                        </ModalBody>\r\n                        <ModalCloseButton />\r\n                    </ModalContent>\r\n                </Modal>\r\n                )\r\n            }\r\n            else \r\n            {\r\n                onClose = () => {history.push('/')}\r\n                return(\r\n                    <Modal isOpen={true} onClose={onClose} isCentered>\r\n                    <ModalOverlay />\r\n                    <ModalContent color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\r\n                        <Image src={errorSVG} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\r\n                        <ModalBody backgroundColor=\"#f1aaaa\" width=\"100%\" padding=\"2vw\">\r\n                            <Text textAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]}  borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Error Occurred</Text>\r\n                        </ModalBody>\r\n                        <ModalCloseButton />\r\n                    </ModalContent>\r\n                </Modal>\r\n                )   \r\n            }\r\n        }\r\n        else return (\r\n    <Flex\r\n      minH={'100vh'}\r\n      align={'center'}\r\n      justify={'center'}\r\n      flexDirection='column'\r\n    >\r\n         <CustomBox>\r\n            <Flex className=\"login\" width=\"100vw\" height=\"100vh\" justifyContent=\"center\" alignItems=\"center\" position=\"relative\" zIndex=\"1\">\r\n            <Box width=\"60vw\"  className={`${gradient} login-main-box`} height=\"fit-content\" padding=\"5vw\" borderRadius=\"24px\">\r\n                    <Heading fontSize=\"4vw\" marginBottom=\"6vh\">  Verify yo<span>ur mail</span></Heading>\r\n                    <Input\r\n                        marginBottom=\"4vh\"\r\n                        placeholder='OTP'\r\n                        type='text'\r\n                        value={otp}\r\n                        onChange={(e) => setOtp(e.target.value)}\r\n                    />\r\n                    <Button width=\"100%\"  backgroundColor=\"#2467a1\" marginBottom=\"4vh\" color=\"white\"\r\n                        onClick={handlesubmit}\r\n                    >Verify</Button>\r\n                    <Flex width=\"100%\" justifyContent=\"space-between\" >\r\n                    {\r\n                        !input ? ( <Link onClick = {()=>setInput(true)}>Resend Verification mail</Link>) : null\r\n                    }\r\n                     {\r\n                            input ? (\r\n                            <Flex width={\"100%\"} flexDirection={\"column\"}>\r\n                            <Flex width={\"100%\"} flexDirection={['column','column','row','row']}>\r\n                            <FormControl id='name'>\r\n                            <Input\r\n                            width={\"60%\"}\r\n                            placeholder='email'\r\n                            type='email'\r\n                            value={email}\r\n                            onChange={(e) => setemail(e.target.value)}\r\n                            />\r\n                           </FormControl> \r\n                        <Button onClick = {resend} color=\"white\"\r\n                           width ={\"40%\"} backgroundColor=\"#2467a1\" marginBottom=\"4vh\">\r\n                         Resend Verification mail\r\n                        </Button>\r\n                        </Flex>\r\n                        {\r\n                        alert ? (\r\n                            <Alert status='success'>\r\n                            <AlertIcon />\r\n                            Verification mail has been sent \r\n                            </Alert>\r\n                        ) : null\r\n                    }\r\n                    </Flex>): null\r\n                        }\r\n                    </Flex>\r\n                </Box>\r\n            </Flex>\r\n            <Footer designed={[{ name: 'Krithikaa', mail: 'be20b020@smail.iitm.ac.in' }]} ></Footer>\r\n        </CustomBox>     \r\n    </Flex>\r\n        )\r\n}\r\n\r\nexport default Verify","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\ShaastraJuniors\\index.tsx",[],"F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Speaker\\Image.tsx",["546","547","548","549","550","551","552","553","554","555","556","557","558","559","560"],"import React from \"react\";\r\nimport { SimpleGrid } from \"@chakra-ui/layout\";\r\nimport { Box, Grid } from \"@chakra-ui/layout\";\r\nimport { Center } from \"@chakra-ui/layout\";\r\nimport \"../../../styles/image.css\";\r\nimport Hennessy from \"../../../images/Speaker/hennessy.jpg\";\r\nimport Atkins from \"../../../images/Speaker/atkins.jpg\";\r\nimport Radhakrishnan from \"../../../images/Speaker/radhakrishnan.jpg\";\r\nimport Rajan from \"../../../images/Speaker/rajan.jpg\";\r\nimport Robo from \"../../../images/Speaker/robothespian.jpg\";\r\nimport Soumya from \"../../../images/Speaker/soumya_swaminathan.jpg\";\r\nimport Yunus from \"../../../images/Speaker/yunus.jpg\";\r\nimport Capture from \"../../../images/Speaker/Capture.jpg\";\r\nimport Robert from \"../../../images/Speaker/robert.jpg\";\r\nfunction Image() {\r\n  return (\r\n    <Box p={4} w=\"100%\" bg=\"black\">\r\n      {/* // <Row className=\"content\">\r\n    // <Col md={12}> */}\r\n\r\n      <h2>Our Featured Speakers</h2>\r\n      <Center>\r\n        <p className=\"content\">\r\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit. Delectus,\r\n          officia aut molestiae quod. Veritatis voluptas, possimus. Quae qui\r\n          optio minus dolorem fugit dolore, cum at, harum omnis sint? Saepe,\r\n          asperiores.\r\n        </p>\r\n      </Center>\r\n      <div>\r\n        <Center mx={10}>\r\n          <SimpleGrid\r\n            mr={101}\r\n            templateRows=\"repeat(3,1fr)\"\r\n            templateColumns={{\r\n              sm: \"repeat(1,1fr)\",\r\n              md: \"repeat(3,1fr)\",\r\n            }}\r\n            gap={20}\r\n          >\r\n            <Box w=\"100%\">\r\n              <div className=\"flip-box\">\r\n                <div className=\"flip-box-inner\">\r\n                  <div className=\"flip-box-front\">\r\n                    <img src={Yunus} alt=\"img\" />\r\n                  </div>\r\n                  <div className=\"flip-box-back\">\r\n                    <h3>Dr Muhammad Yunus</h3>\r\n                    <h4> </h4>\r\n                    <p>Founder of the Grameen Bank, Nobel Peace Prize, 2006</p>\r\n                    <a href=\"\" className=\"fab fa-youtube fa-2x\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Box>\r\n            <Box w=\"100%\">\r\n              <div className=\"flip-box\">\r\n                <div className=\"flip-box-inner\">\r\n                  <div className=\"flip-box-front\">\r\n                    <img src={Atkins} alt=\"img\" />\r\n                  </div>\r\n                  <div className=\"flip-box-back\">\r\n                    <h3>Dr Peter Atkins</h3>\r\n\r\n                    <p>FRSC, Prolific Author of popular chemistry textbooks</p>\r\n                    <a\r\n                      href=\"https://www.youtube.com/watch?v=0G_-1SGhYTA&list=PLT4Wldw_lvk2vSGkMDcXazP3iJ3Wlvo4X&index=3\"\r\n                      className=\"fab fa-youtube fa-2x\"\r\n                    ></a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Box>\r\n\r\n            <Box w=\"100%\">\r\n              <div className=\"flip-box\">\r\n                <div className=\"flip-box-inner\">\r\n                  <div className=\"flip-box-front\">\r\n                    <img src={Hennessy} alt=\"img\" />\r\n                  </div>\r\n                  <div className=\"flip-box-back\">\r\n                    <h3>Dr John Hennessy</h3>\r\n\r\n                    <p>\r\n                      Chairman of Alphabet Inc., Eminent Computer Scientist,\r\n                      Turing Award, 2017\r\n                    </p>\r\n                    <a\r\n                      href=\"https://www.youtube.com/watch?v=_ebUDIsbqkc&list=PLT4Wldw_lvk2vSGkMDcXazP3iJ3Wlvo4X&index=2\"\r\n                      className=\"fab fa-youtube fa-2x\"\r\n                    ></a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Box>\r\n            <Box w=\"100%\">\r\n              <div className=\"flip-box\">\r\n                <div className=\"flip-box-inner\">\r\n                  <div className=\"flip-box-front\">\r\n                    <img src={Radhakrishnan} alt=\"img\" />\r\n                  </div>\r\n                  <div className=\"flip-box-back\">\r\n                    <h3>Dr K. Radhakrishnan</h3>\r\n\r\n                    <p>Former Chairman, ISRO</p>\r\n                    <a\r\n                      href=\"https://www.youtube.com/watch?v=Wv_sea0tMrc&list=PLT4Wldw_lvk2vSGkMDcXazP3iJ3Wlvo4X\"\r\n                      className=\"fab fa-youtube fa-2x\"\r\n                    ></a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Box>\r\n\r\n            <Box w=\"100%\">\r\n              <div className=\"flip-box\">\r\n                <div className=\"flip-box-inner\">\r\n                  <div className=\"flip-box-front\">\r\n                    <img src={Rajan} alt=\"img\" />\r\n                  </div>\r\n                  <div className=\"flip-box-back\">\r\n                    <h3>Rajan</h3>\r\n\r\n                    <p>\r\n                      Lorem ipsum dolor sit amet, consectetur adipisicing elit.\r\n                      At quidem earum sed. Sint, magnam eligendi!\r\n                    </p>\r\n                    <a href=\"\" className=\"fab fa-youtube fa-2x\"></a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Box>\r\n\r\n            <Box w=\"100%\">\r\n              <div className=\"flip-box\">\r\n                <div className=\"flip-box-inner\">\r\n                  <div className=\"flip-box-front\">\r\n                    <img src={Robo} alt=\"img\" />\r\n                  </div>\r\n                  <div className=\"flip-box-back\">\r\n                    <h3>RoboThespian and Cleo</h3>\r\n\r\n                    <p>World’s First Acting Humanoid Robots</p>\r\n                    <a href=\"\" className=\"fab fa-youtube fa-2x\"></a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Box>\r\n            <Box w=\"100%\">\r\n              <div className=\"flip-box\">\r\n                <div className=\"flip-box-inner\">\r\n                  <div className=\"flip-box-front\">\r\n                    <img src={Soumya} alt=\"img\" />\r\n                  </div>\r\n                  <div className=\"flip-box-back\">\r\n                    <h3>Dr Soumya Swaminathan,</h3>\r\n\r\n                    <p>Chief Scientist, World Health Organisation (WHO)</p>\r\n                    <a href=\"\" className=\"fab fa-youtube fa-2x\"></a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Box>\r\n\r\n            <Box w=\"100%\">\r\n              <div className=\"flip-box\">\r\n                <div className=\"flip-box-inner\">\r\n                  <div className=\"flip-box-front\">\r\n                    <img src={Capture} alt=\"img\" />\r\n                  </div>\r\n                  <div className=\"flip-box-back\">\r\n                    <h3>Dr Joachim Frank</h3>\r\n\r\n                    <p>Nobel Prize in Chemistry, 2017</p>\r\n                    <a href=\"\" className=\"fab fa-youtube fa-2x\"></a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Box>\r\n\r\n            <Box w=\"100%\">\r\n              <div className=\"flip-box\">\r\n                <div className=\"flip-box-inner\">\r\n                  <div className=\"flip-box-front\">\r\n                    <img src={Robert} alt=\"img\" />\r\n                  </div>\r\n                  <div className=\"flip-box-back\">\r\n                    <h3>Mr Robert C. Martin</h3>\r\n\r\n                    <p>American Software Engineer, Popular Author</p>\r\n                    <a\r\n                      href=\"https://www.youtube.com/watch?v=FlbDg_iBCkw&list=PLT4Wldw_lvk2vSGkMDcXazP3iJ3Wlvo4X&index=7\"\r\n                      className=\"fab fa-youtube fa-2x\"\r\n                    ></a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Box>\r\n          </SimpleGrid>\r\n        </Center>\r\n      </div>\r\n\r\n      {/* // </Col> */}\r\n      {/* // </Row> */}\r\n    </Box>\r\n  );\r\n}\r\nexport default Image;\r\n","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\shared\\Footer.tsx",["561","562","563","564","565"],"F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\shared\\CustomBox.tsx",["566"],"import { useColorModeValue } from \"@chakra-ui/color-mode\";\r\nimport { Box } from \"@chakra-ui/layout\";\r\nimport * as React from \"react\";\r\nimport Footer from \"./Footer\";\r\nimport Header from \"./Header\";\r\n\r\ninterface Props {\r\n  children: React.ReactChild[] | React.ReactChildren[] | React.ReactChild;\r\n}\r\n\r\nconst CustomBox = (props: Props) => {\r\n  const bg = useColorModeValue(\"highlight.200\", \"primary.default\");\r\n\r\n  return (\r\n    <Box bg={bg}>\r\n      <Header />\r\n      {props.children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CustomBox;\r\n","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Events and Workshops\\EventFaqs.tsx",["567"],"import { DeleteIcon, EditIcon } from '@chakra-ui/icons';\r\nimport { Box, Button, Center, Container, Flex, FormControl, Heading, Input, Text, useColorModeValue } from '@chakra-ui/react';\r\nimport React, { useState } from 'react'\r\nimport { GetEventDocument, useCreateEventFaqMutation, useDeleteEventFaqMutation, useEditEventFaqMutation } from '../../../generated/graphql';\r\n\r\nconst EventFaqs = ({event} : any | null) =>{\r\n\r\n    const [role, setRole] = useState(\"\");\r\n    React.useEffect(()=>{\r\n        if(localStorage.getItem(\"role\")){\r\n            setRole(localStorage.getItem(\"role\")!)\r\n        }\r\n    })\r\n    const [faqId, setFaqId] = React.useState(\"\");\r\n    const [uquestion, setQuestion] = React.useState(\"\");\r\n    const [uanswer, setAnswer] = React.useState(\"\");\r\n  \r\n    const [aquestion, setAQuestion] = React.useState(\"\");\r\n    const [aanswer, setAAnswer] = React.useState(\"\");\r\n  \r\n    const [editFaq] = useEditEventFaqMutation();\r\n    const [deleteFaq] = useDeleteEventFaqMutation();\r\n    const [addFaq] = useCreateEventFaqMutation();\r\n\r\n    const handleedit = (faqid: string) => {\r\n        editFaq({\r\n          variables: {\r\n            id : faqid,\r\n            data: {\r\n              question: uquestion,\r\n              answer: uanswer,\r\n            },\r\n          },\r\n          refetchQueries: [{ query: GetEventDocument, variables: { EventID: event.id} }],\r\n        }).catch((err) => console.log(err));\r\n        setFaqId(\"\");\r\n        setQuestion(\"\");\r\n        setAnswer(\"\");\r\n      };\r\n  \r\n    const handleUpdateFaq = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n      if (event.target.name === \"uquestion\") {\r\n        setQuestion(event.target.value);\r\n      } else {\r\n        setAnswer(event.target.value);\r\n      }\r\n    };\r\n    const handleAddFaq = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n      if (event.target.name === \"aquestion\") {\r\n        setAQuestion(event.target.value);\r\n      } else {\r\n        setAAnswer(event.target.value);\r\n      }\r\n    };\r\n  \r\n    const handleAdd = () => {\r\n      addFaq({\r\n        variables: {\r\n           id : event.id!,\r\n           data: {\r\n            question: aquestion,\r\n            answer: aanswer,\r\n          },\r\n        },\r\n        refetchQueries: [{ query: GetEventDocument, variables: { EventID: event.id} }],\r\n      }).catch((err) => console.log(err));\r\n      setAQuestion(\"\");\r\n      setAAnswer(\"\");\r\n    };\r\n    console.log(event)\r\n    const textcolor = useColorModeValue(\"black\",\"white\")\r\n    return (\r\n       <React.Fragment>\r\n           {event.faqs && event?.faqs.length! > 0 ? (\r\n          <Container maxWidth=\"6xl\">\r\n            <Center textAlign={\"center\"}>\r\n              <Heading size={\"lg\"} m={4} mt=\"30px\" color={textcolor}>\r\n                FREQUENTLY ASKED QUESTIONS\r\n              </Heading>\r\n            </Center>\r\n            {role === \"Admin\" ? (\r\n              <Flex p={2} flexDirection={[\"column\", \"column\", \"row\"]}>\r\n                <FormControl m={2} width={[\"100%\", \"100%\", \"45%\"]}>\r\n                  <Input\r\n                    name=\"aquestion\"\r\n                    placeholder={\"Question\"}\r\n                    value={aquestion}\r\n                    onChange={(event) => handleAddFaq(event)}\r\n                    fontSize={\"small\"}\r\n                    p={2}\r\n                    borderColor={\"#2467a1\"}\r\n                  />\r\n                </FormControl>\r\n                <FormControl m={2} width={[\"100%\", \"100%\", \"45%\"]}>\r\n                  <Input\r\n                    name=\"aanswer\"\r\n                    placeholder={\"Answer\"}\r\n                    value={aanswer}\r\n                    onChange={(event) => handleAddFaq(event)}\r\n                    fontSize={\"small\"}\r\n                    p={2}\r\n                    borderColor={\"#2467a1\"}\r\n                  />\r\n                </FormControl>\r\n                <Button\r\n                  color={\"#2467a1\"}\r\n                  variant=\"solid\"\r\n                  border=\"2px solid\"\r\n                  borderColor=\"#2467a1\"\r\n                  size=\"sm\"\r\n                  p={3}\r\n                  m={3}\r\n                  onClick={() => handleAdd()}\r\n                >\r\n                  Add FAQ\r\n                </Button>\r\n              </Flex>\r\n            ) : null}\r\n\r\n            <Flex flexDirection={\"column\"} p={2}>\r\n              {event?.faqs.map((faq) => {\r\n                return (\r\n                  <Box m={4} key={faq.id}>\r\n                    <Flex>\r\n                      <Box\r\n                        p={\"5\"}\r\n                        width={\"100%\"}\r\n                        borderTopRadius={\"lg\"}\r\n                        backgroundColor={\"#2467a1\"}\r\n                      >\r\n                        <Heading size=\"md\">{faq.question}</Heading>\r\n                        {faqId === faq.id ? (\r\n                          <FormControl m={3}>\r\n                            <Input\r\n                              onChange={handleUpdateFaq}\r\n                              name=\"uquestion\"\r\n                              value={uquestion}\r\n                              borderColor={\"black\"}\r\n                              placeholder=\"Question\"\r\n                              color={\"black\"}\r\n                            />\r\n                          </FormControl>\r\n                        ) : null}\r\n                      </Box>\r\n                    </Flex>\r\n                    <Flex>\r\n                      <Box\r\n                        p={\"5\"}\r\n                        width={\"100%\"}\r\n                        backgroundColor={\"#f4f7c6\"}\r\n                        borderBottomRadius={\"lg\"}\r\n                      >\r\n                        <Text fontWeight={\"semibold\"}>{faq.answer}</Text>\r\n                        {faqId === faq.id ? (\r\n                          <FormControl m={3}>\r\n                            <Input\r\n                              onChange={(event) => handleUpdateFaq(event)}\r\n                              name=\"uanswer\"\r\n                              value={uanswer}\r\n                              borderColor={\"#2467a1\"}\r\n                              placeholder=\"Answer\"\r\n                              color={\"black\"}\r\n                            />\r\n                          </FormControl>\r\n                        ) : null}\r\n\r\n                        {faqId === faq.id ? (\r\n                          <Box>\r\n                            <Button\r\n                              color={\"#2467a1\"}\r\n                              variant=\"solid\"\r\n                              border=\"2px solid\"\r\n                              borderColor=\"#2467a1\"\r\n                              size=\"sm\"\r\n                              p={2}\r\n                              m={2}\r\n                              onClick={() => handleedit(faq.id)}\r\n                              float={\"right\"}\r\n                            >\r\n                              Edit FAQ\r\n                            </Button>\r\n                          </Box>\r\n                        ) : role === \"Admin\" ? (\r\n                          <Box>\r\n                            <Button\r\n                              color={\"#2467a1\"}\r\n                              variant=\"outline\"\r\n                              border=\"2px solid\"\r\n                              borderColor=\"#2467a1\"\r\n                              size=\"sm\"\r\n                              p={2}\r\n                              m={2}\r\n                              onClick={() => {\r\n                                setFaqId(faq.id);\r\n                              }}\r\n                              float={\"right\"}\r\n                            >\r\n                              <EditIcon m={2} />\r\n                              Edit FAQ\r\n                            </Button>\r\n                            <Button\r\n                              color={\"#2467a1\"}\r\n                              variant=\"outline\"\r\n                              border=\"2px solid\"\r\n                              borderColor=\"#2467a1\"\r\n                              size=\"sm\"\r\n                              p={2}\r\n                              m={2}\r\n                              onClick={() => {\r\n                                deleteFaq({\r\n                                  variables: {\r\n                                    id : faq.id\r\n                                  },\r\n                                  refetchQueries: [\r\n                                    {\r\n                                      query: GetEventDocument,\r\n                                      variables: { EventID: event.id! },\r\n                                    },\r\n                                  ],\r\n                                });\r\n                              }}\r\n                              float={\"right\"}\r\n                            >\r\n                              <DeleteIcon m={2} />\r\n                              Delete FAQ\r\n                            </Button>\r\n                          </Box>\r\n                        ) : null}\r\n                      </Box>\r\n                    </Flex>\r\n                  </Box>\r\n                );\r\n              })}\r\n            </Flex>\r\n          </Container>\r\n        ) : (\r\n          <React.Fragment>\r\n            {role === \"Admin\" ? (\r\n              <Container maxWidth={\"5xl\"}>\r\n                <Center m={2} p={2}>\r\n                  <Heading>Add FAQs</Heading>\r\n                </Center>\r\n                <Flex>\r\n                  <FormControl m={2} width={\"45%\"}>\r\n                    <Input\r\n                      name=\"aquestion\"\r\n                      placeholder={\"Question\"}\r\n                      value={aquestion}\r\n                      onChange={(event) => handleAddFaq(event)}\r\n                      fontSize={\"small\"}\r\n                      p={2}\r\n                      borderColor={\"#2467a1\"}\r\n                    />\r\n                  </FormControl>\r\n                  <FormControl m={2} width={\"45%\"}>\r\n                    <Input\r\n                      name=\"aanswer\"\r\n                      placeholder={\"Answer\"}\r\n                      value={aanswer}\r\n                      onChange={(event) => handleAddFaq(event)}\r\n                      fontSize={\"small\"}\r\n                      p={2}\r\n                      borderColor={\"#2467a1\"}\r\n                    />\r\n                  </FormControl>\r\n                  <Button\r\n                    color={\"#2467a1\"}\r\n                    variant=\"solid\"\r\n                    border=\"2px solid\"\r\n                    borderColor=\"#2467a1\"\r\n                    size=\"sm\"\r\n                    p={2}\r\n                    m={3}\r\n                    onClick={() => handleAdd()}\r\n                  >\r\n                    Add FAQ\r\n                  </Button>\r\n                </Flex>\r\n              </Container>\r\n            ) : null}\r\n          </React.Fragment>\r\n        )}\r\n       </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default EventFaqs\r\n","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Events and Workshops\\EventVeticalComponent.tsx",["568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592","593"],"import * as React from \"react\"\r\nimport {\r\n    Text,\r\n    Stack,\r\n    Flex,\r\n    Input,\r\n    Box,\r\n    RadioGroup,\r\n    Radio,\r\n    Image,\r\n    Button,\r\n    useColorModeValue,\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    useDisclosure,\r\n    FormControl,\r\n    FormLabel,\r\n    FormErrorMessage,\r\n    FormHelperText,\r\n    Heading,\r\n    Alert,\r\n    AlertIcon,\r\n    Center,\r\n  } from '@chakra-ui/react'\r\nimport { AddIcon, MinusIcon } from '@chakra-ui/icons';\r\nimport { useState } from \"react\";\r\nimport CustomBox from '../../shared/CustomBox'\r\nimport Footer from '../../shared/Footer';\r\nimport bg from \"../../../images/EventsWorkshops/events/bg.jpeg\"\r\nimport { useCreateTeamandRegisterMutation, useRegisterMutation } from \"../../../generated/graphql\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ReactMarkdown from 'react-markdown'\r\nimport remarkGfm from 'remark-gfm'\r\nimport RegisterNow from \"./RegisterNow\";\r\n\r\nconst EventVerticalComponent = ({data, isAdmin} : any) => {\r\n\r\n    // var { isOpen, onOpen, onClose } = useDisclosure()\r\n\r\n    const search = useColorModeValue(\"border\", \"noBorder\")\r\n    const font = useColorModeValue(\"black\", \"white\")\r\n    const gradient = useColorModeValue(\"blackG\", \"whiteG\")\r\n    const button = useColorModeValue(\"dark\", \"light\")\r\n    \r\n    // const [radio, setRadio] = useState(\"i\")\r\n    // const [register, {data : data1,error,loading}] = useRegisterMutation();\r\n    // const IndividualReg = async (eventId : string) =>{\r\n\r\n    //     await register({\r\n    //         variables : {\r\n    //             EventID : eventId\r\n    //         }\r\n    //     })\r\n    //     .catch(err => console.log(err.message))\r\n\r\n    // }\r\n  \r\n    // const [members, setMembers] = React.useState<string[]>([]);\r\n    // const [teamname, setTeamname] = React.useState<string>();\r\n\r\n    // const handleMembersInput = ({ index, event }: { index: number, event: React.ChangeEvent<HTMLInputElement> }) => {\r\n    //     const values = [...members];\r\n\r\n    //     values[index] = event.target.value\r\n    //     setMembers(values)\r\n    // }\r\n    // const [teamreg,{data:data2, loading:loading2,error : error2}] = useCreateTeamandRegisterMutation();\r\n\r\n    // const Teamregistration = async (eventID : string)=>{\r\n    //     await teamreg({\r\n    //         variables : {\r\n    //            createTeamAndRegisterData : {\r\n    //                eventID,\r\n    //                name : teamname!,\r\n    //                members\r\n    //            } \r\n    //         }\r\n    //     }).catch(err => console.log(err.message))\r\n    // }\r\n\r\n    // if(radio === \"t\" && members.length === 0){\r\n    //     setMembers([''])\r\n    // }\r\n\r\n    const buttoncolor = useColorModeValue(\"#ea8a94\",\"white\");\r\n\r\n    const history = useHistory();\r\n    // if(data1 || data2)\r\n    // {\r\n    //     onClose = () => {window.location.reload()}\r\n    //     return(\r\n    //         <Modal isOpen={true} onClose={onClose}>\r\n    //             <ModalOverlay />\r\n    //             <ModalContent backgroundColor=\"#addfd0\" color=\"black\">\r\n    //                 <ModalHeader>Registrated Successfully</ModalHeader>\r\n    //                 <ModalCloseButton />\r\n    //              </ModalContent>\r\n    //         </Modal>\r\n    //     )\r\n    // }\r\n    // if(error || error2)\r\n    // {\r\n    //     error? onClose = () => {\r\n    //         if(error.message === \"Please login to continue\"){\r\n    //             history.push('/login')\r\n    //         }\r\n    //         window.location.reload()\r\n    //     } : onClose = () => {window.location.reload()}\r\n    //     return(\r\n    //         <Modal isOpen={true} onClose={onClose}>\r\n    //             <ModalOverlay />\r\n    //             <ModalContent backgroundColor=\"#f1aaaa\" color=\"black\">\r\n    //                 <ModalHeader>{error ? error.message : error2?.message}</ModalHeader>\r\n    //                 <ModalCloseButton />\r\n    //              </ModalContent>\r\n    //         </Modal>\r\n    //     )\r\n    // }\r\n    // if(loading || loading2)\r\n    // {\r\n    //     onClose = () => {window.location.reload()}\r\n    //     return(\r\n    //         <Modal isOpen={true} onClose={onClose}>\r\n    //             <ModalOverlay />\r\n    //             <ModalContent backgroundColor=\"#e2e19c\" color=\"black\">\r\n    //                 <ModalHeader>Loading...</ModalHeader>\r\n    //                 <ModalCloseButton />\r\n    //              </ModalContent>\r\n    //         </Modal>\r\n    //     )\r\n    // }\r\n\r\n    \r\n\r\n    return(\r\n       <Box  minHeight={\"15vw\"} m={2} p={2}>\r\n            <Stack spacing={8}>\r\n                    <Box className=\"event-main-box\" minHeight={\"15vh\"}>\r\n                    <Flex width=\"100vw\" justifyContent=\"space-evenly\" marginBottom=\"2vh\" height=\"fit-content\" className=\"vertical-events-flex\">\r\n                        <div className=\"flip-card\">\r\n                            <div className=\"flip-card-inner\">\r\n                                <div className=\"flip-card-front\">\r\n                                    <Box position=\"relative\" boxSize=\"15vw\">\r\n                                        <Image src={data.pic ? data.pic : bg} boxSize=\"15vw\" borderRadius=\"24px\"></Image>\r\n                                        <Box content=\"\" position=\"absolute\" top=\"0.5vw\" left=\"0.5vw\" borderRadius=\"24px\"\r\n                                        opacity=\"0.7\" backgroundImage=\"linear-gradient(45deg, white, #ffffff00)\" \r\n                                        boxSize=\"14vw\" className=\"glass\"></Box>\r\n                                        <Flex boxSize=\"15vw\" alignItems=\"center\" justifyContent=\"center\" position=\"absolute\" top=\"0\" className=\"event-name\">\r\n                                            <Text width=\"10vw\" fontWeight=\"bold\" color=\"black\">{data?.name}</Text>\r\n                                        </Flex>\r\n                                    </Box>\r\n                                </div>\r\n                                <div className=\"flip-card-back\">\r\n                                    <Box width=\"15vw\" padding=\"2vw\" backgroundColor={buttoncolor} color=\"black\" height=\"15vw\" borderRadius=\"24px\">\r\n                                        <Heading as=\"h4\" size={\"sm\"}>Points Distribution</Heading>\r\n                                        <Flex justifyContent=\"space-between\">\r\n                                            <Text>1ST</Text>\r\n                                            <Text>{data.firstplace}</Text>\r\n                                        </Flex>\r\n                                        <Flex justifyContent=\"space-between\">\r\n                                            <Text>2ND</Text>\r\n                                            <Text>{data.secondplace}</Text>\r\n                                        </Flex>\r\n                                        <Flex justifyContent=\"space-between\">\r\n                                            <Text>3RD</Text>\r\n                                            <Text>{data.thirdplace}</Text>\r\n                                        </Flex>\r\n                                        <Flex justifyContent=\"space-between\">\r\n                                            <Text>PARTICIPATION</Text>\r\n                                            <Text>{data.participation}</Text>\r\n                                        </Flex>\r\n                                    </Box>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <Box borderRadius=\"24px\" width=\"50vw\" height=\"100%\" marginLeft=\"15vw\" className=\"event-desp\">\r\n                            <Flex flexDirection=\"column\"  width=\"50vw\" height=\"100%\" alignItems=\"center\" justifyContent=\"center\" textAlign={\"justify\"}>\r\n                                    <Text textAlign=\"center\" width=\"48vw\" className={font} fontSize={[\"lg\"]} borderRadius=\"24px\"  padding=\"2vh\" color=\"white\" fontWeight=\"500\" backdropFilter=\"blur(25px)\">\r\n                                    <Text noOfLines={4}>\r\n                                    <ReactMarkdown\r\n                                        children={data?.description!}\r\n                                        remarkPlugins={[remarkGfm]}\r\n                                    ></ReactMarkdown>\r\n                                    </Text>\r\n                                       <Flex width={'100%'} flexDirection={['column','column','row','row']} alignContent={[\"center\"]} justifyContent={[\"center\",\"space-between\"]}>\r\n                                       {\r\n                                           !isAdmin ? ( data.registrationType === \"NONE\" ? \r\n                                           <Box marginTop=\"2vh\" height=\"1vw\" >\r\n                                           <Alert status='info' size={\"xs\"}>\r\n                                                <AlertIcon />\r\n                                                Registration is not required for this event\r\n                                            </Alert>\r\n                                           </Box>\r\n                                           :\r\n                                           (\r\n                                        //    <Box marginTop=\"2vh\"  height=\"1vw\" >\r\n                                        //    <Button backgroundColor={buttoncolor} color='black'\r\n                                        //     onClick={\r\n                                        //         data.registrationType === \"INDIVIDUAL\" ? ()=>{IndividualReg(data.id)} : onOpen\r\n                                        //     }\r\n                                        //    >REGISTER NOW</Button>\r\n                                        //    </Box>\r\n                                        <RegisterNow  isAdmin={isAdmin} data={data}/>\r\n                                           )\r\n                                           ) : null\r\n                                        }\r\n                                        <Box  marginTop=\"2vh\"  height=\"1vw\" >\r\n                                            <Button backgroundColor={buttoncolor} color='black'\r\n                                                    onClick={() => {\r\n                                                        history.push(`/eventpage/${data.id}`)\r\n                                                    }} >\r\n                                                        View Details\r\n                                                    </Button>\r\n                                         </Box>\r\n                                      \r\n                                       </Flex>\r\n\r\n                                        {/* <Modal isOpen={isOpen} onClose={onClose}>\r\n                                            <ModalOverlay />\r\n                                            <ModalContent>\r\n                                            <ModalHeader>Team Registration for {data.name}</ModalHeader>\r\n                                            <ModalCloseButton />\r\n                                            <ModalBody>\r\n                                                <FormControl>\r\n                                                    <FormLabel>Your Shaastra ID</FormLabel>\r\n                                                    <Input type=\"text\"></Input>\r\n                                                </FormControl>\r\n                                                <FormControl marginTop=\"4vh\">\r\n                                                    <RadioGroup onChange={setRadio} value={radio}>\r\n                                                        <Radio value=\"i\" marginRight=\"2vw\">Register as Individual</Radio>\r\n                                                        <Radio value=\"t\">Register as Team</Radio>\r\n                                                    </RadioGroup>\r\n                                                </FormControl>\r\n                                                    <FormControl marginTop=\"1.5vh\" isRequired>\r\n                                                        <FormLabel>Team Name</FormLabel>\r\n                                                        <Input type=\"text\" value={teamname} onChange={e => setTeamname(e.target.value)}></Input>\r\n                                                        {\r\n                                                            radio === \"t\" ? (\r\n                                                        <React.Fragment>\r\n                                                        <FormLabel marginTop=\"1.5vh\">Team Members Shaastra IDs</FormLabel>\r\n                                                        {\r\n                                                            members.map((member, index) => {\r\n                                                                return (\r\n                                                                    <React.Fragment key={index}>\r\n                                                                        <Flex width={'100%'}  >\r\n                                                                            <FormControl isRequired>\r\n\r\n                                                                                <Flex width=\"100%\" justifyContent=\"space-between\">\r\n                                                                                <Input  id={\"member\" + index} placeholder={`Team Member ${index+1} Shaastra ID`} required\r\n                                                                                 onChange={(event) => handleMembersInput({ index, event })} \r\n                                                                                ></Input>\r\n                                                                                </Flex>\r\n                                                                            </FormControl>\r\n\r\n                                                                    <Flex p={[0, 3]} flexDirection={['column', 'row']}>\r\n                                                                        {\r\n                                                                            index === 0 ? null : (\r\n                                                                                <Button mx={2} my={1} size={'xs'}\r\n                                                                                    onClick={() => {\r\n                                                                                        const values = [...members];\r\n                                                                                        values.splice(index, 1)\r\n                                                                                        setMembers(values)\r\n                                                                                    }}\r\n                                                                                ><MinusIcon /></Button>)}\r\n                                                                        {\r\n                                                                            index >= data.teamSize - 2 ? null : (\r\n                                                                                <Button mx={2} my={1} size={'xs'}\r\n                                                                                    onClick={() => {\r\n                                                                                        if (members.length < data.teamSize - 1) {\r\n                                                                                            setMembers([...members, ''])\r\n                                                                                        }\r\n                                                                                    }\r\n                                                                                    }\r\n                                                                                ><AddIcon /></Button>\r\n                                                                            )\r\n                                                                        }\r\n                                                                     \r\n                                                                    </Flex>\r\n                                                                </Flex>\r\n                                                                        </React.Fragment>)\r\n                                                                })\r\n                                                                }\r\n                                                                <FormLabel>Max team size :{data.teamSize}</FormLabel>\r\n                                                                </React.Fragment>\r\n                                                            ) : null\r\n                                                        }\r\n                                                       \r\n                                                    </FormControl>\r\n                                                \r\n                                            </ModalBody>\r\n\r\n                                            <ModalFooter>\r\n                                                <Button colorScheme='blue' mr={3} onClick={()=>Teamregistration(data.id)}>\r\n                                                 Register\r\n                                                </Button>\r\n                                            </ModalFooter>\r\n                                            </ModalContent>\r\n                                        </Modal> */}\r\n                                    </Text>\r\n                                    \r\n                            </Flex>\r\n                        </Box>\r\n                    </Flex>\r\n                    </Box>\r\n                </Stack>\r\n       </Box>\r\n    )\r\n}\r\n\r\nexport default EventVerticalComponent","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\generated\\graphql.tsx",[],"F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\ShaastraJuniors\\SJEvents.tsx",[],"F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\ShaastraJuniors\\SJStatsCard.tsx",[],"F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\ShaastraJuniors\\SJSponsers.tsx",[],"F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\ShaastraJuniors\\SJHome.tsx",[],"F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\shared\\Header.tsx",[],"F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Events and Workshops\\RegisterNow.tsx",["594","595","596","597","598","599","600"],"import React, { useState } from \"react\";\r\nimport {\r\n  useCreateTeamandRegisterMutation,\r\n  useRegisterMutation,\r\n} from \"../../../generated/graphql\";\r\nimport {\r\n  Text,\r\n  Stack,\r\n  Flex,\r\n  Input,\r\n  Box,\r\n  RadioGroup,\r\n  Radio,\r\n  Image,\r\n  Button,\r\n  useColorModeValue,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  useDisclosure,\r\n  FormControl,\r\n  FormLabel,\r\n  FormErrorMessage,\r\n  FormHelperText,\r\n  Heading,\r\n  Alert,\r\n  AlertIcon,\r\n  Center,\r\n} from \"@chakra-ui/react\";\r\nimport { AddIcon, MinusIcon } from \"@chakra-ui/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport PayRegister from \"./PayRegister\";\r\n// import loadRazorpay from \"../../../utils/razorpay\";\r\n\r\nconst RegisterNow = ({ isAdmin, data }) => {\r\n  const [register, { data: data1, error, loading }] = useRegisterMutation();\r\n  const [members, setMembers] = React.useState<string[]>([]);\r\n  const [teamname, setTeamname] = React.useState<string>();\r\n  const buttoncolor = useColorModeValue(\"#ea8a94\", \"white\");\r\n  var { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [radio, setRadio] = useState(\"i\");\r\n\r\n  if (radio === \"t\" && members.length === 0) {\r\n    setMembers([\"\"]);\r\n  }\r\n\r\n  const handleMembersInput = ({\r\n    index,\r\n    event,\r\n  }: {\r\n    index: number;\r\n    event: React.ChangeEvent<HTMLInputElement>;\r\n  }) => {\r\n    const values = [...members];\r\n\r\n    values[index] = event.target.value;\r\n    setMembers(values);\r\n  };\r\n  const IndividualReg = async (eventId: string) => {\r\n    await register({\r\n      variables: {\r\n        EventID: eventId,\r\n      },\r\n    }).catch((err) => console.log(err.message));\r\n  };\r\n  const history = useHistory();\r\n\r\n  const [teamreg, { data: data2, loading: loading2, error: error2 }] =\r\n    useCreateTeamandRegisterMutation();\r\n  const Teamregistration = async (eventID: string) => {\r\n    await teamreg({\r\n      variables: {\r\n        createTeamAndRegisterData: {\r\n          eventID,\r\n          name: teamname!,\r\n          members,\r\n        },\r\n      },\r\n    }).catch((err) => console.log(err.message));\r\n  };\r\n\r\n  if (loading || loading2) {\r\n    onClose = () => {\r\n      window.location.reload();\r\n    };\r\n    return (\r\n      <Modal isOpen={true} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent backgroundColor=\"#e2e19c\" color=\"black\">\r\n          <ModalHeader>Loading...</ModalHeader>\r\n          <ModalCloseButton />\r\n        </ModalContent>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  if (data1?.register.registered || data2) {\r\n    onClose = () => {\r\n      window.location.reload();\r\n    };\r\n    return (\r\n      <Modal isOpen={true} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent backgroundColor=\"#addfd0\" color=\"black\">\r\n          <ModalHeader>Registrated Successfully</ModalHeader>\r\n          <ModalCloseButton />\r\n        </ModalContent>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  if (data1?.register.eventPay) {\r\n    return <PayRegister data={data1.register.eventPay} />;\r\n  }\r\n\r\n  if (error || error2) {\r\n    error\r\n      ? (onClose = () => {\r\n          if (error.message === \"Please login to continue\") {\r\n            history.push(\"/login\");\r\n          }\r\n          window.location.reload();\r\n        })\r\n      : (onClose = () => {\r\n          window.location.reload();\r\n        });\r\n    return (\r\n      <Modal isOpen={true} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent backgroundColor=\"#f1aaaa\" color=\"black\">\r\n          <ModalHeader>{error ? error.message : error2?.message}</ModalHeader>\r\n          <ModalCloseButton />\r\n        </ModalContent>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {!isAdmin ? (\r\n        data.registrationType === \"NONE\" ? (\r\n          <Box marginTop=\"2vh\" height=\"1vw\">\r\n            <Alert status=\"info\" size={\"xs\"}>\r\n              <AlertIcon />\r\n              Registration is not required for this event\r\n            </Alert>\r\n          </Box>\r\n        ) : (\r\n          <Box marginTop=\"2vh\" height=\"1vw\">\r\n            <Button\r\n              backgroundColor={buttoncolor}\r\n              color=\"black\"\r\n              onClick={\r\n                data.registrationType === \"INDIVIDUAL\"\r\n                  ? () => {\r\n                      IndividualReg(data.id);\r\n                    }\r\n                  : onOpen\r\n              }\r\n            >\r\n              REGISTER NOW\r\n            </Button>\r\n          </Box>\r\n        )\r\n      ) : null}\r\n      <Modal isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>Team Registration for {data.name}</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            <FormControl>\r\n              <FormLabel>Your Shaastra ID</FormLabel>\r\n              <Input type=\"text\"></Input>\r\n            </FormControl>\r\n            <FormControl marginTop=\"4vh\">\r\n              <RadioGroup onChange={setRadio} value={radio}>\r\n                <Radio value=\"i\" marginRight=\"2vw\">\r\n                  Register as Individual\r\n                </Radio>\r\n                <Radio value=\"t\">Register as Team</Radio>\r\n              </RadioGroup>\r\n            </FormControl>\r\n            <FormControl marginTop=\"1.5vh\" isRequired>\r\n              <FormLabel>Team Name</FormLabel>\r\n              <Input\r\n                type=\"text\"\r\n                value={teamname}\r\n                onChange={(e) => setTeamname(e.target.value)}\r\n              ></Input>\r\n              {radio === \"t\" ? (\r\n                <React.Fragment>\r\n                  <FormLabel marginTop=\"1.5vh\">\r\n                    Team Members Shaastra IDs\r\n                  </FormLabel>\r\n                  {members.map((member, index) => {\r\n                    return (\r\n                      <React.Fragment key={index}>\r\n                        <Flex width={\"100%\"}>\r\n                          <FormControl isRequired>\r\n                            <Flex width=\"100%\" justifyContent=\"space-between\">\r\n                              <Input\r\n                                id={\"member\" + index}\r\n                                placeholder={`Team Member ${\r\n                                  index + 1\r\n                                } Shaastra ID`}\r\n                                required\r\n                                onChange={(event) =>\r\n                                  handleMembersInput({ index, event })\r\n                                }\r\n                              ></Input>\r\n                            </Flex>\r\n                          </FormControl>\r\n\r\n                          <Flex p={[0, 3]} flexDirection={[\"column\", \"row\"]}>\r\n                            {index === 0 ? null : (\r\n                              <Button\r\n                                mx={2}\r\n                                my={1}\r\n                                size={\"xs\"}\r\n                                onClick={() => {\r\n                                  const values = [...members];\r\n                                  values.splice(index, 1);\r\n                                  setMembers(values);\r\n                                }}\r\n                              >\r\n                                <MinusIcon />\r\n                              </Button>\r\n                            )}\r\n                            {index >= data.teamSize - 2 ? null : (\r\n                              <Button\r\n                                mx={2}\r\n                                my={1}\r\n                                size={\"xs\"}\r\n                                onClick={() => {\r\n                                  if (members.length < data.teamSize - 1) {\r\n                                    setMembers([...members, \"\"]);\r\n                                  }\r\n                                }}\r\n                              >\r\n                                <AddIcon />\r\n                              </Button>\r\n                            )}\r\n                          </Flex>\r\n                        </Flex>\r\n                      </React.Fragment>\r\n                    );\r\n                  })}\r\n                  <FormLabel>Max team size :{data.teamSize}</FormLabel>\r\n                </React.Fragment>\r\n              ) : null}\r\n            </FormControl>\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button\r\n              colorScheme=\"blue\"\r\n              mr={3}\r\n              onClick={() => Teamregistration(data.id)}\r\n            >\r\n              Register\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterNow;\r\n","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\ShaastraJuniors\\SJEvent.tsx",[],"F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\ShaastraJuniors\\Data.tsx",[],"F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\styles\\themes\\ColorModeSwitcher.tsx",[],"F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\shared\\Drawer\\CustomDrawer.tsx",[],"F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Events and Workshops\\PayRegister.tsx",["601"],"import React from \"react\";\r\nimport {\r\n  RegisterMutation,\r\n  useUpdateEventPayMutation,\r\n} from \"../../../generated/graphql\";\r\nimport dotenv from \"dotenv\";\r\nimport {\r\n  Modal,\r\n  ModalCloseButton,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalOverlay,\r\n} from \"@chakra-ui/react\";\r\n\r\ndotenv.config();\r\n\r\ninterface Probs {\r\n  data: RegisterMutation[\"register\"][\"eventPay\"];\r\n}\r\n\r\nfunction loadScript(src: string) {\r\n  return new Promise((resolve) => {\r\n    const script = document.createElement(\"script\");\r\n    script.src = src;\r\n    script.onload = () => {\r\n      resolve(true);\r\n    };\r\n    script.onerror = () => {\r\n      resolve(false);\r\n    };\r\n    document.body.appendChild(script);\r\n  });\r\n}\r\n\r\n/******** Callback Functions ********/\r\nconst PayRegister = ({ data }: Probs) => {\r\n  /******** Mutation Hook ********/\r\n  const [updateEventPayMutation, { data: updateEventPayData, loading, error }] =\r\n    useUpdateEventPayMutation();\r\n\r\n  React.useEffect(() => {\r\n    loadRazorpay();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const loadRazorpay = async () => {\r\n    /******** Load Razorpay Script ********/\r\n    const res = await loadScript(\r\n      \"https://checkout.razorpay.com/v1/checkout.js\"\r\n    );\r\n    if (!res) {\r\n      alert(\"Razorpay SDK failed to load\");\r\n      return;\r\n    }\r\n\r\n    /******** Razorpay Options ********/\r\n    const options = {\r\n      key: process.env.REACT_APP_RAZORPAY_KEY,\r\n      amount: data?.amount,\r\n      currency: \"INR\",\r\n      name: data?.event.name,\r\n      image: \"\", //TODO: Add the shaastra link here\r\n      order_id: data?.orderId,\r\n\r\n      /******** Handler function to update the payment details ********/\r\n      handler: async function (response: any) {\r\n        try {\r\n          await updateEventPayMutation({\r\n            variables: {\r\n              eventId: data?.event.id!,\r\n              data: {\r\n                orderId: response.razorpay_order_id,\r\n                payementId: response.razorpay_payment_id,\r\n                paymentSignature: response.razorpay_signature,\r\n              },\r\n            },\r\n          });\r\n        } catch (e) {\r\n          console.log(e);\r\n        }\r\n      },\r\n      prefill: {\r\n        name: data?.user.name,\r\n        email: data?.user.email,\r\n        contact: data?.user.mobile,\r\n      },\r\n      notes: {\r\n        address: data?.user.address,\r\n      },\r\n      theme: {\r\n        color: \"#3399cc\",\r\n      },\r\n    };\r\n\r\n    /******** Open Razorpay ********/\r\n    const rzp1 = new (window as any).Razorpay(options);\r\n    rzp1.open();\r\n  };\r\n\r\n  if (updateEventPayData?.updateEventPay) {\r\n    const onClose = () => {\r\n      window.location.reload();\r\n    };\r\n    return (\r\n      <Modal isOpen={true} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent backgroundColor=\"#addfd0\" color=\"black\">\r\n          <ModalHeader>Registrated Successfully</ModalHeader>\r\n          <ModalCloseButton />\r\n        </ModalContent>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  if (error)\r\n    return (\r\n      <Modal isOpen={true} onClose={() => window.location.reload()}>\r\n        <ModalOverlay />\r\n        <ModalContent backgroundColor=\"#f1aaaa\" color=\"black\">\r\n          <ModalHeader>Some error occurred.{error?.message}</ModalHeader>\r\n          <ModalCloseButton />\r\n        </ModalContent>\r\n      </Modal>\r\n    );\r\n\r\n  return (\r\n    <Modal isOpen={true} onClose={() => window.location.reload()}>\r\n      <ModalOverlay />\r\n      <ModalContent backgroundColor=\"#e2e19c\" color=\"black\">\r\n        <ModalHeader>Loading...</ModalHeader>\r\n        <ModalCloseButton />\r\n      </ModalContent>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default PayRegister;\r\n","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\shared\\Drawer\\DrawerMenuItems.tsx",["602","603","604"],"import {\r\n  Accordion,\r\n  AccordionButton,\r\n  AccordionItem,\r\n  AccordionPanel,\r\n} from \"@chakra-ui/accordion\";\r\nimport { Flex, Spacer, Text as Box } from \"@chakra-ui/layout\";\r\nimport { time } from \"console\";\r\nimport React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { textChangeRangeNewSpan } from \"typescript\";\r\nimport { Button } from \"@chakra-ui/button\";\r\nimport { UserRole } from \"../../../generated/graphql\";\r\n\r\nexport const DrawerDesktopMenuItems = () => {\r\n  const [menu, setMenu] = useState<string>(\"e&w\");\r\n\r\n  const history = useHistory()\r\n\r\n  const menuItems = () => {\r\n    switch (menu) {\r\n      case \"exhibitions\":\r\n        return (\r\n          <>\r\n            <Link\r\n              style={{\r\n                textAlign: \"center\",\r\n                width: \"60%\",\r\n                borderRadius: 8,\r\n                padding: 5,\r\n                marginBottom: 5,\r\n                fontSize: 24,\r\n                background: \"#00000028\",\r\n              }}\r\n              to=\"/exhibitions\"\r\n            ></Link>\r\n          </>\r\n        );\r\n      case \"shaastra-nights\":\r\n        return (\r\n          <>\r\n            <Flex flexDirection=\"column\" justifyContent=\"flex-start\">\r\n              <Box\r\n                letterSpacing=\"normal\"\r\n                padding-left=\"8px\"\r\n                _hover={{\r\n                  padding: \"8px\",\r\n                  fontSize: \"26\",\r\n                  letterSpacing: \"6px\",\r\n                }}\r\n              >\r\n                <Link\r\n                  style={{\r\n                    textAlign: \"center\",\r\n                    width: \"60%\",\r\n                    borderRadius: 8,\r\n                    padding: 8,\r\n                    marginBottom: 5,\r\n                    fontSize: 24,\r\n                    background: \"#00000028\",\r\n                  }}\r\n                  to=\"/shows\"\r\n                >\r\n                  Shows\r\n                </Link>\r\n              </Box>\r\n              <Box\r\n                letterSpacing=\"normal\"\r\n                _hover={{\r\n                  padding: \"8px\",\r\n                  fontSize: \"26\",\r\n                  letterSpacing: \"6px\",\r\n                }}\r\n              >\r\n                <Link\r\n                  style={{\r\n                    textAlign: \"center\",\r\n                    width: \"60%\",\r\n                    borderRadius: 8,\r\n                    padding: 8,\r\n                    marginBottom: 5,\r\n                    fontSize: 24,\r\n                    background: \"#00000028\",\r\n                  }}\r\n                  to=\"/envisage\"\r\n                >\r\n                  Envisage\r\n                </Link>\r\n              </Box>\r\n            </Flex>\r\n          </>\r\n        );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Flex\r\n        flexDirection=\"column\"\r\n        justifyContent=\"flex-start\"\r\n        height=\"90%\"\r\n        flex={1}\r\n      >\r\n        <Box\r\n          className=\"menu-text\"\r\n          _hover={{ color: \"#cccccc\", padding: \"8px\", letterSpacing: \"7px\" }}\r\n          onMouseOver={() => setMenu(\"Home\")}\r\n          fontSize={28}\r\n          fontFamily={\"monospace\"}\r\n          fontStyle={\"italic\"}\r\n          pl={6}\r\n          p={2}\r\n          pr={12}\r\n          mb={4}\r\n        >\r\n          <Link to=\"/\">Home</Link>\r\n        </Box>\r\n        <Box\r\n          className=\"menu-text\"\r\n          _hover={{ color: \"#cccccc\", padding: \"8px\", letterSpacing: \"7px\" }}\r\n          fontSize={28}\r\n          onMouseOver={() => setMenu(\"click\")}\r\n          fontFamily={\"monospace\"}\r\n          fontStyle={\"italic\"}\r\n          pl={6}\r\n          p={2}\r\n          pr={12}\r\n          mb={4}\r\n        >\r\n          <Link to=\"/eventsworkshops\">Events and Workshops</Link>\r\n        </Box>\r\n        <Box\r\n          className=\"menu-text\"\r\n          _hover={{ color: \"#cccccc\", padding: \"8px\", letterSpacing: \"7px\" }}\r\n          onMouseOver={() => setMenu(\"exhibitions\")}\r\n          fontSize={28}\r\n          fontFamily={\"monospace\"}\r\n          fontStyle={\"italic\"}\r\n          pl={6}\r\n          p={2}\r\n          pr={12}\r\n          mb={4}\r\n        >\r\n          <Link to=\"/exhibitions\">Exhibitions</Link>\r\n        </Box>\r\n        {/* <Box\r\n          className=\"menu-text\"\r\n          _hover={{ color: \"#cccccc\", padding: \"8px\", letterSpacing: \"7px\" }}\r\n          onMouseOver={() => setMenu(\"exhibitions\")}\r\n          fontSize={28}\r\n          fontFamily={\"monospace\"}\r\n          fontStyle={\"italic\"}\r\n          pl={6}\r\n          p={2}\r\n          pr={12}\r\n          mb={4}\r\n        >\r\n          <Link to=\"/events\">Events</Link>\r\n        </Box> */}\r\n        <Spacer />\r\n        <Box\r\n          className=\"menu-text\"\r\n          _hover={{\r\n            color: \"#cccccc\",\r\n            padding: \"8px\",\r\n            marginBottom: \"20px\",\r\n            letterSpacing: \"7px\",\r\n          }}\r\n          onMouseOver={() => setMenu(\"shaastra-nights\")}\r\n          fontSize={28}\r\n          fontFamily={\"monospace\"}\r\n          fontStyle={\"italic\"}\r\n          pl={6}\r\n          p={3}\r\n          pr={12}\r\n          mb={4}\r\n        >\r\n          Shaastra Nights\r\n          {menuItems()}\r\n        </Box>\r\n        <div style={{ color: \"white\", border: \"0.5px\" }} />\r\n        <Box\r\n          className=\"menu-text\"\r\n          _hover={{ color: \"#cccccc\", padding: \"8px\", letterSpacing: \"7px\" }}\r\n          onMouseOver={() => setMenu(\"schools\")}\r\n          fontSize={28}\r\n          fontFamily={\"monospace\"}\r\n          fontStyle={\"italic\"}\r\n          pl={6}\r\n          p={3}\r\n          pr={12}\r\n          mb={4}\r\n        >\r\n          <Link to=\"/shaastra-juniors\"> Schools</Link>\r\n        </Box>\r\n        <Box _hover={{}}></Box>\r\n        <Box\r\n          className=\"menu-text\"\r\n          _hover={{ color: \"#cccccc\", padding: \"8px\", letterSpacing: \"7px\" }}\r\n          onMouseOver={() => setMenu(\"click\")}\r\n          fontSize={28}\r\n          fontFamily={\"monospace\"}\r\n          fontStyle={\"italic\"}\r\n          pl={6}\r\n          p={3}\r\n          pr={12}\r\n          mb={4}\r\n        >\r\n          <Link to=\"/social-endeavours\">Social Endeavours</Link>\r\n        </Box>\r\n        <Box\r\n          className=\"menu-text\"\r\n          _hover={{ color: \"#cccccc\", padding: \"8px\", letterSpacing: \"7px\" }}\r\n          onMouseOver={() => setMenu(\"Click\")}\r\n          fontSize={28}\r\n          fontFamily={\"monospace\"}\r\n          fontStyle={\"italic\"}\r\n          pl={6}\r\n          p={3}\r\n          pr={12}\r\n          mb={4}\r\n        >\r\n          <Link to=\"/speakers\">Speakers</Link>\r\n        </Box>\r\n        <Box\r\n          className=\"menu-text\"\r\n          _hover={{ color: \"#cccccc\", padding: \"8px\", letterSpacing: \"7px\" }}\r\n          onMouseOver={() => setMenu(\"click\")}\r\n          fontSize={28}\r\n          fontFamily={\"monospace\"}\r\n          fontStyle={\"italic\"}\r\n          pl={6}\r\n          p={3}\r\n          pr={12}\r\n          mb={4}\r\n        >\r\n          <Link to=\"/sponsors\">Sponsors</Link>\r\n        </Box>\r\n        <Box\r\n          className=\"menu-text\"\r\n          _hover={{ color: \"#cccccc\", padding: \"8px\", letterSpacing: \"7px\" }}\r\n          onMouseOver={() => setMenu(\"click\")}\r\n          fontSize={28}\r\n          fontFamily={\"monospace\"}\r\n          fontStyle={\"italic\"}\r\n          pl={6}\r\n          p={3}\r\n          pr={12}\r\n          mb={4}\r\n        >\r\n          <Link to=\"/team\">Team</Link>\r\n        </Box>\r\n        {\r\n          localStorage.getItem(\"role\") === \"User\" || localStorage.getItem(\"role\") === \"Admin\" ? \r\n            <Box\r\n              className=\"menu-text\"\r\n              _hover={{ color: \"#cccccc\", padding: \"8px\", letterSpacing: \"7px\" }}\r\n              fontSize={28}\r\n              width=\"100%\"\r\n              fontFamily={\"monospace\"}\r\n              fontStyle={\"italic\"}\r\n              pl={6}\r\n              p={2}\r\n              pr={12}\r\n              mb={4}\r\n            >\r\n              <Button backgroundColor=\"#addfd0\" color=\"black\" width=\"100%\" onClick={(e:any) => {e.preventDefault(); history.push(\"/profile\") } }>Profile</Button>\r\n              <Button backgroundColor=\"#DB7171\" color=\"black\" width=\"100%\" onClick={(e:any) => {e.preventDefault(); history.push(\"/signout\") } }>Logout</Button>\r\n            </Box>\r\n          :\r\n            <Box\r\n            className=\"menu-text\"\r\n            width=\"100%\"\r\n            _hover={{ color: \"#cccccc\", padding: \"8px\", letterSpacing: \"7px\" }}\r\n            fontSize={28}\r\n            fontFamily={\"monospace\"}\r\n            fontStyle={\"italic\"}\r\n            pl={6}\r\n            p={2}\r\n            pr={12}\r\n            mb={4}\r\n          >\r\n            <Button backgroundColor=\"#addfd0\" color=\"black\" width=\"100%\" onClick={(e:any) => {e.preventDefault(); history.push(\"/login\") } }>Login</Button>\r\n          </Box>\r\n        }\r\n      </Flex>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const DrawerMobileMenuItems = () => {\r\n  const history = useHistory()\r\n  return (\r\n    <Flex\r\n      flexDirection=\"column\"\r\n      justifyContent=\"flex-start\"\r\n      height=\"90%\"\r\n      flex={1}\r\n    >\r\n      <Accordion allowToggle>\r\n        <Box fontSize={27} fontStyle={\"normal\"}>\r\n          <Link to=\"/\">Home</Link>\r\n        </Box>\r\n        <Box fontSize={27} fontStyle={\"normal\"}>\r\n          <Link to=\"/exhibitions\">Exhibitions</Link>\r\n        </Box>\r\n        <Box fontSize={27} fontStyle={\"normal\"}>\r\n          <Link to=\"/eventsworkshops\">Events and Workshops</Link>\r\n        </Box>\r\n        <AccordionItem border={0}>\r\n          <AccordionButton pl={0}>\r\n            <Box fontSize={27} fontStyle={\"normal\"}>\r\n              Shaastra Nights\r\n            </Box>\r\n          </AccordionButton>\r\n          <AccordionPanel>\r\n            <Box fontSize=\"xl\">\r\n              <Link to=\"/shows\">Shows</Link>\r\n            </Box>\r\n            <Box fontSize=\"xl\">\r\n              <Link to=\"/envisage\">Envisage</Link>\r\n            </Box>\r\n          </AccordionPanel>\r\n        </AccordionItem>\r\n        <AccordionItem border={0}>\r\n          <Box fontSize={27} fontStyle={\"normal\"}>\r\n            <Link to=\"/shaastra-juniors\">School</Link>\r\n          </Box>\r\n        </AccordionItem>\r\n        <Box p={2} pl={0} fontSize={27} fontStyle={\"normal\"}>\r\n          <Link to=\"/social-endeavours\">Social Endeavours</Link>\r\n        </Box>\r\n        <Box p={2} pl={0} fontSize={27} fontStyle={\"normal\"}>\r\n          <Link to=\"/speakers\">Speakers</Link>\r\n        </Box>\r\n        <Box p={2} pl={0} fontSize={27} fontStyle={\"normal\"}>\r\n          <Link to=\"/sponsors\">Sponsors</Link>\r\n        </Box>\r\n        <Box p={2} pl={0} fontSize={27} fontStyle={\"normal\"}>\r\n          <Link to=\"/team\">Team</Link>\r\n        </Box>\r\n      </Accordion>\r\n      {\r\n        localStorage.getItem(\"role\") === \"User\" || localStorage.getItem(\"role\") === \"Admin\" ? \r\n          <Box p={2} pl={0} fontSize={27} fontStyle={\"normal\"}>\r\n          <Button backgroundColor=\"#addfd0\" color=\"black\" width=\"100%\" onClick={(e:any) => {e.preventDefault(); history.push(\"/profile\") } }>Profile</Button>\r\n          <Button backgroundColor=\"#addfd0\" color=\"black\" width=\"100%\" onClick={(e:any) => {e.preventDefault(); history.push(\"/signout\") } }>Logout</Button>\r\n        </Box>\r\n        :\r\n          <Box p={2} pl={0} fontSize={27} fontStyle={\"normal\"}>\r\n          <Button backgroundColor=\"#addfd0\" color=\"black\" width=\"100%\" onClick={(e:any) => {e.preventDefault(); history.push(\"/login\") } }>Login</Button>\r\n        </Box>\r\n      }\r\n    </Flex>\r\n  );\r\n};\r\n","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Login\\branches.ts",[],"F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Login\\cities.ts",[],"F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Login\\college.ts",[],"F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Events and Workshops\\EventsData.tsx",[],"F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Team_page\\SliderImgBox.tsx",["605","606","607","608","609","610"],"import * as React from \"react\";\r\nimport { Flex } from \"@chakra-ui/react\";\r\nimport {\r\n  FaGithub,\r\n  FaTwitter,\r\n  FaLinkedin,\r\n  FaEnvelope,\r\n  FaWhatsapp,\r\n  FaInstagram,\r\n} from \"react-icons/fa\";\r\nimport \"../../../styles/Team_styles/SliderImgBox.css\";\r\n\r\n// import profileIMG from \"../../../images/profile.jpg\";\r\n\r\ninterface Props {\r\n  profile: {\r\n    name?: string;\r\n    role?: string;\r\n    desc?: string;\r\n    imgURL?: string;\r\n    social_links: {\r\n      twitter?: string;\r\n      linkedIn?: string;\r\n      instagram?: string;\r\n      shastraMailId?: string;\r\n      github?: string;\r\n      contact?: string;\r\n      facebook?: string;\r\n    };\r\n    mailId?: string;\r\n    dept?: string;\r\n  };\r\n}\r\n\r\nconst SliderImgBox = (props: Props) => {\r\n  return (\r\n    <div className=\"sliderImgBox\">\r\n      <div className=\"profileCard\">\r\n        <div className=\"profileCard_header\">\r\n          <div>\r\n            <h2>{props.profile.name}</h2>\r\n            <p>{props.profile.role}</p>\r\n          </div>\r\n          <Flex\r\n            width=\"140px\"\r\n            fontSize=\"20px\"\r\n            color=\"rgba(255,255,255)\"\r\n            justifyContent=\"space-evenly\"\r\n          >\r\n            <a\r\n              target=\"_blank\"\r\n              href={`https://api.whatsapp.com/send?phone=91${props.profile.social_links.contact}&text=&source=&data=&app_absent=`}\r\n            >\r\n              <FaWhatsapp />\r\n            </a>\r\n            <a target=\"_blank\" href={props.profile.social_links.linkedIn}>\r\n              <FaLinkedin />\r\n            </a>\r\n            <a\r\n              target=\"_blank\"\r\n              href={\"mailto:\" + props.profile.social_links.shastraMailId}\r\n            >\r\n              <FaEnvelope />\r\n            </a>\r\n          </Flex>\r\n        </div>\r\n        <div className=\"profileDescription\">{props.profile.desc}</div>\r\n      </div>\r\n      <div className=\"imgCover\">\r\n        <img src={props.profile.imgURL} alt={props.profile.imgURL} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SliderImgBox;\r\n","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Team_page\\Card.tsx",["611","612","613","614","615","616","617"],"import * as React from \"react\";\r\nimport { Flex } from \"@chakra-ui/react\";\r\nimport {\r\n  FaGithub,\r\n  FaTwitter,\r\n  FaLinkedin,\r\n  FaEnvelope,\r\n  FaQuoteLeft,\r\n  FaQuoteRight,\r\n  FaWhatsappSquare,\r\n  FaWhatsapp,\r\n  FaInstagram,\r\n} from \"react-icons/fa\";\r\n// import profile from \"../../../images/profile.jpg\";\r\nimport \"../../../styles/Team_styles/Card.css\";\r\n\r\ninterface Props {\r\n  type: string;\r\n  profile: {\r\n    name?: string;\r\n    role?: string;\r\n    desc?: string;\r\n    imgURL?: string;\r\n    social_links: {\r\n      twitter?: string;\r\n      linkedIn?: string;\r\n      instagram?: string;\r\n      shastraMailId?: string;\r\n      github?: string;\r\n      contact?: string;\r\n      facebook?: string;\r\n    };\r\n    mailId?: string;\r\n    dept?: string;\r\n  };\r\n}\r\n\r\nconst Card = (props: Props) => {\r\n  return (\r\n    <div\r\n      className=\"Card\"\r\n      style={\r\n        props.type === \"all\" || props.type === props.profile.dept\r\n          ? { transform: \"scale(1)\", display: \"block\" }\r\n          : { transform: \"scale(0)\", display: \"none\" }\r\n      }\r\n    >\r\n      <div className=\"imageBox\">\r\n        <img src={props.profile.imgURL} alt=\"\" />\r\n        <div className=\"profileDescription\">\r\n          <FaQuoteLeft />\r\n          <p>{props.profile.desc}</p>\r\n          <FaQuoteRight />\r\n        </div>\r\n      </div>\r\n      <div className=\"profileCard\">\r\n        <div>\r\n          <h2>{props.profile.name}</h2>\r\n          <p>{props.profile.dept}</p>\r\n        </div>\r\n        <Flex\r\n          width=\"100%\"\r\n          fontSize=\"20px\"\r\n          p={3}\r\n          color=\"#111\"\r\n          justifyContent=\"space-evenly\"\r\n        >\r\n          <a\r\n            target=\"_blank\"\r\n            href={`https://api.whatsapp.com/send?phone=91${props.profile.social_links.contact}&text=&source=&data=&app_absent=`}\r\n          >\r\n            <FaWhatsapp />\r\n          </a>\r\n          <a target=\"_blank\" href={props.profile.social_links.linkedIn}>\r\n            <FaLinkedin />\r\n          </a>\r\n          <a\r\n            target=\"_blank\"\r\n            href={\"mailto:\" + props.profile.social_links.shastraMailId}\r\n          >\r\n            <FaEnvelope />\r\n          </a>\r\n        </Flex>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Team_page\\photos.tsx",["618"],"import be17b022 from \"../../../images/profiles/be17b022.jpg\";\r\nimport be18b013 from \"../../../images/profiles/be18b013.jpeg\";\r\nimport be18b026 from \"../../../images/profiles/be18b026.jpeg\";\r\nimport be19b012 from \"../../../images/profiles/be19b012.jpeg\";\r\nimport ce18b003 from \"../../../images/profiles/ce18b003.jpeg\";\r\nimport ce18b112 from \"../../../images/profiles/ce18b112.jpg\";\r\nimport ce19b029 from \"../../../images/profiles/ce19b029.jpg\";\r\nimport ch18b020 from \"../../../images/profiles/ch18b020.jpg\";\r\nimport ch18b036 from \"../../../images/profiles/ch18b036.jpg\";\r\nimport ch18b037 from \"../../../images/profiles/ch18b037.jpeg\";\r\nimport cs18b050 from \"../../../images/profiles/cs18b050.jpeg\";\r\nimport ed18b031 from \"../../../images/profiles/ed18b031.jpeg\";\r\nimport ed18b050 from \"../../../images/profiles/ed18b050.jpg\";\r\nimport ed18b053 from \"../../../images/profiles/ed18b053.jpg\";\r\nimport ed18b057 from \"../../../images/profiles/ed18b057.jpg\";\r\nimport ee18b022 from \"../../../images/profiles/ee18b022.jpg\";\r\nimport ee18b054 from \"../../../images/profiles/ee18b054.jpeg\";\r\nimport ee18b138 from \"../../../images/profiles/ee18b138.jpg\";\r\nimport ep18b005 from \"../../../images/profiles/ep18b005.jpg\";\r\nimport ep18b006 from \"../../../images/profiles/ep18b006.jpg\";\r\nimport me18b145 from \"../../../images/profiles/me18b145.jpg\";\r\nimport be19b009 from \"../../../images/profiles/be19b009.jpeg\";\r\nimport ce18b060 from \"../../../images/profiles/ce18b060.jpg\";\r\n\r\nexport default {\r\n  be19b009,\r\n  ce18b060,\r\n  be17b022,\r\n  be18b013,\r\n  be18b026,\r\n  be19b012,\r\n  ce18b003,\r\n  ce18b112,\r\n  ce19b029,\r\n  ch18b020,\r\n  ch18b036,\r\n  ch18b037,\r\n  cs18b050,\r\n  ed18b031,\r\n  ed18b050,\r\n  ed18b053,\r\n  ed18b057,\r\n  ee18b022,\r\n  ee18b054,\r\n  ee18b138,\r\n  ep18b005,\r\n  ep18b006,\r\n  me18b145,\r\n};\r\n","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\socialEndeavours\\CustomBoxSE.tsx",[],"F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\socialEndeavours\\script.tsx",["619"],"import { useColorModeValue } from \"@chakra-ui/color-mode\";\r\nconst Events = () => {\r\n   \r\n     window.onload =  (e) => {\r\n        var body: HTMLElement  = document.querySelector(\".social\")!;\r\n        console.log(body)\r\n        if(body !== null)\r\n        {\r\n            document.addEventListener(\"scroll\", () => {\r\n\r\n                var sheCan: HTMLElement = document.querySelector(\".she-can-backdiv\")!;\r\n                if(sheCan)\r\n               {\r\n                    var dist = window.innerHeight - sheCan.getBoundingClientRect().top;\r\n                    if(dist > 150)\r\n                    {\r\n                        console.log(sheCan.style.transform)\r\n                        sheCan.style.transform = \"translate(-5%,5%)\";\r\n                        sheCan.style.transition = \"all 0.5s ease\";\r\n                    }\r\n                    var slidehead: HTMLElement = document.querySelector(\".recog-heading\")!;\r\n                dist = window.innerHeight - slidehead.getBoundingClientRect().top;\r\n                if(dist > 30)\r\n                {\r\n                    slidehead.style.animation = \"headslide 2s ease\";    \r\n                }\r\n        \r\n                var slideIn: HTMLElement = document.querySelector(\".one\")!;\r\n                dist = window.innerHeight - slideIn.getBoundingClientRect().top;\r\n                if(dist > 30) slideIn.style.animation = \"headslide 2s ease\";\r\n        \r\n                slideIn = document.querySelector(\".two\")!;\r\n                dist = window.innerHeight - slideIn.getBoundingClientRect().top;\r\n                if(dist > 50) slideIn.style.animation = \"headslideRev 2s ease \";\r\n        \r\n                slideIn = document.querySelector(\".three\")!;\r\n                dist = window.innerHeight - slideIn.getBoundingClientRect().top;\r\n                if(dist > 30) slideIn.style.animation = \"headslide 2s ease\";\r\n        \r\n                slideIn = document.querySelector(\".four\")!;\r\n                dist = window.innerHeight - slideIn.getBoundingClientRect().top;\r\n                if(dist > 30) slideIn.style.animation = \"headslideRev 2s ease\";\r\n        \r\n        \r\n                var past: HTMLElement = document.querySelector(\".past\")!;\r\n                dist = window.innerHeight - past.getBoundingClientRect().top;\r\n                if(dist > 0) past.style.animation = \"headslide 3s ease\"\r\n               }\r\n        \r\n                \r\n\r\n        \r\n            })\r\n        }\r\n    \r\n    }\r\n    \r\n}\r\n\r\nexport default Events",["620","621"],"F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Exhibitions\\Exhibitionsdata.tsx",["622"],"import EXHB1 from \"../../../images/Exhibitions/exhb_1.png\";\r\nimport EXHB3 from \"../../../images/Exhibitions/exhb_3.png\";\r\nimport EXHB4 from \"../../../images/Exhibitions/exhb_4.png\";\r\nimport EXHB5 from \"../../../images/Exhibitions/exhb_5.png\";\r\nimport EXHB6 from \"../../../images/Exhibitions/exhb_6.png\";\r\nimport EXHB7 from \"../../../images/Exhibitions/exhb_7.png\";\r\nimport EXHB8 from \"../../../images/Exhibitions/exhb_8.png\";\r\nimport EXHB9 from \"../../../images/Exhibitions/exhb_9.png\";\r\nimport EXHB10 from \"../../../images/Exhibitions/exhb_10.png\";\r\nimport EXHB11 from \"../../../images/Exhibitions/exhb_11.png\";\r\nimport EXHB12 from \"../../../images/Exhibitions/exhb_12.png\";\r\nimport EXHB13 from \"../../../images/Exhibitions/exhb_13.png\";\r\n\r\nexport const CauroselImages = [EXHB3,EXHB4,EXHB9,EXHB10,EXHB11,EXHB12];\r\n\r\nexport const Titlevariants = {\r\n  lhidden:{\r\n    x: \"-100vw\" \r\n  },\r\n  final : {\r\n    x: 0,\r\n    transition:{\r\n      duration : \"1\",\r\n    }\r\n  },\r\n  \r\n}\r\n\r\nexport const AboutusVariants = {\r\n  hidden : {\r\n    opacity : 0\r\n  },\r\n  visible : {\r\n    opacity : 1,\r\n    transition:{\r\n      duration : \"2\",\r\n      delay : 1\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport const AboutusData = `Shaastra Exhibitions is a platform to showcase cutting Edge technology.\r\nExhibitions provide an opportunity for a large number of buyers and sellers in an industry to interact with\r\neach other.\r\nThey are responsible for conveying the ideas of the participants from a \r\n technologically practical perspective and as well as give the audience a \r\n glimpse into the  latest developments in technology\r\n They offer an unparalleled and ideal opportunity to showcase innovative products to a broad\r\nspectrum of people.`;\r\n\r\ninterface exhibitions{\r\n    id: string,\r\n    year : string,\r\n    title : string,\r\n    description ?: string,\r\n    image : string\r\n}\r\n\r\nexport const exhibitions : exhibitions[] =[\r\n    {\r\n      id : \"1\",\r\n      year:\"2016\",\r\n      title : \"Vintage Car Exhibition\",\r\n      description : `In collaboration with the Madras Heritage Motoring Club,\r\n       We Presented  a vintage car exhibition. Some automobiles such as, Austin 8, 1952 Topolino, which\r\n       brought about revolution in the industry was presented. `,\r\n      image : EXHB1\r\n    },\r\n    {\r\n      id : \"2\",\r\n      year:\"2017\",\r\n      title : \" NAO: Autonomous humanoid Robot\",\r\n      description:`Manav: India’s first 3D printed humanoid robot which was developed by \r\n      Diwakar Vaish of A-SET training institutes`,\r\n      image : EXHB13\r\n    },\r\n    {\r\n      id : \"3\",\r\n      year:\"2018\",\r\n      title : \"Defence and Aerospace models from ISRO\",\r\n      description:\"ISRO - GSLV and PSLV models were exhibited at Shaastra Exhibitions.\",\r\n      image : EXHB5\r\n    },\r\n    {\r\n      id : \"4\",\r\n      year:\"2018\",\r\n      title : \"Bike Expo\",\r\n      description : \"Shaastra 2018 unveiled the spectacular technological advancements in motorcycle history with its Bike Expo.\",\r\n      image : EXHB8\r\n    },\r\n    {\r\n      id:\"4\",\r\n      year : \"2019\",\r\n      title:\"International Expo\",\r\n      description : `Shaastra for the first time ever, presents International Exhibitions, in association with the US Consulate General of Chennai. \r\n      The International Exhibits was on three broad perspectives – Academics, Research and Business. `,\r\n      image : EXHB7\r\n    },\r\n    {\r\n      id:\"5\",\r\n      year : \"2020\",\r\n      title:\"Defence Expo\",\r\n      description:`The Defence Expo was an exhibition of the products of nascent defence technology start-ups,established\r\n      manufacturers,Defence PSUs and the Indian Armed Forces.It was conducted over the course of the 4 days of Shaastra 2020.\r\n      The Expo provided exposure to Defence Technology for the audience.`,\r\n      image : EXHB6\r\n    }\r\n  ];\r\n\r\n  ","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Exhibitions\\Card.tsx",[],"F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\night\\script.tsx",[],"F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\socialEndeavours\\HeaderSE.tsx",["623","624"],"import { ReactComponent as LogoBlack } from \"../../../images/logo/static/Main_logo_black.svg\"\r\nimport { ReactComponent as LogoWhite } from \"../../../images/logo/static/Main_logo_white.svg\"\r\nimport { useColorModeValue } from \"@chakra-ui/color-mode\";\r\nimport { useBreakpointValue } from \"@chakra-ui/media-query\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as React from \"react\";\r\nimport { Box, Flex } from \"@chakra-ui/layout\";\r\nimport CustomDrawer from \"../../shared/Drawer/CustomDrawer\";\r\nimport { useDisclosure } from \"@chakra-ui/hooks\";\r\nimport { ColorModeSwitcher } from \"./ColorModeSwitcherSE\";\r\nimport { HamburgerIcon } from \"@chakra-ui/icons\";\r\n\r\ninterface Props {}\r\n\r\nconst Header = (props: Props) => {\r\n    \r\n    const { onOpen, isOpen, onClose } = useDisclosure();\r\n    \r\n    const drawerOpenHandler = () => {\r\n      onOpen();\r\n    };\r\n\r\n    const HeaderLogo =LogoWhite;\r\n    const height = useBreakpointValue({ base: \"33\", lg: \"40\" })\r\n  return (\r\n    <Flex w=\"100vw\" position=\"absolute\" p={3} flexDirection=\"row\" justifyContent=\"space-between\" alignItems=\"center\" height=\"min\">\r\n      <CustomDrawer onClose={onClose} isOpen={isOpen} />\r\n      <Link to=\"/\" >\r\n        <HeaderLogo height={height} width=\"88\" />\r\n      </Link>\r\n      <Box>\r\n        <ColorModeSwitcher justifySelf=\"flex-end\" />\r\n        <HamburgerIcon w={{base: 6, lg: 8}} h={{base: 6, lg: 8}} m={3} onClick={drawerOpenHandler} color=\"white\" />\r\n      </Box>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\socialEndeavours\\ColorModeSwitcherSE.tsx",[],"F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Policies\\Refund.tsx",[],"F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Policies\\Shipping.tsx",[],"F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Policies\\TermsConditions.tsx",[],"F:\\ROHIT\\GitHub\\Shaastra gen website\\src\\components\\pages\\Policies\\Privacy.tsx",[],{"ruleId":"625","replacedBy":"626"},{"ruleId":"627","replacedBy":"628"},{"ruleId":"629","severity":1,"message":"630","line":6,"column":8,"nodeType":"631","messageId":"632","endLine":6,"endColumn":13},{"ruleId":"629","severity":1,"message":"633","line":15,"column":8,"nodeType":"631","messageId":"632","endLine":15,"endColumn":17},{"ruleId":"629","severity":1,"message":"634","line":9,"column":8,"nodeType":"631","messageId":"632","endLine":9,"endColumn":10},{"ruleId":"629","severity":1,"message":"635","line":10,"column":8,"nodeType":"631","messageId":"632","endLine":10,"endColumn":13},{"ruleId":"629","severity":1,"message":"636","line":2,"column":10,"nodeType":"631","messageId":"632","endLine":2,"endColumn":14},{"ruleId":"629","severity":1,"message":"637","line":2,"column":16,"nodeType":"631","messageId":"632","endLine":2,"endColumn":22},{"ruleId":"629","severity":1,"message":"638","line":2,"column":24,"nodeType":"631","messageId":"632","endLine":2,"endColumn":28},{"ruleId":"629","severity":1,"message":"639","line":2,"column":49,"nodeType":"631","messageId":"632","endLine":2,"endColumn":53},{"ruleId":"629","severity":1,"message":"640","line":55,"column":9,"nodeType":"631","messageId":"632","endLine":55,"endColumn":13},{"ruleId":"641","severity":1,"message":"642","line":202,"column":13,"nodeType":"643","messageId":"644","endLine":205,"endColumn":14,"fix":"645"},{"ruleId":"641","severity":1,"message":"642","line":209,"column":13,"nodeType":"643","messageId":"644","endLine":212,"endColumn":14,"fix":"646"},{"ruleId":"641","severity":1,"message":"642","line":216,"column":13,"nodeType":"643","messageId":"644","endLine":219,"endColumn":14,"fix":"647"},{"ruleId":"641","severity":1,"message":"642","line":484,"column":19,"nodeType":"643","messageId":"644","endLine":487,"endColumn":20,"fix":"648"},{"ruleId":"641","severity":1,"message":"642","line":500,"column":19,"nodeType":"643","messageId":"644","endLine":503,"endColumn":20,"fix":"649"},{"ruleId":"641","severity":1,"message":"642","line":514,"column":19,"nodeType":"643","messageId":"644","endLine":517,"endColumn":20,"fix":"650"},{"ruleId":"651","severity":1,"message":"652","line":528,"column":19,"nodeType":"643","endLine":528,"endColumn":46},{"ruleId":"651","severity":1,"message":"652","line":539,"column":19,"nodeType":"643","endLine":539,"endColumn":46},{"ruleId":"651","severity":1,"message":"652","line":549,"column":19,"nodeType":"643","endLine":549,"endColumn":46},{"ruleId":"641","severity":1,"message":"642","line":559,"column":19,"nodeType":"643","messageId":"644","endLine":562,"endColumn":20,"fix":"653"},{"ruleId":"629","severity":1,"message":"654","line":21,"column":10,"nodeType":"631","messageId":"632","endLine":21,"endColumn":17},{"ruleId":"655","severity":1,"message":"656","line":48,"column":6,"nodeType":"657","endLine":48,"endColumn":14,"suggestions":"658"},{"ruleId":"629","severity":1,"message":"639","line":10,"column":3,"nodeType":"631","messageId":"632","endLine":10,"endColumn":7},{"ruleId":"629","severity":1,"message":"659","line":20,"column":8,"nodeType":"631","messageId":"632","endLine":20,"endColumn":14},{"ruleId":"629","severity":1,"message":"660","line":24,"column":8,"nodeType":"631","messageId":"632","endLine":24,"endColumn":12},{"ruleId":"629","severity":1,"message":"661","line":29,"column":10,"nodeType":"631","messageId":"632","endLine":29,"endColumn":21},{"ruleId":"662","severity":1,"message":"663","line":138,"column":29,"nodeType":"664","messageId":"665","endLine":138,"endColumn":31},{"ruleId":"662","severity":1,"message":"663","line":247,"column":29,"nodeType":"664","messageId":"665","endLine":247,"endColumn":31},{"ruleId":"629","severity":1,"message":"666","line":7,"column":8,"nodeType":"631","messageId":"632","endLine":7,"endColumn":14},{"ruleId":"629","severity":1,"message":"667","line":11,"column":8,"nodeType":"631","messageId":"632","endLine":11,"endColumn":14},{"ruleId":"629","severity":1,"message":"668","line":12,"column":8,"nodeType":"631","messageId":"632","endLine":12,"endColumn":14},{"ruleId":"629","severity":1,"message":"669","line":21,"column":8,"nodeType":"631","messageId":"632","endLine":21,"endColumn":14},{"ruleId":"629","severity":1,"message":"670","line":23,"column":10,"nodeType":"631","messageId":"632","endLine":23,"endColumn":18},{"ruleId":"641","severity":1,"message":"642","line":169,"column":33,"nodeType":"643","messageId":"644","endLine":170,"endColumn":49,"fix":"671"},{"ruleId":"641","severity":1,"message":"642","line":175,"column":33,"nodeType":"643","messageId":"644","endLine":176,"endColumn":49,"fix":"672"},{"ruleId":"641","severity":1,"message":"642","line":181,"column":33,"nodeType":"643","messageId":"644","endLine":182,"endColumn":49,"fix":"673"},{"ruleId":"641","severity":1,"message":"642","line":201,"column":33,"nodeType":"643","messageId":"644","endLine":202,"endColumn":63,"fix":"674"},{"ruleId":"641","severity":1,"message":"642","line":227,"column":33,"nodeType":"643","messageId":"644","endLine":228,"endColumn":64,"fix":"675"},{"ruleId":"641","severity":1,"message":"642","line":237,"column":33,"nodeType":"643","messageId":"644","endLine":238,"endColumn":64,"fix":"676"},{"ruleId":"629","severity":1,"message":"636","line":2,"column":10,"nodeType":"631","messageId":"632","endLine":2,"endColumn":14},{"ruleId":"629","severity":1,"message":"637","line":2,"column":16,"nodeType":"631","messageId":"632","endLine":2,"endColumn":22},{"ruleId":"629","severity":1,"message":"638","line":2,"column":24,"nodeType":"631","messageId":"632","endLine":2,"endColumn":28},{"ruleId":"629","severity":1,"message":"639","line":2,"column":49,"nodeType":"631","messageId":"632","endLine":2,"endColumn":53},{"ruleId":"629","severity":1,"message":"640","line":19,"column":9,"nodeType":"631","messageId":"632","endLine":19,"endColumn":13},{"ruleId":"629","severity":1,"message":"677","line":342,"column":13,"nodeType":"631","messageId":"632","endLine":342,"endColumn":18},{"ruleId":"629","severity":1,"message":"639","line":5,"column":3,"nodeType":"631","messageId":"632","endLine":5,"endColumn":7},{"ruleId":"629","severity":1,"message":"678","line":11,"column":3,"nodeType":"631","messageId":"632","endLine":11,"endColumn":12},{"ruleId":"629","severity":1,"message":"679","line":9,"column":10,"nodeType":"631","messageId":"632","endLine":9,"endColumn":28},{"ruleId":"629","severity":1,"message":"680","line":10,"column":10,"nodeType":"631","messageId":"632","endLine":10,"endColumn":27},{"ruleId":"629","severity":1,"message":"681","line":5,"column":3,"nodeType":"631","messageId":"632","endLine":5,"endColumn":8},{"ruleId":"629","severity":1,"message":"682","line":15,"column":8,"nodeType":"631","messageId":"632","endLine":15,"endColumn":17},{"ruleId":"629","severity":1,"message":"683","line":17,"column":28,"nodeType":"631","messageId":"632","endLine":17,"endColumn":37},{"ruleId":"629","severity":1,"message":"684","line":18,"column":28,"nodeType":"631","messageId":"632","endLine":18,"endColumn":37},{"ruleId":"629","severity":1,"message":"685","line":20,"column":8,"nodeType":"631","messageId":"632","endLine":20,"endColumn":14},{"ruleId":"629","severity":1,"message":"636","line":3,"column":3,"nodeType":"631","messageId":"632","endLine":3,"endColumn":7},{"ruleId":"629","severity":1,"message":"686","line":12,"column":8,"nodeType":"631","messageId":"632","endLine":12,"endColumn":10},{"ruleId":"629","severity":1,"message":"639","line":3,"column":3,"nodeType":"631","messageId":"632","endLine":3,"endColumn":7},{"ruleId":"629","severity":1,"message":"639","line":5,"column":5,"nodeType":"631","messageId":"632","endLine":5,"endColumn":9},{"ruleId":"629","severity":1,"message":"687","line":6,"column":5,"nodeType":"631","messageId":"632","endLine":6,"endColumn":9},{"ruleId":"629","severity":1,"message":"688","line":9,"column":5,"nodeType":"631","messageId":"632","endLine":9,"endColumn":10},{"ruleId":"629","severity":1,"message":"689","line":10,"column":5,"nodeType":"631","messageId":"632","endLine":10,"endColumn":11},{"ruleId":"629","severity":1,"message":"690","line":12,"column":5,"nodeType":"631","messageId":"632","endLine":12,"endColumn":11},{"ruleId":"629","severity":1,"message":"691","line":22,"column":10,"nodeType":"631","messageId":"632","endLine":22,"endColumn":15},{"ruleId":"629","severity":1,"message":"692","line":23,"column":8,"nodeType":"631","messageId":"632","endLine":23,"endColumn":11},{"ruleId":"629","severity":1,"message":"693","line":30,"column":11,"nodeType":"631","messageId":"632","endLine":30,"endColumn":17},{"ruleId":"629","severity":1,"message":"694","line":31,"column":11,"nodeType":"631","messageId":"632","endLine":31,"endColumn":15},{"ruleId":"629","severity":1,"message":"695","line":32,"column":11,"nodeType":"631","messageId":"632","endLine":32,"endColumn":19},{"ruleId":"629","severity":1,"message":"696","line":33,"column":11,"nodeType":"631","messageId":"632","endLine":33,"endColumn":17},{"ruleId":"629","severity":1,"message":"697","line":35,"column":19,"nodeType":"631","messageId":"632","endLine":35,"endColumn":26},{"ruleId":"629","severity":1,"message":"698","line":35,"column":29,"nodeType":"631","messageId":"632","endLine":35,"endColumn":34},{"ruleId":"629","severity":1,"message":"699","line":41,"column":11,"nodeType":"631","messageId":"632","endLine":41,"endColumn":17},{"ruleId":"629","severity":1,"message":"636","line":3,"column":3,"nodeType":"631","messageId":"632","endLine":3,"endColumn":7},{"ruleId":"629","severity":1,"message":"687","line":6,"column":3,"nodeType":"631","messageId":"632","endLine":6,"endColumn":7},{"ruleId":"629","severity":1,"message":"688","line":12,"column":3,"nodeType":"631","messageId":"632","endLine":12,"endColumn":8},{"ruleId":"629","severity":1,"message":"700","line":21,"column":3,"nodeType":"631","messageId":"632","endLine":21,"endColumn":14},{"ruleId":"629","severity":1,"message":"701","line":22,"column":3,"nodeType":"631","messageId":"632","endLine":22,"endColumn":12},{"ruleId":"629","severity":1,"message":"702","line":59,"column":10,"nodeType":"631","messageId":"632","endLine":59,"endColumn":15},{"ruleId":"629","severity":1,"message":"703","line":59,"column":17,"nodeType":"631","messageId":"632","endLine":59,"endColumn":25},{"ruleId":"629","severity":1,"message":"704","line":65,"column":23,"nodeType":"631","messageId":"632","endLine":65,"endColumn":37},{"ruleId":"629","severity":1,"message":"705","line":82,"column":9,"nodeType":"631","messageId":"632","endLine":82,"endColumn":21},{"ruleId":"629","severity":1,"message":"706","line":125,"column":9,"nodeType":"631","messageId":"632","endLine":125,"endColumn":15},{"ruleId":"629","severity":1,"message":"707","line":125,"column":17,"nodeType":"631","messageId":"632","endLine":125,"endColumn":23},{"ruleId":"662","severity":1,"message":"708","line":549,"column":25,"nodeType":"664","messageId":"665","endLine":549,"endColumn":27},{"ruleId":"629","severity":1,"message":"687","line":6,"column":5,"nodeType":"631","messageId":"632","endLine":6,"endColumn":9},{"ruleId":"629","severity":1,"message":"688","line":12,"column":5,"nodeType":"631","messageId":"632","endLine":12,"endColumn":10},{"ruleId":"629","severity":1,"message":"680","line":17,"column":5,"nodeType":"631","messageId":"632","endLine":17,"endColumn":22},{"ruleId":"629","severity":1,"message":"700","line":22,"column":5,"nodeType":"631","messageId":"632","endLine":22,"endColumn":16},{"ruleId":"629","severity":1,"message":"701","line":23,"column":5,"nodeType":"631","messageId":"632","endLine":23,"endColumn":14},{"ruleId":"629","severity":1,"message":"709","line":38,"column":7,"nodeType":"631","messageId":"632","endLine":38,"endColumn":17},{"ruleId":"629","severity":1,"message":"710","line":39,"column":7,"nodeType":"631","messageId":"632","endLine":39,"endColumn":19},{"ruleId":"629","severity":1,"message":"704","line":69,"column":25,"nodeType":"631","messageId":"632","endLine":69,"endColumn":39},{"ruleId":"629","severity":1,"message":"706","line":117,"column":11,"nodeType":"631","messageId":"632","endLine":117,"endColumn":17},{"ruleId":"629","severity":1,"message":"707","line":117,"column":19,"nodeType":"631","messageId":"632","endLine":117,"endColumn":25},{"ruleId":"629","severity":1,"message":"681","line":4,"column":5,"nodeType":"631","messageId":"632","endLine":4,"endColumn":10},{"ruleId":"629","severity":1,"message":"711","line":12,"column":5,"nodeType":"631","messageId":"632","endLine":12,"endColumn":14},{"ruleId":"629","severity":1,"message":"712","line":13,"column":5,"nodeType":"631","messageId":"632","endLine":13,"endColumn":16},{"ruleId":"629","severity":1,"message":"700","line":20,"column":5,"nodeType":"631","messageId":"632","endLine":20,"endColumn":16},{"ruleId":"629","severity":1,"message":"706","line":56,"column":11,"nodeType":"631","messageId":"632","endLine":56,"endColumn":17},{"ruleId":"629","severity":1,"message":"707","line":56,"column":19,"nodeType":"631","messageId":"632","endLine":56,"endColumn":25},{"ruleId":"629","severity":1,"message":"681","line":1,"column":21,"nodeType":"631","messageId":"632","endLine":1,"endColumn":26},{"ruleId":"629","severity":1,"message":"713","line":1,"column":50,"nodeType":"631","messageId":"632","endLine":1,"endColumn":57},{"ruleId":"629","severity":1,"message":"698","line":17,"column":18,"nodeType":"631","messageId":"632","endLine":17,"endColumn":23},{"ruleId":"629","severity":1,"message":"697","line":17,"column":26,"nodeType":"631","messageId":"632","endLine":17,"endColumn":33},{"ruleId":"629","severity":1,"message":"681","line":4,"column":5,"nodeType":"631","messageId":"632","endLine":4,"endColumn":10},{"ruleId":"629","severity":1,"message":"711","line":11,"column":5,"nodeType":"631","messageId":"632","endLine":11,"endColumn":14},{"ruleId":"629","severity":1,"message":"712","line":12,"column":5,"nodeType":"631","messageId":"632","endLine":12,"endColumn":16},{"ruleId":"629","severity":1,"message":"700","line":19,"column":5,"nodeType":"631","messageId":"632","endLine":19,"endColumn":16},{"ruleId":"629","severity":1,"message":"714","line":30,"column":10,"nodeType":"631","messageId":"632","endLine":30,"endColumn":20},{"ruleId":"629","severity":1,"message":"706","line":44,"column":11,"nodeType":"631","messageId":"632","endLine":44,"endColumn":17},{"ruleId":"629","severity":1,"message":"707","line":44,"column":19,"nodeType":"631","messageId":"632","endLine":44,"endColumn":25},{"ruleId":"629","severity":1,"message":"636","line":3,"column":5,"nodeType":"631","messageId":"632","endLine":3,"endColumn":9},{"ruleId":"629","severity":1,"message":"715","line":9,"column":4,"nodeType":"631","messageId":"632","endLine":9,"endColumn":9},{"ruleId":"629","severity":1,"message":"688","line":10,"column":5,"nodeType":"631","messageId":"632","endLine":10,"endColumn":10},{"ruleId":"629","severity":1,"message":"680","line":12,"column":5,"nodeType":"631","messageId":"632","endLine":12,"endColumn":22},{"ruleId":"629","severity":1,"message":"716","line":13,"column":5,"nodeType":"631","messageId":"632","endLine":13,"endColumn":10},{"ruleId":"629","severity":1,"message":"717","line":14,"column":5,"nodeType":"631","messageId":"632","endLine":14,"endColumn":17},{"ruleId":"629","severity":1,"message":"718","line":15,"column":5,"nodeType":"631","messageId":"632","endLine":15,"endColumn":17},{"ruleId":"629","severity":1,"message":"719","line":16,"column":5,"nodeType":"631","messageId":"632","endLine":16,"endColumn":16},{"ruleId":"629","severity":1,"message":"700","line":17,"column":5,"nodeType":"631","messageId":"632","endLine":17,"endColumn":16},{"ruleId":"629","severity":1,"message":"701","line":18,"column":5,"nodeType":"631","messageId":"632","endLine":18,"endColumn":14},{"ruleId":"629","severity":1,"message":"720","line":19,"column":5,"nodeType":"631","messageId":"632","endLine":19,"endColumn":21},{"ruleId":"629","severity":1,"message":"721","line":20,"column":5,"nodeType":"631","messageId":"632","endLine":20,"endColumn":18},{"ruleId":"629","severity":1,"message":"722","line":22,"column":10,"nodeType":"631","messageId":"632","endLine":22,"endColumn":17},{"ruleId":"629","severity":1,"message":"723","line":22,"column":19,"nodeType":"631","messageId":"632","endLine":22,"endColumn":28},{"ruleId":"629","severity":1,"message":"724","line":32,"column":12,"nodeType":"631","messageId":"632","endLine":32,"endColumn":17},{"ruleId":"629","severity":1,"message":"725","line":32,"column":19,"nodeType":"631","messageId":"632","endLine":32,"endColumn":27},{"ruleId":"629","severity":1,"message":"697","line":34,"column":18,"nodeType":"631","messageId":"632","endLine":34,"endColumn":25},{"ruleId":"629","severity":1,"message":"698","line":34,"column":27,"nodeType":"631","messageId":"632","endLine":34,"endColumn":32},{"ruleId":"629","severity":1,"message":"726","line":1,"column":17,"nodeType":"631","messageId":"632","endLine":1,"endColumn":26},{"ruleId":"629","severity":1,"message":"715","line":7,"column":5,"nodeType":"631","messageId":"632","endLine":7,"endColumn":10},{"ruleId":"629","severity":1,"message":"727","line":9,"column":5,"nodeType":"631","messageId":"632","endLine":9,"endColumn":15},{"ruleId":"629","severity":1,"message":"728","line":10,"column":5,"nodeType":"631","messageId":"632","endLine":10,"endColumn":10},{"ruleId":"629","severity":1,"message":"680","line":13,"column":5,"nodeType":"631","messageId":"632","endLine":13,"endColumn":22},{"ruleId":"629","severity":1,"message":"700","line":18,"column":5,"nodeType":"631","messageId":"632","endLine":18,"endColumn":16},{"ruleId":"629","severity":1,"message":"701","line":19,"column":5,"nodeType":"631","messageId":"632","endLine":19,"endColumn":14},{"ruleId":"629","severity":1,"message":"712","line":22,"column":5,"nodeType":"631","messageId":"632","endLine":22,"endColumn":16},{"ruleId":"629","severity":1,"message":"711","line":23,"column":5,"nodeType":"631","messageId":"632","endLine":23,"endColumn":14},{"ruleId":"629","severity":1,"message":"729","line":24,"column":5,"nodeType":"631","messageId":"632","endLine":24,"endColumn":21},{"ruleId":"629","severity":1,"message":"730","line":25,"column":5,"nodeType":"631","messageId":"632","endLine":25,"endColumn":19},{"ruleId":"629","severity":1,"message":"690","line":27,"column":5,"nodeType":"631","messageId":"632","endLine":27,"endColumn":11},{"ruleId":"629","severity":1,"message":"731","line":35,"column":5,"nodeType":"631","messageId":"632","endLine":35,"endColumn":18},{"ruleId":"629","severity":1,"message":"732","line":36,"column":5,"nodeType":"631","messageId":"632","endLine":36,"endColumn":16},{"ruleId":"629","severity":1,"message":"722","line":38,"column":10,"nodeType":"631","messageId":"632","endLine":38,"endColumn":17},{"ruleId":"629","severity":1,"message":"723","line":38,"column":19,"nodeType":"631","messageId":"632","endLine":38,"endColumn":28},{"ruleId":"629","severity":1,"message":"670","line":39,"column":10,"nodeType":"631","messageId":"632","endLine":39,"endColumn":18},{"ruleId":"629","severity":1,"message":"692","line":45,"column":8,"nodeType":"631","messageId":"632","endLine":45,"endColumn":11},{"ruleId":"629","severity":1,"message":"706","line":64,"column":11,"nodeType":"631","messageId":"632","endLine":64,"endColumn":17},{"ruleId":"629","severity":1,"message":"707","line":64,"column":19,"nodeType":"631","messageId":"632","endLine":64,"endColumn":25},{"ruleId":"629","severity":1,"message":"681","line":4,"column":5,"nodeType":"631","messageId":"632","endLine":4,"endColumn":10},{"ruleId":"629","severity":1,"message":"687","line":6,"column":5,"nodeType":"631","messageId":"632","endLine":6,"endColumn":9},{"ruleId":"629","severity":1,"message":"711","line":11,"column":5,"nodeType":"631","messageId":"632","endLine":11,"endColumn":14},{"ruleId":"629","severity":1,"message":"712","line":12,"column":5,"nodeType":"631","messageId":"632","endLine":12,"endColumn":16},{"ruleId":"629","severity":1,"message":"700","line":19,"column":5,"nodeType":"631","messageId":"632","endLine":19,"endColumn":16},{"ruleId":"629","severity":1,"message":"733","line":29,"column":22,"nodeType":"631","messageId":"632","endLine":29,"endColumn":31},{"ruleId":"629","severity":1,"message":"706","line":43,"column":11,"nodeType":"631","messageId":"632","endLine":43,"endColumn":17},{"ruleId":"629","severity":1,"message":"707","line":43,"column":19,"nodeType":"631","messageId":"632","endLine":43,"endColumn":25},{"ruleId":"629","severity":1,"message":"734","line":1,"column":17,"nodeType":"631","messageId":"632","endLine":1,"endColumn":26},{"ruleId":"629","severity":1,"message":"681","line":4,"column":5,"nodeType":"631","messageId":"632","endLine":4,"endColumn":10},{"ruleId":"629","severity":1,"message":"639","line":5,"column":5,"nodeType":"631","messageId":"632","endLine":5,"endColumn":9},{"ruleId":"629","severity":1,"message":"687","line":6,"column":5,"nodeType":"631","messageId":"632","endLine":6,"endColumn":9},{"ruleId":"629","severity":1,"message":"735","line":7,"column":5,"nodeType":"631","messageId":"632","endLine":7,"endColumn":8},{"ruleId":"629","severity":1,"message":"713","line":8,"column":5,"nodeType":"631","messageId":"632","endLine":8,"endColumn":12},{"ruleId":"629","severity":1,"message":"715","line":9,"column":5,"nodeType":"631","messageId":"632","endLine":9,"endColumn":10},{"ruleId":"629","severity":1,"message":"689","line":10,"column":5,"nodeType":"631","messageId":"632","endLine":10,"endColumn":11},{"ruleId":"629","severity":1,"message":"711","line":11,"column":5,"nodeType":"631","messageId":"632","endLine":11,"endColumn":14},{"ruleId":"629","severity":1,"message":"712","line":12,"column":5,"nodeType":"631","messageId":"632","endLine":12,"endColumn":16},{"ruleId":"629","severity":1,"message":"680","line":14,"column":5,"nodeType":"631","messageId":"632","endLine":14,"endColumn":22},{"ruleId":"629","severity":1,"message":"700","line":19,"column":5,"nodeType":"631","messageId":"632","endLine":19,"endColumn":16},{"ruleId":"629","severity":1,"message":"686","line":25,"column":8,"nodeType":"631","messageId":"632","endLine":25,"endColumn":10},{"ruleId":"629","severity":1,"message":"736","line":26,"column":8,"nodeType":"631","messageId":"632","endLine":26,"endColumn":17},{"ruleId":"629","severity":1,"message":"737","line":27,"column":8,"nodeType":"631","messageId":"632","endLine":27,"endColumn":14},{"ruleId":"629","severity":1,"message":"714","line":28,"column":10,"nodeType":"631","messageId":"632","endLine":28,"endColumn":20},{"ruleId":"629","severity":1,"message":"738","line":28,"column":22,"nodeType":"631","messageId":"632","endLine":28,"endColumn":38},{"ruleId":"629","severity":1,"message":"739","line":28,"column":63,"nodeType":"631","messageId":"632","endLine":28,"endColumn":84},{"ruleId":"629","severity":1,"message":"670","line":29,"column":10,"nodeType":"631","messageId":"632","endLine":29,"endColumn":18},{"ruleId":"629","severity":1,"message":"740","line":32,"column":10,"nodeType":"631","messageId":"632","endLine":32,"endColumn":16},{"ruleId":"629","severity":1,"message":"741","line":37,"column":12,"nodeType":"631","messageId":"632","endLine":37,"endColumn":17},{"ruleId":"629","severity":1,"message":"706","line":49,"column":11,"nodeType":"631","messageId":"632","endLine":49,"endColumn":17},{"ruleId":"629","severity":1,"message":"707","line":49,"column":19,"nodeType":"631","messageId":"632","endLine":49,"endColumn":25},{"ruleId":"629","severity":1,"message":"681","line":4,"column":5,"nodeType":"631","messageId":"632","endLine":4,"endColumn":10},{"ruleId":"629","severity":1,"message":"687","line":6,"column":5,"nodeType":"631","messageId":"632","endLine":6,"endColumn":9},{"ruleId":"629","severity":1,"message":"711","line":11,"column":5,"nodeType":"631","messageId":"632","endLine":11,"endColumn":14},{"ruleId":"629","severity":1,"message":"712","line":12,"column":5,"nodeType":"631","messageId":"632","endLine":12,"endColumn":16},{"ruleId":"629","severity":1,"message":"700","line":19,"column":5,"nodeType":"631","messageId":"632","endLine":19,"endColumn":16},{"ruleId":"629","severity":1,"message":"742","line":31,"column":37,"nodeType":"631","messageId":"632","endLine":31,"endColumn":70},{"ruleId":"629","severity":1,"message":"706","line":42,"column":11,"nodeType":"631","messageId":"632","endLine":42,"endColumn":17},{"ruleId":"629","severity":1,"message":"707","line":42,"column":19,"nodeType":"631","messageId":"632","endLine":42,"endColumn":25},{"ruleId":"629","severity":1,"message":"727","line":9,"column":5,"nodeType":"631","messageId":"632","endLine":9,"endColumn":15},{"ruleId":"629","severity":1,"message":"728","line":10,"column":5,"nodeType":"631","messageId":"632","endLine":10,"endColumn":10},{"ruleId":"629","severity":1,"message":"680","line":13,"column":5,"nodeType":"631","messageId":"632","endLine":13,"endColumn":22},{"ruleId":"629","severity":1,"message":"700","line":18,"column":5,"nodeType":"631","messageId":"632","endLine":18,"endColumn":16},{"ruleId":"629","severity":1,"message":"729","line":25,"column":5,"nodeType":"631","messageId":"632","endLine":25,"endColumn":21},{"ruleId":"629","severity":1,"message":"730","line":26,"column":5,"nodeType":"631","messageId":"632","endLine":26,"endColumn":19},{"ruleId":"629","severity":1,"message":"722","line":29,"column":10,"nodeType":"631","messageId":"632","endLine":29,"endColumn":17},{"ruleId":"629","severity":1,"message":"723","line":29,"column":19,"nodeType":"631","messageId":"632","endLine":29,"endColumn":28},{"ruleId":"629","severity":1,"message":"743","line":40,"column":10,"nodeType":"631","messageId":"632","endLine":40,"endColumn":16},{"ruleId":"629","severity":1,"message":"744","line":40,"column":18,"nodeType":"631","messageId":"632","endLine":40,"endColumn":29},{"ruleId":"629","severity":1,"message":"745","line":49,"column":10,"nodeType":"631","messageId":"632","endLine":49,"endColumn":18},{"ruleId":"629","severity":1,"message":"746","line":60,"column":33,"nodeType":"631","messageId":"632","endLine":60,"endColumn":44},{"ruleId":"629","severity":1,"message":"747","line":60,"column":53,"nodeType":"631","messageId":"632","endLine":60,"endColumn":62},{"ruleId":"629","severity":1,"message":"748","line":67,"column":12,"nodeType":"631","messageId":"632","endLine":67,"endColumn":18},{"ruleId":"629","severity":1,"message":"749","line":67,"column":20,"nodeType":"631","messageId":"632","endLine":67,"endColumn":29},{"ruleId":"629","severity":1,"message":"750","line":73,"column":20,"nodeType":"631","messageId":"632","endLine":73,"endColumn":29},{"ruleId":"629","severity":1,"message":"706","line":76,"column":11,"nodeType":"631","messageId":"632","endLine":76,"endColumn":17},{"ruleId":"629","severity":1,"message":"707","line":76,"column":19,"nodeType":"631","messageId":"632","endLine":76,"endColumn":25},{"ruleId":"629","severity":1,"message":"734","line":1,"column":17,"nodeType":"631","messageId":"632","endLine":1,"endColumn":26},{"ruleId":"629","severity":1,"message":"700","line":7,"column":5,"nodeType":"631","messageId":"632","endLine":7,"endColumn":16},{"ruleId":"629","severity":1,"message":"751","line":12,"column":5,"nodeType":"631","messageId":"632","endLine":12,"endColumn":15},{"ruleId":"629","severity":1,"message":"711","line":16,"column":5,"nodeType":"631","messageId":"632","endLine":16,"endColumn":14},{"ruleId":"629","severity":1,"message":"670","line":28,"column":10,"nodeType":"631","messageId":"632","endLine":28,"endColumn":18},{"ruleId":"629","severity":1,"message":"733","line":30,"column":10,"nodeType":"631","messageId":"632","endLine":30,"endColumn":19},{"ruleId":"629","severity":1,"message":"752","line":40,"column":25,"nodeType":"631","messageId":"632","endLine":40,"endColumn":29},{"ruleId":"629","severity":1,"message":"706","line":76,"column":11,"nodeType":"631","messageId":"632","endLine":76,"endColumn":17},{"ruleId":"629","severity":1,"message":"707","line":76,"column":19,"nodeType":"631","messageId":"632","endLine":76,"endColumn":25},{"ruleId":"629","severity":1,"message":"753","line":3,"column":15,"nodeType":"631","messageId":"632","endLine":3,"endColumn":19},{"ruleId":"754","severity":1,"message":"755","line":51,"column":21,"nodeType":"643","endLine":51,"endColumn":67},{"ruleId":"651","severity":1,"message":"652","line":51,"column":21,"nodeType":"643","endLine":51,"endColumn":67},{"ruleId":"754","severity":1,"message":"755","line":66,"column":21,"nodeType":"643","endLine":69,"endColumn":22},{"ruleId":"754","severity":1,"message":"755","line":88,"column":21,"nodeType":"643","endLine":91,"endColumn":22},{"ruleId":"754","severity":1,"message":"755","line":106,"column":21,"nodeType":"643","endLine":109,"endColumn":22},{"ruleId":"754","severity":1,"message":"755","line":128,"column":21,"nodeType":"643","endLine":128,"endColumn":65},{"ruleId":"651","severity":1,"message":"652","line":128,"column":21,"nodeType":"643","endLine":128,"endColumn":65},{"ruleId":"754","severity":1,"message":"755","line":144,"column":21,"nodeType":"643","endLine":144,"endColumn":65},{"ruleId":"651","severity":1,"message":"652","line":144,"column":21,"nodeType":"643","endLine":144,"endColumn":65},{"ruleId":"754","severity":1,"message":"755","line":159,"column":21,"nodeType":"643","endLine":159,"endColumn":65},{"ruleId":"651","severity":1,"message":"652","line":159,"column":21,"nodeType":"643","endLine":159,"endColumn":65},{"ruleId":"754","severity":1,"message":"755","line":175,"column":21,"nodeType":"643","endLine":175,"endColumn":65},{"ruleId":"651","severity":1,"message":"652","line":175,"column":21,"nodeType":"643","endLine":175,"endColumn":65},{"ruleId":"754","severity":1,"message":"755","line":191,"column":21,"nodeType":"643","endLine":194,"endColumn":22},{"ruleId":"629","severity":1,"message":"756","line":11,"column":3,"nodeType":"631","messageId":"632","endLine":11,"endColumn":18},{"ruleId":"662","severity":1,"message":"663","line":89,"column":21,"nodeType":"664","messageId":"665","endLine":89,"endColumn":23},{"ruleId":"641","severity":1,"message":"642","line":100,"column":11,"nodeType":"643","messageId":"644","endLine":103,"endColumn":12,"fix":"757"},{"ruleId":"641","severity":1,"message":"642","line":107,"column":11,"nodeType":"643","messageId":"644","endLine":110,"endColumn":12,"fix":"758"},{"ruleId":"641","severity":1,"message":"642","line":114,"column":11,"nodeType":"643","messageId":"644","endLine":117,"endColumn":12,"fix":"759"},{"ruleId":"629","severity":1,"message":"737","line":4,"column":8,"nodeType":"631","messageId":"632","endLine":4,"endColumn":14},{"ruleId":"655","severity":1,"message":"760","line":9,"column":5,"nodeType":"761","endLine":9,"endColumn":20,"suggestions":"762"},{"ruleId":"629","severity":1,"message":"715","line":6,"column":5,"nodeType":"631","messageId":"632","endLine":6,"endColumn":10},{"ruleId":"629","severity":1,"message":"727","line":8,"column":5,"nodeType":"631","messageId":"632","endLine":8,"endColumn":15},{"ruleId":"629","severity":1,"message":"728","line":9,"column":5,"nodeType":"631","messageId":"632","endLine":9,"endColumn":10},{"ruleId":"629","severity":1,"message":"716","line":13,"column":5,"nodeType":"631","messageId":"632","endLine":13,"endColumn":10},{"ruleId":"629","severity":1,"message":"717","line":14,"column":5,"nodeType":"631","messageId":"632","endLine":14,"endColumn":17},{"ruleId":"629","severity":1,"message":"718","line":15,"column":5,"nodeType":"631","messageId":"632","endLine":15,"endColumn":17},{"ruleId":"629","severity":1,"message":"719","line":16,"column":5,"nodeType":"631","messageId":"632","endLine":16,"endColumn":16},{"ruleId":"629","severity":1,"message":"700","line":17,"column":5,"nodeType":"631","messageId":"632","endLine":17,"endColumn":16},{"ruleId":"629","severity":1,"message":"701","line":18,"column":5,"nodeType":"631","messageId":"632","endLine":18,"endColumn":14},{"ruleId":"629","severity":1,"message":"720","line":19,"column":5,"nodeType":"631","messageId":"632","endLine":19,"endColumn":21},{"ruleId":"629","severity":1,"message":"721","line":20,"column":5,"nodeType":"631","messageId":"632","endLine":20,"endColumn":18},{"ruleId":"629","severity":1,"message":"712","line":21,"column":5,"nodeType":"631","messageId":"632","endLine":21,"endColumn":16},{"ruleId":"629","severity":1,"message":"711","line":22,"column":5,"nodeType":"631","messageId":"632","endLine":22,"endColumn":14},{"ruleId":"629","severity":1,"message":"729","line":23,"column":5,"nodeType":"631","messageId":"632","endLine":23,"endColumn":21},{"ruleId":"629","severity":1,"message":"730","line":24,"column":5,"nodeType":"631","messageId":"632","endLine":24,"endColumn":19},{"ruleId":"629","severity":1,"message":"690","line":28,"column":5,"nodeType":"631","messageId":"632","endLine":28,"endColumn":11},{"ruleId":"629","severity":1,"message":"722","line":30,"column":10,"nodeType":"631","messageId":"632","endLine":30,"endColumn":17},{"ruleId":"629","severity":1,"message":"723","line":30,"column":19,"nodeType":"631","messageId":"632","endLine":30,"endColumn":28},{"ruleId":"629","severity":1,"message":"670","line":31,"column":10,"nodeType":"631","messageId":"632","endLine":31,"endColumn":18},{"ruleId":"629","severity":1,"message":"736","line":32,"column":8,"nodeType":"631","messageId":"632","endLine":32,"endColumn":17},{"ruleId":"629","severity":1,"message":"737","line":33,"column":8,"nodeType":"631","messageId":"632","endLine":33,"endColumn":14},{"ruleId":"629","severity":1,"message":"763","line":35,"column":10,"nodeType":"631","messageId":"632","endLine":35,"endColumn":42},{"ruleId":"629","severity":1,"message":"764","line":35,"column":44,"nodeType":"631","messageId":"632","endLine":35,"endColumn":63},{"ruleId":"629","severity":1,"message":"693","line":45,"column":11,"nodeType":"631","messageId":"632","endLine":45,"endColumn":17},{"ruleId":"629","severity":1,"message":"695","line":47,"column":11,"nodeType":"631","messageId":"632","endLine":47,"endColumn":19},{"ruleId":"629","severity":1,"message":"696","line":48,"column":11,"nodeType":"631","messageId":"632","endLine":48,"endColumn":17},{"ruleId":"629","severity":1,"message":"636","line":7,"column":3,"nodeType":"631","messageId":"632","endLine":7,"endColumn":7},{"ruleId":"629","severity":1,"message":"681","line":8,"column":3,"nodeType":"631","messageId":"632","endLine":8,"endColumn":8},{"ruleId":"629","severity":1,"message":"688","line":14,"column":3,"nodeType":"631","messageId":"632","endLine":14,"endColumn":8},{"ruleId":"629","severity":1,"message":"729","line":27,"column":3,"nodeType":"631","messageId":"632","endLine":27,"endColumn":19},{"ruleId":"629","severity":1,"message":"730","line":28,"column":3,"nodeType":"631","messageId":"632","endLine":28,"endColumn":17},{"ruleId":"629","severity":1,"message":"713","line":29,"column":3,"nodeType":"631","messageId":"632","endLine":29,"endColumn":10},{"ruleId":"629","severity":1,"message":"690","line":32,"column":3,"nodeType":"631","messageId":"632","endLine":32,"endColumn":9},{"ruleId":"629","severity":1,"message":"697","line":38,"column":62,"nodeType":"631","messageId":"632","endLine":38,"endColumn":69},{"ruleId":"629","severity":1,"message":"765","line":8,"column":10,"nodeType":"631","messageId":"632","endLine":8,"endColumn":14},{"ruleId":"629","severity":1,"message":"766","line":11,"column":10,"nodeType":"631","messageId":"632","endLine":11,"endColumn":32},{"ruleId":"629","severity":1,"message":"767","line":13,"column":10,"nodeType":"631","messageId":"632","endLine":13,"endColumn":18},{"ruleId":"629","severity":1,"message":"768","line":4,"column":3,"nodeType":"631","messageId":"632","endLine":4,"endColumn":11},{"ruleId":"629","severity":1,"message":"769","line":5,"column":3,"nodeType":"631","messageId":"632","endLine":5,"endColumn":12},{"ruleId":"629","severity":1,"message":"770","line":9,"column":3,"nodeType":"631","messageId":"632","endLine":9,"endColumn":14},{"ruleId":"641","severity":1,"message":"642","line":50,"column":13,"nodeType":"643","messageId":"644","endLine":53,"endColumn":14,"fix":"771"},{"ruleId":"641","severity":1,"message":"642","line":56,"column":13,"nodeType":"643","messageId":"644","endLine":56,"endColumn":75,"fix":"772"},{"ruleId":"641","severity":1,"message":"642","line":59,"column":13,"nodeType":"643","messageId":"644","endLine":62,"endColumn":14,"fix":"773"},{"ruleId":"629","severity":1,"message":"768","line":4,"column":3,"nodeType":"631","messageId":"632","endLine":4,"endColumn":11},{"ruleId":"629","severity":1,"message":"769","line":5,"column":3,"nodeType":"631","messageId":"632","endLine":5,"endColumn":12},{"ruleId":"629","severity":1,"message":"774","line":10,"column":3,"nodeType":"631","messageId":"632","endLine":10,"endColumn":19},{"ruleId":"629","severity":1,"message":"770","line":12,"column":3,"nodeType":"631","messageId":"632","endLine":12,"endColumn":14},{"ruleId":"641","severity":1,"message":"642","line":68,"column":11,"nodeType":"643","messageId":"644","endLine":71,"endColumn":12,"fix":"775"},{"ruleId":"641","severity":1,"message":"642","line":74,"column":11,"nodeType":"643","messageId":"644","endLine":74,"endColumn":73,"fix":"776"},{"ruleId":"641","severity":1,"message":"642","line":77,"column":11,"nodeType":"643","messageId":"644","endLine":80,"endColumn":12,"fix":"777"},{"ruleId":"778","severity":1,"message":"779","line":25,"column":1,"nodeType":"780","endLine":49,"endColumn":3},{"ruleId":"629","severity":1,"message":"680","line":1,"column":10,"nodeType":"631","messageId":"632","endLine":1,"endColumn":27},{"ruleId":"625","replacedBy":"781"},{"ruleId":"627","replacedBy":"782"},{"ruleId":"783","severity":1,"message":"784","line":60,"column":14,"nodeType":"631","messageId":"785","endLine":60,"endColumn":41},{"ruleId":"629","severity":1,"message":"683","line":1,"column":28,"nodeType":"631","messageId":"632","endLine":1,"endColumn":37},{"ruleId":"629","severity":1,"message":"680","line":3,"column":10,"nodeType":"631","messageId":"632","endLine":3,"endColumn":27},"no-native-reassign",["786"],"no-negated-in-lhs",["787"],"@typescript-eslint/no-unused-vars","'Shows' is defined but never used.","Identifier","unusedVar","'Workshops' is defined but never used.","'Bg' is defined but never used.","'event' is defined but never used.","'Text' is defined but never used.","'VStack' is defined but never used.","'Code' is defined but never used.","'Flex' is defined but never used.","'Logo' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"788","text":"789"},{"range":"790","text":"789"},{"range":"791","text":"789"},{"range":"792","text":"789"},{"range":"793","text":"789"},{"range":"794","text":"789"},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",{"range":"795","text":"789"},"'current' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'CardAnimations', 'animation', and 'length'. Either include them or remove the dependency array.","ArrayExpression",["796"],"'surana' is defined but never used.","'catl' is defined but never used.","'invertScale' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Events' is defined but never used.","'moeOne' is defined but never used.","'dtnext' is defined but never used.","'Header' is defined but never used.","'useState' is defined but never used.",{"range":"797","text":"798"},{"range":"799","text":"798"},{"range":"800","text":"798"},{"range":"801","text":"798"},{"range":"802","text":"798"},{"range":"803","text":"798"},"'Value' is defined but never used.","'Container' is defined but never used.","'useBreakpointValue' is defined but never used.","'useColorModeValue' is defined but never used.","'Stack' is defined but never used.","'Particles' is defined but never used.","'LogoBlack' is defined but never used.","'LogoWhite' is defined but never used.","'image2' is defined but never used.","'bg' is defined but never used.","'Link' is defined but never used.","'Image' is defined but never used.","'Button' is defined but never used.","'Center' is defined but never used.","'Event' is defined but never used.","'bg2' is defined but never used.","'search' is assigned a value but never used.","'font' is assigned a value but never used.","'gradient' is assigned a value but never used.","'button' is assigned a value but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'filter' is assigned a value but never used.","'ModalFooter' is defined but never used.","'ModalBody' is defined but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'setRadioString' is assigned a value but never used.","'setEventType' is assigned a value but never used.","'isOpen' is assigned a value but never used.","'onOpen' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'uploadFile' is assigned a value but never used.","'S3FileUpload' is assigned a value but never used.","'FormLabel' is defined but never used.","'FormControl' is defined but never used.","'Heading' is defined but never used.","'LoginInput' is defined but never used.","'Input' is defined but never used.","'Modal' is defined but never used.","'ModalOverlay' is defined but never used.","'ModalContent' is defined but never used.","'ModalHeader' is defined but never used.","'ModalCloseButton' is defined but never used.","'useDisclosure' is defined but never used.","'AddIcon' is defined but never used.","'MinusIcon' is defined but never used.","'event' is assigned a value but never used.","'setEvent' is assigned a value but never used.","'RefObject' is defined but never used.","'RadioGroup' is defined but never used.","'Radio' is defined but never used.","'FormErrorMessage' is defined but never used.","'FormHelperText' is defined but never used.","'PopoverFooter' is defined but never used.","'ButtonGroup' is defined but never used.","'useParams' is defined but never used.","'useEffect' is defined but never used.","'Box' is defined but never used.","'CustomBox' is defined but never used.","'Footer' is defined but never used.","'useLoginMutation' is defined but never used.","'useVerifyUserMutation' is defined but never used.","'verify' is defined but never used.","'token' is assigned a value but never used.","'useResendVerificationMailMutation' is defined but never used.","'Swiper' is defined but never used.","'SwiperSlide' is defined but never used.","'FaSchool' is defined but never used.","'userLoading' is assigned a value but never used.","'userError' is assigned a value but never used.","'number' is assigned a value but never used.","'setNumber' is assigned a value but never used.","'setMobile' is assigned a value but never used.","'SimpleGrid' is defined but never used.","'data' is assigned a value but never used.","'Grid' is defined but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","'FaTwitterSquare' is defined but never used.",{"range":"804","text":"789"},{"range":"805","text":"789"},{"range":"806","text":"789"},"React Hook useEffect contains a call to 'setRole'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.","MemberExpression",["807"],"'useCreateTeamandRegisterMutation' is defined but never used.","'useRegisterMutation' is defined but never used.","'time' is defined but never used.","'textChangeRangeNewSpan' is defined but never used.","'UserRole' is defined but never used.","'FaGithub' is defined but never used.","'FaTwitter' is defined but never used.","'FaInstagram' is defined but never used.",{"range":"808","text":"789"},{"range":"809","text":"789"},{"range":"810","text":"789"},"'FaWhatsappSquare' is defined but never used.",{"range":"811","text":"789"},{"range":"812","text":"789"},{"range":"813","text":"789"},"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["786"],["787"],"@typescript-eslint/no-redeclare","'exhibitions' is already defined.","redeclared","no-global-assign","no-unsafe-negation",[7530,7530]," rel=\"noreferrer\"",[7765,7765],[7981,7981],[20061,20061],[20704,20704],[21234,21234],[22968,22968],{"desc":"814","fix":"815"},[10238,10248],"\"noopener noreferrer\"",[10756,10766],[11264,11274],[12570,12580],[14364,14374],[15097,15107],[3344,3344],[3565,3565],[3767,3767],{"desc":"816","fix":"817"},[1335,1335],[1473,1473],[1644,1644],[1780,1780],[1910,1910],[2071,2071],"Update the dependencies array to be: [CardAnimations, animation, inView, length]",{"range":"818","text":"819"},"Add dependencies array: []",{"range":"820","text":"821"},[1699,1707],"[CardAnimations, animation, inView, length]",[601,601],", []"]
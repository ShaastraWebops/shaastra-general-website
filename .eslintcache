[{"C:\\Users\\HP\\Desktop\\shaastra\\src\\index.tsx":"1","C:\\Users\\HP\\Desktop\\shaastra\\src\\serviceWorker.ts":"2","C:\\Users\\HP\\Desktop\\shaastra\\src\\reportWebVitals.ts":"3","C:\\Users\\HP\\Desktop\\shaastra\\src\\styles\\themes\\theme.ts":"4","C:\\Users\\HP\\Desktop\\shaastra\\src\\App.tsx":"5","C:\\Users\\HP\\Desktop\\shaastra\\src\\graphql\\index.ts":"6","C:\\Users\\HP\\Desktop\\shaastra\\src\\styles\\themes\\components\\buttonStyles.ts":"7","C:\\Users\\HP\\Desktop\\shaastra\\src\\styles\\themes\\components\\drawerStyles.ts":"8","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\AppRoutes.tsx":"9","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\shared\\Loader.tsx":"10","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Contact.tsx":"11","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\night\\Envisage.tsx":"12","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Exhibitions\\Exhibitions.tsx":"13","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\night\\Project.tsx":"14","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\night\\ShowsNew.tsx":"15","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Events and Workshops\\Summit.tsx":"16","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Events and Workshops\\Events.tsx":"17","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Events and Workshops\\Tif.tsx":"18","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Team_page\\Team.tsx":"19","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Events and Workshops\\AddEvent.tsx":"20","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Events and Workshops\\EventVertical.tsx":"21","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Login\\Login.tsx":"22","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Events and Workshops\\EventsAdmin.tsx":"23","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Events and Workshops\\EWHome.tsx":"24","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Login\\ForgotPassword.tsx":"25","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Login\\ForgotAfterLink.tsx":"26","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Login\\Profile.tsx":"27","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Login\\Signup.tsx":"28","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Login\\Verify.tsx":"29","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Events and Workshops\\EditEvent.tsx":"30","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Login\\EditProfile.tsx":"31","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Login\\SignOut.tsx":"32","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Policies\\Shipping.tsx":"33","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Policies\\Privacy.tsx":"34","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Policies\\Refund.tsx":"35","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Policies\\TermsConditions.tsx":"36","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Chess_blitz\\ChessBlitz.tsx":"37","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\spons.tsx":"38","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Home.tsx":"39","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Events and Workshops\\EventPage.tsx":"40","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Login\\branches.ts":"41","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Login\\college.ts":"42","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Login\\cities.ts":"43","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\ShaastraJuniors\\index.tsx":"44","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\shared\\CustomBox.tsx":"45","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\shared\\Footer.tsx":"46","C:\\Users\\HP\\Desktop\\shaastra\\src\\generated\\graphql.tsx":"47","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Events and Workshops\\Timeline.tsx":"48","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Events and Workshops\\PayRegister.tsx":"49","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Events and Workshops\\RegisterNow.tsx":"50","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Events and Workshops\\EventFaqs.tsx":"51","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\ShaastraJuniors\\SJEvents.tsx":"52","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\ShaastraJuniors\\SJStatsCard.tsx":"53","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\ShaastraJuniors\\SJHome.tsx":"54","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\ShaastraJuniors\\SJSponsers.tsx":"55","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\shared\\Header.tsx":"56","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\ShaastraJuniors\\SJEvent.tsx":"57","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\ShaastraJuniors\\Data.tsx":"58","C:\\Users\\HP\\Desktop\\shaastra\\src\\styles\\themes\\ColorModeSwitcher.tsx":"59","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\shared\\Drawer\\CustomDrawer.tsx":"60","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\shared\\Drawer\\DrawerMenuItems.tsx":"61","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Events and Workshops\\EventsData.tsx":"62","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Team_page\\photos.tsx":"63","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Team_page\\SliderImgBox.tsx":"64","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Team_page\\Card.tsx":"65","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Events and Workshops\\EventVeticalComponent.tsx":"66","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Exhibitions\\Exhibitionsdata.tsx":"67","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Exhibitions\\Card.tsx":"68","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Events and Workshops\\CardForWorksShop.tsx":"69","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Events and Workshops\\ComboPay.tsx":"70","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Events and Workshops\\MayhemCombo.tsx":"71","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Events and Workshops\\CAREFERRAL.tsx":"72"},{"size":1110,"mtime":1638606194084,"results":"73","hashOfConfig":"74"},{"size":5404,"mtime":1624383612363,"results":"75","hashOfConfig":"74"},{"size":431,"mtime":1624383612363,"results":"76","hashOfConfig":"74"},{"size":1507,"mtime":1631024404442,"results":"77","hashOfConfig":"74"},{"size":721,"mtime":1638246252992,"results":"78","hashOfConfig":"74"},{"size":318,"mtime":1641902605130,"results":"79","hashOfConfig":"74"},{"size":502,"mtime":1624937904721,"results":"80","hashOfConfig":"74"},{"size":389,"mtime":1639982088523,"results":"81","hashOfConfig":"74"},{"size":5561,"mtime":1641408987648,"results":"82","hashOfConfig":"74"},{"size":719,"mtime":1624383612338,"results":"83","hashOfConfig":"74"},{"size":8924,"mtime":1641632737303,"results":"84","hashOfConfig":"74"},{"size":15661,"mtime":1639136109530,"results":"85","hashOfConfig":"74"},{"size":5341,"mtime":1640088032129,"results":"86","hashOfConfig":"74"},{"size":21233,"mtime":1638840697952,"results":"87","hashOfConfig":"74"},{"size":39274,"mtime":1641902547890,"results":"88","hashOfConfig":"74"},{"size":7658,"mtime":1640345028534,"results":"89","hashOfConfig":"74"},{"size":6132,"mtime":1639995161007,"results":"90","hashOfConfig":"74"},{"size":14181,"mtime":1640088032127,"results":"91","hashOfConfig":"74"},{"size":23749,"mtime":1641902605122,"results":"92","hashOfConfig":"74"},{"size":21090,"mtime":1639830277161,"results":"93","hashOfConfig":"74"},{"size":12303,"mtime":1641902605111,"results":"94","hashOfConfig":"74"},{"size":8228,"mtime":1638791537917,"results":"95","hashOfConfig":"74"},{"size":4322,"mtime":1641902605113,"results":"96","hashOfConfig":"74"},{"size":8633,"mtime":1641128474723,"results":"97","hashOfConfig":"74"},{"size":5771,"mtime":1638869623557,"results":"98","hashOfConfig":"74"},{"size":6042,"mtime":1638869712396,"results":"99","hashOfConfig":"74"},{"size":16703,"mtime":1641713185210,"results":"100","hashOfConfig":"74"},{"size":11111,"mtime":1641633029718,"results":"101","hashOfConfig":"74"},{"size":8016,"mtime":1638869856335,"results":"102","hashOfConfig":"74"},{"size":18649,"mtime":1639995160996,"results":"103","hashOfConfig":"74"},{"size":10986,"mtime":1640701151425,"results":"104","hashOfConfig":"74"},{"size":3631,"mtime":1638869916818,"results":"105","hashOfConfig":"74"},{"size":2160,"mtime":1640090101992,"results":"106","hashOfConfig":"74"},{"size":8911,"mtime":1640315574581,"results":"107","hashOfConfig":"74"},{"size":2453,"mtime":1640102200315,"results":"108","hashOfConfig":"74"},{"size":11163,"mtime":1640332568865,"results":"109","hashOfConfig":"74"},{"size":14962,"mtime":1641364261381,"results":"110","hashOfConfig":"74"},{"size":23387,"mtime":1641902605124,"results":"111","hashOfConfig":"74"},{"size":30403,"mtime":1641902605120,"results":"112","hashOfConfig":"74"},{"size":25837,"mtime":1641436237545,"results":"113","hashOfConfig":"74"},{"size":1254,"mtime":1641409928452,"results":"114","hashOfConfig":"74"},{"size":93234,"mtime":1641633029723,"results":"115","hashOfConfig":"74"},{"size":26350,"mtime":1638633365217,"results":"116","hashOfConfig":"74"},{"size":1393,"mtime":1638246253016,"results":"117","hashOfConfig":"74"},{"size":535,"mtime":1631770914936,"results":"118","hashOfConfig":"74"},{"size":6870,"mtime":1641123606816,"results":"119","hashOfConfig":"74"},{"size":85690,"mtime":1641902605127,"results":"120","hashOfConfig":"74"},{"size":3998,"mtime":1639900917634,"results":"121","hashOfConfig":"74"},{"size":7307,"mtime":1641902605117,"results":"122","hashOfConfig":"74"},{"size":9653,"mtime":1641633029712,"results":"123","hashOfConfig":"74"},{"size":11205,"mtime":1640088032118,"results":"124","hashOfConfig":"74"},{"size":851,"mtime":1638246253008,"results":"125","hashOfConfig":"74"},{"size":839,"mtime":1639682003305,"results":"126","hashOfConfig":"74"},{"size":2483,"mtime":1639682003303,"results":"127","hashOfConfig":"74"},{"size":2328,"mtime":1638246253008,"results":"128","hashOfConfig":"74"},{"size":1802,"mtime":1639830277166,"results":"129","hashOfConfig":"74"},{"size":1269,"mtime":1639682003301,"results":"130","hashOfConfig":"74"},{"size":8119,"mtime":1640501784030,"results":"131","hashOfConfig":"74"},{"size":777,"mtime":1625884104023,"results":"132","hashOfConfig":"74"},{"size":1935,"mtime":1638246253040,"results":"133","hashOfConfig":"74"},{"size":15386,"mtime":1641633166630,"results":"134","hashOfConfig":"74"},{"size":2672,"mtime":1640088032124,"results":"135","hashOfConfig":"74"},{"size":1781,"mtime":1631770914927,"results":"136","hashOfConfig":"74"},{"size":2011,"mtime":1639900917638,"results":"137","hashOfConfig":"74"},{"size":2207,"mtime":1638246253024,"results":"138","hashOfConfig":"74"},{"size":21158,"mtime":1641633029704,"results":"139","hashOfConfig":"74"},{"size":3772,"mtime":1640501784025,"results":"140","hashOfConfig":"74"},{"size":1608,"mtime":1641364261595,"results":"141","hashOfConfig":"74"},{"size":5532,"mtime":1641633029696,"results":"142","hashOfConfig":"74"},{"size":6887,"mtime":1641902605109,"results":"143","hashOfConfig":"74"},{"size":18256,"mtime":1641902605115,"results":"144","hashOfConfig":"74"},{"size":3512,"mtime":1641633029688,"results":"145","hashOfConfig":"74"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},"199afst",{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"148"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":40,"fixableErrorCount":0,"fixableWarningCount":10,"source":"170","usedDeprecatedRules":"148"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"148"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"148"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"183","usedDeprecatedRules":"148"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"148"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"189","usedDeprecatedRules":"148"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"148"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"148"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"148"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"148"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"148"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"148"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"148"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"148"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"148"},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"148"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"148"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"148"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":35,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":12,"source":null},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"148"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"148"},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":3,"source":"260","usedDeprecatedRules":"148"},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"148"},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"148"},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"283","messages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"291","messages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":6,"source":"293","usedDeprecatedRules":"148"},{"filePath":"294","messages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"296","messages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"148"},{"filePath":"299","messages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":3,"source":"301","usedDeprecatedRules":"148"},{"filePath":"302","messages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":3,"source":"304","usedDeprecatedRules":"148"},{"filePath":"305","messages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"148"},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"148"},{"filePath":"311","messages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"148"},{"filePath":"316","messages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"320","messages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},"C:\\Users\\HP\\Desktop\\shaastra\\src\\index.tsx",[],["322","323"],"C:\\Users\\HP\\Desktop\\shaastra\\src\\serviceWorker.ts",[],"C:\\Users\\HP\\Desktop\\shaastra\\src\\reportWebVitals.ts",[],"C:\\Users\\HP\\Desktop\\shaastra\\src\\styles\\themes\\theme.ts",[],"C:\\Users\\HP\\Desktop\\shaastra\\src\\App.tsx",[],"C:\\Users\\HP\\Desktop\\shaastra\\src\\graphql\\index.ts",[],"C:\\Users\\HP\\Desktop\\shaastra\\src\\styles\\themes\\components\\buttonStyles.ts",[],"C:\\Users\\HP\\Desktop\\shaastra\\src\\styles\\themes\\components\\drawerStyles.ts",[],"C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\AppRoutes.tsx",["324","325","326","327","328","329","330"],"import * as React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { Link } from \"@chakra-ui/react\";\r\nimport Exhibitions from \"./pages/Exhibitions/Exhibitions\";\r\nimport Home from \"./pages/Home\";\r\nimport Envisage from \"./pages/night/Envisage\";\r\n// import Shows from \"./pages/night/Shows\";\r\nimport Project from \"./pages/night/Project\";\r\nimport Team from \"./pages/Team_page/Team\";\r\nimport ShaastraJuniorsPage from \"./pages/ShaastraJuniors\";\r\nimport Social from \"./pages/socialEndeavours/SocialEnd\";\r\nimport Eventsworkshops from \"./pages/Events and Workshops/EventsHome\";\r\nimport Events from \"./pages/Events and Workshops/Events\";\r\nimport Summit from \"./pages/Events and Workshops/Summit\";\r\nimport Tif from \"./pages/Events and Workshops/Tif\";\r\nimport Workshops from \"./pages/Events and Workshops/Workshops\";\r\nimport Spons from \"../../src/components/pages/spons\";\r\nimport Show from \"../../src/components/pages/night/Show\";\r\nimport Speaker from \"../../src/components/pages/Speaker/Speaker\";\r\nimport EventVertical from \"./pages/Events and Workshops/EventVertical\";\r\nimport EventAdmin from \"./pages/Events and Workshops/AddEvent\";\r\nimport EditEvent from \"./pages/Events and Workshops/EditEvent\";\r\nimport EventsAdmin from \"./pages/Events and Workshops/EventsAdmin\";\r\nimport Login from \"./pages/Login/Login\";\r\nimport Forgot from \"./pages/Login/ForgotPassword\";\r\nimport Signup from \"./pages/Login/Signup\";\r\nimport ForgotAfter from \"./pages/Login/ForgotAfterLink\";\r\nimport Verify from \"./pages/Login/Verify\";\r\nimport SignOut from \"./pages/Login/SignOut\";\r\nimport Profile from \"./pages/Login/Profile\";\r\nimport EditProfile from \"./pages/Login/EditProfile\";\r\nimport EventPage from \"./pages/Events and Workshops/EventPage\";\r\nimport Privacy from \"./pages/Policies/Privacy\";\r\nimport TermsConditions from \"./pages/Policies/TermsConditions\";\r\nimport Shipping from \"./pages/Policies/Shipping\";\r\nimport Refund from \"./pages/Policies/Refund\";\r\nimport HomeEW from \"./pages/Events and Workshops/EWHome\";\r\nimport Shows from \"./pages/night/ShowsNew\";\r\nimport Contact from \"./pages/Contact\";\r\nimport ChessBlitz from \"./pages/Chess_blitz/ChessBlitz\";\r\ninterface Props {}\r\n\r\nconst AppRoutes = (props: Props) => {\r\n  return (\r\n    <Router>\r\n      <Route exact path=\"/\" component={Home} />\r\n      <Route path=\"/envisage\" component={Envisage} />\r\n      <Route path=\"/project/:id\" component={Project} />\r\n      <Route path=\"/shows\" component={Shows} />\r\n      <Route exact path=\"/exhibitions\" component={Exhibitions} />\r\n      <Route exact path=\"/team\" component={Team} />\r\n      <Route exact path=\"/contact\" component={Contact}></Route>\r\n      <Route exact path=\"/shaastra-juniors\" component={ShaastraJuniorsPage} />\r\n      {/* <Route exact path=\"/social-endeavours\" component={Social} /> */}\r\n      <Route\r\n        exact\r\n        path=\"/social-endeavours\"\r\n        component={() => {\r\n          window.location.href = \"https://unmute.shaastra.org/\";\r\n          return null;\r\n        }}\r\n      >\r\n        {/* <Link to=\"https://unmute.shaastra.org/\"></Link> */}\r\n      </Route>\r\n      <Route\r\n        exact\r\n        path=\"/mind-trials\"\r\n        component={() => {\r\n          window.location.href = \"https://mindtrials.shaastra.org/\";\r\n          return null;\r\n        }}\r\n      ></Route>\r\n      <Route\r\n        exact path =\"/sales\"\r\n        component={() => {\r\n          window.location.href = \"https://sales.shaastra.org/\"\r\n          return null\r\n        }}\r\n      ></Route>\r\n      <Route exact path=\"/eventsworkshops\" component={HomeEW} />\r\n      <Route exact path=\"/events\" component={Events} />\r\n      <Route exact path=\"/events/:name\" component={EventVertical}></Route>\r\n      {localStorage.getItem(\"role\") === \"Admin\" && (\r\n        <Switch>\r\n          <Route exact path=\"/admin/add\" component={EventAdmin}></Route>\r\n          <Route exact path=\"/admin/edit/:id\" component={EditEvent}></Route>\r\n          <Route exact path=\"/admin\" component={EventsAdmin}></Route>\r\n        </Switch>\r\n      )}\r\n      <Route exact path=\"/eventpage/:id\" component={EventPage}></Route>\r\n\r\n      <Route exact path=\"/tif\" component={Tif} />\r\n      <Route exact path=\"/summit\" component={Summit} />\r\n      <Route exact path=\"/sponsors\" component={Spons} />\r\n      <Route exact path=\"/blitz-chess\" component={ChessBlitz} />\r\n      {/* <Route exact path=\"/speakers\" component={Speaker} /> */}\r\n\r\n      <Route exact path=\"/login\" component={Login}></Route>\r\n      <Route exact path=\"/signup\" component={Signup}></Route>\r\n      <Route exact path=\"/forgotpassword\" component={Forgot}></Route>\r\n      <Route exact path=\"/resetpassword\" component={ForgotAfter}></Route>\r\n      <Route exact path=\"/verify\" component={Verify}></Route>\r\n      <Route exact path=\"/signout\" component={SignOut}></Route>\r\n      {localStorage.getItem(\"role\") === \"User\" && (\r\n        <Switch>\r\n          <Route exact path=\"/profile\" component={Profile}></Route>\r\n          <Route exact path=\"/editprofile\" component={EditProfile}></Route>\r\n        </Switch>\r\n      )}\r\n\r\n      <Route exact path=\"/policies/privacy-policy\" component={Privacy}></Route>\r\n      <Route\r\n        exact\r\n        path=\"/policies/return-refund-policy\"\r\n        component={Refund}\r\n      ></Route>\r\n      <Route\r\n        exact\r\n        path=\"/policies/shipping-policy\"\r\n        component={Shipping}\r\n      ></Route>\r\n      <Route\r\n        exact\r\n        path=\"/policies/terms-conditions\"\r\n        component={TermsConditions}\r\n      ></Route>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRoutes;\r\n","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\shared\\Loader.tsx",[],"C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Contact.tsx",["331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370"],"import React from \"react\"\r\nimport Footer from \"../shared/Footer\"\r\nimport CustomBox from \"../shared/CustomBox\"\r\n\r\nimport {\r\n    Text,\r\n    Stack,\r\n    Link,\r\n    Flex,\r\n    Tooltip,\r\n    Box,\r\n    RadioGroup,\r\n    Radio,\r\n    Image,\r\n    Button,\r\n    useColorModeValue,\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    useDisclosure,\r\n    FormControl,\r\n    FormLabel,\r\n    FormErrorMessage,\r\n    FormHelperText,\r\n    Heading,\r\n    Center,\r\n    Popover,\r\n    PopoverTrigger,\r\n    PopoverContent,\r\n    PopoverHeader,\r\n    PopoverArrow,\r\n    PopoverCloseButton,\r\n    PopoverBody,\r\n    PopoverFooter,\r\n    ButtonGroup,\r\n  } from '@chakra-ui/react'\r\n\r\nimport \"../../styles/App.css\"\r\nimport ContactBg from \"../../images/ContactBg.png\"\r\n\r\nconst Contact = () => {\r\n    return(\r\n        <CustomBox>\r\n            <Flex className=\"contact-main\" overflowX={\"hidden\"} width=\"100vw\" padding={[\"20vw 0 0 0\",\"4vw 0 0 0\"]} justifyContent={\"space-between\"} flexDirection={[\"column\", \"row\"]} alignItems={\"center\"}>\r\n                <Flex overflowX={\"hidden\"} paddingLeft={\"2vw\"} flexDirection={\"column\"} width=\"50%\" alignItems={\"center\"}>\r\n                    <Heading fontSize={[\"6vw\",\"3vw\"]} marginBottom={\"4vh\"}>CONTACT US</Heading>\r\n\r\n                    {/* english */}\r\n\r\n                    <Flex width=\"50vw\" paddingBottom={\"6vh\"} flexDirection={\"column\"} alignItems={\"center\"}>\r\n                        <Text color=\"#A0AEC0\" fontWeight={\"500\"} fontSize={[\"6vw\",\"2vw\"]}>English</Text>\r\n                        <Flex width={[\"90vw\",\"50vw\"]} justifyContent={\"space-evenly\"}>\r\n                            <Flex flexDirection={\"column\"}>\r\n                                <Text fontWeight={\"bold\"} fontSize={[\"4vw\",\"1.5vw\"]}>Poojitha</Text>\r\n                                <Text fontSize={[\"4vw\",\"1.5vw\"]}> <a href={\"http://wa.me/+917019180917\"} target=\"_blank\"><p>+91 70191 80917</p></a></Text>\r\n                            </Flex>\r\n                            <Flex flexDirection={\"column\"}>\r\n                                <Text fontWeight={\"bold\"} fontSize={[\"4vw\",\"1.5vw\"]}>Joshik</Text>\r\n                                <Text fontSize={[\"4vw\",\"1.5vw\"]}>  <a href={\"http://wa.me/+918825601711\"} target=\"_blank\"><p>+91 88256 01711</p></a></Text>\r\n                            </Flex>\r\n                        </Flex>\r\n                    </Flex>\r\n                    \r\n                    {/* tamil */}\r\n\r\n                    <Flex width={[\"90vw\",\"50vw\"]} paddingBottom={\"6vh\"} flexDirection={\"column\"} alignItems={\"center\"} >\r\n                        <Text color=\"#A0AEC0\" fontWeight={\"500\"} fontSize={[\"6vw\",\"2vw\"]}>Tamil</Text>\r\n                        <Flex width={[\"90vw\",\"50vw\"]} justifyContent={\"space-evenly\"}>\r\n                            <Flex flexDirection={\"column\"}>\r\n                                <Text fontWeight={\"bold\"} fontSize={[\"4vw\",\"1.5vw\"]}>Mohan</Text>\r\n                                <Text fontSize={[\"4vw\",\"1.5vw\"]}><a href={\"http://wa.me/+919952729095\"} target=\"_blank\"><p>+91 99527 29095</p></a></Text>\r\n                            </Flex>\r\n                            <Flex flexDirection={\"column\"}>\r\n                                <Text fontWeight={\"bold\"} fontSize={[\"4vw\",\"1.5vw\"]}>Vishwa</Text>\r\n                                <Text fontSize={[\"4vw\",\"1.5vw\"]}> <a href={\"http://wa.me/+919952180821\"} target=\"_blank\"><p>+91 99521 80821</p></a></Text>\r\n                            </Flex>\r\n                        </Flex>\r\n                    </Flex>\r\n\r\n                    {/* hindi */}\r\n\r\n                    <Flex width={[\"90vw\",\"50vw\"]} paddingBottom={\"6vh\"} flexDirection={\"column\"} alignItems={\"center\"} >\r\n                        <Text color=\"#A0AEC0\" fontWeight={\"500\"} fontSize={[\"6vw\",\"2vw\"]}>Hindi</Text>\r\n                        <Flex width={[\"90vw\",\"50vw\"]} justifyContent={\"space-evenly\"}>\r\n                            <Flex flexDirection={\"column\"}>\r\n                                <Text fontWeight={\"bold\"} fontSize={[\"4vw\",\"1.5vw\"]}>Ankit</Text>\r\n                                <Text fontSize={[\"4vw\",\"1.5vw\"]}><a href={\"http://wa.me/+917488701168\"} target=\"_blank\"><p>+91 74887 01168</p></a></Text>\r\n                            </Flex>\r\n                            <Flex flexDirection={\"column\"}>\r\n                                <Text fontWeight={\"bold\"} fontSize={[\"4vw\",\"1.5vw\"]}>Rahul</Text>\r\n                                <Text fontSize={[\"4vw\",\"1.5vw\"]}> <a href={\"http://wa.me/+919602032101\"} target=\"_blank\"><p>+91 96020 32101</p></a></Text>\r\n                            </Flex>\r\n                        </Flex>\r\n                    </Flex>\r\n\r\n                    {/*marathi and kannada */}\r\n\r\n                    <Flex width={[\"90vw\",\"50vw\"]} paddingBottom={\"6vh\"} alignItems={\"center\"} justifyContent={\"space-evenly\"}>\r\n                        <Flex flexDirection={\"column\"}>\r\n                            <Text color=\"#A0AEC0\" fontWeight={\"500\"} fontSize={[\"6vw\",\"2vw\"]}>Marathi</Text>\r\n                            <Flex flexDirection={\"column\"}>\r\n                                <Text fontWeight={\"bold\"} fontSize={[\"4vw\",\"1.5vw\"]}>Siddhivinayak</Text>\r\n                                <Text fontSize={[\"4vw\",\"1.5vw\"]}> <a href={\"http://wa.me/+919672025542\"} target=\"_blank\"><p>+91 96720 25542</p></a></Text>\r\n                            </Flex>\r\n                        </Flex>\r\n                        <Flex flexDirection={\"column\"}>\r\n                            <Text color=\"#A0AEC0\" fontWeight={\"500\"} fontSize={[\"6vw\",\"2vw\"]}>Kannada</Text>\r\n                            <Flex flexDirection={\"column\"}>\r\n                                <Text fontWeight={\"bold\"} fontSize={[\"4vw\",\"1.5vw\"]}>Manoghna</Text>\r\n                                <Text fontSize={[\"4vw\",\"1.5vw\"]}><a href={\"http://wa.me/+919480318016\"} target=\"_blank\"><p>+91 94803 18016</p></a></Text>\r\n                            </Flex>\r\n                        </Flex>\r\n                    </Flex>\r\n                    \r\n                    {/* telugu and malayalam */}\r\n\r\n                    <Flex width={[\"90vw\",\"50vw\"]} paddingBottom={\"4vh\"} alignItems={\"center\"} justifyContent={\"space-evenly\"}>\r\n                        <Flex flexDirection={\"column\"}>\r\n                            <Text color=\"#A0AEC0\" fontWeight={\"500\"} fontSize={[\"6vw\",\"2vw\"]}>Telugu</Text>\r\n                            <Flex flexDirection={\"column\"}>\r\n                                <Text fontWeight={\"bold\"} fontSize={[\"4vw\",\"1.5vw\"]}>Anogna</Text>\r\n                                <Text fontSize={[\"4vw\",\"1.5vw\"]}> <a href={\"http://wa.me/+916305984724\"} target=\"_blank\"><p>+91 63059 84724</p></a></Text>\r\n                            </Flex>\r\n                        </Flex>\r\n                        <Flex flexDirection={\"column\"}>\r\n                            <Text color=\"#A0AEC0\" fontWeight={\"500\"} fontSize={[\"6vw\",\"2vw\"]}>Malayalam</Text>\r\n                            <Flex flexDirection={\"column\"}>\r\n                                <Text fontWeight={\"bold\"} fontSize={[\"4vw\",\"1.5vw\"]}>Anshid</Text>\r\n                                <Text fontSize={[\"4vw\",\"1.5vw\"]}> <a href={\"http://wa.me/+917592976901\"} target=\"_blank\"><p>+91 75929 76901</p></a></Text>\r\n                            </Flex>\r\n                        </Flex>\r\n                    </Flex>\r\n\r\n                    {/* <Flex width={[\"90vw\",\"50vw\"]} paddingBottom={\"4vh\"} alignItems={\"center\"} justifyContent={\"space-evenly\"}>\r\n                        <Flex flexDirection={\"column\"}>\r\n                            <Text color=\"#A0AEC0\" fontWeight={\"500\"} fontSize={[\"6vw\",\"2vw\"]}>Marathi</Text>\r\n                            <Flex flexDirection={\"column\"}>\r\n                                <Text fontWeight={\"bold\"} fontSize={[\"4vw\",\"1.5vw\"]}>Siddhivinayak</Text>\r\n                                <Text fontSize={[\"4vw\",\"1.5vw\"]}> <a href={\"http://wa.me/+919672025542\"} target=\"_blank\"><p>+91 96720 25542</p></a></Text>\r\n                            </Flex>\r\n                        </Flex>\r\n                        <Flex flexDirection={\"column\"}>\r\n                            <Text color=\"#A0AEC0\" fontWeight={\"500\"} fontSize={[\"6vw\",\"2vw\"]}>Malayalam</Text>\r\n                            <Flex flexDirection={\"column\"}>\r\n                                <Text fontWeight={\"bold\"} fontSize={[\"4vw\",\"1.5vw\"]}>Anshid</Text>\r\n                                <Text fontSize={[\"4vw\",\"1.5vw\"]}> <a href={\"http://wa.me/+917592976901\"} target=\"_blank\"><p>+91 75929 76901</p></a></Text>\r\n                            </Flex>\r\n                        </Flex>\r\n                    </Flex> */}\r\n\r\n                </Flex>\r\n                <Image src={ContactBg} width=\"50vw\" objectFit={\"contain\"}></Image>\r\n            </Flex>\r\n        <Footer\r\n          designed={[{ name: \"Krithikaa\", mail: \"be20b020@smail.iitm.ac.in\" }]}\r\n        />\r\n        </CustomBox>\r\n    )\r\n}\r\n\r\nexport default Contact","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\night\\Envisage.tsx",["371","372","373","374","375"],"import React from 'react'\r\nimport {\r\n  Heading,\r\n  useColorModeValue,\r\n  Stack,\r\n  Text,\r\n  Box,\r\n  Center,\r\n  Flex,\r\n  Image,\r\n  SimpleGrid,\r\n} from '@chakra-ui/react'\r\nimport './../../../styles/night/night.css'\r\nimport { Link } from 'react-router-dom'\r\nimport Particles from 'react-tsparticles'\r\nimport CustomBox from './../../shared/CustomBox'\r\nimport { ReactComponent as LogoBlack } from './../../../images/night/Envisage_black.svg'\r\nimport { ReactComponent as LogoWhite } from './../../../images/night/Envisage_white (1).svg'\r\nimport image1 from './../../../images/night/envisage_1.png'\r\nimport image2 from './../../../images/night/envisage_2.png'\r\nimport project1 from '../../../images/night/projects/image1.png'\r\nimport project2 from '../../../images/night/projects/image2.jpg'\r\nimport project3 from '../../../images/night/projects/image3.jpg'\r\nimport Footer from '../../shared/Footer'\r\nimport '../../../styles/night/Envisage.css'\r\nimport { FaArrowsAltV } from 'react-icons/fa'\r\nimport {\r\n  VerticalTimeline,\r\n  VerticalTimelineElement,\r\n} from 'react-vertical-timeline-component'\r\nimport 'react-vertical-timeline-component/style.min.css'\r\n\r\nexport default function Main() {\r\n  const color = useColorModeValue('white', 'black')\r\n  const bgcolor = useColorModeValue('gray.700', 'gray.200')\r\n\r\n  return (\r\n    <CustomBox>\r\n      <Flex\r\n        alignItems='center'\r\n        justifyContent='center'\r\n        direction='column'\r\n        minHeight='100vh'\r\n        className='main-ctn'\r\n        maxW='100%'\r\n        overflowX='hidden'\r\n      >\r\n        <Box className='header-ctn' marginTop={12}>\r\n          <Heading marginTop={12} fontSize='7xl'>\r\n            <span>ENVISAGE</span>\r\n          </Heading>\r\n        </Box>\r\n        <Box\r\n          rounded={'lg'}\r\n          bg={useColorModeValue('gray.700', 'gray.200')}\r\n          textColor={useColorModeValue('white', 'black')}\r\n          boxShadow={'lg'}\r\n          p={8}\r\n          marginTop={8}\r\n          marginLeft={8}\r\n          marginRight={8}\r\n          marginBottom={8}\r\n          justifyContent='center'\r\n          alignItems='center'\r\n          textAlign='center'\r\n        >\r\n          <SimpleGrid columns={[1, 1, 2]} spacing='40px'>\r\n            <Center>\r\n              <Image\r\n                alt='image1'\r\n                src={image1}\r\n                rounded='xl'\r\n                width='100%'\r\n                height='auto'\r\n              ></Image>\r\n            </Center>\r\n            <Flex flexDirection='column'>\r\n              <Heading margin={2} padding={2} className='sub-heading'>\r\n                ABOUT US\r\n              </Heading>\r\n              <Text fontSize='lg' padding={2}>\r\n                The Annual Technical Festival of IIT Madras, Shaastra introduced\r\n                a technologically aided cultural show in the year 2013,\r\n                capitalizing on the entertainment factor. This techno – cultural\r\n                show was named Envisage and today it is India’s first and only\r\n                student organised techno-entertainment show. The projects\r\n                exhibited by Envisage attract a bunch of not-so-technically\r\n                oriented guests too. The projects are designed in conformity\r\n                with the tagline of Envisage – “Technology meets Entertainment”.\r\n                Alongside conducting the show on 1st day of Shaastra, a number\r\n                of other interactive projects and video games are also\r\n                developed and exhibited to a vast crowd at KV Stalls during\r\n                Shaastra. Over the past few years Envisage has been exploring\r\n                and presenting projects at various avenues like IIM Bangalore,\r\n                Anna University and in several other universities as part of\r\n                Samparks, Publicity event of Shaastra. The coming version marks\r\n                the entry of Envisage into its very 10th year.\r\n              </Text>\r\n              <Heading margin={2} padding={2} className='sub-heading'>\r\n                VISION\r\n              </Heading>\r\n              <Text fontSize='lg' padding={2}>\r\n                As the tagline “Where Technology Meets Entertainment” suggests,\r\n                we inspire and enable students to explore their creative and\r\n                engineering skills through various technical projects for the\r\n                techno cultural show and the tech exhibition during Shaastra.\r\n              </Text>\r\n            </Flex>\r\n          </SimpleGrid>\r\n        </Box>\r\n         <Flex\r\n            flexDirection='column'\r\n            alignItems='center'\r\n            justifyContent='center'\r\n          >\r\n            <Box>\r\n              <Heading marginTop={5} padding={2} className='sub-heading'>\r\n                VERTICALS\r\n              </Heading>\r\n            </Box>\r\n            <SimpleGrid\r\n              columns = {[1,1,1,2,3]}\r\n              spacing='18px'\r\n              justifyContent='center'\r\n              alignItems='center'\r\n            >\r\n              <Box\r\n                textColor='black'\r\n                bgColor='white'\r\n                rounded={'lg'}\r\n                boxShadow={'lg'}\r\n                p={8}\r\n                marginTop={8}\r\n                marginLeft={8}\r\n                marginRight={8}\r\n                marginBottom={8}\r\n                minHeight = {300}\r\n                justifyContent='center'\r\n                alignItems='center'\r\n                textAlign='center'\r\n              >\r\n                <Heading margin={2}>Shows</Heading>\r\n                <Text>\r\n                  This vertical comprises large scale projects which are\r\n                  presented in the Envisage show, which is organized on the\r\n                  first day of Shaastra. This is the first and only student-run\r\n                  techno-entertainment show in India and witnessed by an\r\n                  audience of around 5000.\r\n                </Text>\r\n              </Box>\r\n              <Box\r\n                rounded={'lg'}\r\n                boxShadow={'lg'}\r\n                p={8}\r\n                marginTop={8}\r\n                marginLeft={8}\r\n                marginRight={8}\r\n                marginBottom={8}\r\n                justifyContent='center'\r\n                alignItems='center'\r\n                textAlign='center'\r\n                minHeight={300}\r\n                bgColor='white'\r\n                textColor='black'\r\n              >\r\n                <Heading margin={2}>Tech Ambience</Heading>\r\n                <Text>\r\n                  This vertical comprises interactive projects which are\r\n                  presented at KV grounds during Shaastra as a part of tech-\r\n                  exhibition of Envisage.\r\n                </Text>\r\n              </Box>\r\n              <Box\r\n                rounded={'lg'}\r\n                boxShadow={'lg'}\r\n                p={8}\r\n                marginTop={8}\r\n                marginLeft={8}\r\n                marginRight={8}\r\n                marginBottom={8}\r\n                justifyContent='center'\r\n                alignItems='center'\r\n                textAlign='center'\r\n                minHeight={300}\r\n                bgColor='white'\r\n                textColor='black'\r\n              >\r\n                <Heading margin={2}>Game Dev</Heading>\r\n                <Text>\r\n                  This vertical is involved in creating video games from scratch\r\n                  and are displayed at KV stalls during Shaastra as a part of\r\n                  our Tech-Exhibition. We also compete in a lot of entertaining\r\n                  game jam sessions and conduct game development workshops as a\r\n                  team to show the entertaining aspect of game development to\r\n                  others.\r\n                </Text>\r\n              </Box>\r\n            </SimpleGrid>\r\n          </Flex>\r\n        <Flex\r\n          justifyContent='center'\r\n          flexDirection='column'\r\n          margin={2}\r\n          padding={2}\r\n        >\r\n          <Heading marginBottom={12} className='sub-heading'>\r\n            PREVIOUS YEAR'S PROJECTS\r\n          </Heading>\r\n          <VerticalTimeline className='timeline'>\r\n            <VerticalTimelineElement\r\n              className='vertical-timeline-element--work'\r\n              contentStyle={{\r\n                background: '#EDEDED',\r\n                color: 'black',\r\n              }}\r\n              iconStyle={{ background: '#E63E6D', color: '#fff' }}\r\n              contentArrowStyle={{\r\n                borderRight: '7px solid  #EDEDED',\r\n              }}\r\n              icon={<FaArrowsAltV />}\r\n            >\r\n              <h3 className='vertical-timeline-element-title'>Envisage 7.0</h3>\r\n              <p>Click below to explore and learn more about the projects that were conducted during Shaastra 2018-2019.</p>\r\n              <Link\r\n                to={{ pathname: `/project/1`, state: 'Envisage 7.0' }}\r\n                className='link-ctn '\r\n              >\r\n                Explore Projects\r\n              </Link>\r\n            </VerticalTimelineElement>\r\n\r\n            <VerticalTimelineElement\r\n              className='vertical-timeline-element--work'\r\n              contentStyle={{\r\n                background: '#EDEDED',\r\n                color: 'black',\r\n              }}\r\n              contentArrowStyle={{\r\n                borderRight: '7px solid  #EDEDED',\r\n              }}\r\n              iconStyle={{ background: '#E63E6D', color: '#fff' }}\r\n              icon={<FaArrowsAltV />}\r\n            >\r\n              <h3 className='vertical-timeline-element-title'>Envisage 8.0</h3>\r\n              <p>Click below to explore and learn more about the projects that were conducted during Shaastra 2019-2020.</p>\r\n              <Link\r\n                to={{ pathname: `/project/2`, state: 'Envisage 8.0' }}\r\n                className='link-ctn'\r\n              >\r\n                Explore Projects\r\n              </Link>\r\n            </VerticalTimelineElement>\r\n            <VerticalTimelineElement\r\n              width='50%'\r\n              className='vertical-timeline-element--work'\r\n              iconStyle={{ background: '#E63E6D', color: '#fff' }}\r\n              contentArrowStyle={{\r\n                borderRight: '7px solid  #EDEDED',\r\n              }}\r\n              contentStyle={{\r\n                background: '#EDEDED',\r\n                color: 'black',\r\n              }}\r\n              icon={<FaArrowsAltV />}\r\n            >\r\n              <h3 className='vertical-timeline-element-title'>Envisage 9.0</h3>\r\n              <p>Click below to explore and learn more about the projects that were conducted during Shaastra 2020-2021.</p>\r\n              <Link\r\n                to={{ pathname: `/project/3`, state: 'Envisage 9.0' }}\r\n                className='link-ctn'\r\n              >\r\n                Explore Projects\r\n              </Link>\r\n            </VerticalTimelineElement>\r\n          </VerticalTimeline>\r\n        </Flex>\r\n        <Flex\r\n          flexDirection='column'\r\n          justifyContent='center'\r\n          alignItems='center'\r\n          textAlign='center'\r\n        >\r\n          <Heading marginBottom={12} className='sub-heading'>\r\n            <span>PATENTED PROJECTS</span>\r\n          </Heading>\r\n          <Box\r\n            rounded={'lg'}\r\n            boxShadow={'lg'}\r\n            textColor={color}\r\n            bgColor={bgcolor}\r\n            p={8}\r\n            marginTop={8}\r\n            marginLeft={8}\r\n            marginRight={8}\r\n            marginBottom={8}\r\n            justifyContent='center'\r\n            alignItems='center'\r\n            textAlign='center'\r\n          >\r\n            <SimpleGrid columns={[1, 1, 2]} spacing='40px'>\r\n              <Center>\r\n                <Image\r\n                  alt='image1'\r\n                  src={project1}\r\n                  rounded='xl'\r\n                  width='100%'\r\n                  height='auto'\r\n                  maxH='400px'\r\n                ></Image>\r\n              </Center>\r\n              <Flex\r\n                flexDirection='column'\r\n                alignItems='center'\r\n                justifyContent='center'\r\n                textAlign='center'\r\n              >\r\n                <Heading margin={2} padding={2} className='sub-heading'>\r\n                  Speed Painting Bot (SPB)\r\n                </Heading>\r\n                <Text fontSize='lg' padding={2}>\r\n                  It is a bot that can create a painting by punching colored (5\r\n                  colors) pixels on a canvas.It involves painting a huge picture\r\n                  within 3-4 minutes using close synchronisation between more\r\n                  than 40 stepper motors. A concept called pixelation is used\r\n                  wherein an image is converted to pixels of size 3 cm X 3 cm\r\n                  and 40 multi coloured brushes simultaneously paint the entire\r\n                  image in a row wise fashion. The project is an entirely new\r\n                  concept, which hasn't been tried anywhere else.\r\n                </Text>\r\n              </Flex>\r\n              <Center>\r\n                <Image\r\n                  alt='image1'\r\n                  src={project2}\r\n                  rounded='xl'\r\n                  width='100%'\r\n                  height='auto'\r\n                  maxH='400px'\r\n                ></Image>\r\n              </Center>\r\n              <Flex\r\n                flexDirection='column'\r\n                alignItems='center'\r\n                justifyContent='center'\r\n                textAlign='center'\r\n              >\r\n                <Heading margin={2} padding={2} className='sub-heading'>\r\n                  3D Waterfall\r\n                </Heading>\r\n                <Text fontSize='lg' padding={2}>\r\n                  This project can be subtly described as a cylindrical water\r\n                  screen. Usually lights and other lighting devices are used as\r\n                  a display element but here we are doing the same thing in a\r\n                  quite unique way, through water i.e using water as an element\r\n                  of display. We achieved this using our own electrical design\r\n                  and controlling it through an Arduino-Uno. The structure which\r\n                  bears the project has a unique portable design.\r\n                </Text>\r\n              </Flex>\r\n              <Center>\r\n                <Image\r\n                  alt='image1'\r\n                  src={project3}\r\n                  rounded='xl'\r\n                  width='100%'\r\n                  height='auto'\r\n                  maxH='400px'\r\n                ></Image>\r\n              </Center>\r\n              <Flex\r\n                flexDirection='column'\r\n                alignItems='center'\r\n                justifyContent='center'\r\n                textAlign='center'\r\n              >\r\n                <Heading margin={2} padding={2} className='sub-heading'>\r\n                  Virtual Instruments\r\n                </Heading>\r\n                <Text fontSize='lg' padding={2}>\r\n                  Did the thought of making music out of thin air ever crossed\r\n                  your mind? What if you come across some nice music at some\r\n                  random place and you want to play it then and there. Here\r\n                  comes the virtual instruments, where one can play drums,\r\n                  flute, piano, guitar and so on without the need of carrying\r\n                  the whole instrument set up everywhere.\r\n                </Text>\r\n              </Flex>\r\n            </SimpleGrid>\r\n          </Box>\r\n        </Flex>\r\n      </Flex>\r\n      <Footer\r\n        designed={[\r\n          { name: 'Prithiviraj P', mail: 'na19b052@smail.iitm.ac.in' },\r\n        ]}\r\n      />\r\n    </CustomBox>\r\n  )\r\n}\r\n","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Exhibitions\\Exhibitions.tsx",["376","377","378","379"],"import { Text,Flex ,Stack , Box,BoxProps,Heading,Image,Container,SimpleGrid, Center, TextProps, useColorModeValue, VStack} from \"@chakra-ui/react\";\r\n// import {ChevronLeftIcon,ChevronRightIcon} from \"@chakra-ui/icons\";\r\nimport * as React from \"react\";\r\nimport CustomBox from \"../../shared/CustomBox\";\r\nimport EXHB2 from \"../../../images/Exhibitions/exhb_2.png\";\r\nimport \"../../../styles/Exhibitions.css\";\r\nimport {  exhibitions,CauroselImages, Titlevariants, AboutusVariants, AboutusData } from \"./Exhibitionsdata\";\r\nimport Card from \"./Card\";\r\nimport { motion ,useAnimation } from 'framer-motion';\r\nimport Footer from \"../../shared/Footer\";\r\nimport ParticlesBg from 'particles-bg';\r\nimport { useInView } from \"react-intersection-observer\";\r\n\r\nconst MotionBox = motion<BoxProps>(Box);\r\nconst MotionText = motion<TextProps>(Text);\r\n// const MotionChevronLeftIcon = motion(ChevronLeftIcon);\r\n// const MotionChevronRightIcon = motion(ChevronRightIcon);\r\n\r\nconst Exhibitions = ()=>{\r\n\r\n  const [current,setCurrent] = React.useState(0);\r\n  const length = CauroselImages.length;\r\n  const {ref,inView} = useInView();\r\n  const animation = useAnimation();\r\n  const Titlecolor = useColorModeValue(\"#1c72c7\",\"#00d0ff\");\r\n  console.log(window.innerWidth)\r\n  var CardAnimations;\r\n  if(window.innerWidth > 991){\r\n    CardAnimations = [{x:\"-100vw\"},{opacity:0},{x:\"+100vw\"}];\r\n  }else{\r\n     CardAnimations = [{opacity:0},{opacity:0},{opacity:0}];\r\n  }\r\n  React.useEffect(()=>{\r\n\r\n    if(inView){\r\n      animation.start({\r\n          x:0,\r\n          opacity:1,\r\n          transition: { duration: 1 }\r\n      })\r\n    }else{\r\n      animation.start( (i : any) =>\r\n        CardAnimations[i]\r\n      )\r\n    }\r\n\r\n  }, [inView] )\r\n\r\n  // const prevSlide = ()=>{\r\n  //       setCurrent(current ===0 ? length-1 : current-1);\r\n  // }\r\n  // const nextSlide = ()=>{\r\n  //   setCurrent(current === length-1 ? 0 : current+1);\r\n  // }\r\n\r\n    return(\r\n      <CustomBox>\r\n       <Container maxW={'7xl'} className=\"AboutUsContainer\">\r\n        <div className=\"App-particles__container\">\r\n        <ParticlesBg color={\"#4492b3\"} num={150} type=\"cobweb\" bg={true}/>\r\n        </div>\r\n\r\n        <Heading lineHeight={1.1} fontWeight={600} fontSize={\"5xl\"}>\r\n        <Center pt={{ base:20, md: 20 }} mb={5}>\r\n        <MotionText as={'h1'}\r\n            initial={\"lhidden\"}\r\n            animate = {\"final\"}\r\n            variants={Titlevariants}\r\n            className = \"Title\"\r\n            color={Titlecolor}> EXHIBITIONS </MotionText>\r\n          </Center>\r\n  \r\n          </Heading>\r\n          <Stack\r\n          align={'center'}\r\n          spacing={{ base: 8, md: 10 }}\r\n          my={5} p={15}\r\n          direction={{ base: 'column-reverse', md: 'row' }}>\r\n\r\n          <Stack flex={1} spacing={{ base: 5, md: 10 }}>\r\n\r\n              <MotionBox\r\n              initial = {\"hidden\"}\r\n              animate = {\"visible\"}\r\n              variants = {AboutusVariants}>\r\n              <Heading as={'h1'} mb={\"3\"} color={Titlecolor}>\r\n                About Us\r\n              </Heading>\r\n               <Text \r\n                style = {{\r\n                  fontSize: \"20px\",\r\n                  letterSpacing : \"1px\",\r\n                  fontFamily : 'Roboto',\r\n                  zIndex : 1\r\n                }}>\r\n                 {AboutusData}\r\n                </Text>\r\n              </MotionBox>\r\n\r\n          </Stack>\r\n\r\n          <Flex\r\n            flex={1}\r\n            justify={'center'}\r\n            align={'center'}\r\n            position={'relative'}\r\n            w={'full'}>\r\n            <MotionBox\r\n              whileHover={{ scale: 1.1 }}\r\n              whileTap={{ scale: 0.9 }}\r\n              initial = {\"hidden\"}\r\n              animate = {\"visible\"}\r\n              variants = {AboutusVariants}\r\n               height={[\"full\",\"300px\"]}\r\n               width ={[\"full\",\"90%\"]}\r\n              rounded={'2xl'}\r\n              boxShadow={'2xl'}\r\n              overflow={'hidden'}\r\n              mt={[\"0px\",\"60px\"]}\r\n              >\r\n              <Image\r\n                alt={'Display Image'}\r\n                fit={\"cover\"}\r\n                align={'center'}\r\n                w={'100%'}\r\n                h={'100%'}\r\n                src={EXHB2}\r\n              />\r\n            </MotionBox>\r\n          </Flex>\r\n        </Stack>\r\n\r\n      </Container>\r\n           \r\n      <Container mb={3} maxW={'7xl'} >\r\n      <VStack>\r\n      <Heading\r\n              fontWeight={500}\r\n               m={[2,5]} \r\n              className = \"Title\"\r\n              color={Titlecolor}\r\n              p={3}\r\n             lineHeight={1.1} fontSize={\"4xl\"}\r\n             >\r\n              PREVIOUS EXHIBITIONS\r\n            </Heading>\r\n        <SimpleGrid columns={[1,1,2,3]} spacing={[10,20]} ref={ref} mb={5} pb={20}> \r\n        {\r\n\r\n          exhibitions.map( (item,index) => {\r\n            let i = index%3;\r\n            return(\r\n              <MotionBox\r\n              custom = {i}\r\n              animate = {animation}\r\n              className=\"ECard\"\r\n              key= {index}\r\n              >\r\n              <Card data={item} />\r\n              </MotionBox>\r\n            )\r\n          })\r\n        }\r\n        </SimpleGrid>\r\n      </VStack>\r\n      </Container>\r\n\r\n       <Footer designed={[{name : \"Srinivas\",mail :\"ch19b052@smail.iitm.ac.in\"}]} />\r\n     </CustomBox>\r\n    \r\n    );\r\n\r\n}\r\n\r\nexport default Exhibitions;","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\night\\Project.tsx",[],"C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\night\\ShowsNew.tsx",["380","381","382","383","384","385","386","387","388"],"C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Events and Workshops\\Summit.tsx",["389","390","391","392","393","394"],"import React from \"react\";\r\nimport {\r\n  Text,\r\n  Stack,\r\n  Flex,\r\n  Center,\r\n  Box,\r\n  Heading,\r\n  Image,\r\n  SimpleGrid,\r\n  Container,\r\n} from \"@chakra-ui/react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport SwiperCore, {\r\n    Pagination, Autoplay\r\n  } from 'swiper';\r\n  \r\nimport 'swiper/swiper-bundle.min.css'  \r\nimport 'swiper/swiper.min.css'\r\n\r\nimport \"../../../styles/Summit.css\"\r\n\r\nimport gaming from \"../../../images/EventsWorkshops/summit/gaming.jpg\"\r\nimport summit1 from \"../../../images/EventsWorkshops/summit/Summit_news.jpg\";\r\nimport summit2 from \"../../../images/EventsWorkshops/summit/summit_2.jpg\";\r\nimport summit3 from \"../../../images/EventsWorkshops/summit/summit_3.jpg\";\r\nimport summit4 from \"../../../images/EventsWorkshops/summit/summit_4.jpg\";\r\nimport summit5 from \"../../../images/EventsWorkshops/summit/summit_5.jpg\";\r\nimport summit6 from \"../../../images/EventsWorkshops/summit/summit_6.jpg\";\r\nimport summit7 from \"../../../images/EventsWorkshops/summit/summit_7.jpg\";\r\nimport { useColorModeValue } from \"@chakra-ui/color-mode\";\r\nimport CustomBox from \"../../shared/CustomBox\";\r\nimport Footer from \"../../shared/Footer\";\r\n\r\nSwiperCore.use([Pagination, Autoplay]);\r\n\r\nconst Summit = () => {\r\n  return(\r\n    <CustomBox>\r\n        <Box className=\"summit\" position={\"relative\"}>\r\n          <Stack\r\n                 textAlign={'center'}\r\n                 align={'center'}\r\n                 spacing={{ base: 8, md: 8 }}\r\n                 py={{ base: 20, md: 20 }}\r\n          >\r\n            <Box height=\"100vh\" width=\"100vw\" top=\"0\" left=\"0\" position=\"absolute\" backgroundImage={gaming}  backgroundSize={\"cover\"} backgroundRepeat={\"no-repeat\"} backgroundPosition={\"left\"} content=\"\"></Box>\r\n            {/* <Box content=\"\" position={\"absolute\"} top=\"0\" height=\"100vh\" width=\"100vw\" paddingTop={\"0\"} backgroundColor={\"rgba(0, 0, 0, 0.8)\"}></Box> */}\r\n            <Flex  marginTop={\"0\"} flexDirection={\"column\"} width=\"100vw\" className=\"gaming-intro-flex\" height={[\"75vh\",\"81vh\"]} zIndex={2} alignItems={\"center\"}>\r\n                <Heading color=\"white\" fontSize={[\"10vw\",\"7xl\"]} marginBottom={\"10vh\"}>SUMMIT</Heading>\r\n                <Text color=\"white\" backdropBlur={\"50px\"} width={[\"90vw\",\"50vw\"]} fontSize={[\"3.5vw\",\"1.5vw\"]} fontWeight={\"600\"} marginBottom={\"5vh\"}>\r\n                  This year’s Summit delves into the domain of Gaming Technology. This evolving industry is \r\n                  revolutionizing our world, unfazed by the pandemic. Cutting-edge technology built here often seeps \r\n                  out to numerous others. Our Summit will focus on several relevant themes while approaching gaming \r\n                  from multiple viewpoints. Through informative lectures, demonstrations, and hands-on workshops by \r\n                  eminent personalities, we aim to bridge the gap between gaming academia, industry, and enthusiasts.\r\n                </Text>\r\n                <Box className=\"gaming\" width=\"fit-content\" padding={[\"3vw 6vw\",\"1vw 2vw\"]} fontSize={[\"5.5vw\",\"1.5vw\"]}  margin=\"0 auto\" marginTop={\"2vh\"} backgroundColor={\"white\"} color=\"#0e101b\" borderRadius={\"24px\"}>\r\n              <a  target=\"_blank\" href=\"https://summit.shaastra.org/\">Gaming Tech Summit</a>\r\n            </Box>\r\n            </Flex>\r\n           <Box position={\"relative\"}>\r\n            <Swiper\r\n                slidesPerView={1}\r\n                // pagination={true}\r\n                autoplay={{delay: 2000}}\r\n              >\r\n                <SwiperSlide>\r\n                  <Image width=\"100vw\" height={[\"35vh\",\"50vh\"]} objectFit={\"cover\"} src={summit3}></Image>\r\n                </SwiperSlide>\r\n                <SwiperSlide>\r\n                  <Image width=\"100vw\" height={[\"35vh\",\"50vh\"]} objectFit={\"cover\"} src={summit2}></Image>\r\n                </SwiperSlide>\r\n                <SwiperSlide>\r\n                  <Image width=\"100vw\" height={[\"35vh\",\"50vh\"]} objectFit={\"cover\"} src={summit4}></Image>\r\n                </SwiperSlide>\r\n                <SwiperSlide>\r\n                  <Image width=\"100vw\" height={[\"35vh\",\"50vh\"]} objectFit={\"cover\"} src={summit5}></Image>\r\n                </SwiperSlide>\r\n                <SwiperSlide>\r\n                  <Image width=\"100vw\" height={[\"35vh\",\"50vh\"]} objectFit={\"cover\"} src={summit6}></Image>\r\n                </SwiperSlide>\r\n              </Swiper>\r\n              <Box className=\"overlay\" content=\"\" position={\"absolute\"} top=\"0\" width=\"100vw\" height={[\"35vh\",\"50vh\"]} zIndex={1} backgroundColor={\"rgba(0, 0, 0, 0.8)\"}></Box>\r\n              <Flex flexDirection={\"column\"} className=\"intro-text\" position={\"absolute\"} top=\"0\" width=\"100vw\" zIndex={2} height={[\"30vh\",\"50vh\"]} justifyContent={\"center\"} alignItems={\"center\"}>\r\n              <Heading color=\"white\" paddingTop={\"4vh\"} paddingBottom={\"4vh\"}>Our previous editions</Heading>\r\n                <Text width={[\"90%\",\"60%\"]} fontSize={[\"3.5vw\",\"1.5vw\"]} fontWeight={\"400\"} color=\"white\">\r\n                Previously we have successfully organised Archi-Tech Summit (2021), Defence Tech Summit (2020), Sports \r\n                Tech and Law Tech Summit (2019), Green Energy Summit (2018), Accessibility Summit (2017) and Makers \r\n                Summit (2016) collaborating with the likes of L&T Construction, L&T Defence, Star Sports, Shell, etc.\r\n                </Text>\r\n              </Flex>\r\n           </Box>\r\n           <Text paddingBottom={\"4vh\"} paddingTop={[\"5vh\",\"8vh\"]} fontSize={[\"3.5vw\",\"1.5vw\"]} textAlign={[\"center\",\"left\"]} width={[\"90vw\",\"80vw\"]} margin=\"auto\" marginTop=\"8vh\">\r\n              Shaastra 2021 saw IIT Madras hosting it's very first virtual Summit that was attended by 120 delegates. The \r\n              theme for Summit 2021 was ARCHI-TECH which brought together the fields of architecture and technology. \r\n              With developments in technology like virtual reality, 3D printing and advancements in material science , \r\n              Shaastra Summit 2021 brought these technologies to light, to help our participants upskill in the field of \r\n              architecture.\r\n           </Text>\r\n           <Text paddingBottom={\"4vh\"} fontSize={[\"3.5vw\",\"1.5vw\"]} textAlign={[\"center\",\"left\"]} width={[\"90vw\",\"80vw\"]} margin=\"auto\" marginTop=\"8vh\">\r\n              Summit successfully hosted talks by Ar. Rahul Mehrotra, Ar. Brinda Somaya and other renowned architects as a \r\n              part of the Summit Masterclass series. Archi-Tech Summit also organized the Post Covid Redesign Contest and \r\n              Innovation Hub Design Challenge that provided a platform for professionals and enthusiasts in the field of \r\n              architecture and design to leverage the power of designing spaces to solve societal problems and build better \r\n              ommunities.\r\n           </Text>\r\n           <Image src={summit1} width=\"80vw\" height={\"100%\"} objectFit={\"cover\"}></Image>\r\n           <Text paddingTop={[\"4vh\",\"4vh\"]} fontSize={[\"3.5vw\",\"1.5vw\"]} textAlign={[\"center\",\"left\"]} width={[\"90vw\",\"80vw\"]} margin=\"auto\">\r\n              With Sports-Tech Summit Shaastra tried to expand into bringing its participants up to speed on the latest \r\n              developments by successfully organizing a case-study competition as a part of the Summit and a Hackathon  \r\n              as a pre-event. Similarly, the Law-Tech Summit explored the influence of modern day technology in legal \r\n              practice by organising a one of a kind Moot court.\r\n           </Text>\r\n          </Stack>\r\n        </Box>\r\n        <Footer\r\n        designed={[{ name: 'Krithikaa', mail: 'be20b020@smail.ittm.ac.in' }]}\r\n      />\r\n    </CustomBox>\r\n  )\r\n}\r\n\r\nexport default Summit;\r\n","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Events and Workshops\\Events.tsx",["395","396","397","398","399"],"import React from 'react'\r\nimport {\r\n  Text,\r\n  Stack,\r\n  Flex,\r\n  Link,\r\n  Box,\r\n  Heading,\r\n  Image,\r\n  Grid,\r\n  GridItem,\r\n  useColorModeValue\r\n} from '@chakra-ui/react'\r\nimport bg from \"../../../images/EventsWorkshops/events/bg.jpg\"\r\nimport BE from \"../../../images/EventsWorkshops/events/BE.png\"\r\nimport Aero from \"../../../images/EventsWorkshops/events/Aerofest.png\"\r\nimport Bio from \"../../../images/EventsWorkshops/events/Biogen.png\"\r\nimport Cl from \"../../../images/EventsWorkshops/events/Coding&Logic.png\"\r\nimport DB from \"../../../images/EventsWorkshops/events/Design&Build.jpeg\"\r\nimport Elec from \"../../../images/EventsWorkshops/events/Elecfest.jpg\"\r\nimport Strategists from \"../../../images/EventsWorkshops/events/Strategists.png\"\r\nimport Symposium from \"../../../images/EventsWorkshops/events/symposium.jpg\"\r\nimport Ignite from \"../../../images/EventsWorkshops/events/Ignite.jpg\"\r\nimport CustomBox from '../../shared/CustomBox'\r\nimport Footer from '../../shared/Footer';\r\nimport \"../../../styles/Events.css\"\r\nimport { VerticalTimeline, VerticalTimelineElement }  from 'react-vertical-timeline-component';\r\nimport 'react-vertical-timeline-component/style.min.css';\r\n\r\n\r\nfunction Events() {\r\n\r\n  const timeline = useColorModeValue(\"pink\", \"white-events\")\r\n  const overlay = useColorModeValue(\"white\", \"black\")\r\n\r\n  return (\r\n    <CustomBox>\r\n      <Box position={\"relative\"} className=\"events\"  backgroundRepeat=\"no-repeat\" backgroundPosition=\"top\" backgroundSize=\"cover\">\r\n        <Box className={`${overlay}`} content=\"\" position={\"absolute\"} top=\"0\" left=\"0\" width={\"100vw\"} height=\"100%\" backgroundColor={\"rgba(0, 0, 0, 0.6)\"}></Box>\r\n        <Stack\r\n          textAlign={'center'}\r\n          align={'center'}\r\n          spacing={{ base: 8, md: 8 }}\r\n          py={{ base: 20, md: 20 }}\r\n        >\r\n         <Flex zIndex={2}>\r\n           <Heading textAlign=\"right\" fontSize=\"7xl\">EVENTS</Heading>\r\n         </Flex>\r\n         <Grid templateColumns={[\"repeat(1,1fr)\",\"repeat(2, 1fr)\"]} columnGap={\"4vw\"} rowGap={\"4vw\"} zIndex={3} width=\"80vw\">\r\n            <GridItem display={\"flex\"} height={\"100%\"} justifyContent={\"center\"} flexDirection={\"column\"}>\r\n              <Image height=\"25vh\" width={[\"80vw\",\"38vw\"]} objectFit={[\"cover\",\"cover\"]} src={Aero}></Image>\r\n              <Link fontSize={[\"4vw\",\"2vw\"]}  href=\"/events/aerofest\">Aerofest</Link>\r\n            </GridItem>\r\n            <GridItem display={\"flex\"} height={\"max-content\"} justifyContent={\"center\"} flexDirection={\"column\"}>\r\n              <Image height=\"25vh\" width={[\"80vw\",\"38vw\"]} objectFit={[\"cover\",\"cover\"]} src={Bio}></Image>\r\n              <Link fontSize={[\"4vw\",\"2vw\"]} href=\"/events/biogen\">Biogen</Link>\r\n            </GridItem>\r\n            <GridItem display={\"flex\"} height={\"100%\"} justifyContent={\"center\"} flexDirection={\"column\"}>\r\n              <Image height=\"25vh\" width={[\"80vw\",\"38vw\"]} objectFit={\"cover\"} src={BE}></Image>\r\n              <Link fontSize={[\"4vw\",\"2vw\"]} href=\"/events/bevents\"> \r\n                    BEvents</Link>\r\n            </GridItem>\r\n            <GridItem display={\"flex\"} height={\"max-content\"} justifyContent={\"center\"} flexDirection={\"column\"}>\r\n              <Image height=\"25vh\" width={[\"80vw\",\"38vw\"]} objectFit={\"cover\"} objectPosition={[\"0% 30%\",\"0% 15%\"]} src={DB}></Image>\r\n              <Link fontSize={[\"4vw\",\"2vw\"]} href=\"/events/db\">Design & Build</Link>\r\n            </GridItem>\r\n            <GridItem display={\"flex\"} height={\"max-content\"} justifyContent={\"center\"} flexDirection={\"column\"}>\r\n              <Image height=\"25vh\" width={[\"80vw\",\"38vw\"]} objectFit={\"cover\"} objectPosition={\"0% 25%\"} src={Elec}></Image>\r\n             <Link fontSize={[\"4vw\",\"2vw\"]} href=\"/events/elecfest\">Elecfest</Link>\r\n            </GridItem>\r\n            <GridItem display={\"flex\"} height={\"max-content\"} justifyContent={\"center\"} flexDirection={\"column\"}>\r\n              <Image height=\"25vh\" width={[\"80vw\",\"38vw\"]} objectFit={\"cover\"} objectPosition={\"0% 25%\"} src={Ignite}></Image>\r\n              <Link fontSize={[\"4vw\",\"2vw\"]} href=\"/events/ignite\">IDP</Link>\r\n            </GridItem>\r\n            <GridItem display={\"flex\"} height={\"max-content\"} justifyContent={\"center\"} flexDirection={\"column\"}>\r\n              <Image height=\"25vh\" width={[\"80vw\",\"38vw\"]} objectFit={\"cover\"} src={Strategists}></Image> \r\n              <Link fontSize={[\"4vw\",\"2vw\"]} href=\"/events/strategists\">Quizzing</Link>\r\n            </GridItem>\r\n            <GridItem display={\"flex\"} height={\"max-content\"} justifyContent={\"center\"} flexDirection={\"column\"}>\r\n              <Image height=\"25vh\" width={[\"80vw\",\"38vw\"]} objectFit={\"cover\"} src={Cl}></Image> \r\n              <Link fontSize={[\"4vw\",\"2vw\"]} href=\"/events/cl\">Coding & Logic</Link>\r\n            </GridItem>\r\n            <GridItem display={\"flex\"} height={\"max-content\"} justifyContent={\"center\"} flexDirection={\"column\"}>\r\n              <Image height=\"25vh\" width={[\"80vw\",\"38vw\"]} objectFit={\"cover\"} src={\"https://shaastra.s3.ap-south-1.amazonaws.com/Moot Court.png\"}></Image> \r\n              <Link fontSize={[\"4vw\",\"2vw\"]} href=\"/eventpage/ckxdasopm0024wop7cxphcidu\">Moot Court</Link>\r\n            </GridItem>\r\n            <GridItem display={\"flex\"} height={\"max-content\"} justifyContent={\"center\"} flexDirection={\"column\"}>\r\n              <Image height=\"25vh\" width={[\"80vw\",\"38vw\"]} objectFit={\"cover\"} src={Symposium}></Image> \r\n              <Link fontSize={[\"4vw\",\"2vw\"]} href=\"https://dss.shaastra.org/\" target={\"_blank\"}>Symposium</Link>\r\n            </GridItem>\r\n         </Grid>\r\n         {/* <Box margin=\"auto\" width={[\"80vw\",\"40vw\"]} zIndex={3} display={\"flex\"} height={\"max-content\"} justifyContent={\"center\"} flexDirection={\"column\"}>\r\n            <Image height=\"25vh\" width={[\"80vw\",\"38vw\"]} objectFit={\"cover\"} src={Strategists}></Image>\r\n              <Link fontSize={[\"4vw\",\"2vw\"]} href=\"/events/strategists\">Strategists</Link>\r\n            </Box> */}\r\n        </Stack>\r\n      </Box>\r\n      <Footer\r\n        designed={[{ name: 'Krithikaa', mail: 'be20b020@smail.iitm.ac.in' }]}\r\n      />\r\n    </CustomBox>\r\n  )\r\n}\r\n\r\nexport default Events\r\n","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Events and Workshops\\Tif.tsx",["400","401"],"import React from \"react\";\r\nimport {\r\n  Text,\r\n  Stack,\r\n  Center,\r\n  Box,\r\n  Heading,\r\n  Image,\r\n  SimpleGrid,\r\n  Flex,\r\n  Button,\r\n} from \"@chakra-ui/react\";\r\nimport { useColorModeValue } from \"@chakra-ui/color-mode\";\r\nimport CustomBox from \"../../shared/CustomBox\";\r\nimport tif1 from \"../../../images/EventsWorkshops/tif/tif_1.png\";\r\nimport tif2 from \"../../../images/EventsWorkshops/tif/tif_2.png\";\r\nimport tif3 from \"../../../images/EventsWorkshops/tif/tif_3.png\";\r\nimport tif4 from \"../../../images/EventsWorkshops/tif/tif_4.png\";\r\nimport tif5 from \"../../../images/EventsWorkshops/tif/tif_6.png\";\r\nimport tif6 from \"../../../images/EventsWorkshops/tif/tif_9.png\";\r\nimport \"../../../styles/Events.css\";\r\nimport Footer from \"../../shared/Footer\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Tif() {\r\n  const colorvariant = useColorModeValue(\"#1c72c7\",\"#ABC8E1\")\r\n  return (\r\n    <CustomBox>\r\n      <Box textAlign={'justify'}>\r\n        <Stack\r\n          textAlign={\"center\"}\r\n          align={\"center\"}\r\n          spacing={{ base: 8, md: 8 }}\r\n          paddingTop={{ base: 20, md: 20 }}\r\n          marginBottom={[0,5]}\r\n        >\r\n          <Heading\r\n            noOfLines={2}\r\n            fontWeight={600}\r\n            fontSize={{ base: \"3xl\", sm: \"4xl\", md: \"6xl\" }}\r\n            textAlign=\"center\"\r\n          >\r\n            <Text as={\"span\"} display={'inline-flex'} alignItems={'center'}>\r\n              Tech <Text mx={2} as={'h2'} fontSize={['5xl','7xl']} color={colorvariant}>&</Text> Innovation Fair\r\n            </Text>\r\n          </Heading>\r\n          <Text color={\"gray.500\"} maxW={\"3xl\"} fontSize={\"20px\"} padding={2}>\r\n            The event helps the participants to take their tech-based prototype\r\n            to the next level by converting it into an MVP (Minimum-viable\r\n            product).These benchmark models can further be incubated for the\r\n            commencement of a start-up.\r\n          </Text>\r\n          <Box m={2}>\r\n          <a href={\"https://tif.shaastra.org/\"} target={\"_blank\"}><Button colorScheme={\"blue\"} borderRadius={\"2xl\"} m={2}>Explore Tech & Innovation Fair</Button></a>\r\n          </Box>\r\n           </Stack>\r\n           \r\n        <Flex\r\n          textAlign={\"center\"}\r\n          align={\"center\"}\r\n          width={'100%'}\r\n          spacing={{ base: 8, md: 8 }}\r\n          bgColor={\"#ABC8E1\"}\r\n          color={'black'}\r\n          alignItems={'center'}\r\n          justifyItems={'center'}\r\n          marginBottom={5}\r\n          // py={{ base: 20, md: 20 }}\r\n        >\r\n          <Center>\r\n          <Box p={2} my={3} width={['80%','80%','60%','60%']}>\r\n            <Text padding={2}  fontSize={\"17px\"} textAlign={'justify'} fontWeight={'semibold'}>\r\n              The fair comprises multiple stages of professional guidance in the\r\n              form of Workshops, Panel discussions and seminars based on\r\n              entrepreneurship and management and a culmination event during\r\n              Shaastra where they will exhibit their product to the massive\r\n              crowd of Shaastra.The event concludes with the final pitching\r\n              competition which takes place at IITM research park. By the end of\r\n              the event, participants will be equipped with the knowledge,\r\n              resources, and opportunities they need to kickstart their startup\r\n              journey.\r\n            </Text>\r\n          </Box>\r\n          </Center>\r\n        </Flex>\r\n        <Center marginBottom={10} flexDirection={'column'} p={3}>\r\n          <Heading fontWeight={700} lineHeight={\"110%\"} textAlign=\"center\" m={2}>\r\n            Our{\"   \"}\r\n            <Text as={\"span\"} color={colorvariant}>\r\n              Partners\r\n            </Text>\r\n          </Heading>\r\n          <Image src={tif1} alt=\"tif_1\" h=\"300px\" w=\"600px\" p={2}></Image>\r\n        </Center>\r\n         \r\n\r\n        <Center>\r\n          <Heading fontWeight={700} lineHeight={\"110%\"} textAlign=\"center\">\r\n            Workshops and{\"   \"}\r\n            <Text as={\"span\"} color={colorvariant}>\r\n              Seminar\r\n            </Text>\r\n          </Heading>\r\n        </Center>\r\n       <Center>\r\n       <SimpleGrid\r\n          width={\"85%\"}\r\n          minChildWidth=\"300px\"\r\n          spacing=\"30px\"\r\n          marginBottom={12}\r\n          marginTop={12}\r\n        >\r\n          <Center alignItems=\"center\">\r\n            <Image\r\n              src={tif2}\r\n              alt=\"tif_2\"\r\n              width=\"301px\"\r\n              height=\"301px\"\r\n              objectFit=\"cover\"\r\n              rounded={'2xl'}\r\n            ></Image>\r\n            <Box zIndex=\"-1\" position=\"absolute\" height=\"350px\" width=\"350px\">\r\n              <Box\r\n                bgGradient={useColorModeValue(\r\n                  \"radial(orange.600 1px, transparent 1px)\",\r\n                  \"radial(orange.300 1px, transparent 1px)\"\r\n                )}\r\n                backgroundSize=\"11px 11px\"\r\n                opacity=\"1\"\r\n                height=\"100%\"\r\n              />\r\n            </Box>\r\n          </Center>\r\n          <Center alignItems=\"center\">\r\n            <Image\r\n              src={tif3}\r\n              alt=\"tif_3\"\r\n              w=\"301px\"\r\n              h=\"301px\"\r\n              objectFit=\"cover\"\r\n              rounded={'2xl'}\r\n            ></Image>\r\n            <Box zIndex=\"-1\" width=\"350px\" position=\"absolute\" height=\"350px\">\r\n              <Box\r\n                bgGradient={useColorModeValue(\r\n                  \"radial(orange.600 1px, transparent 1px)\",\r\n                  \"radial(orange.300 1px, transparent 1px)\"\r\n                )}\r\n                backgroundSize=\"11px 11px\"\r\n                opacity=\"1\"\r\n                height=\"100%\"\r\n              />\r\n            </Box>\r\n          </Center>\r\n          <Center alignItems=\"center\">\r\n            <Image\r\n              src={tif4}\r\n              alt=\"tif_4\"\r\n              w=\"301px\"\r\n              h=\"301px\"\r\n              objectFit=\"cover\"\r\n              rounded={'2xl'}\r\n            ></Image>\r\n            <Box zIndex=\"-1\" width=\"350px\" position=\"absolute\" height=\"350px\">\r\n              <Box\r\n                bgGradient={useColorModeValue(\r\n                  \"radial(orange.600 1px, transparent 1px)\",\r\n                  \"radial(orange.300 1px, transparent 1px)\"\r\n                )}\r\n                backgroundSize=\"11px 11px\"\r\n                opacity=\"1\"\r\n                height=\"100%\"\r\n              />\r\n            </Box>\r\n          </Center>\r\n        </SimpleGrid>\r\n       </Center>\r\n        \r\n        {/* <Swiper\r\n        spaceBetween={window.innerWidth > 600 ? 50 : 0}\r\n        navigation={{\r\n          prevEl: events_navigationPrevRef.current,\r\n          nextEl: events_navigationNextRef.current,\r\n        }}\r\n        loop={true}\r\n        pagination={\r\n          window.innerWidth < 600\r\n            ? {\r\n                el: events_paginationRef.current,\r\n                clickable: true,\r\n              }\r\n            : false}\r\n            >\r\n          <SwiperSlide>\r\n\r\n          </SwiperSlide>\r\n        </Swiper> */}\r\n        <Center>\r\n          <Heading fontWeight={700} textAlign=\"center\" lineHeight={\"110%\"}>\r\n            Success{\"   \"}\r\n            <Text as={\"span\"} color={colorvariant}>\r\n              Stories\r\n            </Text>\r\n          </Heading>\r\n        </Center>\r\n        <SimpleGrid\r\n          textAlign={\"center\"}\r\n          columns={[1,2]}\r\n          marginLeft={5}\r\n          marginRight={5}\r\n          spacing={30}\r\n          marginTop={5}\r\n          marginBottom={12}\r\n        >\r\n          <Box\r\n            shadow=\"lg\"\r\n            borderWidth=\"2px\"\r\n            borderRadius=\"md\"\r\n            maxwidth={500}\r\n            padding={2}\r\n            m={2}\r\n            className=\"success-stories1\"\r\n          >\r\n            <Heading\r\n              fontSize=\"xl\"\r\n              fontWeight=\"bold\"\r\n              // color={\"gray.500\"}\r\n              marginTop={2}\r\n            >\r\n              Scavenger robot to eradicate manual scavenging (1st Runners up-\r\n              TIF 2021)\r\n            </Heading>\r\n            <Text padding={2} maxW={\"3xl\"}\r\n            // color={\"gray.500\"} \r\n            >\r\n              <blockquote>Competition has a lot things we can learn even if we win or not,\r\n              these learnings will be useful throughout our lives. The team of\r\n              Shaastra did a great job. The volunteers guided us patiently and\r\n              virtual creation of IIT Madras was great.</blockquote>\r\n              <br />\r\n              <Text fontStyle=\"italic\" fontWeight=\"bold\">\r\n                -Harikrishnan, Team Scavenger\r\n              </Text>\r\n            </Text>\r\n          </Box>\r\n          <Box\r\n            shadow=\"lg\"\r\n            borderWidth=\"2px\"\r\n            borderRadius=\"md\"\r\n            maxwidth={500}\r\n            padding={2}\r\n            m={2}\r\n            className=\"success-stories2\"\r\n          >\r\n            <Heading\r\n              fontSize=\"xl\"\r\n              fontWeight=\"bold\"\r\n              marginTop={2}\r\n            >\r\n              Drowning rescue kit - Finds drowning people and launches life\r\n              jackets for rescue (Winner TIF- 2020)\r\n            </Heading>\r\n            <Text padding={2}  maxW={\"3xl\"}>\r\n              <blockquote>Initially, when we got the mail saying we’ve been shortlisted for\r\n              TIF at IIT Madras, we were surprised. No one in our entire family,\r\n              our generation, had ever seen an IIT. We got a really good mentor\r\n              and, Tech and Innovation Fair was really supportive from Day 0. I\r\n              thank the entire team for everything they’ve done for us.</blockquote>\r\n              <br />\r\n              <Text fontStyle=\"italic\" fontWeight=\"bold\">\r\n                -Mohammed Safi, Team Night Fury\r\n              </Text>\r\n            </Text>\r\n          </Box>\r\n          <Box\r\n            shadow=\"lg\"\r\n            borderWidth=\"2px\"\r\n            borderRadius=\"md\"\r\n            maxwidth={500}\r\n            padding={2}\r\n            m={2}\r\n            className=\"success-stories3\"\r\n          >\r\n            <Heading\r\n              fontSize=\"xl\"\r\n              fontWeight=\"bold\"\r\n              marginTop={2}\r\n            >\r\n              Non Invasive Measurement of Blood Glucose &Haemoglobin (Winner\r\n              TIF-2019)\r\n            </Heading>\r\n            <Text padding={2} maxW={'3xl'}>\r\n              <blockquote> We were working on our device for few months and always wanted to\r\n              make it into a startup to help people. That’s when we came across\r\n              Tech and Innovation Fair at Shaastra ‘19 in IIT Madras. The TIF\r\n              platform helped us by organising workshops on IPR and Pitching. At\r\n              the end of the day, we were also given an opportunity for\r\n              pre-incubation at the IITM Research Park. This event helped us\r\n              take our product to the next phase.</blockquote>\r\n              <br />\r\n              <Text fontStyle=\"italic\" fontWeight=\"bold\">\r\n                -Sriram Shreedharan, Team Leader Glucoglobin.\r\n              </Text>\r\n            </Text>\r\n          </Box>\r\n          <Box\r\n            shadow=\"lg\"\r\n            borderWidth=\"2px\"\r\n            borderRadius=\"md\"\r\n            maxwidth={500}\r\n            padding={2}\r\n            m={2}\r\n            className=\"success-stories4\"\r\n          >\r\n            <Heading\r\n              fontSize=\"xl\"\r\n              fontWeight=\"bold\"\r\n              marginTop={2}\r\n            >\r\n              Foldable House (Winner TIF-2018)\r\n            </Heading>\r\n            <Text padding={2} maxW={'3xl'}>\r\n              <blockquote>We were a project prototype while we registered for Shaastra TIF\r\n              2018. TIF 2018 gave us much insights through its mentoring\r\n              sessions and webinars. It helped us to work more aggressively on\r\n              our project and now its soon to be launched as a startup.</blockquote>\r\n              <br />\r\n              <Text fontStyle=\"italic\" fontWeight=\"bold\">\r\n                -Shree Ram, CEO & Co-founder, Modulus Housing\r\n              </Text>\r\n            </Text>\r\n          </Box>\r\n        </SimpleGrid>\r\n        <Center>\r\n          <Heading textAlign=\"center\" fontWeight={700} lineHeight={\"110%\"}>\r\n            Exhibitions and{\"   \"}\r\n            <Text as={\"span\"} color={colorvariant}>\r\n              Research Park Visit\r\n            </Text>\r\n          </Heading>\r\n        </Center>\r\n        <SimpleGrid\r\n          minChildWidth=\"320px\"\r\n          spacing=\"40px\"\r\n          marginBottom={10}\r\n          marginTop={10}\r\n          paddingBottom={12}\r\n        >\r\n          <Center>\r\n            <Image\r\n              src={tif5}\r\n              alt=\"tif_5\"\r\n              w=\"301px\"\r\n              h=\"301px\"\r\n              objectFit=\"cover\"\r\n              rounded={'2xl'}\r\n            ></Image>\r\n            <Box zIndex=\"-1\" width=\"350px\" position=\"absolute\" height=\"350px\">\r\n              <Box\r\n                bgGradient={useColorModeValue(\r\n                  \"radial(orange.600 1px, transparent 1px)\",\r\n                  \"radial(orange.300 1px, transparent 1px)\"\r\n                )}\r\n                backgroundSize=\"11px 11px\"\r\n                opacity=\"1\"\r\n                height=\"100%\"\r\n              />\r\n            </Box>\r\n          </Center>\r\n          <Center>\r\n            <Image\r\n              src={tif6}\r\n              alt=\"tif_6\"\r\n              w=\"301px\"\r\n              h=\"301px\"\r\n              objectFit=\"cover\"\r\n              rounded={'2xl'}\r\n            ></Image>\r\n            <Box zIndex=\"-1\" width=\"350px\" position=\"absolute\" height=\"350px\">\r\n              <Box\r\n                bgGradient={useColorModeValue(\r\n                  \"radial(orange.600 1px, transparent 1px)\",\r\n                  \"radial(orange.300 1px, transparent 1px)\"\r\n                )}\r\n                backgroundSize=\"11px 11px\"\r\n                opacity=\"1\"\r\n                height=\"100%\"\r\n              />\r\n            </Box>\r\n          </Center>\r\n        </SimpleGrid>\r\n      </Box>\r\n      <Footer\r\n        designed={[{ name: \"Drishti\", mail: \"me19b100@smail.iitm.ac.in\" },{ name: \"Srinivas\", mail: \"ch19b052@smail.iitm.ac.in\" }]}\r\n      />\r\n    </CustomBox>\r\n  );\r\n}\r\n\r\nexport default Tif;\r\n","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Team_page\\Team.tsx",["402","403","404","405","406","407"],"C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Events and Workshops\\AddEvent.tsx",["408","409","410","411","412","413","414","415","416","417","418","419"],"import * as React from \"react\";\r\nimport {\r\n  Text,\r\n  Stack,\r\n  Flex,\r\n  Link,\r\n  Box,\r\n  Heading,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Image,\r\n  Button,\r\n  Select,\r\n  RadioGroup,\r\n  Radio,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport CustomBox from \"../../shared/CustomBox\";\r\nimport ReactMde from \"react-mde\";\r\nimport * as Showdown from \"showdown\";\r\nimport \"../../../styles/Events.css\";\r\n\r\nimport bg from \"../../../images/EventsWorkshops/events/bg.jpeg\";\r\nimport {\r\n  GetEventsDocument,\r\n  RegistraionType,\r\n  useAddEventMutation,\r\n  useCreateEventFaqMutation,\r\n} from \"../../../generated/graphql\";\r\n\r\nimport AWS from \"aws-sdk\";\r\nimport { AddIcon, MinusIcon } from \"@chakra-ui/icons\";\r\ndeclare module \"react\" {\r\n  interface HTMLAttributes<T> extends AriaAttributes, DOMAttributes<T> {\r\n    directory?: string;\r\n    webkitdirectory?: string;\r\n    moxdirectory?: string;\r\n  }\r\n}\r\n\r\nconst converter = new Showdown.Converter({\r\n  tables: true,\r\n  simplifiedAutoLink: true,\r\n  strikethrough: true,\r\n  tasklists: true,\r\n});\r\n\r\nconst EventAdmin = () => {\r\n  const [value, setValue] = React.useState(\"Hello!\");\r\n  const [selectedTab, setSelectedTab] = React.useState<\"write\" | \"preview\">(\r\n    \"write\"\r\n  );\r\n\r\n  const [radio, setRadio] = useState<RegistraionType>(RegistraionType.None);\r\n  const [radioString, setRadioString] = useState(\"None\");\r\n  const [name, setName] = React.useState(\"\");\r\n  const [vertical, setVertical] = React.useState(\"\");\r\n  const [desp, setDesp] = React.useState(\"\");\r\n  const [platform, setPlatform] = React.useState(\"\");\r\n  const [req, setReq] = useState(\"\");\r\n  const [regStart, setRegStart] = useState(\"\");\r\n  const [regEn, setRegEnd] = useState(\"\");\r\n  const [eventStart, setEventStart] = useState(\"\");\r\n  const [eventEnd, setEventEnd] = useState(\"\");\r\n  const [teamSize, setTeamSize] = useState(0);\r\n  const [participation, setParticipation] = useState(\"\");\r\n  const [first, setFirst] = useState(\"\");\r\n  const [second, setSecond] = useState(\"\");\r\n  const [third, setThird] = useState(\"\");\r\n  const [fee, setFee] = useState(\"\");\r\n\r\n  const setEventType = () => {\r\n    switch (radioString) {\r\n      case \"Individual\":\r\n        setRadio(RegistraionType.Individual);\r\n        break;\r\n      case \"Team\":\r\n        setRadio(RegistraionType.Team);\r\n        break;\r\n      default:\r\n        setRadio(RegistraionType.None);\r\n    }\r\n  };\r\n\r\n  const [addEventMutation, { data, loading, error }] = useAddEventMutation();\r\n  const history = useHistory();\r\n\r\n  var [file, setFile] = useState<File>();\r\n  var [newFile, setNewFile] = useState<string>(\"\");\r\n\r\n  AWS.config.update({\r\n    accessKeyId: \"AKIA4VXHNASLCGXPQAHM\",\r\n    secretAccessKey: \"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\",\r\n  });\r\n  const myBucket = new AWS.S3({\r\n    params: { Bucket: \"shaastra\" },\r\n    region: \"ap-south-1\",\r\n  });\r\n  const UploadImageToS3WithNativeSdk = async (file: any) => {\r\n    const params = {\r\n      ACL: \"public-read\",\r\n      Body: file,\r\n      Bucket: \"shaastra\",\r\n      Key: file.name,\r\n    };\r\n\r\n    await myBucket\r\n      .putObject(params)\r\n      .on(\"httpUploadProgress\", (evt) => {})\r\n      .send((err) => {\r\n        if (err) console.log(err);\r\n      });\r\n  };\r\n\r\n  var { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const [faqs, setfaqs] = React.useState([{ question: \"\", answer: \"\" }]);\r\n  const [addfaq] = useCreateEventFaqMutation();\r\n\r\n  const handleFqsInput = ({\r\n    index,\r\n    event,\r\n  }: {\r\n    index: number;\r\n    event: React.ChangeEvent<HTMLInputElement>;\r\n  }) => {\r\n    const values = [...faqs];\r\n\r\n    if (event.target.name === \"question\") {\r\n      values[index][\"question\"] = event.target.value;\r\n    } else {\r\n      values[index][\"answer\"] = event.target.value;\r\n    }\r\n    setfaqs(values);\r\n  };\r\n\r\n  if (data) {\r\n    onClose = () => {\r\n      history.push(\"/admin\");\r\n    };\r\n    return (\r\n      <Modal isOpen={true} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent backgroundColor=\"#addfd0\" color=\"black\">\r\n          <ModalHeader>Event Added</ModalHeader>\r\n          <ModalCloseButton />\r\n        </ModalContent>\r\n      </Modal>\r\n    );\r\n  }\r\n  if (error) {\r\n    onClose = () => {\r\n      window.location.reload();\r\n    };\r\n    return (\r\n      <Modal isOpen={true} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent backgroundColor=\"#f1aaaa\" color=\"black\">\r\n          <ModalHeader>Error Occurred</ModalHeader>\r\n          <ModalCloseButton />\r\n        </ModalContent>\r\n      </Modal>\r\n    );\r\n  }\r\n  if (loading) {\r\n    onClose = () => {\r\n      history.push(\"/admin/add\");\r\n    };\r\n    return (\r\n      <Modal isOpen={true} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent backgroundColor=\"#e2e19c\" color=\"black\">\r\n          <ModalHeader>Loading...</ModalHeader>\r\n          <ModalCloseButton />\r\n        </ModalContent>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <CustomBox>\r\n      <Stack\r\n        textAlign={\"center\"}\r\n        align={\"center\"}\r\n        spacing={{ base: 8, md: 8 }}\r\n        py={{ base: 20, md: 20 }}\r\n      >\r\n        <Heading>ADD EVENT</Heading>\r\n        <Box\r\n          backgroundImage={bg}\r\n          width=\"100vw\"\r\n          padding=\"4vw\"\r\n          className=\"admin-add\"\r\n        >\r\n          <Box\r\n            backgroundImage=\"linear-gradient(-45deg, #ffffff98, #ffffff09)\"\r\n            borderRadius=\"24px\"\r\n            backdropFilter=\"blur(30px)\"\r\n            padding=\"5vw\"\r\n          >\r\n            <Flex\r\n              width=\"100%\"\r\n              justifyContent=\"space-between\"\r\n              alignItems=\"flex-end\"\r\n            >\r\n              <FormControl>\r\n                <FormLabel fontSize=\"1.5vw\">Name of Event</FormLabel>\r\n                <Input\r\n                  type=\"text\"\r\n                  outline=\"none\"\r\n                  color=\"black\"\r\n                  backgroundColor=\"transparent\"\r\n                  borderBottom=\"5px solid white\"\r\n                  onChange={(e: any) => {\r\n                    setName(e.target.value);\r\n                  }}\r\n                ></Input>\r\n              </FormControl>\r\n              <Select\r\n                placeholder=\"Vertical\"\r\n                width=\"30vw\"\r\n                marginLeft=\"5vw\"\r\n                onChange={(e: any) => {\r\n                  setVertical(e.target.value);\r\n                }}\r\n              >\r\n                <option value=\"AEROFEST\">AeroFest</option>\r\n                <option value=\"BIOGEN\">Biogen</option>\r\n                <option value=\"BEVENTS\">BEvents</option>\r\n                <option value=\"CL\">Coding & Logic</option>\r\n                <option value=\"DB\">Design & Build</option>\r\n                <option value=\"ELECFEST\">ElecFest</option>\r\n                <option value=\"IGNITE\">Ignite</option>\r\n                <option value=\"STRATEGISTS\">Strategists</option>\r\n                <option value=\"WORKSHOPS\">Workshops</option>\r\n              </Select>\r\n            </Flex>\r\n            <FormControl marginTop=\"4vh\">\r\n              <FormLabel fontSize=\"1.5vw\">Description</FormLabel>\r\n              <ReactMde\r\n                value={desp}\r\n                onChange={setDesp}\r\n                selectedTab={selectedTab}\r\n                onTabChange={setSelectedTab}\r\n                generateMarkdownPreview={(markdown) => {\r\n                  return Promise.resolve(converter.makeHtml(markdown));\r\n                }}\r\n              ></ReactMde>\r\n            </FormControl>\r\n            <Flex width=\"100%\" marginBottom=\"4vh\">\r\n              <FormControl>\r\n                <FormLabel>Platform</FormLabel>\r\n                <Input\r\n                  type=\"text\"\r\n                  outline=\"none\"\r\n                  color=\"black\"\r\n                  backgroundColor=\"transparent\"\r\n                  borderBottom=\"5px solid white\"\r\n                  onChange={(e: any) => {\r\n                    setPlatform(e.target.value);\r\n                  }}\r\n                ></Input>\r\n              </FormControl>\r\n              <FormControl width=\"150%\" marginLeft=\"2vw\">\r\n                <FormLabel>Requirements</FormLabel>\r\n                <Input\r\n                  type=\"text\"\r\n                  outline=\"none\"\r\n                  color=\"black\"\r\n                  backgroundColor=\"transparent\"\r\n                  borderBottom=\"5px solid white\"\r\n                  onChange={(e: any) => {\r\n                    setReq(e.target.value);\r\n                  }}\r\n                ></Input>\r\n              </FormControl>\r\n            </Flex>\r\n            <Flex width=\"100%\" marginBottom=\"4vh\">\r\n              <FormControl>\r\n                <FormLabel>Registration Start</FormLabel>\r\n                <Input\r\n                  type=\"date\"\r\n                  outline=\"none\"\r\n                  color=\"black\"\r\n                  backgroundColor=\"transparent\"\r\n                  borderBottom=\"5px solid white\"\r\n                  onChange={(e: any) => {\r\n                    setRegStart(e.target.value);\r\n                  }}\r\n                  value={regStart}\r\n                ></Input>\r\n              </FormControl>\r\n              <FormControl marginLeft=\"2vw\">\r\n                <FormLabel>Registration End</FormLabel>\r\n                <Input\r\n                  type=\"date\"\r\n                  outline=\"none\"\r\n                  color=\"black\"\r\n                  backgroundColor=\"transparent\"\r\n                  borderBottom=\"5px solid white\"\r\n                  onChange={(e: any) => {\r\n                    setRegEnd(e.target.value);\r\n                  }}\r\n                ></Input>\r\n              </FormControl>\r\n            </Flex>\r\n            <Flex width=\"100%\" marginBottom=\"4vh\">\r\n              <FormControl>\r\n                <FormLabel>Event Start</FormLabel>\r\n                <Input\r\n                  type=\"date\"\r\n                  outline=\"none\"\r\n                  color=\"black\"\r\n                  backgroundColor=\"transparent\"\r\n                  borderBottom=\"5px solid white\"\r\n                  onChange={(e: any) => {\r\n                    setEventStart(e.target.value);\r\n                  }}\r\n                ></Input>\r\n              </FormControl>\r\n              <FormControl marginLeft=\"2vw\">\r\n                <FormLabel>Event End</FormLabel>\r\n                <Input\r\n                  type=\"date\"\r\n                  outline=\"none\"\r\n                  color=\"black\"\r\n                  backgroundColor=\"transparent\"\r\n                  borderBottom=\"5px solid white\"\r\n                  onChange={(e: any) => {\r\n                    setEventEnd(e.target.value);\r\n                  }}\r\n                ></Input>\r\n              </FormControl>\r\n            </Flex>\r\n            <Flex marginBottom=\"4vh\">\r\n              <FormControl>\r\n                <FormLabel>Participation Points</FormLabel>\r\n                <Input\r\n                  type=\"text\"\r\n                  outline=\"none\"\r\n                  color=\"black\"\r\n                  backgroundColor=\"transparent\"\r\n                  borderBottom=\"5px solid white\"\r\n                  onChange={(e: any) => {\r\n                    setParticipation(e.target.value);\r\n                  }}\r\n                ></Input>\r\n              </FormControl>\r\n              <FormControl marginLeft=\"2vw\">\r\n                <FormLabel>Winner Up points</FormLabel>\r\n                <Input\r\n                  type=\"text\"\r\n                  outline=\"none\"\r\n                  color=\"black\"\r\n                  backgroundColor=\"transparent\"\r\n                  borderBottom=\"5px solid white\"\r\n                  onChange={(e: any) => {\r\n                    setFirst(e.target.value);\r\n                  }}\r\n                ></Input>\r\n              </FormControl>\r\n              <FormControl marginLeft=\"2vw\">\r\n                <FormLabel>Runner Up points</FormLabel>\r\n                <Input\r\n                  type=\"text\"\r\n                  outline=\"none\"\r\n                  color=\"black\"\r\n                  backgroundColor=\"transparent\"\r\n                  borderBottom=\"5px solid white\"\r\n                  onChange={(e: any) => {\r\n                    setSecond(e.target.value);\r\n                  }}\r\n                ></Input>\r\n              </FormControl>\r\n              <FormControl marginLeft=\"2vw\">\r\n                <FormLabel>Third position points</FormLabel>\r\n                <Input\r\n                  type=\"text\"\r\n                  outline=\"none\"\r\n                  color=\"black\"\r\n                  backgroundColor=\"transparent\"\r\n                  borderBottom=\"5px solid white\"\r\n                  onChange={(e: any) => {\r\n                    setThird(e.target.value);\r\n                  }}\r\n                ></Input>\r\n              </FormControl>\r\n            </Flex>\r\n            <FormControl>\r\n              <FormLabel>Upload picture</FormLabel>\r\n              <Input\r\n                type=\"file\"\r\n                outline=\"none\"\r\n                color=\"black\"\r\n                backgroundColor=\"transparent\"\r\n                borderBottom=\"5px solid white\"\r\n                onChange={(e: any) => {\r\n                  setFile(e.target.files[0]); console.log(e.target.files[0])\r\n                  setNewFile(`https://shaastra.s3.ap-south-1.amazonaws.com/${e.target.files[0].name}`)\r\n                }}\r\n              ></Input>\r\n            </FormControl>\r\n            <FormControl>\r\n              <FormLabel fontSize=\"1.5vw\">Registration fee (Enter the fee in INR)</FormLabel>\r\n              <Input\r\n                type=\"text\"\r\n                outline=\"none\"\r\n                color=\"black\"\r\n                backgroundColor=\"transparent\"\r\n                borderBottom=\"5px solid white\"\r\n                onChange={(e: any) => {\r\n                  setFee(e.target.value);\r\n                }}\r\n              ></Input>\r\n            </FormControl>\r\n            <Flex\r\n              alignItems=\"center\"\r\n              justifyContent=\"space-between\"\r\n              width=\"100%\"\r\n              className=\"admin-team\"\r\n            >\r\n              <FormControl color=\"black\" marginTop=\"4vh\">\r\n                <RadioGroup\r\n                  onChange={(e: any) => {\r\n                    switch (e) {\r\n                      case \"Individual\":\r\n                        setRadio(RegistraionType.Individual);\r\n                        break;\r\n                      case \"Team\":\r\n                        setRadio(RegistraionType.Team);\r\n                        break;\r\n                      default:\r\n                        setRadio(RegistraionType.None);\r\n                    }\r\n                  }}\r\n                >\r\n                  <Radio value=\"Individual\" marginRight=\"2vw\">\r\n                    Individual\r\n                  </Radio>\r\n                  <Radio value=\"Team\" marginRight=\"2vw\">\r\n                    Team\r\n                  </Radio>\r\n                  <Radio value=\"None\">None</Radio>\r\n                </RadioGroup>\r\n              </FormControl>\r\n              {radio === RegistraionType.Team && (\r\n                <FormControl marginTop=\"4vh\" width=\"10vw\">\r\n                  <FormLabel color=\"black\">Team size</FormLabel>\r\n                  <Input\r\n                    type=\"number\"\r\n                    outline=\"none\"\r\n                    color=\"black\"\r\n                    backgroundColor=\"transparent\"\r\n                    borderBottom=\"5px solid white\"\r\n                    onChange={(e: any) => {\r\n                      setTeamSize(parseInt(e.target.value));\r\n                    }}\r\n                  ></Input>\r\n                </FormControl>\r\n              )}\r\n            </Flex>\r\n            <Flex p={2}>\r\n              <Heading size={\"md\"} m={2}>\r\n                Add Fqs{\" \"}\r\n              </Heading>\r\n            </Flex>\r\n            {faqs.map((faq, index) => {\r\n              return (\r\n                <React.Fragment key={index}>\r\n                  <Flex p={2}>\r\n                    <FormControl m={2}>\r\n                      <Input\r\n                        name=\"question\"\r\n                        placeholder={\"Question\"}\r\n                        id={\"faqq\" + index}\r\n                        outline=\"none\"\r\n                        color=\"black\"\r\n                        backgroundColor=\"transparent\"\r\n                        borderBottom=\"5px solid white\"\r\n                        value={faq.question}\r\n                        onChange={(event) => handleFqsInput({ index, event })}\r\n                      />\r\n                    </FormControl>\r\n                    <FormControl m={2}>\r\n                      <Input\r\n                        name=\"answer\"\r\n                        placeholder={\"Answer\"}\r\n                        onChange={(event) => handleFqsInput({ index, event })}\r\n                        id={\"faqa\" + index}\r\n                        outline=\"none\"\r\n                        color=\"black\"\r\n                        backgroundColor=\"transparent\"\r\n                        borderBottom=\"5px solid white\"\r\n                        value={faq.answer}\r\n                      />\r\n                    </FormControl>\r\n                    <Flex\r\n                      p={[0, 3]}\r\n                      width={\"40px\"}\r\n                      flexDirection={[\"column\", \"row\"]}\r\n                    >\r\n                      {index === 0 ? null : (\r\n                        <Button\r\n                          mx={2}\r\n                          my={1}\r\n                          size={\"xs\"}\r\n                          onClick={() => {\r\n                            const values = [...faqs];\r\n                            values.splice(index, 1);\r\n                            setfaqs(values);\r\n                          }}\r\n                        >\r\n                          <MinusIcon />\r\n                        </Button>\r\n                      )}\r\n                      <Button\r\n                        mx={2}\r\n                        my={1}\r\n                        size={\"xs\"}\r\n                        onClick={() =>\r\n                          setfaqs([...faqs, { question: \"\", answer: \"\" }])\r\n                        }\r\n                      >\r\n                        <AddIcon />\r\n                      </Button>\r\n                    </Flex>\r\n                  </Flex>\r\n                </React.Fragment>\r\n              );\r\n            })}\r\n            <Button\r\n              marginTop=\"4vh\"\r\n              width=\"100%\"\r\n              backgroundColor=\"white\"\r\n              color=\"#0e101b\"\r\n              onClick={async (e: any) => {\r\n                e.preventDefault();\r\n                console.log(file);\r\n                if( fee != \"0\" && !parseInt(fee)){\r\n                  alert(\"Enter a valid registration fee\")\r\n                }else{\r\n                try {\r\n                  if(newFile !== '') await UploadImageToS3WithNativeSdk(file)\r\n                  await addEventMutation({\r\n                    variables: {\r\n                      data: {\r\n                        name: name,\r\n                        description: desp,\r\n                        eventTimeFrom: eventStart ? new Date(eventStart).toDateString() : null,\r\n                        eventTimeTo: eventEnd ? new Date(eventEnd).toDateString(): null,\r\n                        registrationType: radio,\r\n                        platform: platform,\r\n                        requirements: req,\r\n                        vertical: vertical,\r\n                        pic: newFile,\r\n                        finalistst: \"\",\r\n                        firstplace: first,\r\n                        participation: participation,\r\n                        secondplace: second,\r\n                        thirdplace: third,\r\n                        teamSize: teamSize,\r\n                        registrationCloseTime: regEn ?new Date(regEn).toDateString() : null,\r\n                        registrationOpenTime: regStart ? new Date(regStart).toDateString() : null,\r\n                        registrationfee: fee,\r\n                      },\r\n                    },\r\n                    refetchQueries: [\r\n                      {\r\n                        query: GetEventsDocument,\r\n                        variables: { getEventsFilter: vertical },\r\n                      },\r\n                    ],\r\n                  }).then((res) => {\r\n                    if (res.data?.addEvent.id) {\r\n                      faqs.map(async (faq) => {\r\n                        await addfaq({\r\n                          variables: {\r\n                            id: res.data?.addEvent.id!,\r\n                            data: {\r\n                              question: faq.question,\r\n                              answer: faq.answer,\r\n                            },\r\n                          },\r\n                        }).catch((err) => console.log(error));\r\n                      });\r\n                    }\r\n                  });\r\n                } catch (err) {\r\n                  console.log(err);\r\n                }\r\n              }\r\n              }}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Stack>\r\n    </CustomBox>\r\n  );\r\n};\r\n\r\nexport default EventAdmin;\r\n","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Events and Workshops\\EventVertical.tsx",["420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437"],"C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Login\\Login.tsx",["438","439","440","441","442","443","444"],"import React from \"react\"\r\nimport {\r\n    Text,\r\n    Stack,\r\n    Flex,\r\n    Link,\r\n    Box,\r\n    Heading,\r\n    Input,\r\n    Button,\r\n    FormLabel,\r\n    FormControl,\r\n    Image,\r\n    useColorModeValue,\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    useDisclosure,\r\n  } from '@chakra-ui/react'\r\nimport \"../../../styles/Login.css\"\r\nimport bg from \"../../../images/Login/login.svg\"\r\nimport success from \"../../../images/Login/login-success.svg\"\r\nimport errorSVG from \"../../../images/Login/login-error.svg\"\r\nimport CustomBox from '../../shared/CustomBox'\r\nimport Footer from '../../shared/Footer'\r\nimport { LoginInput, useLoginMutation, UserRole } from \"../../../generated/graphql\"\r\nimport { useState } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\nconst Login = () => {\r\n\r\n    const gradient = useColorModeValue(\"blackG\", \"whiteG\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const history = useHistory()\r\n\r\n\r\n    const [loginMutation, {data, loading, error}] = useLoginMutation()\r\n\r\n    var { isOpen, onOpen, onClose } = useDisclosure()\r\n\r\n    if(data)\r\n    {\r\n        if(data.login?.isVerified === false) history.push(\"/verify\")\r\n        else\r\n        if(data.login?.role === UserRole.User) localStorage.setItem(\"role\", \"User\")\r\n        else \r\n         if(data.login?.role === UserRole.Admin)\r\n         { \r\n             localStorage.setItem(\"role\", \"Admin\") \r\n             history.push(\"/admin\")\r\n\r\n        }\r\n        onClose = () => {history.push('/')}\r\n        return(\r\n            <Modal isOpen={true} onClose={onClose} isCentered>\r\n                <ModalOverlay />\r\n                <ModalContent color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\r\n                    <Image src={success} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\r\n                    <ModalCloseButton />\r\n                    <ModalBody backgroundColor=\"#A7EAAA\" width=\"100%\" padding=\"2vw\">\r\n                        <Text textAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]} backgroundColor=\"#A7EAAA\" borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Logged in successfully!</Text>\r\n                    </ModalBody>\r\n                 </ModalContent>\r\n            </Modal>\r\n        )\r\n    }\r\n    if(error)\r\n    {\r\n        if(error.message === \"Oops, email not verified!\")\r\n        {\r\n            onClose = () => {history.push('/')}\r\n            return(\r\n                <Modal isOpen={true} onClose={onClose} isCentered>\r\n                    <ModalOverlay />\r\n                    <ModalContent  color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\r\n                        <Image src={errorSVG} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\r\n                        <ModalBody backgroundColor=\"#f1aaaa\" width=\"100%\" padding=\"2vw\">\r\n                            <Text xtAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]} backgroundColor=\"#A7EAAA\" borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Email not verified. Check your registered Email ID for the verification link</Text>\r\n                        </ModalBody>\r\n                        <ModalCloseButton />\r\n                    </ModalContent>\r\n                </Modal>\r\n            )\r\n        }\r\n        else \r\n         \r\n        if(error.message.includes(\"Could not find any entity of type\"))\r\n         {\r\n                onClose = () => {history.push('/signup')}\r\n                return(\r\n                    <Modal isOpen={true} onClose={onClose} isCentered>\r\n                    <ModalOverlay />\r\n                    <ModalContent color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\r\n                        <Image src={errorSVG} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\r\n                        <ModalBody backgroundColor=\"#f1aaaa\" width=\"100%\" padding=\"2vw\">\r\n                            <Text textAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]}  borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Email ID not registered. <br />Sign up to continue</Text>\r\n                        </ModalBody>\r\n                        <ModalCloseButton />\r\n                    </ModalContent>\r\n                </Modal>\r\n                )\r\n         }\r\n         else\r\n          if(error.message === \"Invalid Credential\")\r\n          {\r\n            onClose = () => {window.location.reload()}\r\n                return(\r\n                    <Modal isOpen={true} onClose={onClose} isCentered>\r\n                    <ModalOverlay />\r\n                    <ModalContent color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\r\n                        <Image src={errorSVG} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\r\n                        <ModalBody backgroundColor=\"#f1aaaa\" width=\"100%\" padding=\"2vw\">\r\n                            <Text textAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]}  borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Invalid Credentials</Text>\r\n                        </ModalBody>\r\n                        <ModalCloseButton />\r\n                    </ModalContent>\r\n                </Modal>\r\n                )\r\n          }\r\n          else \r\n          {\r\n            onClose = () => {window.location.reload()}\r\n            return(\r\n                <Modal isOpen={true} onClose={onClose} isCentered>\r\n                    <ModalOverlay />\r\n                    <ModalContent color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\r\n                        <Image src={errorSVG} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\r\n                        <ModalBody backgroundColor=\"#f1aaaa\" width=\"100%\" padding=\"2vw\">\r\n                            <Text textAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]}  borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Some error occurred</Text>\r\n                        </ModalBody>\r\n                        <ModalCloseButton />\r\n                    </ModalContent>\r\n                </Modal>\r\n            )\r\n          }\r\n    }\r\n    if(loading)\r\n    {\r\n        onClose = () => {}\r\n        return(\r\n            <Modal isOpen={true} onClose={onClose}>\r\n                <ModalOverlay />\r\n                <ModalContent backgroundColor=\"#e2e19c\" color=\"black\">\r\n                    <ModalHeader>Loading...</ModalHeader>\r\n                    <ModalCloseButton />\r\n                 </ModalContent>\r\n            </Modal>\r\n        )\r\n    }\r\n    return(\r\n        <CustomBox>\r\n            <Flex className=\"login\" width=\"100vw\" height=\"100vh\" justifyContent=\"center\" alignItems=\"center\" position=\"relative\" zIndex=\"1\">\r\n            <Box width=\"60vw\"  className={`${gradient} login-main-box`} height=\"fit-content\" padding=\"5vw\" borderRadius=\"24px\">\r\n                    <Heading fontSize=\"4vw\" marginBottom=\"6vh\">LOG<span>IN</span></Heading>\r\n                    <Input placeholder=\"Email ID\" marginBottom=\"4vh\" type=\"email\" onChange={(e:any) => {setEmail(e.target.value)}}></Input>\r\n                    <Input placeholder=\"Password\" type=\"password\" onChange={(e:any) => {setPassword(e.target.value)}}></Input>\r\n                    <Button width=\"100%\"  backgroundColor=\"#2467a1\" marginBottom=\"4vh\" marginTop=\"6vh\"\r\n                        onClick={async (e) => {\r\n                            e.preventDefault();\r\n                            try\r\n                            {\r\n                                await loginMutation({variables: {LoginInput: {email: email, password: password}}})\r\n                            }\r\n                            catch(err) {console.log(err)}\r\n                        }}\r\n                        color=\"white\"\r\n                    >Login</Button>\r\n                    <Flex width=\"100%\" justifyContent=\"space-between\" >\r\n                        <Link href=\"/forgotpassword\">Forgot password?</Link>\r\n                        <Link href=\"/signup\">Sign Up</Link>\r\n                    </Flex>\r\n                </Box>\r\n                <Image src={bg} boxSize=\"25vw\" bottom=\"30%\" right=\"0%\" className=\"login-image\"></Image>\r\n            </Flex>\r\n            <Footer designed={[{ name: 'Krithikaa', mail: 'be20b020@smail.iitm.ac.in' }]} ></Footer>\r\n        </CustomBox>  \r\n    )\r\n}\r\n\r\nexport default Login","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Events and Workshops\\EventsAdmin.tsx",["445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466"],"C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Events and Workshops\\EWHome.tsx",["467","468","469","470","471"],"import React from 'react'\r\nimport CustomBox from '../../shared/CustomBox'\r\nimport Footer from '../../shared/Footer'\r\nimport {\r\n    Flex,\r\n    Text,\r\n    Heading,\r\n    Center,\r\n    Box,\r\n    VStack,\r\n    Image,\r\n    Link,\r\n    Button,\r\n  } from '@chakra-ui/react'\r\n  import Bg from \"../../../images/EventsWorkshops/events/homeBg.jpg\"\r\n  import \"./EWHome.css\"\r\n  import { ChevronRightIcon } from '@chakra-ui/icons'\r\n  import summit from '../../../images/EventsWorkshops/summit/summit_5.jpg'\r\nimport tif from '../../../images/EventsWorkshops/tif/tif_4.png'\r\nimport workshop from \"../../../images/EventsWorkshops/events/workshop.jpeg\"\r\nimport events from \"../../../images/EventsWorkshops/events/eventsHome.jpeg\"\r\n\r\nconst Home = () => {\r\n    return(\r\n        <CustomBox>\r\n            <Flex className=\"EWHome\" flexDirection={\"column\"} position={\"relative\"} backgroundImage={Bg} backgroundRepeat={\"none\"} backgroundPosition={\"center\"} backgroundSize={\"cover\"} justifyContent={\"center\"} alignItems={\"center\"} width=\"100vw\" height=\"100vh\" backgroundColor={\"yellow\"}>\r\n                <Box position={\"absolute\"} content=\"\" width=\"100vw\" height=\"100vh\" top=\"0\" left=\"0\" backgroundColor={\"rgba(0, 0, 0, 0.7)\"}></Box>\r\n                <Center>\r\n                    <Heading\r\n                        position={\"relative\"} zIndex={1}\r\n                        fontSize={{ base: \"2xl\", sm: \"4xl\", md: \"6xl\" }}\r\n                        textAlign=\"center\"\r\n                    >\r\n                        <Text as={\"span\"} display={'inline-flex'} alignItems={'center'} color=\"white\">\r\n                        EVENTS<Text mx={2} as={'h2'} fontSize={['4xl','7xl']} color={\"#ea8a94\"} className='ampersand'>&</Text> WORKSHOPS\r\n                        </Text>\r\n                    </Heading>\r\n                </Center>\r\n                <Flex color=\"white\" flexDirection={[\"column\", \"row\"]} height={[\"60vh\", \"fit-content\"]} fontSize={[\"3vw\",\"1.5vw\"]} position={\"relative\"} zIndex={1} width=\"80%\" margin=\"0 auto\" marginTop={\"4vh\"} justifyContent={\"space-between\"} alignItems={\"center\"}>\r\n                <a href=\"/events\"><Flex className='EWHome-circle' justifyContent={\"center\"} alignItems={\"center\"} borderRadius={\"50%\"} border=\"2px solid white\" boxSize={[\"20vw\",\"10vw\"]}>Events</Flex></a>\r\n                <a href=\"/events/workshops\"><Flex className='EWHome-circle' justifyContent={\"center\"} alignItems={\"center\"} borderRadius={\"50%\"} border=\"2px solid white\" boxSize={[\"20vw\",\"10vw\"]}>Workshops</Flex></a>\r\n                    {/* <Flex className='EWHome-circle' justifyContent={\"center\"} alignItems={\"center\"} borderRadius={\"50%\"} border=\"2px solid white\" boxSize={[\"20vw\",\"10vw\"]}><a href='/summit'>Summit</a></Flex> */}\r\n                    {/* <Flex className='EWHome-circle' justifyContent={\"center\"} alignItems={\"center\"} borderRadius={\"50%\"} border=\"2px solid white\" boxSize={[\"20vw\",\"10vw\"]}><a href=\"/tif\">TIF</a></Flex> */}\r\n                </Flex>\r\n            </Flex>\r\n            <Flex width={[\"90vw\",\"70vw\"]} margin=\"auto\" flexDirection={\"column\"} className='EWHomeDesp' marginTop={\"8vh\"}>\r\n                <Flex flexDirection={[\"column\", \"row\"]} width={\"100%\"} justifyContent={\"space-between\"}  alignItems={\"center\"} marginBottom={\"8vh\"}>\r\n                    <Image boxSize={[\"50vw\",\"18vw\"]} src={events} objectFit={\"cover\"} objectPosition={\"0% 10%\"}></Image>\r\n                    <Text\r\n                        textAlign='left'\r\n                        as='p'\r\n                        marginTop='2'\r\n                        width={[\"100%\",\"60%\"]}\r\n                        fontSize={['4vw','lg']}\r\n                        p={2}\r\n                    >\r\n                        Have you ever wanted to work on modeling a real airplane? Do\r\n                        \"hacking\" scenes in movies and TV Shows make you roll your eyes?\r\n                        Shaastra brings you several events every year. Some of the\r\n                        events conducted last year as a part of Shaastra were Boeing\r\n                        Aeromodelling Competition, Global Biotech Council, Shaastra\r\n                        Programming Contest. Capture the Flag (CTF) and many more.\r\n                        <br /> <br></br>\r\n                        <a href=\"/events\">Explore EVENTS <ChevronRightIcon></ChevronRightIcon> </a>\r\n                    </Text>\r\n                </Flex>\r\n                <Flex flexDirection={[\"column\", \"row\"]} width={\"100%\"} justifyContent={\"space-between\"}  alignItems={\"center\"}  marginBottom={\"8vh\"}>\r\n                    <Image boxSize={[\"50vw\",\"18vw\"]} src={workshop} objectFit={\"cover\"}></Image>\r\n                    <Text\r\n                        textAlign='left'\r\n                        as='p'\r\n                        marginTop='2'\r\n                        width={[\"100%\",\"60%\"]}\r\n                        fontSize={['4vw','lg']}\r\n                        p={2}\r\n                    >\r\n                        As a part of Shaastra, we conduct several workshops every year,\r\n                        ranging over multiple topics. Some of the workshops that were\r\n                        conducted last year were Introduction to Data Science and\r\n                        Machine Learning, Cryptocurrency, and blockchain, How to Design\r\n                        a Mars Rover, Parallel Programming with Python, Make a chat app\r\n                        using Socket.io, Node.js, and MongoDB, and many more.\r\n                        <br /> <br></br>\r\n                        <a href=\"/events/workshops\">Explore WORKSHOPS <ChevronRightIcon></ChevronRightIcon> </a>\r\n                    </Text>\r\n                </Flex>\r\n                {/* <Flex flexDirection={[\"column\", \"row\"]} width={\"100%\"} justifyContent={\"space-between\"} alignItems={\"center\"}  marginBottom={\"8vh\"}>\r\n                    <Image boxSize={[\"50vw\",\"18vw\"]} src={summit} objectFit={\"cover\"}></Image>\r\n                    <Text\r\n                        textAlign='left'\r\n                        as='p'\r\n                        marginTop='2'\r\n                        width={[\"100%\",\"60%\"]}\r\n                        fontSize={['4vw','lg']}\r\n                        p={2}\r\n                    >\r\n                        Summit is the flagship conference of Shaastra, which provides a\r\n                        networking platform for its participants to interact with the\r\n                        pioneers of today, and opportunities to enhance their expertise.\r\n                        With a line-up of lectures, panel discussions and workshops\r\n                        spanning over 3 days, participants, which include college\r\n                        students, personnel from startups and professionals are ensured\r\n                        to get an all-round experience. Every year Summit ventures into\r\n                        a unique and relevant theme to contribute to the developments in\r\n                        these fields of technology and to create an impact on society.\r\n                        <br /> <br></br>\r\n                        <a href=\"/summit\">Explore SUMMIT <ChevronRightIcon></ChevronRightIcon> </a>\r\n                    </Text>\r\n                </Flex> */}\r\n                {/* <Flex flexDirection={[\"column\", \"row\"]} width={\"100%\"} justifyContent={\"space-between\"}  alignItems={\"center\"} marginBottom={\"8vh\"}>\r\n                    <Image boxSize={[\"50vw\",\"18vw\"]} src={tif} objectFit={\"cover\"}></Image>\r\n                    <Text\r\n                        textAlign='left'\r\n                        as='p'\r\n                        marginTop='2'\r\n                        width={[\"100%\",\"60%\"]}\r\n                        fontSize={['4vw','lg']}\r\n                        p={2}\r\n                    >\r\n                        Tech and Innovation fair is one of the flagship events in\r\n                        Shaastra that scouts for budding entrepreneurs by providing a\r\n                        platform to develop tech based projects and enhance their\r\n                        potential to grow into a commercial product. TIF envisions\r\n                        leveraging IIT Madras' rich startup ecosystem in its mission to\r\n                        promote innovation and address the dearth of hardcore tech\r\n                        startups in India\r\n                        <br /> <br></br>\r\n                        <a href=\"/tif\">Explore TIF <ChevronRightIcon></ChevronRightIcon> </a>\r\n                    </Text>\r\n                </Flex> */}\r\n            </Flex>\r\n            <Footer\r\n          designed={[{ name: 'Krithikaa', mail: 'be20b020@smail.iitm.ac.in' }]}\r\n          />  \r\n        </CustomBox>\r\n    )\r\n}\r\n\r\nexport default Home","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Login\\ForgotPassword.tsx",["472","473","474","475","476","477","478","479"],"import React from \"react\"\r\nimport {\r\n    Text,\r\n    Stack,\r\n    Flex,\r\n    Link,\r\n    Box,\r\n    Heading,\r\n    Input,\r\n    Button,\r\n    FormLabel,\r\n    FormControl,\r\n    Image,\r\n    useColorModeValue,\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    useDisclosure,\r\n  } from '@chakra-ui/react'\r\nimport \"../../../styles/Login.css\"\r\nimport { useState } from \"react\"\r\nimport bg from \"../../../images/Login/login.svg\"\r\nimport success from \"../../../images/Login/login-success.svg\"\r\nimport errorSVG from \"../../../images/Login/login-error.svg\"\r\nimport CustomBox from '../../shared/CustomBox'\r\nimport Footer from '../../shared/Footer'\r\nimport { useGetPasswordOtpMutation, useResendVerificationMailMutation } from \"../../../generated/graphql\"\r\nimport { useHistory } from \"react-router\"\r\n\r\n\r\nconst Forgot = () => {\r\n\r\n    const gradient = useColorModeValue(\"blackG\", \"whiteG\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const history = useHistory()\r\n\r\n    const [getPasswordOtpMutation, {data, loading, error}] = useGetPasswordOtpMutation()\r\n    var { isOpen, onOpen, onClose } = useDisclosure()\r\n    if(data)\r\n    {\r\n        onClose = () => {history.push('/resetpassword')}\r\n        return(\r\n            <Modal isOpen={true} onClose={onClose} isCentered>\r\n                <ModalOverlay />\r\n                <ModalContent color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\r\n                    <Image src={success} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\r\n                    <ModalCloseButton />\r\n                    <ModalBody backgroundColor=\"#A7EAAA\" width=\"100%\" padding=\"2vw\">\r\n                        <Text textAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]} backgroundColor=\"#A7EAAA\" borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Check your registered email ID for reset password OTP</Text>\r\n                    </ModalBody>\r\n                 </ModalContent>\r\n            </Modal>\r\n        )\r\n    }\r\n    else\r\n        if(loading)\r\n        {\r\n            onClose = () => {}\r\n            return(\r\n                <Modal isOpen={true} onClose={onClose}>\r\n                    <ModalOverlay />\r\n                    <ModalContent backgroundColor=\"#e2e19c\" color=\"black\">\r\n                        <ModalHeader>Loading...</ModalHeader>\r\n                        <ModalCloseButton />\r\n                    </ModalContent>\r\n                </Modal>\r\n            )\r\n        }\r\n        else \r\n            if(error)\r\n            {\r\n                if(error.message === \"Email Not found\")\r\n                {\r\n                onClose = () => {history.push('/signup')}\r\n                return(\r\n                    <Modal isOpen={true} onClose={onClose} isCentered>\r\n                    <ModalOverlay />\r\n                    <ModalContent  color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\r\n                        <Image src={errorSVG} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\r\n                        <ModalBody backgroundColor=\"#f1aaaa\" width=\"100%\" padding=\"2vw\">\r\n                            <Text xtAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]} backgroundColor=\"#A7EAAA\" borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Email ID not registered. <br />Kindly sign up.</Text>\r\n                        </ModalBody>\r\n                        <ModalCloseButton />\r\n                    </ModalContent>\r\n                </Modal>\r\n                )\r\n                }\r\n                else \r\n                {\r\n                onClose = () => {window.location.reload()}\r\n                return(\r\n                    <Modal isOpen={true} onClose={onClose} isCentered>\r\n                    <ModalOverlay />\r\n                    <ModalContent  color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\r\n                        <Image src={errorSVG} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\r\n                        <ModalBody backgroundColor=\"#f1aaaa\" width=\"100%\" padding=\"2vw\">\r\n                            <Text xtAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]} backgroundColor=\"#A7EAAA\" borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Error Occurred</Text>\r\n                        </ModalBody>\r\n                        <ModalCloseButton />\r\n                    </ModalContent>\r\n                </Modal>\r\n                )\r\n                }\r\n            }\r\n\r\n    return(\r\n        <CustomBox>\r\n            <Flex className=\"login\" width=\"100vw\" height=\"100vh\" justifyContent=\"center\" alignItems=\"center\" position=\"relative\" zIndex=\"1\">\r\n            <Box width=\"60vw\"  className={`${gradient} login-main-box`} height=\"fit-content\" padding=\"5vw\">\r\n                    <Heading fontSize=\"4vw\" marginBottom=\"6vh\">Forgot <span>Password</span></Heading>\r\n                    <Input placeholder=\"Enter Email ID\" marginBottom=\"4vh\" type=\"email\" onChange={(e:any) => {setEmail(e.target.value)}}></Input>\r\n                    <Button width=\"100%\"  backgroundColor=\"#2467a1\" marginBottom=\"4vh\" marginTop=\"6vh\"\r\n                        color=\"white\"\r\n                        onClick={async (e:any) => {\r\n                            e.preventDefault();\r\n                            try{\r\n                                await getPasswordOtpMutation({variables: {email: email}})\r\n                            }\r\n                            catch(err) {console.log(err)}\r\n                        }}\r\n                    >Submit</Button>\r\n                </Box>\r\n                <Image src={bg} boxSize=\"25vw\" bottom=\"30%\" right=\"0%\" className=\"login-image\"></Image>\r\n            </Flex>\r\n            <Footer designed={[{ name: 'Krithikaa', mail: 'be20b020@smail.iitm.ac.in' }]} ></Footer>\r\n        </CustomBox>  \r\n    )\r\n}\r\n\r\nexport default Forgot","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Login\\ForgotAfterLink.tsx",["480","481","482","483","484","485","486","487"],"import React, { useState } from \"react\"\r\nimport {\r\n    Text,\r\n    Stack,\r\n    Flex,\r\n    Link,\r\n    Box,\r\n    Heading,\r\n    Input,\r\n    Button,\r\n    FormLabel,\r\n    FormControl,\r\n    Image,\r\n    useColorModeValue,\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    useDisclosure,\r\n  } from '@chakra-ui/react'\r\nimport \"../../../styles/Login.css\"\r\nimport bg from \"../../../images/Login/login.svg\"\r\nimport CustomBox from '../../shared/CustomBox'\r\nimport Footer from '../../shared/Footer'\r\nimport { useResetPasswordMutation } from \"../../../generated/graphql\"\r\nimport { useHistory, useParams } from \"react-router\"\r\nimport success from \"../../../images/Login/login-success.svg\"\r\nimport errorSVG from \"../../../images/Login/login-error.svg\"\r\n\r\nconst ForgotAfter = () => {\r\n\r\n    const gradient = useColorModeValue(\"blackG\", \"whiteG\")\r\n    const history = useHistory()\r\n    const [email, setEmail] = useState(\"\")\r\n    const [pw, setPw] = useState(\"\")\r\n    const [otp, setOtp] = useState(\"\")\r\n\r\n    const [resetPasswordMutation, {data, loading, error}] = useResetPasswordMutation()\r\n\r\n    var { isOpen, onOpen, onClose } = useDisclosure()\r\n\r\n    if(data)\r\n    {\r\n        onClose = () => {history.push('/login')}\r\n        return(\r\n            <Modal isOpen={true} onClose={onClose} isCentered>\r\n                <ModalOverlay />\r\n                <ModalContent color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\r\n                    <Image src={success} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\r\n                    <ModalCloseButton />\r\n                    <ModalBody backgroundColor=\"#A7EAAA\" width=\"100%\" padding=\"2vw\">\r\n                        <Text textAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]} backgroundColor=\"#A7EAAA\" borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Password reset</Text>\r\n                    </ModalBody>\r\n                 </ModalContent>\r\n            </Modal>\r\n        )\r\n    }\r\n    else \r\n    {\r\n        if(loading)\r\n        {\r\n            onClose = () => {}\r\n            return(\r\n                <Modal isOpen={true} onClose={onClose}>\r\n                    <ModalOverlay />\r\n                    <ModalContent backgroundColor=\"#e2e19c\" color=\"black\">\r\n                        <ModalHeader>Loading...</ModalHeader>\r\n                        <ModalCloseButton />\r\n                    </ModalContent>\r\n                </Modal>\r\n            )\r\n        }\r\n        else \r\n        if(error)\r\n        {\r\n            if(error.message === \"Invalid Otp\")\r\n            {\r\n                \r\n                onClose = () => {history.push('/')}\r\n                return(\r\n                    <Modal isOpen={true} onClose={onClose} isCentered>\r\n                    <ModalOverlay />\r\n                    <ModalContent color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\r\n                        <Image src={errorSVG} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\r\n                        <ModalBody backgroundColor=\"#f1aaaa\" width=\"100%\" padding=\"2vw\">\r\n                            <Text textAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]}  borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Invalid OTP</Text>\r\n                        </ModalBody>\r\n                        <ModalCloseButton />\r\n                    </ModalContent>\r\n                </Modal>\r\n                )\r\n            }\r\n            else \r\n            {\r\n                onClose = () => {history.push('/')}\r\n                return(\r\n                    <Modal isOpen={true} onClose={onClose} isCentered>\r\n                    <ModalOverlay />\r\n                    <ModalContent color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\r\n                        <Image src={errorSVG} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\r\n                        <ModalBody backgroundColor=\"#f1aaaa\" width=\"100%\" padding=\"2vw\">\r\n                            <Text textAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]}  borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Error Occurred</Text>\r\n                        </ModalBody>\r\n                        <ModalCloseButton />\r\n                    </ModalContent>\r\n                </Modal>\r\n                )  \r\n            }\r\n        }\r\n    }\r\n\r\n    return(\r\n        <CustomBox>\r\n            <Flex className=\"login\" width=\"100vw\" height=\"100vh\" justifyContent=\"center\" alignItems=\"center\" position=\"relative\" zIndex=\"1\">\r\n            <Box width=\"60vw\"  className={`${gradient} login-main-box`} height=\"fit-content\" padding=\"5vw\">\r\n                    <Heading fontSize=\"4vw\" marginBottom=\"6vh\">Reset <span>Password</span></Heading>\r\n                    <Input placeholder=\"Enter registered Email ID\" type=\"text\" marginBottom=\"4vh\" onChange={(e:any) => {setEmail(e.target.value)}}></Input>\r\n                    <Input placeholder=\"Reset Password OTP\" type=\"text\" marginBottom=\"4vh\" value={otp} onChange={(e:any) => {setOtp(e.target.value)}}></Input>\r\n                    <Input placeholder=\"Enter new password\" marginBottom=\"4vh\" type=\"password\" onChange={(e: any) => {setPw(e.target.value)}}></Input>\r\n                    <Button width=\"100%\"  backgroundColor=\"#2467a1\" marginBottom=\"4vh\" marginTop=\"6vh\"\r\n                        color=\"white\"\r\n                        onClick={async (e:any) => {\r\n                            e.preventDefault();\r\n                            try{\r\n                                await resetPasswordMutation({variables: {resetPasswordInput:{email: email, otp:otp, newPassword: pw}}})\r\n                            }\r\n                            catch(err) {console.log(err)}\r\n                        } }\r\n                    >Reset Password</Button>\r\n                </Box>\r\n                <Image src={bg} boxSize=\"25vw\" bottom=\"30%\" right=\"0%\" className=\"login-image\"></Image>\r\n            </Flex>\r\n            <Footer designed={[{ name: 'Krithikaa', mail: 'be20b020@smail.iitm.ac.in' }]} ></Footer>\r\n        </CustomBox>  \r\n    )\r\n}\r\n\r\nexport default ForgotAfter","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Login\\Profile.tsx",["488","489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506"],"import React, { RefObject } from \"react\"\r\nimport {\r\n    Text,\r\n    Stack,\r\n    Link,\r\n    Flex,\r\n    Input,\r\n    Box,\r\n    RadioGroup,\r\n    Radio,\r\n    Image,\r\n    Button,\r\n    useColorModeValue,\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    useDisclosure,\r\n    FormControl,\r\n    FormLabel,\r\n    FormErrorMessage,\r\n    FormHelperText,\r\n    Heading,\r\n    Center,\r\n    Popover,\r\n    PopoverTrigger,\r\n    PopoverContent,\r\n    PopoverHeader,\r\n    PopoverArrow,\r\n    PopoverCloseButton,\r\n    PopoverBody,\r\n    PopoverFooter,\r\n    ButtonGroup,\r\n  } from '@chakra-ui/react'\r\nimport { AddIcon, MinusIcon } from '@chakra-ui/icons';\r\nimport { useState } from \"react\";\r\nimport CustomBox from '../../shared/CustomBox'\r\nimport Footer from '../../shared/Footer';\r\nimport \"../../../styles/Login.css\"\r\n\r\nimport bg from \"../../../images/homepage_illustrations/small ribi.png\"\r\nimport bg2 from \"../../../images/EventsWorkshops/events/bg.jpeg\"\r\n\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport SwiperCore, {\r\n    Scrollbar\r\n  } from 'swiper';\r\n  \r\nimport 'swiper/swiper-bundle.min.css'  \r\nimport 'swiper/swiper.min.css'\r\nimport { useHistory } from \"react-router\";\r\nimport {RegistraionType, useLeaveTeamMutation, useMeQuery} from \"../../../generated/graphql\"\r\nimport moment from \"moment\";\r\n\r\nSwiperCore.use([Scrollbar]);\r\n\r\nconst Profile = () => {\r\n\r\n    const history = useHistory()\r\n    const {data, loading, error} = useMeQuery()\r\n    var { isOpen, onOpen, onClose } = useDisclosure()\r\n    const [leaveteam] = useLeaveTeamMutation();\r\n    if(loading)\r\n        {\r\n            onClose = () => {}\r\n            return(\r\n                <Modal isOpen={true} onClose={onClose}>\r\n                    <ModalOverlay />\r\n                    <ModalContent backgroundColor=\"#e2e19c\" color=\"black\">\r\n                        <ModalHeader>Loading...</ModalHeader>\r\n                        <ModalCloseButton />\r\n                    </ModalContent>\r\n                </Modal>\r\n            )\r\n        }\r\n    else if(error)\r\n    {\r\n        if(error.message === \"Please login to continue\")\r\n        {   onClose = () => {history.push(\"/login\")}\r\n            return(\r\n                <Modal isOpen={true} onClose={onClose}>\r\n                        <ModalOverlay />\r\n                        <ModalContent backgroundColor=\"#f1aaaa\" color=\"black\">\r\n                            <ModalHeader>Please login to continue</ModalHeader>\r\n                            <ModalCloseButton />\r\n                        </ModalContent>\r\n                    </Modal>\r\n            )\r\n        }else{\r\n            onClose = () => {history.push(\"/\")}\r\n            return(\r\n                <Modal isOpen={true} onClose={onClose}>\r\n                    <ModalOverlay />\r\n                    <ModalContent backgroundColor=\"#f1aaaa\" color=\"black\">\r\n                        <ModalHeader>Error Occurred</ModalHeader>\r\n                        <ModalCloseButton />\r\n                    </ModalContent>\r\n                </Modal>\r\n            )\r\n\r\n        }\r\n                \r\n    }\r\n\r\n    return(\r\n        <CustomBox>\r\n            <Stack\r\n                    textAlign={'center'}\r\n                    align={'center'}\r\n                    spacing={{ base: 8, md: 8 }}\r\n                    py={{ base: 20, md: 20 }}\r\n                    padding=\"4vw\"\r\n            >\r\n                <Heading className=\"profile-heading\" fontSize=\"3.5vw\">Hi! {data?.me?.name}</Heading>\r\n                <Text>{data?.me?.shaastraID}</Text>\r\n                <Flex width=\"100vw\" className=\"profile-main-flex\" alignItems=\"flex-start\" minHeight=\"80vh\" justifyContent=\"space-evenly\">\r\n                    <Flex alignSelf=\"flex-start\" height={[\"fit-content\",\"80vh\"]} padding={[\"1vw\", \"0vw\"]}  flexDirection=\"column\" alignItems=\"center\" width={[\"100%\", \"20vw\"]} fontSize=\"1.5vw\" justifyContent=\"space-between\">\r\n                        <Link href=\"/profile\" color=\"#C2C4FF\" marginBottom=\"2vh\">Profile Details</Link>\r\n                        <Link href=\"/editprofile\">Edit Profile</Link>\r\n                        <Button fontSize={[\"5vw\",\"1.5vw\"]} onClick={(e) => {e.preventDefault(); history.push('/signout')}} width={[\"fit-content\",\"100%\"]} margin=\"auto\" backgroundColor=\"#DB7171\">Logout</Button>\r\n                        <Image className=\"profile-image\" src={bg} boxSize=\"22vw\" alignSelf=\"center\"></Image>\r\n                    </Flex>\r\n                    <Flex flexDirection=\"column\">\r\n                        <Box width={[\"100%\", \"60vw\"]} margin=\"auto\" fontSize={[\"5vw\",\"1.5vw\"]} padding={[\"1vw\", \"4vw\"]} borderRadius=\"24px\" marginBottom=\"4vh\">\r\n                            <Flex marginBottom=\"4vh\" textAlign=\"left\" justifyContent=\"space-between\" flexDirection=\"column\">\r\n                                    <Text>Email ID</Text>\r\n                                    <Text width=\"100%\" backgroundColor=\"#C2C4FF\" color=\"black\" padding=\"1vh\" borderRadius=\"12px\">{data?.me?.email}</Text>\r\n                            </Flex>\r\n                            <Flex marginBottom=\"4vh\" textAlign=\"left\" justifyContent=\"space-between\" flexDirection=\"column\">\r\n                                    <Text>Mobile Number</Text>\r\n                                    <Text width=\"100%\" backgroundColor=\"#C2C4FF\" color=\"black\" padding=\"1vh\" borderRadius=\"12px\">{data?.me?.mobile}</Text>\r\n                            </Flex>\r\n                           <Flex width=\"100%\" justifyContent=\"space-between\" marginBottom=\"4vh\">\r\n                                <Flex marginBottom=\"4vh\" width=\"40%\" textAlign=\"left\" justifyContent=\"space-between\" flexDirection=\"column\">\r\n                                        <Text>College</Text>\r\n                                        <Text width=\"100%\" backgroundColor=\"#C2C4FF\" color=\"black\" padding=\"1vh\" borderRadius=\"12px\">{data?.me?.college}</Text>\r\n                                </Flex>\r\n                                <Flex width=\"40%\" marginBottom=\"4vh\" textAlign=\"left\" justifyContent=\"space-between\" flexDirection=\"column\">\r\n                                    <Text>Branch</Text>\r\n                                    <Text width=\"100%\" backgroundColor=\"#C2C4FF\" color=\"black\" padding=\"1vh\" borderRadius=\"12px\">{data?.me?.department}</Text>\r\n                                </Flex>\r\n                           </Flex>\r\n                           <Flex marginBottom=\"4vh\" textAlign=\"left\" justifyContent=\"space-between\" flexDirection=\"column\">\r\n                                    <Text>Address</Text>\r\n                                    <Text width=\"100%\" backgroundColor=\"#C2C4FF\" color=\"black\" padding=\"1vh\" borderRadius=\"12px\">{data?.me?.address}</Text>\r\n                            </Flex>\r\n                           <Flex width=\"100%\" justifyContent=\"space-between\">\r\n                                <Flex marginBottom=\"4vh\" width=\"40%\" textAlign=\"left\" justifyContent=\"space-between\" flexDirection=\"column\">\r\n                                        <Text>City</Text>\r\n                                        <Text width=\"100%\" backgroundColor=\"#C2C4FF\" color=\"black\" padding=\"1vh\" borderRadius=\"12px\">{data?.me?.city}</Text>\r\n                                </Flex>\r\n                                <Flex marginBottom=\"4vh\" width=\"40%\" textAlign=\"left\" justifyContent=\"space-between\" flexDirection=\"column\">\r\n                                        <Text>State</Text>\r\n                                        <Text width=\"100%\" backgroundColor=\"#C2C4FF\" color=\"black\" padding=\"1vh\" borderRadius=\"12px\">{data?.me?.state}</Text>\r\n                                </Flex>\r\n                           </Flex>\r\n                        </Box>\r\n                        <Heading m={2} p={2}>Registered Events</Heading>\r\n                         <Swiper\r\n                            scrollbar={{hide: false}}\r\n                            // slidesPerView={3}\r\n                            spaceBetween={10}\r\n                            breakpoints={\r\n                                {\r\n                                    300:{\r\n                                        slidesPerView: 1\r\n                                    },\r\n                                    1000: {\r\n                                        slidesPerView: 3\r\n                                    }\r\n                                }\r\n                            }\r\n                        >\r\n                                              \r\n                            {\r\n                                data?.me?.registeredEvents.map(e => {\r\n                                   return(\r\n                                    e.registrationType === RegistraionType.Individual ?\r\n                                    <SwiperSlide >\r\n                                            <Flex flexDirection=\"column\" alignItems=\"center\" justifyItems={\"center\"} textAlign=\"center\"\r\n                                             color={'white'} boxShadow=\"5px\" p={2}\r\n                                            >\r\n                                            <a href={`/eventpage/${e.id}`}>\r\n                                                <Image src={e.pic! ? e.pic : bg2} height={\"12.5vw\"} width={\"100%\"} borderTopRadius={\"9px\"} objectFit={\"cover\"}></Image>\r\n                                                <Box fontWeight={\"600\"} p={2}>\r\n                                                <Text fontSize={[\"xl\"]}>{e.name}</Text>\r\n                                                { e.eventTimeFrom! &&\r\n                                                    <Flex flexDirection={\"column\"}>\r\n                                                    <Text>Events Starts From</Text>\r\n                                                    <Text> {moment(parseInt(e.eventTimeFrom!)).format(\"MMMM Do YYYY\")}</Text>\r\n                                                    </Flex>\r\n                                                }\r\n                                                </Box>\r\n                                                </a>\r\n                                            </Flex>\r\n                                        </SwiperSlide>\r\n                                    :\r\n                                    <SwiperSlide>\r\n                                    <div className=\"flip-card\">\r\n                                    <div className=\"flip-card-inner\">\r\n                                        <div className=\"flip-card-front\">\r\n                                        <Flex flexDirection=\"column\" alignItems=\"center\" justifyItems={\"center\"} textAlign=\"center\"\r\n                                            height={\"300px\"} color={\"white\"}\r\n                                            >\r\n                                            <a href={`/eventpage/${e.id}`}>\r\n                                                <Image src={e.pic!} height={\"12vw\"} width={\"100%\"} borderTopRadius={\"9px\"} objectFit={\"fill\"}></Image>\r\n                                                </a>\r\n                                                <Box  fontWeight={\"600\"} p={2}>\r\n                                                <Text fontSize={[\"xl\",\"2xl\"]}>{e.name}</Text>\r\n                                                {\r\n                                                    e.eventTimeFrom && <Flex flexDirection={\"column\"}>\r\n                                                    <Text>Events Starts From</Text>\r\n                                                    <Text> {moment(parseInt(e.eventTimeFrom!)).format(\"MMMM Do YYYY\")}</Text>\r\n                                                    </Flex>\r\n                                                }\r\n                                                </Box>\r\n                                                \r\n                                            </Flex>\r\n                                        </div>\r\n                                        <div className=\"flip-card-back\">\r\n                                            <Flex  width=\"100%\" height=\"100%\"  alignItems=\"center\" color={\"white\"} flexDirection=\"column\">\r\n                                                       <Text fontSize={\"2xl\"} pt={2} fontWeight={\"700\"}>Your Team</Text>\r\n                                                       <Box m={1} p={2}>\r\n                                                       <Text>{e.yourTeam?.name}</Text>\r\n                                                       <Text fontSize={\"2xl\"} fontWeight={\"700\"}>Members</Text>\r\n                                                        {\r\n                                                            e.yourTeam?.members.map((m,index) => {\r\n                                                                return(\r\n                                                                    <Text>{index+1}. {m.name}</Text>                                                                )\r\n                                                            })\r\n                                                        }\r\n                                                        <Popover\r\n                                                            placement=\"top\"\r\n                                                            closeOnBlur={false}\r\n                                                            trigger=\"hover\"\r\n                                                            >\r\n                                                            <PopoverTrigger>\r\n                                                            <Button height={[\"25px\"]} color={\"white\"} colorScheme={\"red\"} p={2} position={\"absolute\"} bottom={\"4%\"} right={\"4%\"}\r\n                                                            onClick={async ()=>{\r\n                                                                await leaveteam({\r\n                                                                    variables : {\r\n                                                                        id : e.yourTeam?.id!\r\n                                                                    }\r\n                                                                }).then(res =>{\r\n                                                                    if(res.data?.leaveTeam) {\r\n                                                                        window.location.reload()\r\n                                                                    }\r\n                                                                })\r\n                                                        }}\r\n                                                        >Leave Team</Button>\r\n                                                            </PopoverTrigger>\r\n                                                            <PopoverContent\r\n                                                                zIndex={4}\r\n                                                                color=\"white\"\r\n                                                                bg=\"blue.800\"\r\n                                                                borderColor=\"blue.800\"\r\n                                                            >\r\n                                                                <PopoverHeader pt={4} fontWeight=\"bold\" border=\"0\">\r\n                                                                Are you sure you want to leave the team\r\n                                                                </PopoverHeader>\r\n                                                                <PopoverArrow />\r\n                                                                <PopoverCloseButton />\r\n                                                                <PopoverBody>\r\n                                                                 Once you leave you wont be able to join again\r\n                                                                </PopoverBody>\r\n                                                            </PopoverContent>\r\n                                                            </Popover>\r\n                                                    \r\n\r\n                                                       </Box>\r\n                                            </Flex>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                    </SwiperSlide>\r\n                                   )\r\n                                })\r\n                            }\r\n                        </Swiper>\r\n                    </Flex>\r\n                </Flex>\r\n            </Stack>    \r\n            <Footer designed={[{ name: 'Krithikaa', mail: 'be20b020@smail.iitm.ac.in' }]} ></Footer>      \r\n        </CustomBox>\r\n    )\r\n}\r\n\r\nexport default Profile;","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Login\\Signup.tsx",["507","508","509","510","511","512"],"import React, { useState } from \"react\"\r\nimport {\r\n    Text,\r\n    Stack,\r\n    Flex,\r\n    Link,\r\n    Box,\r\n    Heading,\r\n    Input,\r\n    Select,\r\n    Button,\r\n    FormLabel,\r\n    FormControl,\r\n    Image,\r\n    useColorModeValue,\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    useDisclosure,\r\n  } from '@chakra-ui/react'\r\nimport \"../../../styles/Login.css\"\r\nimport bg from \"../../../images/Login/login.svg\"\r\nimport CustomBox from '../../shared/CustomBox'\r\nimport Footer from '../../shared/Footer'\r\nimport { useCreateUserMutation } from \"../../../generated/graphql\"\r\nimport { useHistory } from \"react-router\"\r\nimport success from \"../../../images/Login/login-success.svg\"\r\nimport errorSVG from \"../../../images/Login/login-error.svg\"\r\n\r\nimport {cities} from \"./cities\"\r\nimport {colleges} from \"./college\"\r\nimport { branches } from \"./branches\"\r\n\r\nconst Signup = () => {\r\n\r\n    const gradient = useColorModeValue(\"blackG\", \"whiteG\")\r\n    const history = useHistory()\r\n\r\n    const [email, setEmail] = useState(\"\")\r\n    const [name, setName]  = useState(\"\")\r\n    const [number, setNumber] = useState(\"\")\r\n    const [pw, setPw] = useState(\"\")\r\n    const [confirm, setConfirm] = useState(\"\")\r\n    const [college, setCollege] = useState(\"\")\r\n    const [branch, setBranch] = useState(\"\")\r\n    const [State, setState] = useState(\"Andaman and Nicobar Islands\")\r\n    const [city, setCity] = useState(\"\")\r\n    const [address, setAddress] = useState(\"\")\r\n    const [wrongpw , setWrongPw] = useState(false)\r\n    const [fielderr , setFieldErr] = useState(false)\r\n    const [createUser, {data, loading, error}] = useCreateUserMutation()\r\n\r\n    var { isOpen, onOpen, onClose } = useDisclosure()\r\n\r\n    if(data)\r\n    {\r\n        onClose = () => {history.push('/')}\r\n        return(\r\n            <Modal isOpen={true} onClose={onClose} isCentered>\r\n                <ModalOverlay />\r\n                <ModalContent color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\r\n                    <Image src={success} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\r\n                    <ModalCloseButton />\r\n                    <ModalBody backgroundColor=\"#A7EAAA\" width=\"100%\" padding=\"2vw\">\r\n                        <Text textAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]} backgroundColor=\"#A7EAAA\" borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Signed up successfully! <br />Check your Email ID for the verification link.</Text>\r\n                    </ModalBody>\r\n                 </ModalContent>\r\n            </Modal>\r\n        )\r\n    }\r\n    if(error)\r\n    {  \r\n            if(error.message === \"User Already signed up.Please login to continue\"){\r\n                onClose = () => {history.push(\"/login\")}\r\n                return(\r\n                    <Modal isOpen={true} onClose={onClose} isCentered>\r\n                    <ModalOverlay />\r\n                    <ModalContent color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\r\n                        <Image src={errorSVG} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\r\n                        <ModalBody backgroundColor=\"#f1aaaa\" width=\"100%\" padding=\"2vw\">\r\n                            <Text textAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]}  borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">{error.message}</Text>\r\n                        </ModalBody>\r\n                        <ModalCloseButton />\r\n                    </ModalContent>\r\n                </Modal>\r\n                )\r\n            }else {\r\n                onClose = () => {window.location.reload()}\r\n                return(\r\n                    <Modal isOpen={true} onClose={onClose} isCentered>\r\n                        <ModalOverlay />\r\n                        <ModalContent color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\r\n                            <Image src={errorSVG} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\r\n                            <ModalBody backgroundColor=\"#f1aaaa\" width=\"100%\" padding=\"2vw\">\r\n                                <Text textAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]}  borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Some error occurred</Text>\r\n                            </ModalBody>\r\n                            <ModalCloseButton />\r\n                        </ModalContent>\r\n                    </Modal>\r\n                )\r\n            }\r\n           \r\n    }\r\n    if(wrongpw){\r\n        const onClose = () => {window.location.reload()}\r\n        return(\r\n            <Modal isOpen={true} onClose={onClose}>\r\n                <ModalOverlay />\r\n                <ModalContent backgroundColor=\"#f1aaaa\" color=\"black\">\r\n                    <ModalHeader>Confirm password and Password should have the same values. \r\n                        <br />\r\n                        Please enter the same password in both fields</ModalHeader>\r\n                    <ModalCloseButton />\r\n                </ModalContent>\r\n            </Modal>\r\n        )\r\n    }\r\n    if(fielderr){\r\n        const onClose = () => {window.location.reload()}\r\n        return(\r\n            <Modal isOpen={true} onClose={onClose}>\r\n                <ModalOverlay />\r\n                <ModalContent backgroundColor=\"#f1aaaa\" color=\"black\">\r\n                    <ModalHeader>Please fill all the details</ModalHeader>\r\n                    <ModalCloseButton />\r\n                </ModalContent>\r\n            </Modal>\r\n        )\r\n    }\r\n    if(loading)\r\n    {\r\n        return(\r\n            <Modal isOpen={true} onClose={() => {}}>\r\n                <ModalOverlay />\r\n                <ModalContent backgroundColor=\"#e2e19c\" color=\"black\">\r\n                    <ModalHeader>Loading...</ModalHeader>\r\n                    <ModalCloseButton />\r\n                 </ModalContent>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <CustomBox>\r\n            <Flex className=\"login\" width=\"100vw\" height=\"fit-content\" justifyContent=\"center\" alignItems=\"center\" padding=\"4vw\" position=\"relative\" zIndex=\"1\">\r\n            <Box positon=\"relative\" width=\"60vw\" className={`${gradient} login-main-box`} height=\"fit-content\" padding=\"4vw\">\r\n                    <Heading fontSize=\"4vw\" marginBottom=\"6vh\">SIGN<span>UP</span></Heading>\r\n                    <Input placeholder=\"Name\" marginBottom=\"4vh\" type=\"text\" onChange={(e:any) => {setName(e.target.value)}}></Input>\r\n                    <Flex marginBottom=\"6vh\">\r\n                        <Input placeholder=\"Email ID\" marginRight=\"2vw\" type=\"email\" onChange={(e:any) => {setEmail(e.target.value)}}></Input>\r\n                        <Input placeholder=\"Mobile number\" type=\"text\" value={number} onChange={(e:any) => {setNumber(e.target.value)}}></Input>\r\n                    </Flex>\r\n                    <Input placeholder=\"Password\" marginBottom=\"4vh\" type=\"password\" onChange={(e:any) => {setPw(e.target.value)}}></Input>\r\n                    <Input placeholder=\"Confirm password\" marginBottom=\"6vh\" type=\"password\" onChange={(e:any) => {setConfirm(e.target.value)}}></Input>\r\n                    <Flex marginBottom=\"6vh\">\r\n                        <Select placeholder=\"College\" marginRight=\"2vw\" onChange={(e:any) => {setCollege(e.target.value)}}>\r\n                            {\r\n                                colleges.map(o => {\r\n                                    return(\r\n                                        <option value={o[\"University\"]}>{o[\"University\"]}</option>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </Select>\r\n                        <Select placeholder=\"Branch\" onChange={(e:any) => {setBranch(e.target.value)}}>\r\n                            {\r\n                                branches.map(b => {\r\n                                    return(\r\n                                        <option value={b}>{b}</option>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </Select>\r\n                    </Flex>\r\n                    <Flex marginBottom=\"6vh\">\r\n                        <Select placeholder=\"State\" onChange={(e:any) => {setState(e.target.value)}}>\r\n                            {\r\n                                Object.keys(cities).map(s => {\r\n                                    return(<option value={s}>{s}</option>)\r\n                                })\r\n                            }\r\n                        </Select>\r\n                        <Select placeholder=\"City\" marginLeft=\"2vw\" onChange={(e:any) => {setCity(e.target.value)}}>\r\n                            {\r\n                                cities[State].map(c => {\r\n                                    return(<option value={c}>{c}</option>)\r\n                                })\r\n                            }\r\n                        </Select>\r\n                    </Flex>\r\n                    <Input placeholder=\"Address\" type=\"text\" onChange={(e:any) => {setAddress(e.target.value)}}></Input>\r\n                    <Text p={2} >*All the fields are required</Text>\r\n                    <Button width=\"100%\"  backgroundColor=\"#2467a1\" color=\"white\" marginTop=\"6vh\"\r\n                        onClick={async (e:any) => {\r\n                            e.preventDefault();\r\n                            if(!name || !email || !number || !pw || !confirm || !college || !branch || !State || !city ||!address){\r\n                                setFieldErr(true)\r\n                            }else if(pw === confirm)\r\n                                {\r\n                                    try{\r\n                                        await createUser(\r\n                                            {variables: {CreateUserInput: \r\n                                                {name: name, email: email, mobile: number, password: pw, college: college, department: branch, state: State, city: city, address: address}}})\r\n                                                .then(res => {\r\n                                                    if(res.data?.createUser)\r\n                                                    history.push(\"/verify\")\r\n                                                })\r\n                                    }\r\n                                    catch(err)\r\n                                    {\r\n                                        console.log(err)\r\n                                    }\r\n                                }\r\n                            else \r\n                               {\r\n                               setWrongPw(true)\r\n                               }\r\n                        }}\r\n                    >Sign Up</Button>\r\n                    <Text align=\"center\" marginTop=\"2vh\">Already registered? <Link href=\"/login\">Login</Link></Text>\r\n                </Box>\r\n                <Image src={bg} boxSize=\"35vw\" bottom=\"30%\" right=\"0%\" className=\"login-image\"></Image>\r\n            </Flex>\r\n            <Footer designed={[{ name: 'Krithikaa', mail: 'be20b020@smail.iitm.ac.in' }]} ></Footer>\r\n        </CustomBox>  \r\n    )\r\n}\r\n\r\nexport default Signup","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Login\\Verify.tsx",["513","514","515","516","517","518","519","520","521"],"import React, { useEffect } from \"react\"\r\nimport {\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    useDisclosure,\r\n    Flex,\r\n    SimpleGrid,\r\n    Box,\r\n    Heading,\r\n    FormControl,\r\n    FormLabel,\r\n    Input,\r\n    Button,\r\n    Alert,\r\n    AlertIcon,\r\n    Text,\r\n    Image,\r\n    Link,\r\n    useColorModeValue,\r\n  } from '@chakra-ui/react'\r\nimport \"../../../styles/Login.css\"\r\nimport { useResendVerificationMailMutation, useVerifyUserMutation } from \"../../../generated/graphql\"\r\nimport { useState } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { useParams } from \"react-router\"\r\nimport successSVG from \"../../../images/Login/login-success.svg\"\r\nimport errorSVG from \"../../../images/Login/login-error.svg\"\r\nimport Footer from \"../../shared/Footer\"\r\nimport CustomBox from \"../../shared/CustomBox\"\r\n\r\nconst Verify = () => {\r\n    const gradient = useColorModeValue(\"blackG\", \"whiteG\")\r\n    const [otp, setOtp] = React.useState('')\r\n    const history = useHistory()\r\n    const [verifyuser, {data, loading, error}] = useVerifyUserMutation()\r\n    const [resendmail] = useResendVerificationMailMutation();\r\n    const [email , setemail] = React.useState('');\r\n    const [input , setInput] = React.useState(false);\r\n    const [alert , setalert] = React.useState(false)\r\n    const [success, setSuccess] = React.useState(false)\r\n\r\n\r\n    const handlesubmit = () => {\r\n        verifyuser({\r\n          variables: {\r\n            otp,\r\n          },\r\n        })\r\n          .then((res) => {\r\n            if (res.data?.verifyUser) {\r\n             setSuccess(true)\r\n            }\r\n          })\r\n          .catch((err) => console.log(err))\r\n      }\r\n\r\n      const resend = () =>{\r\n        resendmail({variables:{\r\n          requestForgotPassInput : {\r\n            email\r\n          }\r\n        }}).then(res => {\r\n          if(res.data?.resendVerificationMail){\r\n            setalert(true)\r\n          }\r\n        })\r\n        .catch(err => console.error(err)\r\n        )\r\n      }\r\n  \r\n    var { isOpen, onOpen, onClose } = useDisclosure()\r\n    if(success)\r\n    {\r\n        onClose = () => {history.push('/login')}\r\n        return(\r\n            <Modal isOpen={true} onClose={onClose} isCentered>\r\n                <ModalOverlay />\r\n                <ModalContent color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\r\n                    <Image src={successSVG} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\r\n                    <ModalCloseButton />\r\n                    <ModalBody backgroundColor=\"#A7EAAA\" width=\"100%\" padding=\"2vw\">\r\n                        <Text textAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]} backgroundColor=\"#A7EAAA\" borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Email verified! Please login to register for workshops</Text>\r\n                    </ModalBody>\r\n                 </ModalContent>\r\n            </Modal>\r\n        )\r\n    }\r\n    else \r\n        if(loading)\r\n        {\r\n            onClose = () => {}\r\n            return(\r\n                <Modal isOpen={true} onClose={onClose}>\r\n                    <ModalOverlay />\r\n                    <ModalContent backgroundColor=\"#e2e19c\" color=\"black\">\r\n                        <ModalHeader>Loading...</ModalHeader>\r\n                        <ModalCloseButton />\r\n                    </ModalContent>\r\n                </Modal>\r\n            )\r\n        }\r\n        else\r\n        if(error)\r\n        {\r\n            if(error.message === \"Invalid OTP!\")\r\n            {\r\n                onClose = () => {window.location.reload()}\r\n                return(\r\n                    <Modal isOpen={true} onClose={onClose} isCentered>\r\n                    <ModalOverlay />\r\n                    <ModalContent color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\r\n                        <Image src={errorSVG} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\r\n                        <ModalBody backgroundColor=\"#f1aaaa\" width=\"100%\" padding=\"2vw\">\r\n                            <Text textAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]}  borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Invalid OTP</Text>\r\n                        </ModalBody>\r\n                        <ModalCloseButton />\r\n                    </ModalContent>\r\n                </Modal>\r\n                )\r\n            }\r\n            else \r\n            {\r\n                onClose = () => {history.push('/')}\r\n                return(\r\n                    <Modal isOpen={true} onClose={onClose} isCentered>\r\n                    <ModalOverlay />\r\n                    <ModalContent color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\r\n                        <Image src={errorSVG} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\r\n                        <ModalBody backgroundColor=\"#f1aaaa\" width=\"100%\" padding=\"2vw\">\r\n                            <Text textAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]}  borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Error Occurred</Text>\r\n                        </ModalBody>\r\n                        <ModalCloseButton />\r\n                    </ModalContent>\r\n                </Modal>\r\n                )   \r\n            }\r\n        }\r\n        else return (\r\n    <Flex\r\n      minH={'100vh'}\r\n      align={'center'}\r\n      justify={'center'}\r\n      flexDirection='column'\r\n    >\r\n         <CustomBox>\r\n            <Flex className=\"login\" width=\"100vw\" height=\"100vh\" justifyContent=\"center\" alignItems=\"center\" position=\"relative\" zIndex=\"1\">\r\n            <Box width=\"60vw\"  className={`${gradient} login-main-box`} height=\"fit-content\" padding=\"5vw\" borderRadius=\"24px\">\r\n                    <Heading fontSize=\"4vw\" marginBottom=\"6vh\">  Verify yo<span>ur mail</span></Heading>\r\n                    <Input\r\n                        marginBottom=\"4vh\"\r\n                        placeholder='OTP'\r\n                        type='text'\r\n                        value={otp}\r\n                        onChange={(e) => setOtp(e.target.value)}\r\n                    />\r\n                    <Button width=\"100%\"  backgroundColor=\"#2467a1\" marginBottom=\"4vh\" color=\"white\"\r\n                        onClick={handlesubmit}\r\n                    >Verify</Button>\r\n                    <Flex width=\"100%\" justifyContent=\"space-between\" >\r\n                    {\r\n                        !input ? ( <Link onClick = {()=>setInput(true)}>Resend Verification mail</Link>) : null\r\n                    }\r\n                     {\r\n                            input ? (\r\n                            <Flex width={\"100%\"} flexDirection={\"column\"}>\r\n                            <Flex width={\"100%\"} flexDirection={['column','column','row','row']}>\r\n                            <FormControl id='name'>\r\n                            <Input\r\n                            width={\"60%\"}\r\n                            placeholder='email'\r\n                            type='email'\r\n                            value={email}\r\n                            onChange={(e) => setemail(e.target.value)}\r\n                            />\r\n                           </FormControl> \r\n                        <Button onClick = {resend} color=\"white\"\r\n                           width ={\"40%\"} backgroundColor=\"#2467a1\" marginBottom=\"4vh\">\r\n                         Resend Verification mail\r\n                        </Button>\r\n                        </Flex>\r\n                        {\r\n                        alert ? (\r\n                            <Alert status='success'>\r\n                            <AlertIcon />\r\n                            Verification mail has been sent \r\n                            </Alert>\r\n                        ) : null\r\n                    }\r\n                    </Flex>): null\r\n                        }\r\n                    </Flex>\r\n                </Box>\r\n            </Flex>\r\n            <Footer designed={[{ name: 'Krithikaa', mail: 'be20b020@smail.iitm.ac.in' }]} ></Footer>\r\n        </CustomBox>     \r\n    </Flex>\r\n        )\r\n}\r\n\r\nexport default Verify","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Events and Workshops\\EditEvent.tsx",["522","523","524","525","526","527","528","529","530","531"],"import * as React from \"react\"\r\nimport {\r\n    Text,\r\n    Stack,\r\n    Flex,\r\n    Link,\r\n    Box,\r\n    Heading,\r\n    FormControl,\r\n    FormLabel,\r\n    Input,\r\n    Image,\r\n    Button,\r\n    Select,\r\n    RadioGroup,\r\n    Radio,\r\n    useColorModeValue,\r\nModal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    useDisclosure,  } from '@chakra-ui/react'\r\nimport { useHistory, useParams } from \"react-router-dom\"\r\nimport { useState } from \"react\"\r\nimport CustomBox from '../../shared/CustomBox'\r\nimport ReactMde from \"react-mde\";\r\nimport * as Showdown from \"showdown\";\r\nimport { RegistraionType, useGetEventQuery } from \"../../../generated/graphql\"\r\nimport \"../../../styles/Events.css\"\r\nimport moment from 'moment'\r\nimport bg from \"../../../images/EventsWorkshops/events/bg.jpeg\"\r\nimport { useEditEventMutation } from \"../../../generated/graphql\";\r\n\r\nimport AWS from 'aws-sdk'\r\nconst uploadFile = require('react-s3')\r\nconst S3FileUpload = require('react-s3')\r\n\r\ndeclare module 'react' {\r\n    interface HTMLAttributes<T> extends AriaAttributes, DOMAttributes<T> {\r\n      directory?: string\r\n      webkitdirectory?: string\r\n      moxdirectory?: string\r\n    }\r\n  }\r\n\r\nconst converter = new Showdown.Converter({\r\n    tables: true,\r\n    simplifiedAutoLink: true,\r\n    strikethrough: true,\r\n    tasklists: true\r\n  });\r\n\r\nconst EditEvent = () => {\r\n\r\n    const {id} : {id: string} = useParams()\r\n\r\n    const [selectedTab, setSelectedTab] = React.useState<\"write\" | \"preview\">(\"write\");\r\n    const history = useHistory()\r\n\r\n     const {data: event, loading: eventLoading, error: eventError} = useGetEventQuery({variables: {EventID: id}})\r\n\r\n\r\n    console.log(event)\r\n\r\n    const [radio, setRadio] = React.useState<RegistraionType>()\r\n    const [radioString, setRadioString] = useState()\r\n    const [name, setName] = React.useState(event?.getEvent.name ? event?.getEvent.name : \"\")\r\n    const [vertical, setVertical] = React.useState(event?.getEvent.vertical ? event?.getEvent.vertical : \"\")\r\n    const [desp, setDesp] = React.useState(event?.getEvent.description ? event?.getEvent.description : \"\")\r\n    const [platform, setPlatform] = React.useState(event?.getEvent.platform ? event?.getEvent.platform: \"\")\r\n    const [req, setReq] = useState(event?.getEvent.requirements ? event?.getEvent.requirements : \"\")\r\n    const [regStart, setRegStart] = useState(\"\")\r\n    const [regEn, setRegEnd] = useState(\"\")\r\n    const [eventStart, setEventStart] = useState(\"\")\r\n    const [eventEnd, setEventEnd] = useState(\"\")\r\n    const [teamSize, setTeamSize] = useState(event?.getEvent.teamSize ? event?.getEvent.teamSize : 0)\r\n    const [participation, setParticipation] = useState(event?.getEvent.participation ? event?.getEvent.participation : \"\")\r\n    const [first, setFirst] = useState(event?.getEvent.firstplace ? event?.getEvent.firstplace : \"\")\r\n    const [second, setSecond] = useState(event?.getEvent.secondplace ? event?.getEvent.secondplace : \"\")\r\n    const [third, setThird] = useState(event?.getEvent.thirdplace ? event?.getEvent.thirdplace: \"\")\r\n    const [pic, setPic] = useState(event?.getEvent.pic!)\r\n    const [file, setFile] = useState<File>()\r\n    const [fee, setFee] = useState(event?.getEvent.registrationfee ? event.getEvent.registrationfee : \"\")\r\n\r\n    \r\n\r\n    const [editEventMutation, {data, loading, error}] = useEditEventMutation()\r\n\r\n    AWS.config.update({\r\n        accessKeyId: 'AKIA4VXHNASLCGXPQAHM',\r\n        secretAccessKey: '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',\r\n      })\r\n      const myBucket = new AWS.S3({\r\n        params: { Bucket: 'shaastra' },\r\n        region: 'ap-south-1',\r\n      })\r\n      const UploadImageToS3WithNativeSdk = async (file: any) => {\r\n        const params = {\r\n          ACL: 'public-read',\r\n          Body: file,\r\n          Bucket: 'shaastra',\r\n          Key: file.name,\r\n        }\r\n    \r\n        await myBucket\r\n          .putObject(params)\r\n          .on('httpUploadProgress', (evt) => {})\r\n          .send((err) => {\r\n            if (err) console.log(err)\r\n          })\r\n      }\r\n\r\n\r\n    var { isOpen, onOpen, onClose } = useDisclosure()\r\n\r\n    if(data)\r\n    {\r\n        onClose = () => {\r\n            history.push('/admin')\r\n            window.location.reload()\r\n        }\r\n        return(\r\n            <Modal isOpen={true} onClose={onClose}>\r\n                <ModalOverlay />\r\n                <ModalContent backgroundColor=\"#addfd0\" color=\"black\">\r\n                    <ModalHeader>Event Edited</ModalHeader>\r\n                    <ModalCloseButton />\r\n                 </ModalContent>\r\n            </Modal>\r\n        )\r\n    }\r\n    if(error || eventError)\r\n    {\r\n        onClose = () => {history.push('/admin')}\r\n        return(\r\n            <Modal isOpen={true} onClose={onClose}>\r\n                <ModalOverlay />\r\n                <ModalContent backgroundColor=\"#f1aaaa\" color=\"black\">\r\n                    <ModalHeader>Error Occurred</ModalHeader>\r\n                    <ModalCloseButton />\r\n                 </ModalContent>\r\n            </Modal>\r\n        )\r\n    }\r\n    if(loading || eventLoading)\r\n    {\r\n        onClose = () => {history.push('/admin/add')}\r\n        return(\r\n            <Modal isOpen={true} onClose={onClose}>\r\n                <ModalOverlay />\r\n                <ModalContent backgroundColor=\"#e2e19c\" color=\"black\">\r\n                    <ModalHeader>Loading...</ModalHeader>\r\n                    <ModalCloseButton />\r\n                 </ModalContent>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <CustomBox>\r\n            <Stack\r\n                textAlign={'center'}\r\n                align={'center'}\r\n                spacing={{ base: 8, md: 8 }}\r\n                py={{ base: 20, md: 20 }}\r\n            >\r\n            <Heading>EDIT EVENT</Heading>\r\n            <Box backgroundImage={bg} width=\"100vw\" padding=\"4vw\" className=\"admin-add\">\r\n                <Box backgroundImage=\"linear-gradient(-45deg, #ffffff98, #ffffff09)\" borderRadius=\"24px\" backdropFilter=\"blur(30px)\" padding=\"5vw\">\r\n                    <Flex width=\"100%\" justifyContent=\"space-between\" alignItems=\"flex-end\">\r\n                        <FormControl>\r\n                            <FormLabel fontSize=\"1.5vw\">Name of Event</FormLabel>\r\n                            <Input \r\n                                value={name}\r\n                                type=\"text\" outline=\"none\" color=\"black\"\r\n                                backgroundColor=\"transparent\" borderBottom=\"5px solid white\"\r\n                                onChange={(e:any) => {setName(e.target.value)}}    \r\n                            >\r\n                            </Input>\r\n                        </FormControl>\r\n                        <Select value={vertical} placeholder=\"Vertical\" width=\"30vw\" marginLeft=\"5vw\" onChange={(e:any) => {setVertical(e.target.value)}}>\r\n                            <option value=\"AEROFEST\">AeroFest</option>\r\n                            <option value=\"BIOGEN\">Biogen</option>\r\n                            <option value=\"BEVENTS\">BEvents</option>\r\n                            <option value=\"CL\">Coding & Logic</option>\r\n                            <option value=\"DB\">Design & Build</option>\r\n                            <option value=\"ELECFEST\">ElecFest</option>\r\n                            <option value=\"IGNITE\">Ignite</option>\r\n                            <option value=\"STRATEGISTS\">Strategists</option>\r\n                            <option value=\"WORKSHOPS\">Workshops</option>\r\n                        </Select>\r\n                    </Flex>\r\n                    <FormControl marginTop=\"4vh\">\r\n                            <FormLabel>Change picture</FormLabel>\r\n                            <Input type=\"file\" onChange={(e:any) => {setFile(e.target.files[0]);setPic(`https://shaastra.s3.ap-south-1.amazonaws.com/${e.target.files[0].name}`)}}></Input>\r\n                        </FormControl>\r\n                    <FormControl marginTop=\"4vh\">\r\n                        <FormLabel fontSize=\"1.5vw\">Description</FormLabel>\r\n                        <ReactMde\r\n                        value={desp}\r\n                        onChange={setDesp}\r\n                        selectedTab={selectedTab}\r\n                        onTabChange={setSelectedTab}\r\n                        generateMarkdownPreview={markdown =>\r\n                          {\r\n                            setDesp(converter.makeHtml(markdown))\r\n                            return(Promise.resolve(converter.makeHtml(markdown)))\r\n                          }\r\n                        }\r\n                       ></ReactMde>\r\n                    </FormControl>\r\n                    <Flex width=\"100%\">\r\n                        <FormControl>\r\n                            <FormLabel>Platform</FormLabel>\r\n                            <Input type=\"text\" outline=\"none\" color=\"black\"\r\n                                value={platform}\r\n                                backgroundColor=\"transparent\" borderBottom=\"5px solid white\"\r\n                                onChange={(e:any) => {setPlatform(e.target.value)}}    \r\n                            ></Input>\r\n                        </FormControl>\r\n                        <FormControl width=\"150%\" marginLeft=\"2vw\">\r\n                            <FormLabel>Requirements</FormLabel>\r\n                            <Input type=\"text\" outline=\"none\" color=\"black\" \r\n                                value={req}\r\n                                backgroundColor=\"transparent\" borderBottom=\"5px solid white\"\r\n                                onChange={(e:any) => {setReq(e.target.value)}}    \r\n                            ></Input>\r\n                        </FormControl>\r\n                    </Flex>\r\n                    <Flex width=\"100%\">\r\n                        <FormControl>\r\n                        {console.log(regStart)}\r\n                            <FormLabel>Registration Start: {moment(parseInt(event?.getEvent.registrationOpenTime!)).format(\r\n                    \"MMMM Do YYYY\"\r\n                  )}</FormLabel>\r\n                            <Input type=\"date\" outline=\"none\" color=\"black\" value={regStart}\r\n                                backgroundColor=\"transparent\" borderBottom=\"5px solid white\"\r\n                                onChange={(e:any) => {setRegStart(e.target.value)}}    \r\n                            ></Input>\r\n                        </FormControl>\r\n                        <FormControl marginLeft=\"2vw\">\r\n                            <FormLabel>Registration End: {moment(parseInt(event?.getEvent.registrationCloseTime!)).format(\r\n                    \"MMMM Do YYYY\"\r\n                  )}</FormLabel>\r\n                            <Input type=\"date\" outline=\"none\" color=\"black\" value={regEn}\r\n                                backgroundColor=\"transparent\" borderBottom=\"5px solid white\"\r\n                                onChange={(e:any) => {setRegEnd(e.target.value)}}\r\n                            ></Input>\r\n                        </FormControl>\r\n                    </Flex>\r\n                    <Flex width=\"100%\">\r\n                        <FormControl>\r\n                            <FormLabel>Event Start: {moment(parseInt(event?.getEvent.eventTimeFrom!)).format(\r\n                    \"MMMM Do YYYY\"\r\n                  )}</FormLabel>\r\n                            <Input type=\"date\" outline=\"none\" color=\"black\" value={eventStart}\r\n                                backgroundColor=\"transparent\" borderBottom=\"5px solid white\"\r\n                                onChange={(e:any) => {setEventStart(e.target.value)}}\r\n                            ></Input>\r\n                        </FormControl>\r\n                        <FormControl marginLeft=\"2vw\">\r\n                            <FormLabel>Event End: {moment(parseInt(event?.getEvent.eventTimeTo!)).format(\r\n                    \"MMMM Do YYYY\"\r\n                  )}</FormLabel>\r\n                            <Input type=\"date\" outline=\"none\" color=\"black\" value={eventEnd}\r\n                                backgroundColor=\"transparent\" borderBottom=\"5px solid white\"\r\n                                onChange={(e:any) => {setEventEnd(e.target.value)}}    \r\n                            ></Input>\r\n                        </FormControl>\r\n                    </Flex>\r\n                    <Flex>\r\n                        <FormControl>\r\n                            <FormLabel>Participation</FormLabel>\r\n                            <Input type=\"text\" outline=\"none\" color=\"black\" value={participation}\r\n                                backgroundColor=\"transparent\" borderBottom=\"5px solid white\"\r\n                                onChange={(e:any) => {setParticipation(e.target.value)}}></Input>\r\n                        </FormControl>\r\n                        <FormControl marginLeft=\"2vw\">\r\n                            <FormLabel>First</FormLabel>\r\n                            <Input type=\"text\" outline=\"none\" color=\"black\" value={first}\r\n                                backgroundColor=\"transparent\" borderBottom=\"5px solid white\"\r\n                                onChange={(e:any) => {setFirst(e.target.value)}}></Input>\r\n                        </FormControl>\r\n                        <FormControl marginLeft=\"2vw\">\r\n                            <FormLabel>Second</FormLabel>\r\n                            <Input type=\"text\" outline=\"none\" color=\"black\" value={second}\r\n                                backgroundColor=\"transparent\" borderBottom=\"5px solid white\"\r\n                                onChange={(e:any) => {setSecond(e.target.value)}}></Input>\r\n                        </FormControl>\r\n                        <FormControl marginLeft=\"2vw\">\r\n                            <FormLabel>Third</FormLabel>\r\n                            <Input type=\"text\" outline=\"none\" color=\"black\" value={third}\r\n                                backgroundColor=\"transparent\" borderBottom=\"5px solid white\"\r\n                                onChange={(e:any) => {setThird(e.target.value)}}></Input>\r\n                        </FormControl>\r\n                    </Flex>\r\n                    <FormControl>\r\n                            <FormLabel fontSize=\"1.5vw\">Registration fee</FormLabel>\r\n                            <Input \r\n                                type=\"text\" outline=\"none\" color=\"black\" placeholder={fee} value={fee}\r\n                                backgroundColor=\"transparent\" borderBottom=\"5px solid white\"\r\n                                onChange={(e:any) => {setFee(e.target.value)}}    \r\n                            >\r\n                            </Input>\r\n                        </FormControl>\r\n                    <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\" className=\"admin-team\">\r\n                        <FormControl color=\"black\" marginTop=\"4vh\">\r\n                            <Text>{event?.getEvent.registrationType}</Text>\r\n                            <RadioGroup value={radioString} onChange={(e:any) => {\r\n                                switch(e)\r\n                                {\r\n                                    case \"Individual\": setRadio(RegistraionType.Individual); break;\r\n                                case \"Team\": setRadio(RegistraionType.Team); break;\r\n                                default: setRadio(RegistraionType.None);   \r\n                                }\r\n                            }}>\r\n                                <Radio value=\"Individual\" marginRight=\"2vw\">Individual</Radio>\r\n                                <Radio value=\"Team\" marginRight=\"2vw\">Team</Radio>\r\n                                <Radio value=\"None\">None</Radio>\r\n                            </RadioGroup>\r\n                        </FormControl>\r\n                        {\r\n                            radio === RegistraionType.Team &&\r\n                            <FormControl marginTop=\"4vh\" width=\"10vw\">\r\n                                <FormLabel color=\"black\">Team size</FormLabel>\r\n                                <Input type=\"number\" outline=\"none\" color=\"black\" \r\n                                    backgroundColor=\"transparent\" borderBottom=\"5px solid white\"\r\n                                    onChange={(e:any) => {setTeamSize(e.target.value)}}    \r\n                                ></Input>\r\n                            </FormControl>\r\n                        }\r\n                    </Flex>\r\n                    <Button marginTop=\"4vh\" width=\"100%\" backgroundColor=\"white\" color=\"#0e101b\"\r\n                        onClick={async (e:any) => {\r\n                            e.preventDefault();\r\n                            // await setEventType()\r\n                            if(file !== undefined)\r\n                            {\r\n                                await UploadImageToS3WithNativeSdk(file)\r\n                            }\r\n                            try{\r\n                                await editEventMutation({\r\n                                    variables: {\r\n                                        data: {\r\n                                        name: name,\r\n                                        description: desp,\r\n                                        eventTimeFrom: eventStart ? new Date(eventStart).toDateString() : null,\r\n                                        eventTimeTo:eventEnd ? new Date(eventEnd).toDateString(): null,\r\n                                        registrationType: radio!,\r\n                                        platform: platform,\r\n                                        requirements: req,\r\n                                        pic: pic,\r\n                                        vertical: vertical,\r\n                                        firstplace: first,\r\n                                        participation: participation,\r\n                                        secondplace: second,\r\n                                        thirdplace: third,\r\n                                        teamSize: Math.round(teamSize),\r\n                                        registrationCloseTime:  regEn ?new Date(regEn).toDateString() : null,\r\n                                        registrationOpenTime: regStart ? new Date(regStart).toDateString() : null,\r\n                                        registrationfee: fee\r\n                                        },\r\n                                        id: id\r\n                                    }\r\n                                })\r\n                            }\r\n                            catch(err) {console.log(err)}\r\n                        }}\r\n                    >Submit</Button>\r\n                </Box>\r\n            </Box>\r\n            </Stack>\r\n        </CustomBox>  \r\n    )\r\n}\r\n\r\nexport default EditEvent","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Login\\EditProfile.tsx",["532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548"],"import React from \"react\"\r\nimport {\r\n    Text,\r\n    Stack,\r\n    Link,\r\n    Flex,\r\n    Input,\r\n    Box,\r\n    RadioGroup,\r\n    Radio,\r\n    Image,\r\n    Button,\r\n    useColorModeValue,\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    useDisclosure,\r\n    FormControl,\r\n    FormLabel,\r\n    Select,\r\n    FormErrorMessage,\r\n    FormHelperText,\r\n    Heading,\r\n  } from '@chakra-ui/react'\r\nimport { AddIcon, MinusIcon } from '@chakra-ui/icons';\r\nimport { useState } from \"react\";\r\nimport CustomBox from '../../shared/CustomBox'\r\nimport Footer from '../../shared/Footer';\r\nimport \"../../../styles/Login.css\"\r\n\r\n\r\nimport {cities} from \"./cities\"\r\n\r\nimport bg from \"../../../images/homepage_illustrations/small ribi.png\"\r\n\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport SwiperCore, {\r\n    Scrollbar\r\n  } from 'swiper';\r\n  \r\nimport 'swiper/swiper-bundle.min.css'  \r\nimport 'swiper/swiper.min.css'\r\nimport { useEditProfileMutation, useMeQuery } from \"../../../generated/graphql\";\r\nimport {useHistory} from \"react-router-dom\"\r\nimport { FaSchool } from \"react-icons/fa\";\r\nimport success from \"../../../images/Login/login-success.svg\"\r\nimport errorSVG from \"../../../images/Login/login-error.svg\"\r\n\r\nimport {colleges} from \"./college\"\r\nimport { branches } from \"./branches\"\r\n\r\nSwiperCore.use([Scrollbar]);\r\n\r\nconst EditProfile = () => {\r\n\r\n    const {data: user, loading: userLoading, error: userError} = useMeQuery()\r\n    console.log(user)\r\n\r\n    const history = useHistory()\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [name, setName]  = useState('')\r\n    const [number, setNumber] = useState('')\r\n    const [college, setCollege] = useState('')\r\n    const [branch, setBranch] = useState('')\r\n    const [State, setState] = useState('')\r\n    const [city, setCity] = useState('')\r\n    const [address, setAddress] = useState('')\r\n    const [mobile, setMobile] = useState('')\r\n\r\n    const [editProfileMutation, {data, loading, error}] = useEditProfileMutation()\r\n    var { isOpen, onOpen, onClose } = useDisclosure()\r\n\r\n    if(data)\r\n    {\r\n        onClose = () => {\r\n            history.push('/profile')\r\n            window.location.reload()\r\n        }\r\n\r\n        return(\r\n            <Modal isOpen={true} onClose={onClose} isCentered>\r\n                <ModalOverlay />\r\n                <ModalContent color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\r\n                    <Image src={success} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\r\n                    <ModalCloseButton />\r\n                    <ModalBody backgroundColor=\"#A7EAAA\" width=\"100%\" padding=\"2vw\">\r\n                        <Text textAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]} backgroundColor=\"#A7EAAA\" borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Details edited successfully!</Text>\r\n                    </ModalBody>\r\n                 </ModalContent>\r\n            </Modal>\r\n        )\r\n    }\r\n    if(loading)\r\n        {\r\n            onClose = () => {}\r\n            return(\r\n                <Modal isOpen={true} onClose={onClose}>\r\n                    <ModalOverlay />\r\n                    <ModalContent backgroundColor=\"#e2e19c\" color=\"black\">\r\n                        <ModalHeader>Loading...</ModalHeader>\r\n                        <ModalCloseButton />\r\n                    </ModalContent>\r\n                </Modal>\r\n            )\r\n        }\r\n        else if(error)\r\n        {\r\n            onClose = () => {window.location.reload()}\r\n                return(\r\n                    <Modal isOpen={true} onClose={onClose} isCentered>\r\n                    <ModalOverlay />\r\n                    <ModalContent color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\r\n                        <Image src={errorSVG} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\r\n                        <ModalBody backgroundColor=\"#f1aaaa\" width=\"100%\" padding=\"2vw\">\r\n                            <Text textAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]}  borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Some error occurred</Text>\r\n                        </ModalBody>\r\n                        <ModalCloseButton />\r\n                    </ModalContent>\r\n                </Modal>\r\n                )   \r\n        }\r\n    \r\n    return(\r\n        <CustomBox>\r\n            <Stack\r\n                    textAlign={'center'}\r\n                    align={'center'}\r\n                    spacing={{ base: 8, md: 8 }}\r\n                    py={{ base: 20, md: 20 }}\r\n                    padding=\"4vw\"\r\n            >\r\n                <Heading fontSize=\"3.5vw\" className=\"profile-heading\">Hi! {user?.me?.name}</Heading>\r\n                <Flex width=\"100%\" className=\"profile-main-flex\" minHeight=\"80vh\" justifyContent=\"space-evenly\">\r\n                    <Flex height={[\"fit-content\",\"80vh\"]} padding={[\"1vw\", \"0vw\"]}  flexDirection=\"column\" margin=\"auto\"  width={[\"100%\", \"20vw\"]} fontSize=\"1.5vw\" justifyContent=\"space-between\">\r\n                        <Link href=\"/profile\" marginBottom=\"4vh\">Profile Details</Link>\r\n                        <Link href=\"/editprofile\" color=\"#C2C4FF\">Edit Profile</Link>\r\n                        <Button fontSize={[\"5vw\",\"1.5vw\"]} onClick={(e) => {e.preventDefault(); history.push('/signout')}} width={[\"fit-content\",\"100%\"]} margin=\"auto\" backgroundColor=\"#DB7171\">Logout</Button>\r\n                        <Image src={bg} boxSize=\"22vw\" alignSelf=\"center\"></Image>\r\n                    </Flex>\r\n                    <Flex flexDirection=\"column\">\r\n                        <Box width={[\"100%\", \"60vw\"]} margin=\"auto\" fontSize={[\"5vw\",\"1.5vw\"]} padding={[\"1vw\", \"4vw\"]} borderRadius=\"24px\" marginBottom=\"4vh\">\r\n                           <FormControl marginBottom=\"4vh\">\r\n                               <FormLabel>Name</FormLabel>\r\n                               <Input color=\"black\" value={name} placeholder={user?.me?.name} onChange={(e:any) => {setName(e.target.value)}} type=\"text\"></Input>\r\n                           </FormControl>\r\n                           <FormControl marginBottom=\"4vh\">\r\n                               <FormLabel>Email</FormLabel>\r\n                               <Input value={email} placeholder={user?.me?.email} onChange={(e:any) => {setEmail(e.target.value)}} type=\"email\"></Input>\r\n                           </FormControl>\r\n                           <FormControl marginBottom=\"4vh\">\r\n                               <FormLabel>Mobile Number</FormLabel>\r\n                               <Input value={mobile} placeholder={user?.me?.mobile} onChange={(e:any) => {setMobile(e.target.value)}} type=\"text\"></Input>\r\n                           </FormControl>\r\n                           <Flex marginBottom=\"6vh\">\r\n                        <Select placeholder={user?.me?.college} marginRight=\"2vw\" value={college} onChange={(e:any) => {setCollege(e.target.value)}}>\r\n                            {\r\n                                colleges.map(o => {\r\n                                    return(\r\n                                        <option value={o[\"University\"]}>{o[\"University\"]}</option>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </Select>\r\n                        <Select placeholder={user?.me?.department} value={branch} onChange={(e:any) => {setBranch(e.target.value)}}>\r\n                            {\r\n                                branches.map(b => {\r\n                                    return(\r\n                                        <option value={b}>{b}</option>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </Select>\r\n                    </Flex>\r\n                    <FormControl marginBottom=\"4vh\">\r\n                        <FormLabel>Address</FormLabel>\r\n                        <Input type=\"text\" value={address} placeholder={user?.me?.address} onChange={(e:any) => {setAddress(e.target.value)}}></Input>\r\n                    </FormControl>\r\n                    <Flex marginBottom=\"6vh\">\r\n                        <Select placeholder={user?.me?.state} value={State} onChange={(e:any) => {setState(e.target.value)}}>\r\n                            {\r\n                                \r\n                                Object.keys(cities).map(s => {\r\n                                    return(<option value={s}>{s}</option>)\r\n                                })\r\n                            }\r\n                        </Select>\r\n                        <Select placeholder={user?.me?.city} marginLeft=\"2vw\" value={city} onChange={(e:any) => {setCity(e.target.value)}}>\r\n                            {\r\n                                user?.me?.state &&\r\n                                cities[user?.me?.state!].map(c => {\r\n                                    return(<option value={c}>{c}</option>)\r\n                                })\r\n                            }\r\n                        </Select>\r\n                    </Flex>\r\n                    <Flex width=\"100%\" justifyContent=\"space-between\" className=\"profile-button-flex\">\r\n                        <Button backgroundColor=\"#DB7171\" onClick={(e:any) => {e.preventDefault(); history.push('/forgotpassword')}}>Change password</Button>\r\n                        <Button backgroundColor=\"#9FDB71\"\r\n                            onClick={async (e:any) => {\r\n                                e.preventDefault();\r\n                                try\r\n                                {\r\n                                    await editProfileMutation({variables: {data:\r\n                                         {\r\n                                            name: name !=='' ? name! : user?.me?.name!, \r\n                                            college: college !== '' ? college! : user?.me?.college!, \r\n                                            state: State !== '' ? State! : user?.me?.state!,\r\n                                            city: city !== '' ? city! : user?.me?.city!,\r\n                                            email : email !== '' ? email! : user?.me?.email! , \r\n                                            address : address !== '' ? address! : user?.me?.address!,\r\n                                            department : branch !== '' ? branch! : user?.me?.department!, \r\n                                            mobile : mobile !== '' ? mobile! : user?.me?.mobile!\r\n\r\n                                        }}})\r\n                                }\r\n                                catch(err) {console.log(err)}\r\n                            }}\r\n                        >Submit changes</Button>\r\n                    </Flex>\r\n                        </Box>\r\n                    </Flex>\r\n                </Flex>\r\n            </Stack>    \r\n            <Footer designed={[{ name: 'Krithikaa', mail: 'be20b020@smail.iitm.ac.in' }]} ></Footer>      \r\n        </CustomBox>\r\n    )\r\n}\r\n\r\nexport default EditProfile;","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Login\\SignOut.tsx",["549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571"],"import React, { useEffect } from \"react\"\r\nimport {\r\n    Text,\r\n    Stack,\r\n    Flex,\r\n    Link,\r\n    Box,\r\n    Heading,\r\n    Input,\r\n    Button,\r\n    FormLabel,\r\n    FormControl,\r\n    Image,\r\n    useColorModeValue,\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    useDisclosure,\r\n  } from '@chakra-ui/react'\r\nimport \"../../../styles/Login.css\"\r\nimport bg from \"../../../images/Login/login.svg\"\r\nimport CustomBox from '../../shared/CustomBox'\r\nimport Footer from '../../shared/Footer'\r\nimport { LoginInput, useLoginMutation, useLogoutUserMutation, useVerifyUserMutation } from \"../../../generated/graphql\"\r\nimport { useState } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { useParams } from \"react-router\"\r\nimport { verify } from \"crypto\"\r\nimport success from \"../../../images/Login/login-success.svg\"\r\nimport errorSVG from \"../../../images/Login/login-error.svg\"\r\n\r\nconst SignOut = () => {\r\n    const {token} = useParams<{token: string}>();\r\n    const history = useHistory()\r\n\r\n    const [logoutMutation, {data, loading, error}] = useLogoutUserMutation()\r\n    const logout = async () => {\r\n        try{\r\n            await logoutMutation()\r\n        }\r\n        catch(err) {console.log(err)}\r\n    }\r\n    logout();\r\n\r\n    var { isOpen, onOpen, onClose } = useDisclosure()\r\n\r\n    if(data?.logoutUser)\r\n    {\r\n        localStorage.removeItem(\"role\")\r\n        onClose = () => {\r\n            history.push('/') \r\n        }\r\n\r\n        return(\r\n            <Modal isOpen={true} onClose={onClose} isCentered>\r\n                <ModalOverlay />\r\n                <ModalContent color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\r\n                    <Image src={success} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\r\n                    <ModalCloseButton />\r\n                    <ModalBody backgroundColor=\"#A7EAAA\" width=\"100%\" padding=\"2vw\">\r\n                        <Text textAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]} backgroundColor=\"#A7EAAA\" borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Logged out successfully!</Text>\r\n                    </ModalBody>\r\n                 </ModalContent>\r\n            </Modal>\r\n        )\r\n    }\r\n    else \r\n        if(loading)\r\n        {\r\n            onClose = () => {}\r\n            return(\r\n                <Modal isOpen={true} onClose={onClose}>\r\n                    <ModalOverlay />\r\n                    <ModalContent backgroundColor=\"#e2e19c\" color=\"black\">\r\n                        <ModalHeader>Loading...</ModalHeader>\r\n                        <ModalCloseButton />\r\n                    </ModalContent>\r\n                </Modal>\r\n            )\r\n        }\r\n        else\r\n        if(error)\r\n        {\r\n            onClose = () => {history.push('/')}\r\n                return(\r\n                    <Modal isOpen={true} onClose={onClose} isCentered>\r\n                    <ModalOverlay />\r\n                    <ModalContent color=\"black\" paddingTop={[\"10vw\",\"5vw\"]} width={[\"fit-content\", \"auto\"]}>\r\n                        <Image src={errorSVG} margin=\"auto\" boxSize={[\"50vw\",\"20vw\"]}></Image>\r\n                        <ModalBody backgroundColor=\"#f1aaaa\" width=\"100%\" padding=\"2vw\">\r\n                            <Text textAlign=\"center\" fontSize={[\"4vw\",\"2vw\"]}  borderRadius=\"24px\" margin=\"auto\" color=\"#0a2d4d\">Some error occurred</Text>\r\n                        </ModalBody>\r\n                        <ModalCloseButton />\r\n                    </ModalContent>\r\n                </Modal>\r\n                )   \r\n        }\r\n        else return null\r\n}\r\n\r\nexport default SignOut","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Policies\\Shipping.tsx",[],"C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Policies\\Privacy.tsx",[],"C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Policies\\Refund.tsx",[],"C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Policies\\TermsConditions.tsx",[],"C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Chess_blitz\\ChessBlitz.tsx",["572","573","574","575","576","577","578","579"],"import React, { useEffect, useState } from \"react\";\r\nimport \"../../../styles/Chess.css\";\r\nimport Footer from \"../../shared/Footer\";\r\nimport CustomBox from \"../../shared/CustomBox\";\r\nimport { useColorModeValue } from \"@chakra-ui/color-mode\";\r\nimport {\r\n  RegisterChessMutation,\r\n  useCapturePaymentChessMutation,\r\n  useGetChessDetailsCsvQuery,\r\n  useRegisterChessMutation,\r\n} from \"../../../generated/graphql\";\r\nimport {\r\n  Modal,\r\n  ModalCloseButton,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalOverlay,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport fileDownload from \"js-file-download\";\r\nimport dotenv from \"dotenv\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\n\r\ndotenv.config();\r\n\r\nfunction loadScript(src: string) {\r\n  return new Promise((resolve) => {\r\n    const script = document.createElement(\"script\");\r\n    script.src = src;\r\n    script.onload = () => {\r\n      resolve(true);\r\n    };\r\n    script.onerror = () => {\r\n      resolve(false);\r\n    };\r\n    document.body.appendChild(script);\r\n  });\r\n}\r\n\r\nfunction ChessBlitz() {\r\n  const theme = useColorModeValue(\"white\", \"black\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [rating, setRating] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  var { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const [\r\n    regitserChess,\r\n    { loading: registerChessLoading, error: registerChessError },\r\n  ] = useRegisterChessMutation({\r\n    /******** On create order completion, open Razorpay ********/\r\n    async onCompleted(data) {\r\n      if (data.registerChess) {\r\n        await loadRazorpay(data);\r\n      }\r\n    },\r\n  });\r\n\r\n  const [\r\n    capturePaymentChessMutation,\r\n    {\r\n      data: capturePaymentData,\r\n      loading: capturePaymentLoading,\r\n      error: capturePaymentError,\r\n    },\r\n  ] = useCapturePaymentChessMutation();\r\n\r\n  const [popup, setPopup] = useState(false);\r\n  const [isAlert, setIsAlert] = useState({\r\n    isVisible: false,\r\n    message: \"\",\r\n  });\r\n\r\n  // const [regitserChess, { data, loading, error }] = useRegisterChessMutation();\r\n  const { data: data1 } = useGetChessDetailsCsvQuery();\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"role\") === \"Admin\") {\r\n      setIsAdmin(true);\r\n    }\r\n  }, []);\r\n\r\n  /******** Callback Functions ********/\r\n  const loadRazorpay = async (data: RegisterChessMutation) => {\r\n    /******** Load Razorpay Script ********/\r\n    const res = await loadScript(\r\n      \"https://checkout.razorpay.com/v1/checkout.js\"\r\n    );\r\n    if (!res) {\r\n      alert(\"Razorpay SDK failed to load\");\r\n      return;\r\n    }\r\n\r\n    /******** Razorpay Options ********/\r\n    const options = {\r\n      key: process.env.REACT_APP_RAZORPAY_KEY,\r\n      amount: \"20000\",\r\n      currency: \"INR\",\r\n      name: \"BlitzChess\",\r\n      image: \"\", //TODO: Add the shaastra link here\r\n      order_id: data.registerChess.orderId,\r\n\r\n      /******** Handler function to update the payment details ********/\r\n      handler: async function (response: any) {\r\n        try {\r\n          await capturePaymentChessMutation({\r\n            variables: {\r\n              input: {\r\n                orderId: response.razorpay_order_id,\r\n                payementId: response.razorpay_payment_id,\r\n                paymentSignature: response.razorpay_signature,\r\n              },\r\n            },\r\n          });\r\n        } catch (e) {\r\n          console.log(e);\r\n        }\r\n      },\r\n      theme: {\r\n        color: \"#3399cc\",\r\n      },\r\n    };\r\n\r\n    /******** Open Razorpay ********/\r\n    const rzp1 = new (window as any).Razorpay(options);\r\n    rzp1.open();\r\n  };\r\n\r\n  const handleChessRegister = async (e) => {\r\n    e.preventDefault();\r\n    await regitserChess({\r\n      variables: {\r\n        data: {\r\n          username,\r\n          rating,\r\n          title,\r\n        },\r\n      },\r\n    }).catch((err) => console.log(err));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (registerChessLoading) {\r\n      setIsAlert({\r\n        isVisible: true,\r\n        message: \"Loading ...\",\r\n      });\r\n    }\r\n  }, [registerChessLoading]);\r\n\r\n  useEffect(() => {\r\n    if (capturePaymentLoading) {\r\n      setIsAlert({\r\n        isVisible: true,\r\n        message:\r\n          \"Don't close or reload the site, until you get the payment confirmation. Loading...\",\r\n      });\r\n    }\r\n  }, [capturePaymentLoading]);\r\n\r\n  useEffect(() => {\r\n    if (registerChessError) {\r\n      setIsAlert({\r\n        isVisible: true,\r\n        message: registerChessError.message,\r\n      });\r\n    }\r\n  }, [registerChessError]);\r\n\r\n  useEffect(() => {\r\n    if (capturePaymentError) {\r\n      setIsAlert({\r\n        isVisible: true,\r\n        message: \"Payment Failed\",\r\n      });\r\n    }\r\n  }, [capturePaymentError]);\r\n\r\n  useEffect(() => {\r\n    if (capturePaymentData?.capturePaymentChess) {\r\n      setIsAlert({\r\n        isVisible: true,\r\n        message: \"Registration Successful\",\r\n      });\r\n      setPopup(false);\r\n    }\r\n  }, [capturePaymentData]);\r\n\r\n  useEffect(() => {\r\n    let ticking;\r\n    if (isAlert.isVisible) {\r\n      ticking = setTimeout(() => {\r\n        setIsAlert({\r\n          isVisible: false,\r\n          message: \"\",\r\n        });\r\n      }, 5000);\r\n    }\r\n    return () => {\r\n      clearTimeout(ticking);\r\n    };\r\n  }, [isAlert]);\r\n\r\n  return (\r\n    <CustomBox>\r\n      <div className={`ChessBlitz ${theme}`}>\r\n        <div className=\"ChessBlitz_landing\">\r\n          <div className=\"contentBox\">\r\n            <h1>BLITZ CHESS</h1>\r\n            <h2>SHAASTRA 2022</h2>\r\n            <p>\r\n              This year, Shaastra, IIT Madras, is hosting the Online Blitz Open\r\n              Chess Championship! Last year's competition drew over 450 players\r\n              from all over the world, including several notable grand masters.\r\n              While we continue to fight the pandemic, we've chosen to hold the\r\n              event online again this year. The competition offers a total prize\r\n              pool of INR 85000, as well as various goodies. Don't miss out on\r\n              your chance to play in the year's largest online blitz tournament!\r\n            </p>\r\n            <button onClick={() => setPopup(true)}>Register now</button>\r\n          </div>\r\n        </div>\r\n        <div className=\"ChessBlitz_Overview\">\r\n          <div className=\"contentBox\">\r\n            <div className=\"card\">\r\n              <h4>Prize Money</h4>\r\n              <h2>\r\n                85k <span>+ Chess Premium Memberships</span>\r\n              </h2>\r\n            </div>\r\n            <div className=\"card\">\r\n              <h4>Registration Fee</h4>\r\n              <h2>INR 200</h2>\r\n            </div>\r\n            <div className=\"card\">\r\n              <h4>Event Date</h4>\r\n              <h2>\r\n                16th <span>January 2022</span>\r\n              </h2>\r\n            </div>\r\n            <div className=\"card\">\r\n              <h4>Event Time</h4>\r\n              <h2>9 AM - 12 PM</h2>\r\n            </div>\r\n            <div className=\"card\">\r\n              <h4>Format</h4>\r\n              <h2>\r\n                3 min + 1 sec <span>12 rounds, Swiss tournament</span>\r\n              </h2>\r\n            </div>\r\n            <div className=\"card\">\r\n              <h4>Platform</h4>\r\n              <h2>Chess.com</h2>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"ChessBlitz_PrizeDistribution\">\r\n          <h2>Prize Distribution</h2>\r\n          <div className=\"main_category\">\r\n            <h4>Main Category : </h4>\r\n            <div className=\"cardBox\">\r\n              <div className=\"card\">\r\n                <h4>1st</h4>\r\n                <h3>Rs 20000</h3>\r\n              </div>\r\n              <div className=\"card\">\r\n                <h4>2nd</h4>\r\n                <h3>Rs 15000</h3>\r\n              </div>\r\n              <div className=\"card\">\r\n                <h4>3rd</h4>\r\n                <h3>Rs 10000</h3>\r\n              </div>\r\n              <div className=\"card\">\r\n                <h4>4th</h4>\r\n                <h3>Rs 5000</h3>\r\n              </div>\r\n              <div className=\"card\">\r\n                <h4>5th</h4>\r\n                <h3>Rs 3000</h3>\r\n              </div>\r\n              <div className=\"card\">\r\n                <h4>6th</h4>\r\n                <h3>Rs 1500</h3>\r\n              </div>\r\n              <div className=\"card\">\r\n                <h4>7th - 11th</h4>\r\n                <h3>Rs 1250</h3>\r\n              </div>\r\n              <div className=\"card\">\r\n                <h4>12th - 16th</h4>\r\n                <h3>Rs 1000</h3>\r\n              </div>\r\n              <div className=\"card\">\r\n                <h4>17th - 21st</h4>\r\n                <h3>Rs 750</h3>\r\n              </div>\r\n              <div className=\"card\">\r\n                <h4>22th - 25th</h4>\r\n                <h3>Rs 500</h3>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"rated_category\">\r\n            <h4>Rated Categories : </h4>\r\n            <div className=\"twrapper\">\r\n              <table>\r\n                <tr>\r\n                  <td>Rank</td>\r\n                  <td>Unrated</td>\r\n                  <td>Below 1400</td>\r\n                  <td>1400 - 1600</td>\r\n                  <td>1600 - 1800</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>1st</td>\r\n                  <td>1000</td>\r\n                  <td>1000</td>\r\n                  <td>1000</td>\r\n                  <td>1000</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>2nd</td>\r\n                  <td>750</td>\r\n                  <td>750</td>\r\n                  <td>750</td>\r\n                  <td>750</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>3rd</td>\r\n                  <td>500</td>\r\n                  <td>500</td>\r\n                  <td>500</td>\r\n                  <td>500</td>\r\n                </tr>\r\n              </table>\r\n            </div>\r\n          </div>\r\n          <div className=\"rated_category\">\r\n            <h4>Age Categories : </h4>\r\n            <div className=\"twrapper\">\r\n              <table>\r\n                <tr>\r\n                  <td>Rank</td>\r\n                  <td>U - 16</td>\r\n                  <td>U - 14</td>\r\n                  <td>U - 12</td>\r\n                  <td>U - 10</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>1st</td>\r\n                  <td>2 months Chess.com subscription</td>\r\n                  <td>2 months Chess.com subscription</td>\r\n                  <td>2 months Chess.com subscription</td>\r\n                  <td>2 months Chess.com subscription</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>2nd</td>\r\n                  <td>1 month Chess.com subscription</td>\r\n                  <td>1 month Chess.com subscription</td>\r\n                  <td>1 month Chess.com subscription</td>\r\n                  <td>1 month Chess.com subscription</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>3rd</td>\r\n                  <td>1 month Chess.com subscription</td>\r\n                  <td>1 month Chess.com subscription</td>\r\n                  <td>1 month Chess.com subscription</td>\r\n                  <td>1 month Chess.com subscription</td>\r\n                </tr>\r\n              </table>\r\n            </div>\r\n          </div>\r\n          <div className=\"rated_category\">\r\n            {/* <h4>Other Categories : </h4> */}\r\n            <div className=\"twrapper\">\r\n              <table>\r\n                <tr>\r\n                  <td>Rank</td>\r\n                  <td>Best Woman</td>\r\n                  <td>Best Veteran</td>\r\n                  <td>Best IITM</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>1st</td>\r\n                  <td>1000</td>\r\n                  <td>1000</td>\r\n                  <td>1000</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>2nd</td>\r\n                  <td>750</td>\r\n                  <td>750</td>\r\n                  <td>2 months Chess.com subscription</td>\r\n                </tr>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"ChessBlitz_Contact\">\r\n          <h2>Contact</h2>\r\n          <div className=\"ContactBox\">\r\n            <div className=\"emailBox\">\r\n              <h4>Email</h4>\r\n              <p>rapidchess@shaastra.org</p>\r\n            </div>\r\n            <div className=\"emailBox\">\r\n              <h4>Phone</h4>\r\n              <p>\r\n                <span>Shyam Sundar PB : </span>\r\n                <span>+91 7397259369</span>\r\n              </p>\r\n              <p>\r\n                <span>Aditya S Sadhu : </span>\r\n                <span>+91 9566129422</span>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Footer\r\n          designed={[{ name: \"Rohit\", mail: \"cs19b038@smail.iitm.ac.in\" }]}\r\n        />\r\n        <div className={popup ? \"ChessBlitz_Popup active\" : \"ChessBlitz_Popup\"}>\r\n          <div className=\"formWrapper\">\r\n            <button className=\"closeBtn\" onClick={() => setPopup(false)}>\r\n              <FaTimes />\r\n            </button>\r\n            <form onSubmit={handleChessRegister}>\r\n              <h2>Register</h2>\r\n              <label>Chess.com Username</label>\r\n              <input\r\n                type=\"text\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n              />\r\n              <label>FIDE Rating {\"(optional)\"}</label>\r\n              <input\r\n                type=\"text\"\r\n                value={rating}\r\n                onChange={(e) => setRating(e.target.value)}\r\n              />\r\n              <label>FIDE Title {\"(optional)\"}</label>\r\n              <input\r\n                type=\"text\"\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n              />\r\n              <button type=\"submit\">Register</button>\r\n            </form>\r\n            {isAdmin === true ? (\r\n              <button\r\n                style={{\r\n                  padding: \"7px 24px\",\r\n                  width: \"fit-content\",\r\n                  backgroundColor: \"#311c1b\",\r\n                  borderRadius: \"4px\",\r\n                }}\r\n                onClick={() => {\r\n                  fileDownload(\r\n                    data1?.getChessDetailsCSV!,\r\n                    `BlitzChess_regristants.csv`\r\n                  );\r\n                }}\r\n              >\r\n                Download Users Data CSV\r\n              </button>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n        <div\r\n          className={`AlertPopupsContainer ${\r\n            isAlert.isVisible ? \"active\" : \"\"\r\n          }`}\r\n        >\r\n          <button\r\n            onClick={() => {\r\n              setIsAlert({\r\n                isVisible: false,\r\n                message: \"\",\r\n              });\r\n            }}\r\n          >\r\n            <FaTimes />\r\n          </button>\r\n          <div className=\"alertBox\">{isAlert.message}</div>\r\n        </div>\r\n      </div>\r\n    </CustomBox>\r\n  );\r\n}\r\n\r\nexport default ChessBlitz;\r\n","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\spons.tsx",["580","581","582","583","584","585","586","587","588","589","590","591","592","593","594","595","596","597","598","599","600","601","602","603","604","605","606","607","608","609","610","611","612","613","614"],"C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Home.tsx",["615","616","617","618","619","620","621","622","623","624","625","626","627","628","629","630","631","632","633","634","635","636","637","638"],"C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Events and Workshops\\EventPage.tsx",["639","640","641","642","643","644","645","646"],"import {\r\n  Box,\r\n  Flex,\r\n  Stack,\r\n  Image,\r\n  Text,\r\n  Button,\r\n  Heading,\r\n  Center,\r\n  Container,\r\n  useColorModeValue,\r\n  Icon,\r\n  FormLabel,\r\n  Input,\r\n} from \"@chakra-ui/react\";\r\nimport React, { Fragment, useState } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport {\r\n  GetEventDocument,\r\n  GetEventsDocument,\r\n  useDeleteEventFaqMutation,\r\n  useDeleteEventMutation,\r\n  useDeleteTimingsMutation,\r\n  useEarlybidofferMutation,\r\n  useExportCsvQuery,\r\n  useGetEventQuery,\r\n} from \"../../../generated/graphql\";\r\nimport bg from \"../../../images/EventsWorkshops/events/bg.jpeg\";\r\nimport CustomBox from \"../../shared/CustomBox\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport remarkGfm from \"remark-gfm\";\r\nimport moment from \"moment\";\r\nimport EventFaqs from \"./EventFaqs\";\r\nimport gold from \"../../../images/EventsWorkshops/events/gold.png\";\r\nimport silver from \"../../../images/EventsWorkshops/events/silver.png\";\r\nimport bronze from \"../../../images/EventsWorkshops/events/bronze.png\";\r\nimport { FaTrophy } from \"react-icons/fa\";\r\nimport RegisterNow from \"./RegisterNow\";\r\nimport Loader from \"../../shared/Loader\";\r\nimport { CalendarIcon, DeleteIcon, EditIcon } from \"@chakra-ui/icons\";\r\nimport fileDownload from \"js-file-download\";\r\nimport Timeline from \"./Timeline\";\r\nimport PayRegister from \"./PayRegister\";\r\n\r\nconst EventPage = () => {\r\n  const { id }: { id: string | undefined } = useParams();\r\n  const [isAdmin, setAdmin] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const { data, error, loading } = useGetEventQuery({\r\n    variables: {\r\n      EventID: id!,\r\n    },\r\n  });\r\n  React.useEffect(() => {\r\n    if (localStorage.getItem(\"role\") === \"Admin\") {\r\n      setAdmin(true);\r\n    }\r\n  }, [isAdmin]);\r\n\r\n  const [deleteevent] = useDeleteEventMutation();\r\n  const bgcolor = useColorModeValue(\"#ea8a94\", \"#ffffff\");\r\n  const {\r\n    data: data1,\r\n    error: error1,\r\n    loading: loading1,\r\n  } = useExportCsvQuery({\r\n    variables: {\r\n      EventID: id!,\r\n    },\r\n  });\r\n  const [deleteFaq] = useDeleteEventFaqMutation();\r\n  const [deletetimings] = useDeleteTimingsMutation();\r\n  let otherfields = data?.getEvent.faqs;\r\n\r\n  otherfields = otherfields?.filter((field) => {\r\n    if (field.question.split(\"field\", 2).length > 1) {\r\n      return true;\r\n    } else return false;\r\n  });\r\n  const [earlybid, setEarlyBid] = useState(\"\");\r\n  const [earlyBid] = useEarlybidofferMutation();\r\n  const today = new Date();\r\n  const deadline = new Date(\"January 1,2022 23:59:59\");\r\n  if (error) console.log(error);\r\n  if (loading) return <Loader />;\r\n  const timeline =\r\n    data?.getEvent.registrationOpenTime || data?.getEvent.eventTimeFrom;\r\n  console.log(data?.getEvent.registrationfee);\r\n  return (\r\n    <CustomBox>\r\n      <Container\r\n        maxWidth=\"6xl\"\r\n        alignItems=\"center\"\r\n        justifyItems={\"center\"}\r\n        marginBottom={5}\r\n        paddingBottom={2}\r\n      >\r\n        <Center flexDirection={[\"column\"]}>\r\n          <Image\r\n            h={[\"2%\", \"300px\", \"300px\"]}\r\n            width={\"auto\"}\r\n            objectFit={\"contain\"}\r\n            src={data?.getEvent.pic ? data.getEvent.pic : bg}\r\n            marginTop={\"50px\"}\r\n            p={4}\r\n            rounded={[\"3xl\", \"3xl\"]}\r\n          />\r\n          <Heading p={2} m={2}>\r\n            {data?.getEvent.name}\r\n          </Heading>\r\n        </Center>\r\n        <Flex\r\n          style={{ borderRadius: 8 }}\r\n          p={4}\r\n          shadow=\"lg\"\r\n          borderWidth=\"2px\"\r\n          borderRadius=\"md\"\r\n          flexDirection={\"column\"}\r\n        >\r\n          <Text\r\n            className=\"event-desc\"\r\n            fontWeight={\"medium\"}\r\n            fontSize={\"lg\"}\r\n            padding={2}\r\n            color={\"gray.500\"}\r\n          >\r\n            <ReactMarkdown\r\n              children={data?.getEvent.description!}\r\n              remarkPlugins={[remarkGfm]}\r\n            ></ReactMarkdown>\r\n          </Text>\r\n\r\n          <Flex justifyContent={\"flex-end\"}>\r\n            {isAdmin ? (\r\n              <Flex flexDirection={[\"column\"]}>\r\n                 {\r\n                  data?.getEvent.registrationType=== \"INDIVIDUAL\" ?       \r\n                  <Heading\r\n                  size={\"md\"}\r\n                  padding={[\"0.5vw\", \"0.5vw\", \"0.5vw\", \"1.25vw\"]}\r\n                  >\r\n                  {\" \"} Registered Users Count : {data?.getEvent.registeredUserCount}\r\n                  </Heading>\r\n                  :  <Heading\r\n                  size={\"md\"}\r\n                  padding={[\"0.5vw\", \"0.5vw\", \"0.5vw\", \"1.25vw\"]}\r\n                  >\r\n                  {\" \"} Registered Teams Count : {data?.getEvent.registeredTeamCount}\r\n                  </Heading>\r\n\r\n                 }\r\n                <Button\r\n                  padding={[\"0.5vw\", \"0.5vw\", \"0.5vw\", \"1.vw\"]}\r\n                  fontSize={[\"3vw\", \"3vw\", \"3vw\", \"1vw\"]}\r\n                  onClick={() => {\r\n                    fileDownload(\r\n                      data1?.exportCSV!,\r\n                      `${data?.getEvent.name}_regristants.csv`\r\n                    );\r\n                  }}\r\n                >\r\n                  <EditIcon m={2} />\r\n                  Download Registered Usersdata\r\n                </Button>\r\n              </Flex>\r\n            ) : data?.getEvent.registrationfee !== \"0\" ? (\r\n              <PayRegister isAdmin={isAdmin} data={data?.getEvent!} />\r\n            ) : (\r\n              <RegisterNow isAdmin={isAdmin} data={data?.getEvent} />\r\n            )}\r\n          </Flex>\r\n        </Flex>\r\n\r\n        <Center>\r\n          {isAdmin && data?.getEvent?.vertical === \"WORKSHOPS\" && (\r\n            <Flex flexDirection={\"row\"} m={2} width={\"50%\"} p={2}>\r\n              <FormLabel mx={2}>Early Bird offer :</FormLabel>\r\n              <Input\r\n                width={\"50%\"}\r\n                value={earlybid}\r\n                onChange={(e) => setEarlyBid(e.target.value)}\r\n                name=\"earlybidoffer\"\r\n                type={\"text\"}\r\n                borderBottom=\"5px solid white\"\r\n              />\r\n              <Button\r\n                mx={2}\r\n                onClick={async () => {\r\n                  if (earlybid != \"0\" && !parseInt(earlybid)) {\r\n                    alert(\"Enter a valid fee\");\r\n                  } else {\r\n                    await earlyBid({\r\n                      variables: {\r\n                        id: data.getEvent.id,\r\n                        amount: earlybid,\r\n                      },\r\n                    })\r\n                      .then(() => window.location.reload())\r\n                      .catch((err) => alert(err.message));\r\n                  }\r\n                }}\r\n              >\r\n                {\" \"}\r\n                Submit\r\n              </Button>\r\n            </Flex>\r\n          )}\r\n        </Center>\r\n        {data?.getEvent.vertical !== \"WORKSHOPS\" &&\r\n          (data?.getEvent.firstplace ||\r\n            data?.getEvent.secondplace ||\r\n            data?.getEvent.thirdplace) && (\r\n            <Flex\r\n              flexDirection={\"column\"}\r\n              width={\"100%\"}\r\n              alignItems={\"center\"}\r\n              justifyItems={\"center\"}\r\n            >\r\n              <Heading\r\n                fontWeight={\"medium\"}\r\n                p={2}\r\n                color={\"gray.500\"}\r\n                display={\"inline-flex\"}\r\n              >\r\n                <Icon as={FaTrophy} /> Rewards\r\n              </Heading>\r\n              <Flex\r\n                flexDirection={[\"column\", \"row\"]}\r\n                justifyContent={\"space-evenly\"}\r\n                width={\"100%\"}\r\n              >\r\n                <Box p={2}>\r\n                  {data?.getEvent.secondplace && (\r\n                    <Center flexDirection={\"column\"}>\r\n                      <Image src={silver} />\r\n                      <Flex color={\"gray.500\"}>\r\n                        <Heading size={\"lg\"}>\r\n                          2nd Position : {data?.getEvent.secondplace}{\" \"}\r\n                          {Number(data?.getEvent.secondplace) ? \"points\" : null}\r\n                        </Heading>\r\n                      </Flex>\r\n                    </Center>\r\n                  )}\r\n                </Box>\r\n                <Box p={2}>\r\n                  {data?.getEvent.firstplace && (\r\n                    <Center flexDirection={\"column\"}>\r\n                      <Image src={gold} />\r\n                      <Flex color={\"gray.500\"}>\r\n                        <Heading size={\"lg\"}>\r\n                          1st Position : {data?.getEvent.firstplace}{\" \"}\r\n                          {Number(data?.getEvent.firstplace) ? \"points\" : null}\r\n                        </Heading>\r\n                      </Flex>\r\n                    </Center>\r\n                  )}\r\n                </Box>\r\n                <Box p={2}>\r\n                  {data?.getEvent.thirdplace && (\r\n                    <Center flexDirection={\"column\"}>\r\n                      <Image src={bronze} />\r\n                      <Flex color={\"gray.500\"}>\r\n                        <Heading size={\"lg\"}>\r\n                          3rd Position : {data?.getEvent.thirdplace}{\" \"}\r\n                          {Number(data?.getEvent.thirdplace) ? \"points\" : null}\r\n                        </Heading>\r\n                      </Flex>\r\n                    </Center>\r\n                  )}\r\n                </Box>\r\n              </Flex>\r\n              {data?.getEvent.participation && (\r\n                <Flex p={2} color={\"gray.500\"} fontSize={[\"2xl\", \"3xl\"]}>\r\n                  <Text>\r\n                    Paricipation:{\" \"}\r\n                    <Text as=\"span\" fontWeight={700}>\r\n                      {data?.getEvent.participation}{\" \"}\r\n                      {Number(data.getEvent.participation!) ? \"points\" : null}\r\n                    </Text>\r\n                  </Text>\r\n                </Flex>\r\n              )}\r\n            </Flex>\r\n          )}\r\n\r\n        <Flex\r\n          flexDirection={[\"column\", \"column\", \"row\", \"row\"]}\r\n          justifyContent={\"space-between\"}\r\n        >\r\n          <Flex flexDirection={\"column\"} width={\"100%\"} p={2} mb={2}>\r\n            {otherfields?.length! > 0 &&\r\n              otherfields?.map((field) => {\r\n                return (\r\n                  <Flex\r\n                    marginTop=\"12px\"\r\n                    style={{ borderRadius: 8 }}\r\n                    p={2}\r\n                    shadow=\"lg\"\r\n                    borderWidth=\"2px\"\r\n                    borderRadius=\"md\"\r\n                  >\r\n                    <Text\r\n                      fontWeight={\"medium\"}\r\n                      p={2}\r\n                      fontSize={\"lg\"}\r\n                      color={\"gray.500\"}\r\n                    >\r\n                      <strong>\r\n                        {field.question.split(\"field\", 2)[1]} : &nbsp;\r\n                      </strong>{\" \"}\r\n                      {field.answer}\r\n                    </Text>\r\n                    {isAdmin ? (\r\n                      <Button\r\n                        color={\"#2467a1\"}\r\n                        variant=\"outline\"\r\n                        border=\"2px solid\"\r\n                        borderColor=\"#2467a1\"\r\n                        size=\"sm\"\r\n                        p={2}\r\n                        m={2}\r\n                        onClick={() => {\r\n                          deleteFaq({\r\n                            variables: {\r\n                              id: field.id,\r\n                            },\r\n                            refetchQueries: [\r\n                              {\r\n                                query: GetEventDocument,\r\n                                variables: { EventID: data?.getEvent.id! },\r\n                              },\r\n                            ],\r\n                          });\r\n                        }}\r\n                        float={\"right\"}\r\n                      >\r\n                        <DeleteIcon m={2} />\r\n                        Delete Field\r\n                      </Button>\r\n                    ) : null}\r\n                  </Flex>\r\n                );\r\n              })}\r\n            {/* {data?.getEvent.earlybidoffer &&\r\n              data?.getEvent?.vertical === \"WORKSHOPS\" && (\r\n                <Text\r\n                  className=\"rainbow\"\r\n                  p={4}\r\n                  style={{ borderRadius: 8 }}\r\n                  shadow=\"lg\"\r\n                  borderWidth=\"2px\"\r\n                  borderRadius=\"md\"\r\n                  fontWeight={\"medium\"}\r\n                  fontSize={\"lg\"}\r\n                  color={\"gray.500\"}\r\n                >\r\n                  Hurry up !! Early Bird Sale ends on{\" \"}\r\n                  <span style={{ fontWeight: 600 }}>\r\n                    January 1st 2022 11:59 pm\r\n                  </span>\r\n                </Text>\r\n              )} */}\r\n            {data?.getEvent.registrationfee != \"0\" && (\r\n              <Flex\r\n                marginTop=\"12px\"\r\n                style={{ borderRadius: 8 }}\r\n                p={2}\r\n                shadow=\"lg\"\r\n                borderWidth=\"2px\"\r\n                borderRadius=\"md\"\r\n                flexDirection={[\"column\", \"column\", \"row\", \"row\"]}\r\n              >\r\n                <Text\r\n                  fontWeight={\"extrabold\"}\r\n                  p={2}\r\n                  fontSize={\"lg\"}\r\n                  color={\"gray.500\"}\r\n                >\r\n                  <strong>\r\n                    Registration Fee : &nbsp; ₹{\" \"}\r\n                    <span\r\n                      style={{\r\n                        textDecoration:\r\n                          data?.getEvent.earlybidoffer &&\r\n                          deadline.getTime() - today.getTime() > 0\r\n                            ? \"line-through\"\r\n                            : \"none\",\r\n                      }}\r\n                    >\r\n                      {data?.getEvent.registrationfee}\r\n                    </span>{\" \"}\r\n                  </strong>\r\n                </Text>\r\n                {data?.getEvent.earlybidoffer &&\r\n                  deadline.getTime() - today.getTime() > 0 && (\r\n                    <Text\r\n                      fontWeight={\"extrabold\"}\r\n                      p={2}\r\n                      fontSize={\"lg\"}\r\n                      color={\"gray.500\"}\r\n                    >\r\n                      <strong>Early Bird offer: &nbsp; ₹ </strong>{\" \"}\r\n                      <span\r\n                        style={{\r\n                          color: \"green\",\r\n                        }}\r\n                      >\r\n                        {data?.getEvent.earlybidoffer}\r\n                      </span>\r\n                    </Text>\r\n                  )}\r\n              </Flex>\r\n            )}\r\n\r\n            <Flex\r\n              marginTop=\"12px\"\r\n              style={{ borderRadius: 8 }}\r\n              p={2}\r\n              shadow=\"lg\"\r\n              borderWidth=\"2px\"\r\n              borderRadius=\"md\"\r\n            >\r\n              <Text\r\n                fontWeight={\"medium\"}\r\n                p={2}\r\n                fontSize={\"lg\"}\r\n                color={\"gray.500\"}\r\n              >\r\n                <strong>Prerequisites : &nbsp;</strong>{\" \"}\r\n                {data?.getEvent.requirements}\r\n              </Text>\r\n            </Flex>\r\n\r\n            <Flex className=\"events-details-box-container\">\r\n              {/* <Flex className=\"events-details-box\" backgroundColor={bgcolor}>\r\n              <strong>Audience: &nbsp;</strong>\r\n            </Flex> */}\r\n              <Flex\r\n                className=\"events-details-box\"\r\n                style={{ borderRadius: 8 }}\r\n                p={2}\r\n                shadow=\"lg\"\r\n                borderWidth=\"2px\"\r\n                borderRadius=\"md\"\r\n              >\r\n                <Text\r\n                  fontWeight={\"medium\"}\r\n                  fontSize={\"lg\"}\r\n                  padding={2}\r\n                  color={\"gray.500\"}\r\n                >\r\n                  <strong>Platform: &nbsp;</strong>\r\n                  {data?.getEvent.platform}\r\n                </Text>\r\n              </Flex>\r\n            </Flex>\r\n\r\n            <Flex className=\"events-details-box-container\">\r\n              <Flex\r\n                className=\"events-details-box\"\r\n                style={{ borderRadius: 8 }}\r\n                p={2}\r\n                shadow=\"lg\"\r\n                borderWidth=\"2px\"\r\n                borderRadius=\"md\"\r\n              >\r\n                <Text\r\n                  fontWeight={\"medium\"}\r\n                  fontSize={\"lg\"}\r\n                  padding={2}\r\n                  color={\"gray.500\"}\r\n                >\r\n                  <strong>Registration Type: &nbsp;</strong>\r\n                  {data?.getEvent.registrationType}\r\n                </Text>\r\n              </Flex>\r\n              {data?.getEvent.registrationType === \"TEAM\" && (\r\n                <Flex\r\n                  className=\"events-details-box\"\r\n                  style={{ borderRadius: 8 }}\r\n                  p={4}\r\n                  shadow=\"lg\"\r\n                  borderWidth=\"2px\"\r\n                  borderRadius=\"md\"\r\n                >\r\n                  <Text\r\n                    fontWeight={\"medium\"}\r\n                    fontSize={\"lg\"}\r\n                    padding={2}\r\n                    color={\"gray.500\"}\r\n                  >\r\n                    <strong>Max. team size: &nbsp;</strong>\r\n                    {data.getEvent.teamSize}\r\n                  </Text>\r\n                </Flex>\r\n              )}\r\n            </Flex>\r\n          </Flex>\r\n        </Flex>\r\n\r\n        {localStorage.getItem(\"role\") === \"Admin\" && (\r\n          <Box m={2} width={\"100%\"}>\r\n            <Flex flexDirection={[\"column\", \"column\", \"row\", \"row\"]}>\r\n              <Button\r\n                m={2}\r\n                p={2}\r\n                width={[\"100%\", \"100%\", \"50%\", \"50%\"]}\r\n                colorScheme={\"green\"}\r\n                onClick={(e: any) => {\r\n                  e.preventDefault();\r\n                  history.push(`/admin/edit/${data?.getEvent.id}`);\r\n                }}\r\n              >\r\n                Edit\r\n              </Button>\r\n              <Button\r\n                m={2}\r\n                p={2}\r\n                width={[\"100%\", \"100%\", \"50%\", \"50%\"]}\r\n                colorScheme={\"red\"}\r\n                onClick={async () => {\r\n                  await deleteevent({\r\n                    variables: {\r\n                      id: data?.getEvent.id!,\r\n                    },\r\n                    refetchQueries: [\r\n                      {\r\n                        query: GetEventsDocument,\r\n                        variables: { getEventsFilter: data?.getEvent.vertical },\r\n                      },\r\n                    ],\r\n                  })\r\n                    .then((res) => {\r\n                      if (res.data?.deleteEvent) {\r\n                        history.push(\"/admin\");\r\n                      }\r\n                    })\r\n                    .catch((err) => alert(err.message));\r\n                }}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </Flex>\r\n          </Box>\r\n        )}\r\n        {localStorage.getItem(\"role\") === \"Admin\" && (\r\n          <Timeline id={data?.getEvent.id!} />\r\n        )}\r\n      </Container>\r\n      <Container\r\n        maxWidth=\"6xl\"\r\n        alignItems=\"center\"\r\n        justifyItems={\"center\"}\r\n        style={{ borderRadius: 8 }}\r\n        shadow=\"lg\"\r\n        borderWidth=\"2px\"\r\n        borderRadius=\"md\"\r\n      >\r\n        <Heading size={\"lg\"}>\r\n          <span>\r\n            <CalendarIcon boxSize={6} mx={2} />\r\n          </span>\r\n          Timeline\r\n        </Heading>\r\n        {data?.getEvent.registrationOpenTime &&\r\n          data?.getEvent.registrationType !== \"NONE\" && (\r\n            <Flex className=\"datetime-container\" p={2} color={\"black\"}>\r\n              <Heading\r\n                className=\"datetime-head\"\r\n                size={\"lg\"}\r\n                style={{ borderRadius: 8 }}\r\n                p={2}\r\n                shadow=\"lg\"\r\n                borderWidth=\"2px\"\r\n                borderRadius=\"md\"\r\n                color={\"gray.500\"}\r\n              >\r\n                Registrations\r\n              </Heading>\r\n              <Flex\r\n                className=\"datetime-box\"\r\n                alignItems={\"center\"}\r\n                justifyItems={\"center\"}\r\n              >\r\n                <Heading\r\n                  className=\"datetime\"\r\n                  size={\"md\"}\r\n                  style={{ borderRadius: 8 }}\r\n                  p={2}\r\n                  shadow=\"lg\"\r\n                  borderWidth=\"2px\"\r\n                  borderRadius=\"md\"\r\n                  color={\"gray.500\"}\r\n                >\r\n                  {moment(\r\n                    parseInt(data?.getEvent.registrationOpenTime!)\r\n                  ).format(\"MMMM Do YYYY\")}\r\n                </Heading>\r\n                <Heading\r\n                  style={{ width: \"10%\" }}\r\n                  p={2}\r\n                  className=\"datetime\"\r\n                  size={\"md\"}\r\n                  color={\"gray.500\"}\r\n                >\r\n                  to\r\n                </Heading>\r\n                <Heading\r\n                  className=\"datetime\"\r\n                  size={\"md\"}\r\n                  style={{ borderRadius: 8 }}\r\n                  p={2}\r\n                  shadow=\"lg\"\r\n                  borderWidth=\"2px\"\r\n                  borderRadius=\"md\"\r\n                  color={\"gray.500\"}\r\n                >\r\n                  {moment(\r\n                    parseInt(data?.getEvent.registrationCloseTime!)\r\n                  ).format(\"MMMM Do YYYY\")}\r\n                </Heading>\r\n              </Flex>\r\n            </Flex>\r\n          )}\r\n        {data?.getEvent.eventTimeFrom && (\r\n          <Flex\r\n            className=\"datetime-container\"\r\n            style={{ borderRadius: 8 }}\r\n            p={2}\r\n          >\r\n            <Heading\r\n              className=\"datetime-head\"\r\n              style={{ borderRadius: 8 }}\r\n              p={2}\r\n              shadow=\"lg\"\r\n              borderWidth=\"2px\"\r\n              size={\"lg\"}\r\n              borderRadius=\"md\"\r\n              color={\"gray.500\"}\r\n            >\r\n              Event\r\n            </Heading>\r\n            <Flex\r\n              className=\"datetime-box\"\r\n              alignItems={\"center\"}\r\n              justifyItems={\"center\"}\r\n            >\r\n              <Heading\r\n                className=\"datetime\"\r\n                size={\"md\"}\r\n                style={{ borderRadius: 8 }}\r\n                p={2}\r\n                shadow=\"lg\"\r\n                borderWidth=\"2px\"\r\n                borderRadius=\"md\"\r\n                color={\"gray.500\"}\r\n              >\r\n                {moment(parseInt(data?.getEvent.eventTimeFrom!)).format(\r\n                  \"MMMM Do YYYY\"\r\n                )}\r\n              </Heading>\r\n              <Heading\r\n                style={{ width: \"10%\" }}\r\n                className=\"datetime\"\r\n                size={\"md\"}\r\n                p={2}\r\n                shadow=\"lg\"\r\n                color={\"gray.500\"}\r\n              >\r\n                to\r\n              </Heading>\r\n              <Heading\r\n                className=\"datetime\"\r\n                size={\"md\"}\r\n                style={{ borderRadius: 8 }}\r\n                p={2}\r\n                shadow=\"lg\"\r\n                borderWidth=\"2px\"\r\n                borderRadius=\"md\"\r\n                color={\"gray.500\"}\r\n              >\r\n                {moment(parseInt(data?.getEvent.eventTimeTo!)).format(\r\n                  \"MMMM Do YYYY\"\r\n                )}\r\n              </Heading>\r\n            </Flex>\r\n          </Flex>\r\n        )}\r\n        <Center flexDirection={\"column\"} p={2}>\r\n          {data?.getEvent.eventtimings.length! > 0\r\n            ? data?.getEvent.eventtimings.map((timing) => {\r\n                return (\r\n                  <Flex\r\n                    className=\"datetime-head\"\r\n                    size={\"md\"}\r\n                    style={{ borderRadius: 8 }}\r\n                    px={3}\r\n                    shadow=\"lg\"\r\n                    borderWidth=\"2px\"\r\n                    borderRadius=\"md\"\r\n                    color={\"gray.500\"}\r\n                    justifyItems={\"center\"}\r\n                    flexDirection={\"row\"}\r\n                    justifyContent=\"space-between\"\r\n                    m={2}\r\n                  >\r\n                    <Heading size={\"md\"}>{timing.name}</Heading>\r\n                    <Heading size={\"md\"}>\r\n                      {moment(parseInt(timing.time)).format(\r\n                        \"MMMM Do YYYY hh:mm a\"\r\n                      )}\r\n                    </Heading>\r\n                    {isAdmin ? (\r\n                      <Button\r\n                        color={\"#2467a1\"}\r\n                        variant=\"outline\"\r\n                        border=\"2px solid\"\r\n                        borderColor=\"#2467a1\"\r\n                        size=\"sm\"\r\n                        p={2}\r\n                        onClick={() => {\r\n                          deletetimings({\r\n                            variables: {\r\n                              id: timing.id,\r\n                            },\r\n                            refetchQueries: [\r\n                              {\r\n                                query: GetEventDocument,\r\n                                variables: { EventID: data?.getEvent.id! },\r\n                              },\r\n                            ],\r\n                          });\r\n                        }}\r\n                        float={\"right\"}\r\n                      >\r\n                        <DeleteIcon m={2} />\r\n                        Delete Round\r\n                      </Button>\r\n                    ) : null}\r\n                  </Flex>\r\n                );\r\n              })\r\n            : null}\r\n        </Center>\r\n      </Container>\r\n\r\n      <Container maxWidth=\"6xl\" alignItems=\"center\" justifyItems={\"center\"}>\r\n        {data?.getEvent && <EventFaqs event={data?.getEvent!} />}\r\n      </Container>\r\n    </CustomBox>\r\n  );\r\n};\r\n\r\nexport default EventPage;\r\n","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Login\\branches.ts",[],"C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Login\\college.ts",[],"C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Login\\cities.ts",[],"C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\ShaastraJuniors\\index.tsx",[],"C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\shared\\CustomBox.tsx",["647"],"import { useColorModeValue } from \"@chakra-ui/color-mode\";\r\nimport { Box } from \"@chakra-ui/layout\";\r\nimport * as React from \"react\";\r\nimport Footer from \"./Footer\";\r\nimport Header from \"./Header\";\r\n\r\ninterface Props {\r\n  children: React.ReactChild[] | React.ReactChildren[] | React.ReactChild;\r\n}\r\n\r\nconst CustomBox = (props: Props) => {\r\n  const bg = useColorModeValue(\"highlight.200\", \"primary.default\");\r\n\r\n  return (\r\n    <Box bg={bg}>\r\n      <Header />\r\n      {props.children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CustomBox;\r\n","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\shared\\Footer.tsx",["648","649","650","651","652","653","654","655"],"import * as React from \"react\";\r\nimport LogoBlack from \"./../../images/logo/static/shaastra_tm_logo_black.svg\";\r\nimport LogoWhite from \"./../../images/logo/static/shaastra_tm_logo_white.svg\";\r\nimport { useColorModeValue } from \"@chakra-ui/color-mode\";\r\nimport { useBreakpointValue } from \"@chakra-ui/media-query\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  FaEnvelope,\r\n  FaInstagram,\r\n  FaLinkedin,\r\n  FaPhone,\r\n  FaTwitterSquare,\r\n  FaYoutubeSquare,\r\n} from \"react-icons/fa\";\r\nimport \"../../styles/Footer.css\";\r\n\r\ninterface Props {\r\n  designed: {\r\n    name: String;\r\n    mail: String;\r\n  }[];\r\n  curr_page?: String;\r\n}\r\n\r\nconst Footer = (props: Props) => {\r\n  const FooterLogo = useColorModeValue(LogoBlack, LogoWhite);\r\n  const theme = useColorModeValue(\"white\", \"black\");\r\n  return (\r\n    <section className={`Footer ${theme}`}>\r\n      {window.innerWidth > 600 ? (\r\n        <div className=\"top\">\r\n          <div className=\"Contact\">\r\n            <h3>NEED HELP</h3>\r\n            <p>\r\n              {props.curr_page === \"Home\" ? (\r\n                <a href=\"#who_are_we\">About us</a>\r\n              ) : (\r\n                <Link to=\"/\">About us</Link>\r\n              )}\r\n            </p>\r\n            <p>\r\n              <Link to=\"/team\">Team</Link>\r\n            </p>\r\n            <p>\r\n              <Link to=\"/sponsors\">Sponsors</Link>\r\n            </p>\r\n            {window.innerWidth <= 1000 ? <></> : <br />}\r\n          </div>\r\n          <div className=\"Contact\">\r\n            <h3>CONTACT</h3>\r\n            <p>\r\n              <a href=\"mailto:outreach@shaastra.org\">\r\n                <FaEnvelope /> outreach@shaastra.org\r\n              </a>\r\n            </p>\r\n            <p>\r\n              <a href=\"mailto:sponsorship@shaastra.org\">\r\n                <FaEnvelope /> sponsorship@shaastra.org\r\n              </a>\r\n            </p>\r\n            <p>\r\n              <a href=\"mailto:sec_cocur@smail.iitm.ac.in\">\r\n                <FaEnvelope /> sec_cocur@smail.iitm.ac.in\r\n              </a>\r\n            </p>\r\n            {window.innerWidth <= 1000 ? <></> : <br />}\r\n          </div>\r\n          <div className=\"Contact\">\r\n            <h3>ADDRESS</h3>\r\n            <p\r\n              className=\"address\"\r\n              style={{\r\n                display: \"initial\",\r\n                left: \"0\",\r\n              }}\r\n            >\r\n              IITM Students Activities Trust Shaastra,\r\n              <br /> 1st Floor, O/o Dean Of Students Office,\r\n              <br /> IIT Madras, Guindy, Chennai,\r\n              <br /> Tamil Nadu, India - 600036\r\n              <br /> Mobile : +91 9952729095\r\n            </p>\r\n          </div>\r\n          <div className=\"DesignedBy\">\r\n            <h3>LEGAL</h3>\r\n            <p>\r\n              <a href=\"policies/privacy-policy\">Privacy Policy</a>\r\n            </p>\r\n            <p>\r\n              <a href=\"policies/terms-conditions\">Terms and Conditions</a>\r\n            </p>\r\n            <p>\r\n              <a href=\"policies/shipping-policy\">Shipping Policy</a>\r\n            </p>\r\n            <p>\r\n              <a href=\"policies/return-refund-policy\">\r\n                Return and Refund Policy\r\n              </a>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"top\">\r\n          <div className=\"topleft\">\r\n            <div className=\"Contact\">\r\n              <h3>NEED HELP</h3>\r\n              <p>\r\n                {props.curr_page === \"Home\" ? (\r\n                  <a href=\"#who_are_we\">About us</a>\r\n                ) : (\r\n                  <Link to=\"/\">About us</Link>\r\n                )}\r\n              </p>\r\n              <p>\r\n                <Link to=\"/team\">Team</Link>\r\n              </p>\r\n              <p>\r\n                <Link to=\"/sponsors\">Sponsors</Link>\r\n              </p>\r\n              {window.innerWidth <= 1000 ? <></> : <br />}\r\n            </div>\r\n            <div className=\"DesignedBy\">\r\n              <h3>LEGAL</h3>\r\n              <p>\r\n                <a href=\"policies/privacy-policy\">Privacy Policy</a>\r\n              </p>\r\n              <p>\r\n                <a href=\"policies/terms-conditions\">Terms and Conditions</a>\r\n              </p>\r\n              <p>\r\n                <a href=\"policies/shipping-policy\">Shipping Policy</a>\r\n              </p>\r\n              <p>\r\n                <a href=\"policies/return-refund-policy\">\r\n                  Return and Refund Policy\r\n                </a>\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"Contact\">\r\n            <h3>CONTACT</h3>\r\n            <p>\r\n              <a href=\"mailto:outreach@shaastra.org\">\r\n                <FaEnvelope /> outreach@shaastra.org\r\n              </a>\r\n            </p>\r\n            <p>\r\n              <a href=\"mailto:sponsorship@shaastra.org\">\r\n                <FaEnvelope /> sponsorship@shaastra.org\r\n              </a>\r\n            </p>\r\n            <p>\r\n              <a href=\"mailto:sec_cocur@smail.iitm.ac.in\">\r\n                <FaEnvelope /> sec_cocur@smail.iitm.ac.in\r\n              </a>\r\n            </p>\r\n            {window.innerWidth <= 1000 ? <></> : <br />}\r\n          </div>\r\n          <div className=\"Contact\" style={{ marginTop: \"5px\" }}>\r\n            <h3>ADDRESS</h3>\r\n            <p\r\n              className=\"address\"\r\n              style={{\r\n                display: \"initial\",\r\n                left: \"0\",\r\n              }}\r\n            >\r\n              IITM Students Activities Trust Shaastra,\r\n              <br /> 1st Floor, O/o Dean Of Students Office,\r\n              <br /> IIT Madras, Guindy, Chennai,\r\n              <br /> Tamil Nadu, India - 600036\r\n              <br /> Mobile : +91 9952729095\r\n            </p>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div className=\"bottom\">\r\n        <p>\r\n          Ⓒ Developed by{\" \"}\r\n          {props.designed.map((item, key) => {\r\n            if (key == 0) {\r\n              return item.name;\r\n            } else {\r\n              return \", \" + item.name;\r\n            }\r\n          })}{\" \"}\r\n          | Web Operations | Shaastra | IIT Madras. All Rights Reserved\r\n        </p>\r\n        <div className=\"Follow\">\r\n          <p>FOLLOW US</p>\r\n          <span></span>\r\n          <a\r\n            target=\"_blank\"\r\n            href=\"https://www.instagram.com/shaastra_iitm/?hl=en\"\r\n          >\r\n            <FaInstagram />\r\n          </a>\r\n          <span></span>\r\n          <a\r\n            target=\"_blank\"\r\n            href=\"https://www.linkedin.com/company/shaastra-iit-madras/?originalSubdomain=in\"\r\n          >\r\n            <FaLinkedin />\r\n          </a>\r\n          <span></span>\r\n          <a\r\n            target=\"_blank\"\r\n            href=\"https://www.youtube.com/channel/UCgY2ugmW-BV2nMRFu-0qPZA\"\r\n          >\r\n            <FaYoutubeSquare />\r\n          </a>\r\n          <span></span>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","C:\\Users\\HP\\Desktop\\shaastra\\src\\generated\\graphql.tsx",[],"C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Events and Workshops\\Timeline.tsx",[],"C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Events and Workshops\\PayRegister.tsx",["656","657","658","659"],"C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Events and Workshops\\RegisterNow.tsx",["660","661","662","663","664","665","666","667"],"import React, { useState } from \"react\";\r\nimport {\r\n  useCreateTeamandRegisterMutation,\r\n  useRegisterMutation,\r\n} from \"../../../generated/graphql\";\r\nimport {\r\n  Text,\r\n  Stack,\r\n  Flex,\r\n  Input,\r\n  Box,\r\n  RadioGroup,\r\n  Radio,\r\n  Image,\r\n  Button,\r\n  useColorModeValue,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  useDisclosure,\r\n  FormControl,\r\n  FormLabel,\r\n  FormErrorMessage,\r\n  FormHelperText,\r\n  Heading,\r\n  Alert,\r\n  AlertIcon,\r\n  Center,\r\n} from \"@chakra-ui/react\";\r\nimport { AddIcon, MinusIcon } from \"@chakra-ui/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nconst RegisterNow = ({ isAdmin, data }) => {\r\n  const [register, { data: data1, error, loading }] = useRegisterMutation();\r\n  const [members, setMembers] = React.useState<string[]>([]);\r\n  const [teamname, setTeamname] = React.useState<string>();\r\n  const buttoncolor = useColorModeValue(\"#ea8a94\", \"white\");\r\n  var { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [radio, setRadio] = useState(\"i\");\r\n\r\n  if (radio === \"t\" && members.length === 0) {\r\n    setMembers([\"\"]);\r\n  }\r\n\r\n  const handleMembersInput = ({\r\n    index,\r\n    event,\r\n  }: {\r\n    index: number;\r\n    event: React.ChangeEvent<HTMLInputElement>;\r\n  }) => {\r\n    const values = [...members];\r\n\r\n    values[index] = event.target.value;\r\n    setMembers(values);\r\n  };\r\n  const IndividualReg = async (eventId: string) => {\r\n    await register({\r\n      variables: {\r\n        EventID: eventId,\r\n      },\r\n    }).catch((err) => console.log(err.message));\r\n  };\r\n  const history = useHistory();\r\n\r\n  const [teamreg, { data: data2, loading: loading2, error: error2 }] =\r\n    useCreateTeamandRegisterMutation();\r\n  const Teamregistration = async (eventID: string) => {\r\n    if (data.id === \"ckxcweoy60013y6p76ppx07rt\") {\r\n      const accept = prompt(\r\n        'Privacy Policy : \\n The data or the problem that is being shared under HackOlympics 2.0 shall not be shared or reused by the participants or stakeholders with anyone or any third party without prior written permission of MTX. The breach of this clause shall be considered a direct dispute between the violating individual and MTX, and is liable to legal action from MTX.\\n \\n Please type \"Agree\" without quotes'\r\n      );\r\n      if (accept?.toLowerCase() === \"agree\") {\r\n        await teamreg({\r\n          variables: {\r\n            createTeamAndRegisterData: {\r\n              eventID,\r\n              name: teamname!,\r\n              members,\r\n            },\r\n          },\r\n        }).catch((err) => console.log(err.message));\r\n      } else {\r\n        alert(\"Please agree the privacy policy\");\r\n      }\r\n    } else {\r\n      await teamreg({\r\n        variables: {\r\n          createTeamAndRegisterData: {\r\n            eventID,\r\n            name: teamname!,\r\n            members,\r\n          },\r\n        },\r\n      }).catch((err) => console.log(err.message));\r\n    }\r\n  };\r\n\r\n  if (loading || loading2) {\r\n    onClose = () => {\r\n      window.location.reload();\r\n    };\r\n    return (\r\n      <Modal isOpen={true} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent backgroundColor=\"#e2e19c\" color=\"black\">\r\n          <ModalHeader>Loading...</ModalHeader>\r\n          <ModalCloseButton />\r\n        </ModalContent>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  if (data1?.register.registered || data2) {\r\n    onClose = () => {\r\n      window.location.reload();\r\n    };\r\n    return (\r\n      <Modal isOpen={true} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent backgroundColor=\"#addfd0\" color=\"black\">\r\n          <ModalHeader>Registered Successfully</ModalHeader>\r\n          <ModalCloseButton />\r\n        </ModalContent>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  if (error || error2) {\r\n    error\r\n      ? (onClose = () => {\r\n          if (error.message === \"Please login to continue\") {\r\n            history.push(\"/login\");\r\n          }\r\n          window.location.reload();\r\n        })\r\n      : (onClose = () => {\r\n          window.location.reload();\r\n        });\r\n    return (\r\n      <Modal isOpen={true} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent backgroundColor=\"#f1aaaa\" color=\"black\">\r\n          <ModalHeader>{error ? error.message : error2?.message}</ModalHeader>\r\n          <ModalCloseButton />\r\n        </ModalContent>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {!isAdmin ? (\r\n        data.registrationType === \"NONE\" ? (\r\n          <Box marginRight={\"2vw\"} marginTop=\"2vh\" height=\"1vw\">\r\n            <Alert status=\"info\" size={\"xs\"}>\r\n              <AlertIcon />\r\n              Registration is not required for this event\r\n            </Alert>\r\n          </Box>\r\n        ) : (\r\n          <Box\r\n            marginRight={\"2vw\"}\r\n            marginTop=\"2vh\"\r\n            height={[\r\n              \"fit-content\",\r\n              \"fit-content\",\r\n              \"fit-content\",\r\n              \"fit-content\",\r\n            ]}\r\n          >\r\n            <Button\r\n              backgroundColor={\"rgb(171, 228, 156)\"}\r\n              color=\"black\"\r\n              padding={[\"0.5vw\", \"0.5vw\", \"0.5vw\", \"1.25vw\"]}\r\n              fontSize={[\"2vw\", \"2vw\", \"2vw\", \"1vw\"]}\r\n              onClick={\r\n                data.registrationType === \"INDIVIDUAL\"\r\n                  ? () => {\r\n                      IndividualReg(data.id);\r\n                    }\r\n                  : onOpen\r\n              }\r\n            >\r\n              REGISTER NOW\r\n            </Button>\r\n          </Box>\r\n        )\r\n      ) : null}\r\n      <Modal isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>Team Registration for {data.name}</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            <FormControl>\r\n              <FormLabel>Your Shaastra ID</FormLabel>\r\n              <Input type=\"text\"></Input>\r\n            </FormControl>\r\n            <FormControl marginTop=\"4vh\">\r\n              <RadioGroup onChange={setRadio} value={radio}>\r\n                <Radio value=\"i\" marginRight=\"2vw\">\r\n                  Register as Individual\r\n                </Radio>\r\n                <Radio value=\"t\">Register as Team</Radio>\r\n              </RadioGroup>\r\n            </FormControl>\r\n            <FormControl marginTop=\"1.5vh\" isRequired>\r\n              <FormLabel>Team Name</FormLabel>\r\n              <Input\r\n                type=\"text\"\r\n                value={teamname}\r\n                onChange={(e) => setTeamname(e.target.value)}\r\n              ></Input>\r\n              {radio === \"t\" ? (\r\n                <React.Fragment>\r\n                  <FormLabel marginTop=\"1.5vh\">\r\n                    Team Members Shaastra IDs\r\n                  </FormLabel>\r\n                  {members.map((member, index) => {\r\n                    return (\r\n                      <React.Fragment key={index}>\r\n                        <Flex width={\"100%\"}>\r\n                          <FormControl isRequired>\r\n                            <Flex width=\"100%\" justifyContent=\"space-between\">\r\n                              <Input\r\n                                id={\"member\" + index}\r\n                                placeholder={`Team Member ${\r\n                                  index + 1\r\n                                } Shaastra ID`}\r\n                                required\r\n                                onChange={(event) =>\r\n                                  handleMembersInput({ index, event })\r\n                                }\r\n                              ></Input>\r\n                            </Flex>\r\n                          </FormControl>\r\n\r\n                          <Flex p={[0, 3]} flexDirection={[\"column\", \"row\"]}>\r\n                            {index === 0 ? null : (\r\n                              <Button\r\n                                mx={2}\r\n                                my={1}\r\n                                size={\"xs\"}\r\n                                onClick={() => {\r\n                                  const values = [...members];\r\n                                  values.splice(index, 1);\r\n                                  setMembers(values);\r\n                                }}\r\n                              >\r\n                                <MinusIcon />\r\n                              </Button>\r\n                            )}\r\n                            {index >= data.teamSize - 2 ? null : (\r\n                              <Button\r\n                                mx={2}\r\n                                my={1}\r\n                                size={\"xs\"}\r\n                                onClick={() => {\r\n                                  if (members.length < data.teamSize - 1) {\r\n                                    setMembers([...members, \"\"]);\r\n                                  }\r\n                                }}\r\n                              >\r\n                                <AddIcon />\r\n                              </Button>\r\n                            )}\r\n                          </Flex>\r\n                        </Flex>\r\n                      </React.Fragment>\r\n                    );\r\n                  })}\r\n                  <FormLabel>Max team size :{data.teamSize}</FormLabel>\r\n                </React.Fragment>\r\n              ) : null}\r\n            </FormControl>\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button\r\n              colorScheme=\"blue\"\r\n              mr={3}\r\n              onClick={() => Teamregistration(data.id)}\r\n            >\r\n              Register\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterNow;\r\n","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Events and Workshops\\EventFaqs.tsx",["668"],"import { DeleteIcon, EditIcon } from '@chakra-ui/icons';\r\nimport { Box, Button, Center, Container, Flex, FormControl, Heading, Input, Text, useColorModeValue } from '@chakra-ui/react';\r\nimport React, { useState } from 'react'\r\nimport { GetEventDocument, useCreateEventFaqMutation, useDeleteEventFaqMutation, useEditEventFaqMutation } from '../../../generated/graphql';\r\n\r\nconst EventFaqs = ({event} : any | null) =>{\r\n\r\n    const [role, setRole] = useState(\"\");\r\n    React.useEffect(()=>{\r\n        if(localStorage.getItem(\"role\")){\r\n            setRole(localStorage.getItem(\"role\")!)\r\n        }\r\n    })\r\n    const [faqId, setFaqId] = React.useState(\"\");\r\n    const [uquestion, setQuestion] = React.useState(\"\");\r\n    const [uanswer, setAnswer] = React.useState(\"\");\r\n\r\n    let faqs = event?.faqs ;\r\n\r\n    faqs = faqs.filter((faq)=>{\r\n      if(faq.question.split(\"field\",2).length > 1){\r\n        return false\r\n      }else  return true\r\n    })\r\n    console.log(faqs)\r\n    const [aquestion, setAQuestion] = React.useState(\"\");\r\n    const [aanswer, setAAnswer] = React.useState(\"\");\r\n  \r\n    const [editFaq] = useEditEventFaqMutation();\r\n    const [deleteFaq] = useDeleteEventFaqMutation();\r\n    const [addFaq] = useCreateEventFaqMutation();\r\n\r\n    const handleedit = (faqid: string) => {\r\n        editFaq({\r\n          variables: {\r\n            id : faqid,\r\n            data: {\r\n              question: uquestion,\r\n              answer: uanswer,\r\n            },\r\n          },\r\n          refetchQueries: [{ query: GetEventDocument, variables: { EventID: event.id} }],\r\n        }).catch((err) => console.log(err));\r\n        setFaqId(\"\");\r\n        setQuestion(\"\");\r\n        setAnswer(\"\");\r\n      };\r\n  \r\n    const handleUpdateFaq = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n      if (event.target.name === \"uquestion\") {\r\n        setQuestion(event.target.value);\r\n      } else {\r\n        setAnswer(event.target.value);\r\n      }\r\n    };\r\n    const handleAddFaq = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n      if (event.target.name === \"aquestion\") {\r\n        setAQuestion(event.target.value);\r\n      } else {\r\n        setAAnswer(event.target.value);\r\n      }\r\n    };\r\n  \r\n    const handleAdd = () => {\r\n      addFaq({\r\n        variables: {\r\n           id : event.id!,\r\n           data: {\r\n            question: aquestion,\r\n            answer: aanswer,\r\n          },\r\n        },\r\n        refetchQueries: [{ query: GetEventDocument, variables: { EventID: event.id} }],\r\n      }).catch((err) => console.log(err));\r\n      setAQuestion(\"\");\r\n      setAAnswer(\"\");\r\n    };\r\n    console.log(event)\r\n    const textcolor = useColorModeValue(\"black\",\"white\")\r\n    return (\r\n       <React.Fragment>\r\n           {faqs && faqs.length! > 0 ? (\r\n          <Box  width={\"100%\"}>\r\n            <Center textAlign={\"center\"}>\r\n              <Heading size={\"lg\"} m={4} mt=\"30px\" color={textcolor}>\r\n                FREQUENTLY ASKED QUESTIONS\r\n              </Heading>\r\n            </Center>\r\n            {role === \"Admin\" ? (\r\n              <Flex p={2} flexDirection={[\"column\", \"column\", \"row\"]}>\r\n                <FormControl m={2} width={[\"100%\", \"100%\", \"45%\"]}>\r\n                  <Input\r\n                    name=\"aquestion\"\r\n                    placeholder={\"Question\"}\r\n                    value={aquestion}\r\n                    onChange={(event) => handleAddFaq(event)}\r\n                    fontSize={\"small\"}\r\n                    p={2}\r\n                    borderColor={\"#2467a1\"}\r\n                  />\r\n                </FormControl>\r\n                <FormControl m={2} width={[\"100%\", \"100%\", \"45%\"]}>\r\n                  <Input\r\n                    name=\"aanswer\"\r\n                    placeholder={\"Answer\"}\r\n                    value={aanswer}\r\n                    onChange={(event) => handleAddFaq(event)}\r\n                    fontSize={\"small\"}\r\n                    p={2}\r\n                    borderColor={\"#2467a1\"}\r\n                  />\r\n                </FormControl>\r\n                <Button\r\n                  variant=\"solid\"\r\n                  border=\"2px solid\"\r\n                  borderColor=\"#2467a1\"\r\n                  p={3}\r\n                  m={3}\r\n                  size={\"lg\"} color={textcolor}\r\n                  onClick={() => handleAdd()}\r\n                >\r\n                  Add FAQ\r\n                </Button>\r\n              </Flex>\r\n            ) : null}\r\n\r\n            <Flex flexDirection={\"column\"}  width={\"100%\"} color={\"black\"}>\r\n              {faqs?.map((faq) => {\r\n                return (\r\n                  <Box m={2} key={faq.id}  paddingBottom={10}>\r\n                    <Flex>\r\n                      <Box\r\n                        p={3} shadow=\"lg\"\r\n                        borderTopWidth=\"2px\"\r\n                        borderLeftWidth={\"2px\"}\r\n                        borderRightWidth={\"2px\"}\r\n                        width={\"100%\"}\r\n                        borderTopRadius={\"lg\"}\r\n                      >\r\n                        <Text fontWeight={\"extrabold\"} color={'gray.500'} textAlign={\"left\"}>{faq.question}</Text>\r\n                        {faqId === faq.id ? (\r\n                          <FormControl m={3}>\r\n                            <Input\r\n                              onChange={handleUpdateFaq}\r\n                              name=\"uquestion\"\r\n                              value={uquestion}\r\n                              borderColor={\"black\"}\r\n                              placeholder=\"Question\"\r\n                              color={\"black\"}\r\n                            />\r\n                          </FormControl>\r\n                        ) : null}\r\n                      </Box>\r\n                    </Flex>\r\n                    <Flex>\r\n                      <Box\r\n                        p={3}  shadow=\"lg\"\r\n                        borderWidth=\"2px\"\r\n                        borderBottomRadius={\"lg\"}\r\n                        width={\"100%\"}\r\n                      >\r\n                        <Text fontWeight={\"semibold\"} color={'gray.500'} textAlign={\"left\"}>{faq.answer}</Text>\r\n                        {faqId === faq.id ? (\r\n                          <FormControl m={3}>\r\n                            <Input\r\n                              onChange={(event) => handleUpdateFaq(event)}\r\n                              name=\"uanswer\"\r\n                              value={uanswer}\r\n                              borderColor={\"#2467a1\"}\r\n                              placeholder=\"Answer\"\r\n                              color={\"black\"}\r\n                            />\r\n                          </FormControl>\r\n                        ) : null}\r\n\r\n                        {faqId === faq.id ? (\r\n                          <Box>\r\n                            <Button\r\n                              color={\"#2467a1\"}\r\n                              variant=\"solid\"\r\n                              border=\"2px solid\"\r\n                              borderColor=\"#2467a1\"\r\n                              size=\"sm\"\r\n                              p={2}\r\n                              m={2}\r\n                              onClick={() => handleedit(faq.id)}\r\n                              float={\"right\"}\r\n                            >\r\n                              Edit FAQ\r\n                            </Button>\r\n                          </Box>\r\n                        ) : role === \"Admin\" ? (\r\n                          <Box>\r\n                            <Button\r\n                              color={\"#2467a1\"}\r\n                              variant=\"outline\"\r\n                              border=\"2px solid\"\r\n                              borderColor=\"#2467a1\"\r\n                              size=\"sm\"\r\n                              p={2}\r\n                              m={2}\r\n                              onClick={() => {\r\n                                setFaqId(faq.id);\r\n                              }}\r\n                              float={\"right\"}\r\n                            >\r\n                              <EditIcon m={2} />\r\n                              Edit FAQ\r\n                            </Button>\r\n                            <Button\r\n                              color={\"#2467a1\"}\r\n                              variant=\"outline\"\r\n                              border=\"2px solid\"\r\n                              borderColor=\"#2467a1\"\r\n                              size=\"sm\"\r\n                              p={2}\r\n                              m={2}\r\n                              onClick={() => {\r\n                                deleteFaq({\r\n                                  variables: {\r\n                                    id : faq.id\r\n                                  },\r\n                                  refetchQueries: [\r\n                                    {\r\n                                      query: GetEventDocument,\r\n                                      variables: { EventID: event.id! },\r\n                                    },\r\n                                  ],\r\n                                });\r\n                              }}\r\n                              float={\"right\"}\r\n                            >\r\n                              <DeleteIcon m={2} />\r\n                              Delete FAQ\r\n                            </Button>\r\n                          </Box>\r\n                        ) : null}\r\n                      </Box>\r\n                    </Flex>\r\n                  </Box>\r\n                );\r\n              })}\r\n            </Flex>\r\n          </Box>\r\n        ) : (\r\n          <React.Fragment>\r\n            {role === \"Admin\" ? (\r\n              <Container maxWidth={\"5xl\"}>\r\n                <Center m={2} p={2}>\r\n                  <Heading>Add FAQs</Heading>\r\n                </Center>\r\n                <Flex>\r\n                  <FormControl m={2} width={\"45%\"}>\r\n                    <Input\r\n                      name=\"aquestion\"\r\n                      placeholder={\"Question\"}\r\n                      value={aquestion}\r\n                      onChange={(event) => handleAddFaq(event)}\r\n                      fontSize={\"small\"}\r\n                      p={2}\r\n                      borderColor={\"#2467a1\"}\r\n                    />\r\n                  </FormControl>\r\n                  <FormControl m={2} width={\"45%\"}>\r\n                    <Input\r\n                      name=\"aanswer\"\r\n                      placeholder={\"Answer\"}\r\n                      value={aanswer}\r\n                      onChange={(event) => handleAddFaq(event)}\r\n                      fontSize={\"small\"}\r\n                      p={2}\r\n                      borderColor={\"#2467a1\"}\r\n                    />\r\n                  </FormControl>\r\n                  <Button\r\n                    color={\"#2467a1\"}\r\n                    variant=\"solid\"\r\n                    border=\"2px solid\"\r\n                    borderColor=\"#2467a1\"\r\n                    size=\"sm\"\r\n                    p={2}\r\n                    m={3}\r\n                    onClick={() => handleAdd()}\r\n                  >\r\n                    Add FAQ\r\n                  </Button>\r\n                </Flex>\r\n              </Container>\r\n            ) : null}\r\n          </React.Fragment>\r\n        )}\r\n       </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default EventFaqs\r\n","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\ShaastraJuniors\\SJEvents.tsx",[],"C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\ShaastraJuniors\\SJStatsCard.tsx",[],"C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\ShaastraJuniors\\SJHome.tsx",[],"C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\ShaastraJuniors\\SJSponsers.tsx",[],"C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\shared\\Header.tsx",[],"C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\ShaastraJuniors\\SJEvent.tsx",[],"C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\ShaastraJuniors\\Data.tsx",[],"C:\\Users\\HP\\Desktop\\shaastra\\src\\styles\\themes\\ColorModeSwitcher.tsx",[],"C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\shared\\Drawer\\CustomDrawer.tsx",[],"C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\shared\\Drawer\\DrawerMenuItems.tsx",["669","670","671","672","673","674","675","676","677"],"import {\r\n  Accordion,\r\n  AccordionButton,\r\n  AccordionItem,\r\n  AccordionPanel,\r\n} from \"@chakra-ui/accordion\";\r\nimport { Flex, Spacer, Text as Box } from \"@chakra-ui/layout\";\r\nimport { time } from \"console\";\r\nimport React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { textChangeRangeNewSpan } from \"typescript\";\r\nimport { Button } from \"@chakra-ui/button\";\r\nimport { UserRole } from \"../../../generated/graphql\";\r\n\r\nexport const DrawerDesktopMenuItems = () => {\r\n  const [menu, setMenu] = useState<string>(\"e&w\");\r\n\r\n  const history = useHistory()\r\n\r\n  const menuItems = () => {\r\n    switch (menu) {\r\n      case \"exhibitions\":\r\n        return (\r\n          <>\r\n            <Link\r\n              style={{\r\n                textAlign: \"center\",\r\n                width: \"60%\",\r\n                borderRadius: 8,\r\n                padding: 5,\r\n                marginBottom: 5,\r\n                fontSize: 24,\r\n                background: \"#00000028\",\r\n              }}\r\n              to=\"/exhibitions\"\r\n            ></Link>\r\n          </>\r\n        );\r\n      case \"shaastra-nights\":\r\n        return (\r\n          <>\r\n            <Flex flexDirection=\"column\" justifyContent=\"flex-start\">\r\n              <Box\r\n                letterSpacing=\"normal\"\r\n                padding-left=\"8px\"\r\n                _hover={{\r\n                  padding: \"8px\",\r\n                  fontSize: \"26\",\r\n                  letterSpacing: \"6px\",\r\n                }}\r\n              >\r\n                <Link\r\n                  style={{\r\n                    textAlign: \"center\",\r\n                    width: \"60%\",\r\n                    borderRadius: 8,\r\n                    padding: 8,\r\n                    marginBottom: 5,\r\n                    fontSize: 24,\r\n                    background: \"rgba(0, 0, 0, 0.473)\",\r\n                  }}\r\n                  to=\"/shows\"\r\n                >\r\n                  Shows\r\n                </Link>\r\n              </Box>\r\n              <Box\r\n                letterSpacing=\"normal\"\r\n                _hover={{\r\n                  padding: \"8px\",\r\n                  fontSize: \"26\",\r\n                  letterSpacing: \"6px\",\r\n                }}\r\n              >\r\n                <Link\r\n                  style={{\r\n                    textAlign: \"center\",\r\n                    width: \"60%\",\r\n                    borderRadius: 8,\r\n                    padding: 8,\r\n                    marginBottom: 5,\r\n                    fontSize: 24,\r\n                    background: \"rgba(0, 0, 0, 0.473)\",\r\n                  }}\r\n                  to=\"/envisage\"\r\n                >\r\n                  Envisage\r\n                </Link>\r\n              </Box>\r\n            </Flex>\r\n          </>\r\n        );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Flex\r\n        flexDirection=\"column\"\r\n        justifyContent=\"flex-start\"\r\n        height=\"90%\"\r\n        flex={1}\r\n      >\r\n        {\r\n          localStorage.getItem('role') !== 'Admin' && localStorage.getItem('role') !== 'User' &&\r\n          <Box\r\n            className=\"menu-text\"\r\n            width=\"100%\"\r\n            _hover={{ color: \"#cccccc\", padding: \"8px\", letterSpacing: \"7px\" }}\r\n            fontSize={28}\r\n            fontFamily={\"monospace\"}\r\n            fontStyle={\"italic\"}\r\n            pl={6}\r\n            p={2}\r\n            pr={12}\r\n            mb={4}\r\n          >\r\n            <Button backgroundColor=\"#addfd0\" color=\"black\" width=\"100%\" onClick={(e:any) => {e.preventDefault(); history.push(\"/signup\") } }>Signup</Button>\r\n          </Box>\r\n        }\r\n        <Box\r\n          className=\"menu-text\"\r\n          _hover={{ color: \"#cccccc\", padding: \"8px\", letterSpacing: \"7px\" }}\r\n          onMouseOver={() => setMenu(\"Home\")}\r\n          fontSize={28}\r\n          fontFamily={\"monospace\"}\r\n          fontStyle={\"italic\"}\r\n          pl={6}\r\n          p={2}\r\n          pr={12}\r\n          mb={4}\r\n        >\r\n          <Link to=\"/\">Home</Link>\r\n        </Box>\r\n        <Box\r\n          className=\"menu-text\"\r\n          _hover={{ color: \"#cccccc\", padding: \"8px\", letterSpacing: \"7px\" }}\r\n          fontSize={28}\r\n          onMouseOver={() => setMenu(\"click\")}\r\n          fontFamily={\"monospace\"}\r\n          fontStyle={\"italic\"}\r\n          pl={6}\r\n          p={2}\r\n          pr={12}\r\n          mb={4}\r\n        >\r\n          <Link to=\"/eventsworkshops\">Events and Workshops</Link>\r\n        </Box>\r\n        <Box\r\n          className=\"menu-text\"\r\n          _hover={{ color: \"#cccccc\", padding: \"8px\", letterSpacing: \"7px\" }}\r\n          fontSize={28}\r\n          onMouseOver={() => setMenu(\"click\")}\r\n          fontFamily={\"monospace\"}\r\n          fontStyle={\"italic\"}\r\n          pl={6}\r\n          p={2}\r\n          pr={12}\r\n          mb={4}\r\n        >\r\n          <a href=\"https://sales.shaastra.org\" target={\"_blank\"}>Sales</a>\r\n        </Box>\r\n        <Box\r\n          className=\"menu-text\"\r\n          _hover={{ color: \"#cccccc\", padding: \"8px\", letterSpacing: \"7px\" }}\r\n          fontSize={28}\r\n          onMouseOver={() => setMenu(\"click\")}\r\n          fontFamily={\"monospace\"}\r\n          fontStyle={\"italic\"}\r\n          pl={6}\r\n          p={2}\r\n          pr={12}\r\n          mb={4}\r\n        >\r\n          <Link to=\"/blitz-chess\">Blitz Chess</Link>\r\n        </Box>\r\n        <Box\r\n          className=\"menu-text\"\r\n          _hover={{ color: \"#cccccc\", padding: \"8px\", letterSpacing: \"7px\" }}\r\n          onMouseOver={() => setMenu(\"exhibitions\")}\r\n          fontSize={28}\r\n          fontFamily={\"monospace\"}\r\n          fontStyle={\"italic\"}\r\n          pl={6}\r\n          p={2}\r\n          pr={12}\r\n          mb={4}\r\n        >\r\n          <Link to=\"/exhibitions\">Exhibitions</Link>\r\n        </Box>\r\n        {/* <Box\r\n          className=\"menu-text\"\r\n          _hover={{ color: \"#cccccc\", padding: \"8px\", letterSpacing: \"7px\" }}\r\n          onMouseOver={() => setMenu(\"exhibitions\")}\r\n          fontSize={28}\r\n          fontFamily={\"monospace\"}\r\n          fontStyle={\"italic\"}\r\n          pl={6}\r\n          p={2}\r\n          pr={12}\r\n          mb={4}\r\n        >\r\n          <Link to=\"/events\">Events</Link>\r\n        </Box> */}\r\n        <Spacer />\r\n        <Box\r\n          className=\"menu-text\"\r\n          _hover={{\r\n            color: \"#cccccc\",\r\n            padding: \"8px\",\r\n            marginBottom: \"20px\",\r\n            letterSpacing: \"7px\",\r\n          }}\r\n          onMouseOver={() => setMenu(\"shaastra-nights\")}\r\n          fontSize={28}\r\n          fontFamily={\"monospace\"}\r\n          fontStyle={\"italic\"}\r\n          pl={6}\r\n          p={3}\r\n          pr={12}\r\n          mb={4}\r\n        >\r\n          Shaastra Nights\r\n          {menuItems()}\r\n        </Box>\r\n        <div style={{ color: \"white\", border: \"0.5px\" }} />\r\n        <Box\r\n          className=\"menu-text\"\r\n          _hover={{ color: \"#cccccc\", padding: \"8px\", letterSpacing: \"7px\" }}\r\n          onMouseOver={() => setMenu(\"click\")}\r\n          fontSize={28}\r\n          fontFamily={\"monospace\"}\r\n          fontStyle={\"italic\"}\r\n          pl={6}\r\n          p={3}\r\n          pr={12}\r\n          mb={4}\r\n        >\r\n          <a href=\"https://mindtrials.shaastra.org\" target=\"_blank\">Mind Trials</a>\r\n          {/* <Link to=\"https://mindtrials.shaastra.org\" target=\"_blank\">Mind Trials</Link> */}\r\n        </Box>\r\n        <Box\r\n          className=\"menu-text\"\r\n          _hover={{ color: \"#cccccc\", padding: \"8px\", letterSpacing: \"7px\" }}\r\n          onMouseOver={() => setMenu(\"click\")}\r\n          fontSize={28}\r\n          fontFamily={\"monospace\"}\r\n          fontStyle={\"italic\"}\r\n          pl={6}\r\n          p={3}\r\n          pr={12}\r\n          mb={4}\r\n        >\r\n          <Link to=\"/summit\">Summit</Link>\r\n        </Box>\r\n        <Box\r\n          className=\"menu-text\"\r\n          _hover={{ color: \"#cccccc\", padding: \"8px\", letterSpacing: \"7px\" }}\r\n          onMouseOver={() => setMenu(\"click\")}\r\n          fontSize={28}\r\n          fontFamily={\"monospace\"}\r\n          fontStyle={\"italic\"}\r\n          pl={6}\r\n          p={3}\r\n          pr={12}\r\n          mb={4}\r\n        >\r\n          <Link to=\"/tif\">Tech & Innovation Fair</Link>\r\n        </Box>\r\n        <Box\r\n          className=\"menu-text\"\r\n          _hover={{ color: \"#cccccc\", padding: \"8px\", letterSpacing: \"7px\" }}\r\n          onMouseOver={() => setMenu(\"schools\")}\r\n          fontSize={28}\r\n          fontFamily={\"monospace\"}\r\n          fontStyle={\"italic\"}\r\n          pl={6}\r\n          p={3}\r\n          pr={12}\r\n          mb={4}\r\n        >\r\n          <Link to=\"/shaastra-juniors\"> Schools</Link>\r\n        </Box>\r\n        <Box _hover={{}}></Box>\r\n        <Box\r\n          className=\"menu-text\"\r\n          _hover={{ color: \"#cccccc\", padding: \"8px\", letterSpacing: \"7px\" }}\r\n          onMouseOver={() => setMenu(\"click\")}\r\n          fontSize={28}\r\n          fontFamily={\"monospace\"}\r\n          fontStyle={\"italic\"}\r\n          pl={6}\r\n          p={3}\r\n          pr={12}\r\n          mb={4}\r\n        >\r\n          <a href=\"https://unmute.shaastra.org\" target=\"_blank\">Social Endeavours</a>\r\n          {/* <Link to=\"https://unmute.shaastra.org\" target=\"_blank\">Social Endeavours</Link> */}\r\n        </Box>\r\n        {/* <Box\r\n          className=\"menu-text\"\r\n          _hover={{ color: \"#cccccc\", padding: \"8px\", letterSpacing: \"7px\" }}\r\n          onMouseOver={() => setMenu(\"Click\")}\r\n          fontSize={28}\r\n          fontFamily={\"monospace\"}\r\n          fontStyle={\"italic\"}\r\n          pl={6}\r\n          p={3}\r\n          pr={12}\r\n          mb={4}\r\n        >\r\n          <Link to=\"/speakers\">Speakers</Link>\r\n        </Box> */}\r\n        <Box\r\n          className=\"menu-text\"\r\n          _hover={{ color: \"#cccccc\", padding: \"8px\", letterSpacing: \"7px\" }}\r\n          onMouseOver={() => setMenu(\"click\")}\r\n          fontSize={28}\r\n          fontFamily={\"monospace\"}\r\n          fontStyle={\"italic\"}\r\n          pl={6}\r\n          p={3}\r\n          pr={12}\r\n          mb={4}\r\n        >\r\n          <Link to=\"/sponsors\">Sponsors</Link>\r\n        </Box>\r\n        <Box\r\n          className=\"menu-text\"\r\n          _hover={{ color: \"#cccccc\", padding: \"8px\", letterSpacing: \"7px\" }}\r\n          onMouseOver={() => setMenu(\"click\")}\r\n          fontSize={28}\r\n          fontFamily={\"monospace\"}\r\n          fontStyle={\"italic\"}\r\n          pl={6}\r\n          p={3}\r\n          pr={12}\r\n          mb={4}\r\n        >\r\n          <Link to=\"/team\">Team</Link>\r\n        </Box>\r\n        <Box\r\n          className=\"menu-text\"\r\n          _hover={{ color: \"#cccccc\", padding: \"8px\", letterSpacing: \"7px\" }}\r\n          onMouseOver={() => setMenu(\"click\")}\r\n          fontSize={28}\r\n          fontFamily={\"monospace\"}\r\n          fontStyle={\"italic\"}\r\n          pl={6}\r\n          p={3}\r\n          pr={12}\r\n          mb={4}\r\n        >\r\n          <Link to=\"/contact\">Contact Us</Link>\r\n        </Box>\r\n        {\r\n          localStorage.getItem(\"role\") === \"User\" || localStorage.getItem(\"role\") === \"Admin\" ? \r\n            <Box\r\n              className=\"menu-text\"\r\n              _hover={{ color: \"#cccccc\", padding: \"8px\", letterSpacing: \"7px\" }}\r\n              fontSize={28}\r\n              width=\"100%\"\r\n              fontFamily={\"monospace\"}\r\n              fontStyle={\"italic\"}\r\n              pl={6}\r\n              p={2}\r\n              pr={12}\r\n              mb={4}\r\n            >\r\n              <Button backgroundColor=\"#addfd0\" color=\"black\" width=\"100%\" onClick={(e:any) => {e.preventDefault(); history.push(\"/profile\") } }>Profile</Button>\r\n              <Button backgroundColor=\"#DB7171\" color=\"black\" width=\"100%\" onClick={(e:any) => {e.preventDefault(); history.push(\"/signout\") } }>Logout</Button>\r\n            </Box>\r\n          :\r\n          null\r\n        }\r\n      </Flex>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const DrawerMobileMenuItems = () => {\r\n  const history = useHistory()\r\n  return (\r\n    <Flex\r\n      flexDirection=\"column\"\r\n      justifyContent=\"flex-start\"\r\n      height=\"90%\"\r\n      flex={1}\r\n    >\r\n      {\r\n        localStorage.getItem('role') !=='Admin' && localStorage.getItem('role') !== 'User' && \r\n        <Box p={2} pl={0} fontSize={27} fontStyle={\"normal\"}>\r\n        <Button backgroundColor=\"#addfd0\" color=\"black\" width=\"100%\" onClick={(e:any) => {e.preventDefault(); history.push(\"/signup\") } }>SignUp</Button>\r\n      </Box>\r\n      }\r\n      <Accordion allowToggle>\r\n        <Box fontSize={27} fontStyle={\"normal\"}>\r\n          <Link to=\"/\">Home</Link>\r\n        </Box>\r\n        <Box fontSize={27} fontStyle={\"normal\"}>\r\n          <Link to=\"/eventsworkshops\">Events and Workshops</Link>\r\n        </Box>\r\n        <Box p={2} pl={0} fontSize={27} fontStyle={\"normal\"}>\r\n          {/* <Link to=\"/mind-trials\">Mind Trials</Link> */}\r\n          <a href=\"https://sales.shaastra.org\" target=\"_blank\">Sales</a>\r\n        </Box>\r\n        <Box fontSize={27} fontStyle={\"normal\"}>\r\n          <Link to=\"/exhibitions\">Exhibitions</Link>\r\n        </Box>\r\n        <Box fontSize={27} fontStyle={\"normal\"}>\r\n          <Link to=\"/blitz-chess\">Blitz Chess</Link>\r\n        </Box>\r\n        <AccordionItem border={0}>\r\n          <AccordionButton pl={0}>\r\n            <Box fontSize={27} fontStyle={\"normal\"}>\r\n              Shaastra Nights\r\n            </Box>\r\n          </AccordionButton>\r\n          <AccordionPanel>\r\n            <Box fontSize=\"xl\">\r\n              <Link to=\"/shows\">Shows</Link>\r\n            </Box>\r\n            <Box fontSize=\"xl\">\r\n              <Link to=\"/envisage\">Envisage</Link>\r\n            </Box>\r\n          </AccordionPanel>\r\n        </AccordionItem>\r\n        <Box p={2} pl={0} fontSize={27} fontStyle={\"normal\"}>\r\n          {/* <Link to=\"/mind-trials\">Mind Trials</Link> */}\r\n          <a href=\"https://mindtrials.shaastra.org\" target=\"_blank\">Mind Trials</a>\r\n        </Box>\r\n        <Box p={2} pl={0} fontSize={27} fontStyle={\"normal\"}>\r\n          <Link to=\"/summit\">Summit</Link>\r\n        </Box>\r\n        <Box p={2} pl={0} fontSize={27} fontStyle={\"normal\"}>\r\n          <Link to=\"/tif\">Tech & Innovation Fair</Link>\r\n        </Box>\r\n        <AccordionItem border={0}>\r\n          <Box fontSize={27} fontStyle={\"normal\"}>\r\n            <Link to=\"/shaastra-juniors\">School</Link>\r\n          </Box>\r\n        </AccordionItem>\r\n        <Box p={2} pl={0} fontSize={27} fontStyle={\"normal\"}>\r\n          {/* <Link to=\"/social-endeavours\">Social Endeavours</Link> */}\r\n          <a href=\"https://unmute.shaastra.org\" target=\"_blank\">Social Endeavours</a>\r\n        </Box>\r\n        {/* <Box p={2} pl={0} fontSize={27} fontStyle={\"normal\"}>\r\n          <Link to=\"/speakers\">Speakers</Link>\r\n        </Box> */}\r\n        <Box p={2} pl={0} fontSize={27} fontStyle={\"normal\"}>\r\n          <Link to=\"/sponsors\">Sponsors</Link>\r\n        </Box>\r\n        <Box p={2} pl={0} fontSize={27} fontStyle={\"normal\"}>\r\n          <Link to=\"/team\">Team</Link>\r\n        </Box>\r\n        <Box p={2} pl={0} fontSize={27} fontStyle={\"normal\"}>\r\n          <Link to=\"/contact\">Contact Us</Link>\r\n        </Box>\r\n        {\r\n        (localStorage.getItem(\"role\") === \"User\" || localStorage.getItem(\"role\") === \"Admin\") && \r\n          <Box p={2} pl={0} fontSize={27} fontStyle={\"normal\"}>\r\n          <Button backgroundColor=\"#addfd0\" color=\"black\" width=\"100%\" onClick={(e:any) => {e.preventDefault(); history.push(\"/profile\") } }>Profile</Button>\r\n          <Button backgroundColor=\"#DB7171\" color=\"black\" width=\"100%\" onClick={(e:any) => {e.preventDefault(); history.push(\"/signout\") } }>Logout</Button>\r\n        </Box>\r\n      }\r\n      </Accordion>\r\n    </Flex>\r\n  );\r\n};\r\n","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Events and Workshops\\EventsData.tsx",[],"C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Team_page\\photos.tsx",["678"],"import be17b022 from \"../../../images/profiles/be17b022.jpg\";\r\nimport be18b013 from \"../../../images/profiles/be18b013.jpeg\";\r\nimport be18b026 from \"../../../images/profiles/be18b026.jpeg\";\r\nimport be19b012 from \"../../../images/profiles/be19b012.jpeg\";\r\nimport ce18b003 from \"../../../images/profiles/ce18b003.jpeg\";\r\nimport ce18b112 from \"../../../images/profiles/ce18b112.jpg\";\r\nimport ce19b029 from \"../../../images/profiles/ce19b029.jpg\";\r\nimport ch18b020 from \"../../../images/profiles/ch18b020.jpg\";\r\nimport ch18b036 from \"../../../images/profiles/ch18b036.jpg\";\r\nimport ch18b037 from \"../../../images/profiles/ch18b037.jpeg\";\r\nimport cs18b050 from \"../../../images/profiles/cs18b050.jpeg\";\r\nimport ed18b031 from \"../../../images/profiles/ed18b031.jpeg\";\r\nimport ed18b050 from \"../../../images/profiles/ed18b050.jpg\";\r\nimport ed18b053 from \"../../../images/profiles/ed18b053.jpg\";\r\nimport ed18b057 from \"../../../images/profiles/ed18b057.jpg\";\r\nimport ee18b022 from \"../../../images/profiles/ee18b022.jpg\";\r\nimport ee18b054 from \"../../../images/profiles/ee18b054.jpeg\";\r\nimport ee18b138 from \"../../../images/profiles/ee18b138.jpg\";\r\nimport ep18b005 from \"../../../images/profiles/ep18b005.jpg\";\r\nimport ep18b006 from \"../../../images/profiles/ep18b006.jpg\";\r\nimport me18b145 from \"../../../images/profiles/me18b145.jpg\";\r\nimport be19b009 from \"../../../images/profiles/be19b009.jpeg\";\r\nimport ce18b060 from \"../../../images/profiles/ce18b060.jpg\";\r\n\r\nexport default {\r\n  be19b009,\r\n  ce18b060,\r\n  be17b022,\r\n  be18b013,\r\n  be18b026,\r\n  be19b012,\r\n  ce18b003,\r\n  ce18b112,\r\n  ce19b029,\r\n  ch18b020,\r\n  ch18b036,\r\n  ch18b037,\r\n  cs18b050,\r\n  ed18b031,\r\n  ed18b050,\r\n  ed18b053,\r\n  ed18b057,\r\n  ee18b022,\r\n  ee18b054,\r\n  ee18b138,\r\n  ep18b005,\r\n  ep18b006,\r\n  me18b145,\r\n};\r\n","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Team_page\\SliderImgBox.tsx",["679","680","681","682","683","684"],"import * as React from \"react\";\r\nimport { Flex } from \"@chakra-ui/react\";\r\nimport {\r\n  FaGithub,\r\n  FaTwitter,\r\n  FaLinkedin,\r\n  FaEnvelope,\r\n  FaWhatsapp,\r\n  FaInstagram,\r\n} from \"react-icons/fa\";\r\nimport \"../../../styles/Team_styles/SliderImgBox.css\";\r\n\r\n// import profileIMG from \"../../../images/profile.jpg\";\r\n\r\ninterface Props {\r\n  profile: {\r\n    name?: string;\r\n    role?: string;\r\n    desc?: string;\r\n    imgURL?: string;\r\n    social_links: {\r\n      twitter?: string;\r\n      linkedIn?: string;\r\n      instagram?: string;\r\n      shastraMailId?: string;\r\n      github?: string;\r\n      contact?: string;\r\n      facebook?: string;\r\n    };\r\n    mailId?: string;\r\n    dept?: string;\r\n  };\r\n}\r\n\r\nconst SliderImgBox = (props: Props) => {\r\n  return (\r\n    <div className=\"sliderImgBox\">\r\n      <div className=\"profileCard\">\r\n        <div className=\"profileCard_header\">\r\n          <div>\r\n            <h2>{props.profile.name}</h2>\r\n            {/* <p>{props.profile.role}</p> */}\r\n          </div>\r\n          <Flex\r\n            width=\"140px\"\r\n            fontSize=\"20px\"\r\n            color=\"rgba(255,255,255)\"\r\n            justifyContent=\"space-evenly\"\r\n          >\r\n            <a\r\n              target=\"_blank\"\r\n              href={`https://api.whatsapp.com/send?phone=91${props.profile.social_links.contact}&text=&source=&data=&app_absent=`}\r\n            >\r\n              <FaWhatsapp />\r\n            </a>\r\n            <a target=\"_blank\" href={props.profile.social_links.linkedIn}>\r\n              <FaLinkedin />\r\n            </a>\r\n            <a\r\n              target=\"_blank\"\r\n              href={\"mailto:\" + props.profile.social_links.shastraMailId}\r\n            >\r\n              <FaEnvelope />\r\n            </a>\r\n          </Flex>\r\n        </div>\r\n        <div className=\"profileDescription\">{props.profile.desc}</div>\r\n      </div>\r\n      <div className=\"imgCover\">\r\n        <img src={props.profile.imgURL} alt={props.profile.imgURL} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SliderImgBox;\r\n","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Team_page\\Card.tsx",["685","686","687","688","689","690","691"],"import * as React from \"react\";\r\nimport { Flex } from \"@chakra-ui/react\";\r\nimport {\r\n  FaGithub,\r\n  FaTwitter,\r\n  FaLinkedin,\r\n  FaEnvelope,\r\n  FaQuoteLeft,\r\n  FaQuoteRight,\r\n  FaWhatsappSquare,\r\n  FaWhatsapp,\r\n  FaInstagram,\r\n} from \"react-icons/fa\";\r\n// import profile from \"../../../images/profile.jpg\";\r\nimport \"../../../styles/Team_styles/Card.css\";\r\n\r\ninterface Props {\r\n  type: string;\r\n  profile: {\r\n    name?: string;\r\n    role?: string;\r\n    desc?: string;\r\n    imgURL?: string;\r\n    social_links: {\r\n      twitter?: string;\r\n      linkedIn?: string;\r\n      instagram?: string;\r\n      shastraMailId?: string;\r\n      github?: string;\r\n      contact?: string;\r\n      facebook?: string;\r\n    };\r\n    mailId?: string;\r\n    dept?: string;\r\n  };\r\n}\r\n\r\nconst Card = (props: Props) => {\r\n  return (\r\n    <div\r\n      className=\"Card\"\r\n      style={\r\n        props.type === \"all\" || props.type === props.profile.dept\r\n          ? { transform: \"scale(1)\", display: \"block\" }\r\n          : { transform: \"scale(0)\", display: \"none\" }\r\n      }\r\n    >\r\n      <div className=\"imageBox\">\r\n        <img src={props.profile.imgURL} alt=\"\" />\r\n        <div className=\"profileDescription\">\r\n          <FaQuoteLeft />\r\n          <p>{props.profile.desc}</p>\r\n          <FaQuoteRight />\r\n        </div>\r\n      </div>\r\n      <div className=\"profileCard\">\r\n        <div>\r\n          <h2>{props.profile.name}</h2>\r\n          <p>{props.profile.dept}</p>\r\n        </div>\r\n        <Flex\r\n          width=\"100%\"\r\n          fontSize=\"20px\"\r\n          p={3}\r\n          color=\"#111\"\r\n          justifyContent=\"space-evenly\"\r\n        >\r\n          <a\r\n            target=\"_blank\"\r\n            href={`https://api.whatsapp.com/send?phone=91${props.profile.social_links.contact}&text=&source=&data=&app_absent=`}\r\n          >\r\n            <FaWhatsapp />\r\n          </a>\r\n          <a target=\"_blank\" href={props.profile.social_links.linkedIn}>\r\n            <FaLinkedin />\r\n          </a>\r\n          <a\r\n            target=\"_blank\"\r\n            href={\"mailto:\" + props.profile.social_links.shastraMailId}\r\n          >\r\n            <FaEnvelope />\r\n          </a>\r\n        </Flex>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Events and Workshops\\EventVeticalComponent.tsx",["692","693","694","695","696","697","698","699","700","701","702","703","704","705","706","707","708","709","710","711","712","713","714","715","716","717","718","719","720"],"import * as React from \"react\";\r\nimport {\r\n  Text,\r\n  Stack,\r\n  Flex,\r\n  Input,\r\n  Box,\r\n  RadioGroup,\r\n  Radio,\r\n  Image,\r\n  Button,\r\n  useColorModeValue,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  useDisclosure,\r\n  FormControl,\r\n  FormLabel,\r\n  FormErrorMessage,\r\n  FormHelperText,\r\n  Heading,\r\n  Alert,\r\n  AlertIcon,\r\n  Center,\r\n} from \"@chakra-ui/react\";\r\nimport { AddIcon, MinusIcon } from \"@chakra-ui/icons\";\r\nimport { useState } from \"react\";\r\nimport CustomBox from \"../../shared/CustomBox\";\r\nimport Footer from \"../../shared/Footer\";\r\nimport bg from \"../../../images/EventsWorkshops/events/bg.jpeg\";\r\nimport {\r\n  useCreateTeamandRegisterMutation,\r\n  useRegisterMutation,\r\n} from \"../../../generated/graphql\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport remarkGfm from \"remark-gfm\";\r\nimport RegisterNow from \"./RegisterNow\";\r\nimport Showdown from \"showdown\";\r\nimport PayRegister from \"./PayRegister\";\r\n\r\nconst EventVerticalComponent = ({ data, isAdmin }: any) => {\r\n  const converter = new Showdown.Converter();\r\n\r\n  // var { isOpen, onOpen, onClose } = useDisclosure()\r\n\r\n  const search = useColorModeValue(\"border\", \"noBorder\");\r\n  const font = useColorModeValue(\"black\", \"white\");\r\n  const gradient = useColorModeValue(\"blackG\", \"whiteG\");\r\n  const button = useColorModeValue(\"dark\", \"light\");\r\n\r\n  const [islarge, setLarge] = useState(false);\r\n  const [referenceCode, setReferenceCode] = useState(\"\");\r\n  // const [courseName, setCourseName] = useState(\"\");\r\n  // const ReferelCode = (e) => {\r\n  //   setReferenceCode(e.target.value);\r\n  //   let datas = e.target.value;\r\n  //   sessionStorage.setItem(\"referalcode\",`${datas}`);\r\n  // }\r\n  // const CourseNameCode = (e) => {\r\n  //   setCourseName(e.target.value);\r\n  //   let datas = e.target.value;\r\n  //   sessionStorage.setItem(\"coursename\",`${datas}`);\r\n  // }\r\n  React.useEffect(() => {\r\n    if (window.innerWidth < 900) {\r\n      setLarge(false);\r\n      \r\n    } else {\r\n      setLarge(true);\r\n    }\r\n  }, []);\r\n  // const [radio, setRadio] = useState(\"i\")\r\n  // const [register, {data : data1,error,loading}] = useRegisterMutation();\r\n  // const IndividualReg = async (eventId : string) =>{\r\n\r\n  //     await register({\r\n  //         variables : {\r\n  //             EventID : eventId\r\n  //         }\r\n  //     })\r\n  //     .catch(err => console.log(err.message))\r\n\r\n  // }\r\n\r\n  // const [members, setMembers] = React.useState<string[]>([]);\r\n  // const [teamname, setTeamname] = React.useState<string>();\r\n\r\n  // const handleMembersInput = ({ index, event }: { index: number, event: React.ChangeEvent<HTMLInputElement> }) => {\r\n  //     const values = [...members];\r\n\r\n  //     values[index] = event.target.value\r\n  //     setMembers(values)\r\n  // }\r\n  // const [teamreg,{data:data2, loading:loading2,error : error2}] = useCreateTeamandRegisterMutation();\r\n\r\n  // const Teamregistration = async (eventID : string)=>{\r\n  //     await teamreg({\r\n  //         variables : {\r\n  //            createTeamAndRegisterData : {\r\n  //                eventID,\r\n  //                name : teamname!,\r\n  //                members\r\n  //            }\r\n  //         }\r\n  //     }).catch(err => console.log(err.message))\r\n  // }\r\n\r\n  // if(radio === \"t\" && members.length === 0){\r\n  //     setMembers([''])\r\n  // }\r\n\r\n  const buttoncolor = useColorModeValue(\"#ea8a94\", \"white\");\r\n\r\n  const history = useHistory();\r\n  // if(data1 || data2)\r\n  // {\r\n  //     onClose = () => {window.location.reload()}\r\n  //     return(\r\n  //         <Modal isOpen={true} onClose={onClose}>\r\n  //             <ModalOverlay />\r\n  //             <ModalContent backgroundColor=\"#addfd0\" color=\"black\">\r\n  //                 <ModalHeader>Registrated Successfully</ModalHeader>\r\n  //                 <ModalCloseButton />\r\n  //              </ModalContent>\r\n  //         </Modal>\r\n  //     )\r\n  // }\r\n  // if(error || error2)\r\n  // {\r\n  //     error? onClose = () => {\r\n  //         if(error.message === \"Please login to continue\"){\r\n  //             history.push('/login')\r\n  //         }\r\n  //         window.location.reload()\r\n  //     } : onClose = () => {window.location.reload()}\r\n  //     return(\r\n  //         <Modal isOpen={true} onClose={onClose}>\r\n  //             <ModalOverlay />\r\n  //             <ModalContent backgroundColor=\"#f1aaaa\" color=\"black\">\r\n  //                 <ModalHeader>{error ? error.message : error2?.message}</ModalHeader>\r\n  //                 <ModalCloseButton />\r\n  //              </ModalContent>\r\n  //         </Modal>\r\n  //     )\r\n  // }\r\n  // if(loading || loading2)\r\n  // {\r\n  //     onClose = () => {window.location.reload()}\r\n  //     return(\r\n  //         <Modal isOpen={true} onClose={onClose}>\r\n  //             <ModalOverlay />\r\n  //             <ModalContent backgroundColor=\"#e2e19c\" color=\"black\">\r\n  //                 <ModalHeader>Loading...</ModalHeader>\r\n  //                 <ModalCloseButton />\r\n  //              </ModalContent>\r\n  //         </Modal>\r\n  //     )\r\n  // }\r\n\r\n  const description = (\r\n    <ReactMarkdown\r\n      children={data?.description!}\r\n      remarkPlugins={[remarkGfm]}\r\n    ></ReactMarkdown>\r\n  );\r\n\r\n  return (\r\n    <Box minHeight={\"15vw\"} m={2} p={2}>\r\n      <Stack spacing={8}>\r\n        <Box className=\"event-main-box\" minHeight={\"15vh\"}>\r\n          <Flex\r\n            width={[\"90vw\", \"90vw\", \"90vw\", \"80vw\"]}\r\n            margin=\"auto\"\r\n            alignItems={\"center\"}\r\n            justifyContent=\"space-evenly\"\r\n            marginBottom=\"2vh\"\r\n            height=\"fit-content\"\r\n            className=\"vertical-events-flex\"\r\n          >\r\n            {/* <div className=\"flip-card\">\r\n                            <div className=\"flip-card-inner\">\r\n                                <div className=\"flip-card-front\">\r\n                                    <Box position=\"relative\" boxSize=\"15vw\">\r\n                                        <Image src={data.pic ? data.pic : bg} boxSize=\"15vw\" borderRadius=\"24px\"></Image>\r\n                                        <Box content=\"\" position=\"absolute\" top=\"0.5vw\" left=\"0.5vw\" borderRadius=\"24px\"\r\n                                        opacity=\"0.7\" backgroundImage=\"linear-gradient(45deg, white, #ffffff00)\" \r\n                                        boxSize=\"14vw\" className=\"glass\"></Box>\r\n                                        <Flex boxSize=\"15vw\" alignItems=\"center\" justifyContent=\"center\" position=\"absolute\" top=\"0\" className=\"event-name\">\r\n                                            <Text width=\"10vw\" fontWeight=\"bold\" color=\"black\">{data?.name}</Text>\r\n                                        </Flex>\r\n                                    </Box>\r\n                                </div>\r\n                                <div className=\"flip-card-back\">\r\n                                    <Box width=\"15vw\" padding=\"2vw\" backgroundColor={buttoncolor} color=\"black\" height=\"15vw\" borderRadius=\"24px\">\r\n                                        <Heading as=\"h4\" size={\"sm\"}>Points Distribution</Heading>\r\n                                        <Flex justifyContent=\"space-between\">\r\n                                            <Text>1ST</Text>\r\n                                            <Text>{data.firstplace}</Text>\r\n                                        </Flex>\r\n                                        <Flex justifyContent=\"space-between\">\r\n                                            <Text>2ND</Text>\r\n                                            <Text>{data.secondplace}</Text>\r\n                                        </Flex>\r\n                                        <Flex justifyContent=\"space-between\">\r\n                                            <Text>3RD</Text>\r\n                                            <Text>{data.thirdplace}</Text>\r\n                                        </Flex>\r\n                                        <Flex justifyContent=\"space-between\">\r\n                                            <Text>PARTICIPATION</Text>\r\n                                            <Text>{data.participation}</Text>\r\n                                        </Flex>\r\n                                    </Box>\r\n                                </div>\r\n                            </div>\r\n                        </div> */}\r\n            <Flex\r\n              alignItems={\"center\"}\r\n              justifyContent={\"space-between\"}\r\n              flexDirection={\"column\"}\r\n              position=\"relative\"\r\n              width={[\"40vw\", \"25vw\"]}\r\n              height=\"fit-content\"\r\n            >\r\n              <Image\r\n                src={data.pic ? data.pic : bg}\r\n                boxSize={[\"30vw\", \"30vw\", \"30vw\", \"15vw\"]}\r\n                borderRadius=\"24px\"\r\n              ></Image>\r\n              <Text\r\n                width={[\"30vw\", \"30vw\", \"30vw\", \"15vw\"]}\r\n                fontSize={[\"3vw\", \"3vw\", \"3vw\", \"1.5vw\"]}\r\n                fontWeight=\"bold\"\r\n              >\r\n                {data?.name}\r\n              </Text>\r\n              {/* <Box content=\"\" position=\"absolute\" top=\"0\" left=\"0\" borderRadius=\"24px\"\r\n                                        opacity=\"0.7\" backgroundImage=\"linear-gradient(45deg, white, #ffffff00)\" \r\n                                        boxSize=\"15vw\" className=\"glass\"></Box>\r\n                                        <Flex boxSize=\"15vw\" alignItems=\"center\" justifyContent=\"center\" position=\"absolute\" top=\"0\" className=\"event-name\">\r\n                                            <Text width=\"10vw\" fontSize={\"1.5vw\"} fontWeight=\"bold\" color=\"black\">{data?.name}</Text>\r\n                                        </Flex> */}\r\n            </Flex>\r\n            <Box\r\n              height=\"fit-content\"\r\n              borderRadius=\"24px\"\r\n              width={[\"60%\", \"60%\", \"60%\", \"55vw\"]}\r\n              marginLeft=\"1vw\"\r\n              className=\"event-desp\"\r\n            >\r\n              <Flex\r\n                flexDirection=\"column\"\r\n                width=\"50vw\"\r\n                height=\"100%\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"center\"\r\n                textAlign={\"justify\"}\r\n              >\r\n                <Text\r\n                  textAlign=\"left\"\r\n                  width={[\"100%\", \"100%\", \"100%\", \"100%\"]}\r\n                  className={font}\r\n                  fontSize={[\"10px\", \"10px\", \"lg\", \"lg\"]}\r\n                  borderRadius=\"24px\"\r\n                  padding=\"2vh\"\r\n                  color=\"white\"\r\n                  fontWeight=\"500\"\r\n                  backdropFilter=\"blur(25px)\"\r\n                >\r\n                  <Text>\r\n                    {islarge\r\n                      ? converter\r\n                        .makeHtml(description.props.children)\r\n                        .replace(/<[^>]+>/g, \"\")\r\n                        .slice(0, 400) + \"....\"\r\n                      : converter\r\n                        .makeHtml(description.props.children)\r\n                        .replace(/<[^>]+>/g, \"\")\r\n                        .slice(0, 100) + \"....\"}\r\n                  </Text>\r\n                  <Flex\r\n                    height=\"fit-content\"\r\n                    width={\"100%\"}\r\n                    flexDirection={[\"column\", \"column\", \"row\", \"row\"]}\r\n                    alignContent={[\"center\"]}\r\n                    justifyContent={[\"center\", \"center\"]}\r\n                  >\r\n                    {!isAdmin ? (\r\n                      data.registrationType === \"NONE\" ? (\r\n                        <Box marginTop=\"2vh\" height=\"1vw\" marginRight={\"2vw\"}>\r\n                          <Alert status=\"info\" size={\"xs\"}>\r\n                            <AlertIcon />\r\n                            Registration is not required for this event\r\n                          </Alert>\r\n                        </Box>\r\n                      ) : //    <Box marginTop=\"2vh\"  height=\"1vw\" >\r\n                        //    <Button backgroundColor={buttoncolor} color='black'\r\n                        //     onClick={\r\n                        //         data.registrationType === \"INDIVIDUAL\" ? ()=>{IndividualReg(data.id)} : onOpen\r\n                        //     }\r\n                        //    >REGISTER NOW</Button>\r\n                        //    </Box>\r\n                        data.registrationfee !== \"0\" ? (\r\n                          <PayRegister isAdmin={isAdmin} data={data!} />\r\n                        ) : (\r\n                          <RegisterNow isAdmin={isAdmin} data={data} />\r\n                        )\r\n                    ) : null}\r\n                    <Box marginTop=\"2vh\" height=\"1vw\">\r\n                      <Button\r\n                        fontSize={[\"3vw\", \"3vw\", \"3vw\", \"1vw\"]}\r\n                        padding={[\"1vw\", \"1.25vw\"]}\r\n                        backgroundColor={\"white\"}\r\n                        border=\"2px solid black\"\r\n                        color=\"black\"\r\n                        onClick={() => {\r\n                          history.push(`/eventpage/${data.id}`);\r\n                        }}\r\n                      >\r\n                        View Details\r\n                      </Button>\r\n                    </Box>\r\n                  </Flex>\r\n                  {/* <Flex marginTop=\"2vh\" height=\"7vh\" flexDirection={'row'}>\r\n                    <Text>Have Referal Code ?</Text>\r\n                    <Input\r\n                      id=\"referal\"\r\n                      width={'10px'}\r\n                      marginLeft={'18px'}\r\n                      border=\"2px solid black\"\r\n                      height={'19px'}\r\n                      placeholder=\"Enter Referal Code\"\r\n                      onChange={ReferelCode}\r\n                    >\r\n                    </Input>\r\n                    <Input\r\n                      id=\"referal\"\r\n                      width={'10px'}\r\n                      marginLeft={'18px'}\r\n                      border=\"2px solid black\"\r\n                      height={'19px'}\r\n                      placeholder=\"Enter Course Name\"\r\n                      onChange={CourseNameCode}\r\n                    >\r\n                    </Input>\r\n                  </Flex> */}\r\n\r\n                  {/* <Modal isOpen={isOpen} onClose={onClose}>\r\n                                            <ModalOverlay />\r\n                                            <ModalContent>\r\n                                            <ModalHeader>Team Registration for {data.name}</ModalHeader>\r\n                                            <ModalCloseButton />\r\n                                            <ModalBody>\r\n                                                <FormControl>\r\n                                                    <FormLabel>Your Shaastra ID</FormLabel>\r\n                                                    <Input type=\"text\"></Input>\r\n                                                </FormControl>\r\n                                                <FormControl marginTop=\"4vh\">\r\n                                                    <RadioGroup onChange={setRadio} value={radio}>\r\n                                                        <Radio value=\"i\" marginRight=\"2vw\">Register as Individual</Radio>\r\n                                                        <Radio value=\"t\">Register as Team</Radio>\r\n                                                    </RadioGroup>\r\n                                                </FormControl>\r\n                                                    <FormControl marginTop=\"1.5vh\" isRequired>\r\n                                                        <FormLabel>Team Name</FormLabel>\r\n                                                        <Input type=\"text\" value={teamname} onChange={e => setTeamname(e.target.value)}></Input>\r\n                                                        {\r\n                                                            radio === \"t\" ? (\r\n                                                        <React.Fragment>\r\n                                                        <FormLabel marginTop=\"1.5vh\">Team Members Shaastra IDs</FormLabel>\r\n                                                        {\r\n                                                            members.map((member, index) => {\r\n                                                                return (\r\n                                                                    <React.Fragment key={index}>\r\n                                                                        <Flex width={'100%'}  >\r\n                                                                            <FormControl isRequired>\r\n\r\n                                                                                <Flex width=\"100%\" justifyContent=\"space-between\">\r\n                                                                                <Input  id={\"member\" + index} placeholder={`Team Member ${index+1} Shaastra ID`} required\r\n                                                                                 onChange={(event) => handleMembersInput({ index, event })} \r\n                                                                                ></Input>\r\n                                                                                </Flex>\r\n                                                                            </FormControl>\r\n\r\n                                                                    <Flex p={[0, 3]} flexDirection={['column', 'row']}>\r\n                                                                        {\r\n                                                                            index === 0 ? null : (\r\n                                                                                <Button mx={2} my={1} size={'xs'}\r\n                                                                                    onClick={() => {\r\n                                                                                        const values = [...members];\r\n                                                                                        values.splice(index, 1)\r\n                                                                                        setMembers(values)\r\n                                                                                    }}\r\n                                                                                ><MinusIcon /></Button>)}\r\n                                                                        {\r\n                                                                            index >= data.teamSize - 2 ? null : (\r\n                                                                                <Button mx={2} my={1} size={'xs'}\r\n                                                                                    onClick={() => {\r\n                                                                                        if (members.length < data.teamSize - 1) {\r\n                                                                                            setMembers([...members, ''])\r\n                                                                                        }\r\n                                                                                    }\r\n                                                                                    }\r\n                                                                                ><AddIcon /></Button>\r\n                                                                            )\r\n                                                                        }\r\n                                                                     \r\n                                                                    </Flex>\r\n                                                                </Flex>\r\n                                                                        </React.Fragment>)\r\n                                                                })\r\n                                                                }\r\n                                                                <FormLabel>Max team size :{data.teamSize}</FormLabel>\r\n                                                                </React.Fragment>\r\n                                                            ) : null\r\n                                                        }\r\n                                                       \r\n                                                    </FormControl>\r\n                                                \r\n                                            </ModalBody>\r\n\r\n                                            <ModalFooter>\r\n                                                <Button colorScheme='blue' mr={3} onClick={()=>Teamregistration(data.id)}>\r\n                                                 Register\r\n                                                </Button>\r\n                                            </ModalFooter>\r\n                                            </ModalContent>\r\n                                        </Modal> */}\r\n                </Text>\r\n              </Flex>\r\n            </Box>\r\n          </Flex>\r\n        </Box>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default EventVerticalComponent;\r\n","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Exhibitions\\Exhibitionsdata.tsx",["721","722"],"import EXHB1 from \"../../../images/Exhibitions/exhb_1.png\";\r\nimport EXHB3 from \"../../../images/Exhibitions/exhb_3.png\";\r\nimport EXHB4 from \"../../../images/Exhibitions/exhb_4.png\";\r\nimport EXHB5 from \"../../../images/Exhibitions/exhb_5.png\";\r\nimport EXHB6 from \"../../../images/Exhibitions/exhb_6.png\";\r\nimport EXHB7 from \"../../../images/Exhibitions/exhb_7.png\";\r\nimport EXHB8 from \"../../../images/Exhibitions/exhb_8.png\";\r\nimport EXHB9 from \"../../../images/Exhibitions/exhb_9.png\";\r\nimport EXHB10 from \"../../../images/Exhibitions/exhb_10.png\";\r\nimport EXHB11 from \"../../../images/Exhibitions/exhb_11.png\";\r\nimport EXHB12 from \"../../../images/Exhibitions/exhb_12.png\";\r\nimport EXHB13 from \"../../../images/Exhibitions/exhb_13.png\";\r\n\r\nexport const CauroselImages = [EXHB3,EXHB4,EXHB9,EXHB10,EXHB11,EXHB12];\r\n\r\nexport const Titlevariants = {\r\n  lhidden:{\r\n    x: \"-100vw\" \r\n  },\r\n  final : {\r\n    x: 0,\r\n    transition:{\r\n      duration : \"1\",\r\n    }\r\n  },\r\n  \r\n}\r\n\r\nexport const AboutusVariants = {\r\n  hidden : {\r\n    opacity : 0\r\n  },\r\n  visible : {\r\n    opacity : 1,\r\n    transition:{\r\n      duration : \"2\",\r\n      delay : 1\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport const AboutusData = `Shaastra Exhibitions is a platform to showcase cutting Edge technology.\r\nExhibitions provide an opportunity for a large number of buyers and sellers in an industry to interact with\r\neach other.\r\nThey are responsible for conveying the ideas of the participants from a \r\n technologically practical perspective and as well as give the audience a \r\n glimpse into the  latest developments in technology\r\n They offer an unparalleled and ideal opportunity to showcase innovative products to a broad\r\nspectrum of people.`;\r\n\r\ninterface exhibitions{\r\n    id: string,\r\n    year : string,\r\n    title : string,\r\n    description ?: string,\r\n    image : string\r\n}\r\n\r\nexport const exhibitions : exhibitions[] =[\r\n    {\r\n      id : \"1\",\r\n      year:\"2016\",\r\n      title : \"Vintage Car Exhibition\",\r\n      description : `In collaboration with the Madras Heritage Motoring Club,\r\n       We Presented  a vintage car exhibition. Some automobiles such as, Austin 8, 1952 Topolino, which\r\n       brought about revolution in the industry was presented. `,\r\n      image : EXHB1\r\n    },\r\n    {\r\n      id : \"2\",\r\n      year:\"2017\",\r\n      title : \" NAO: Autonomous humanoid Robot\",\r\n      description:`Manav: India’s first 3D printed humanoid robot which was developed by \r\n      Diwakar Vaish of A-SET training institutes.`,\r\n      image : EXHB10\r\n    },\r\n    {\r\n      id : \"3\",\r\n      year:\"2018\",\r\n      title : \"Defence and Aerospace models from ISRO\",\r\n      description:\"ISRO - GSLV and PSLV models were exhibited at Shaastra Exhibitions.\",\r\n      image : EXHB5\r\n    },\r\n    {\r\n      id : \"4\",\r\n      year:\"2018\",\r\n      title : \"Bike Expo\",\r\n      description : \"Shaastra 2018 unveiled the spectacular technological advancements in motorcycle history with its Bike Expo.\",\r\n      image : EXHB8\r\n    },\r\n    {\r\n      id:\"4\",\r\n      year : \"2019\",\r\n      title:\"International Expo\",\r\n      description : `Shaastra for the first time ever, presents International Exhibitions, in association with the US Consulate General of Chennai. \r\n      The International Exhibits was on three broad perspectives – Academics, Research and Business. `,\r\n      image : EXHB7\r\n    },\r\n    {\r\n      id:\"5\",\r\n      year : \"2020\",\r\n      title:\"Defence Expo\",\r\n      description:`The Defence Expo was an exhibition of the products of nascent defence technology start-ups,established\r\n      manufacturers,Defence PSUs and the Indian Armed Forces.It was conducted over the course of the 4 days of Shaastra 2020.\r\n      The Expo provided exposure to Defence Technology for the audience.`,\r\n      image : EXHB6\r\n    }\r\n  ];\r\n\r\n  \r\n","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Exhibitions\\Card.tsx",[],"C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Events and Workshops\\CardForWorksShop.tsx",["723","724","725","726","727","728","729"],"import * as React from 'react'\r\nimport {\r\n    Box,\r\n    Center,\r\n    Text,\r\n    Stack,\r\n    List, Flex, Input,\r\n    ListItem,\r\n    ListIcon,\r\n    Button,\r\n    useColorModeValue,\r\n} from '@chakra-ui/react';\r\nimport { CheckIcon } from '@chakra-ui/icons';\r\nimport ComboPay from './ComboPay';\r\nimport { useState } from 'react';\r\nexport default function Pricing(props) {\r\n    // const [referenceCode, setReferenceCode] = useState(\"\");\r\n    // const [courseName, setCourseName] = useState(\"\");\r\n    // const ReferelCode = (e) => {\r\n    //     setReferenceCode(e.target.value);\r\n    //     let datas = e.target.value;\r\n    //     sessionStorage.setItem(\"referalcode\", `${datas}`);\r\n    // }\r\n    // const CourseNameCode = (e) => {\r\n    //     setCourseName(e.target.value);\r\n    //     let datas = e.target.value;\r\n    //     sessionStorage.setItem(\"coursename\", `${datas}`);\r\n    // }\r\n    return (\r\n        <Center py={6}>\r\n\r\n            <Box\r\n                maxW={'330px'}\r\n                w={'full'}\r\n                bg={useColorModeValue('white', 'gray.800')}\r\n                boxShadow={'2xl'}\r\n                rounded={'md'}\r\n                overflow={'hidden'}>\r\n                <Stack\r\n                    textAlign={'center'}\r\n                    p={6}\r\n                    color={useColorModeValue('gray.800', 'white')}\r\n                    align={'center'}>\r\n                    <Text\r\n                        fontSize={'sm'}\r\n                        fontWeight={500}\r\n                        bg={useColorModeValue('green.50', 'green.900')}\r\n                        p={2}\r\n                        px={3}\r\n                        rounded={'full'}>\r\n                        {props.ComboName}\r\n                    </Text>\r\n                    <Stack direction={'row'} align={'center'} justify={'center'}>\r\n                        <Text fontSize={'3xl'}>&#8377;</Text>\r\n                        <Text fontSize={'6xl'} fontWeight={800}>\r\n                            {props.DiscountedPrice}\r\n                        </Text>\r\n                    </Stack>\r\n                    <Text color={'gray.500'} textDecorationLine={'line-through'}>&#8377;{props.ActualPrice}</Text>\r\n                </Stack>\r\n\r\n                <Box bg={useColorModeValue('gray.50', 'gray.900')} px={6} py={10}>\r\n                    <List spacing={3} textAlign={\"left\"}>\r\n                        <Text fontWeight={600} fontSize={'17px'}>\r\n                            {props.title}\r\n                        </Text>\r\n                        <Text paddingLeft={'20px'} fontWeight={600}>\r\n                            <ul>\r\n                                <li>\r\n                                    {props.WS1}\r\n\r\n                                </li>\r\n                                <li>\r\n                                    {props.WS2}\r\n\r\n                                </li>                                <li>\r\n                                    {props.WS3}\r\n\r\n                                </li>\r\n                            </ul>\r\n                        </Text>\r\n                        {/* <ListItem>\r\n                            <ListIcon as={CheckIcon} color=\"green.400\" />\r\n                            5.000 page views\r\n                        </ListItem>\r\n                        <ListItem>\r\n                            <ListIcon as={CheckIcon} color=\"green.400\" />\r\n                            50 automation executions\r\n                        </ListItem>\r\n                        <ListItem>\r\n                            <ListIcon as={CheckIcon} color=\"green.400\" />\r\n                            50 identified users\r\n                        </ListItem>\r\n                        <ListItem>\r\n                            <ListIcon as={CheckIcon} color=\"green.400\" />\r\n                            All features\r\n                        </ListItem> */}\r\n                    </List>\r\n\r\n                    {/* <Button\r\n                        mt={10}\r\n                        w={'full'}\r\n                        bg={'#301b1b'}\r\n                        color={'white'}\r\n                        rounded={'xl'}\r\n                        boxShadow={'0 5px 20px 0px rgb(72 187 120 / 43%)'}\r\n                        _hover={{\r\n                            bg: '#543535',\r\n                        }}\r\n                        _focus={{\r\n                            bg: '#543535',\r\n                        }}>\r\n                        Register Now\r\n                    </Button> */}\r\n                    <ComboPay isAdmin={false} combo={props.ComboName} />\r\n                    {/* <Flex marginTop=\"2vh\" height=\"7vh\" flexDirection={'row'}>\r\n                        <Input\r\n                            id=\"referal\"\r\n                            width={'10px'}\r\n                            border=\"2px solid black\"\r\n                            height={'19px'}\r\n                            placeholder=\"Referal Code\"\r\n                            onChange={ReferelCode}\r\n                        >\r\n                        </Input>\r\n                        <Input\r\n                            id=\"referal\"\r\n                            width={'10px'}\r\n                            marginLeft={'18px'}\r\n                            border=\"2px solid black\"\r\n                            height={'19px'}\r\n                            placeholder=\"Course Name\"\r\n                            onChange={CourseNameCode}\r\n                        >\r\n                        </Input>\r\n                    </Flex> */}\r\n                </Box>\r\n            </Box>\r\n        </Center>\r\n    );\r\n}","C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Events and Workshops\\ComboPay.tsx",["730","731","732","733","734","735","736","737","738","739","740"],"C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Events and Workshops\\MayhemCombo.tsx",["741","742","743","744","745","746","747","748","749","750","751","752"],"C:\\Users\\HP\\Desktop\\shaastra\\src\\components\\pages\\Events and Workshops\\CAREFERRAL.tsx",[],{"ruleId":"753","replacedBy":"754"},{"ruleId":"755","replacedBy":"756"},{"ruleId":"757","severity":1,"message":"758","line":6,"column":3,"nodeType":"759","messageId":"760","endLine":6,"endColumn":11},{"ruleId":"757","severity":1,"message":"761","line":8,"column":10,"nodeType":"759","messageId":"760","endLine":8,"endColumn":14},{"ruleId":"757","severity":1,"message":"762","line":16,"column":8,"nodeType":"759","messageId":"760","endLine":16,"endColumn":14},{"ruleId":"757","severity":1,"message":"763","line":17,"column":8,"nodeType":"759","messageId":"760","endLine":17,"endColumn":23},{"ruleId":"757","severity":1,"message":"764","line":21,"column":8,"nodeType":"759","messageId":"760","endLine":21,"endColumn":17},{"ruleId":"757","severity":1,"message":"765","line":23,"column":8,"nodeType":"759","messageId":"760","endLine":23,"endColumn":12},{"ruleId":"757","severity":1,"message":"766","line":24,"column":8,"nodeType":"759","messageId":"760","endLine":24,"endColumn":15},{"ruleId":"757","severity":1,"message":"767","line":7,"column":5,"nodeType":"759","messageId":"760","endLine":7,"endColumn":10},{"ruleId":"757","severity":1,"message":"761","line":8,"column":5,"nodeType":"759","messageId":"760","endLine":8,"endColumn":9},{"ruleId":"757","severity":1,"message":"768","line":10,"column":5,"nodeType":"759","messageId":"760","endLine":10,"endColumn":12},{"ruleId":"757","severity":1,"message":"769","line":11,"column":5,"nodeType":"759","messageId":"760","endLine":11,"endColumn":8},{"ruleId":"757","severity":1,"message":"770","line":12,"column":5,"nodeType":"759","messageId":"760","endLine":12,"endColumn":15},{"ruleId":"757","severity":1,"message":"771","line":13,"column":5,"nodeType":"759","messageId":"760","endLine":13,"endColumn":10},{"ruleId":"757","severity":1,"message":"772","line":15,"column":5,"nodeType":"759","messageId":"760","endLine":15,"endColumn":11},{"ruleId":"757","severity":1,"message":"773","line":16,"column":5,"nodeType":"759","messageId":"760","endLine":16,"endColumn":22},{"ruleId":"757","severity":1,"message":"774","line":17,"column":5,"nodeType":"759","messageId":"760","endLine":17,"endColumn":10},{"ruleId":"757","severity":1,"message":"775","line":18,"column":5,"nodeType":"759","messageId":"760","endLine":18,"endColumn":17},{"ruleId":"757","severity":1,"message":"776","line":19,"column":5,"nodeType":"759","messageId":"760","endLine":19,"endColumn":17},{"ruleId":"757","severity":1,"message":"777","line":20,"column":5,"nodeType":"759","messageId":"760","endLine":20,"endColumn":16},{"ruleId":"757","severity":1,"message":"778","line":21,"column":5,"nodeType":"759","messageId":"760","endLine":21,"endColumn":16},{"ruleId":"757","severity":1,"message":"779","line":22,"column":5,"nodeType":"759","messageId":"760","endLine":22,"endColumn":14},{"ruleId":"757","severity":1,"message":"780","line":23,"column":5,"nodeType":"759","messageId":"760","endLine":23,"endColumn":21},{"ruleId":"757","severity":1,"message":"781","line":24,"column":5,"nodeType":"759","messageId":"760","endLine":24,"endColumn":18},{"ruleId":"757","severity":1,"message":"782","line":25,"column":5,"nodeType":"759","messageId":"760","endLine":25,"endColumn":16},{"ruleId":"757","severity":1,"message":"783","line":26,"column":5,"nodeType":"759","messageId":"760","endLine":26,"endColumn":14},{"ruleId":"757","severity":1,"message":"784","line":27,"column":5,"nodeType":"759","messageId":"760","endLine":27,"endColumn":21},{"ruleId":"757","severity":1,"message":"785","line":28,"column":5,"nodeType":"759","messageId":"760","endLine":28,"endColumn":19},{"ruleId":"757","severity":1,"message":"786","line":30,"column":5,"nodeType":"759","messageId":"760","endLine":30,"endColumn":11},{"ruleId":"757","severity":1,"message":"787","line":31,"column":5,"nodeType":"759","messageId":"760","endLine":31,"endColumn":12},{"ruleId":"757","severity":1,"message":"788","line":32,"column":5,"nodeType":"759","messageId":"760","endLine":32,"endColumn":19},{"ruleId":"757","severity":1,"message":"789","line":33,"column":5,"nodeType":"759","messageId":"760","endLine":33,"endColumn":19},{"ruleId":"757","severity":1,"message":"790","line":34,"column":5,"nodeType":"759","messageId":"760","endLine":34,"endColumn":18},{"ruleId":"757","severity":1,"message":"791","line":35,"column":5,"nodeType":"759","messageId":"760","endLine":35,"endColumn":17},{"ruleId":"757","severity":1,"message":"792","line":36,"column":5,"nodeType":"759","messageId":"760","endLine":36,"endColumn":23},{"ruleId":"757","severity":1,"message":"793","line":37,"column":5,"nodeType":"759","messageId":"760","endLine":37,"endColumn":16},{"ruleId":"757","severity":1,"message":"794","line":38,"column":5,"nodeType":"759","messageId":"760","endLine":38,"endColumn":18},{"ruleId":"757","severity":1,"message":"795","line":39,"column":5,"nodeType":"759","messageId":"760","endLine":39,"endColumn":16},{"ruleId":"796","severity":1,"message":"797","line":59,"column":67,"nodeType":"798","messageId":"799","endLine":59,"endColumn":122,"fix":"800"},{"ruleId":"796","severity":1,"message":"797","line":63,"column":68,"nodeType":"798","messageId":"799","endLine":63,"endColumn":123,"fix":"801"},{"ruleId":"796","severity":1,"message":"797","line":75,"column":66,"nodeType":"798","messageId":"799","endLine":75,"endColumn":121,"fix":"802"},{"ruleId":"796","severity":1,"message":"797","line":79,"column":67,"nodeType":"798","messageId":"799","endLine":79,"endColumn":122,"fix":"803"},{"ruleId":"796","severity":1,"message":"797","line":91,"column":66,"nodeType":"798","messageId":"799","endLine":91,"endColumn":121,"fix":"804"},{"ruleId":"796","severity":1,"message":"797","line":95,"column":67,"nodeType":"798","messageId":"799","endLine":95,"endColumn":122,"fix":"805"},{"ruleId":"796","severity":1,"message":"797","line":107,"column":67,"nodeType":"798","messageId":"799","endLine":107,"endColumn":122,"fix":"806"},{"ruleId":"796","severity":1,"message":"797","line":114,"column":66,"nodeType":"798","messageId":"799","endLine":114,"endColumn":121,"fix":"807"},{"ruleId":"796","severity":1,"message":"797","line":126,"column":67,"nodeType":"798","messageId":"799","endLine":126,"endColumn":122,"fix":"808"},{"ruleId":"796","severity":1,"message":"797","line":133,"column":67,"nodeType":"798","messageId":"799","endLine":133,"endColumn":122,"fix":"809"},{"ruleId":"757","severity":1,"message":"767","line":5,"column":3,"nodeType":"759","messageId":"760","endLine":5,"endColumn":8},{"ruleId":"757","severity":1,"message":"810","line":15,"column":8,"nodeType":"759","messageId":"760","endLine":15,"endColumn":17},{"ruleId":"757","severity":1,"message":"811","line":17,"column":28,"nodeType":"759","messageId":"760","endLine":17,"endColumn":37},{"ruleId":"757","severity":1,"message":"812","line":18,"column":28,"nodeType":"759","messageId":"760","endLine":18,"endColumn":37},{"ruleId":"757","severity":1,"message":"813","line":20,"column":8,"nodeType":"759","messageId":"760","endLine":20,"endColumn":14},{"ruleId":"757","severity":1,"message":"814","line":21,"column":10,"nodeType":"759","messageId":"760","endLine":21,"endColumn":17},{"ruleId":"757","severity":1,"message":"815","line":21,"column":18,"nodeType":"759","messageId":"760","endLine":21,"endColumn":28},{"ruleId":"757","severity":1,"message":"816","line":22,"column":9,"nodeType":"759","messageId":"760","endLine":22,"endColumn":15},{"ruleId":"817","severity":1,"message":"818","line":47,"column":6,"nodeType":"819","endLine":47,"endColumn":14,"suggestions":"820"},{"ruleId":"757","severity":1,"message":"761","line":8,"column":5,"nodeType":"759","messageId":"760","endLine":8,"endColumn":9},{"ruleId":"757","severity":1,"message":"770","line":12,"column":5,"nodeType":"759","messageId":"760","endLine":12,"endColumn":15},{"ruleId":"757","severity":1,"message":"771","line":13,"column":5,"nodeType":"759","messageId":"760","endLine":13,"endColumn":10},{"ruleId":"757","severity":1,"message":"821","line":31,"column":10,"nodeType":"759","messageId":"760","endLine":31,"endColumn":16},{"ruleId":"757","severity":1,"message":"822","line":59,"column":10,"nodeType":"759","messageId":"760","endLine":59,"endColumn":16},{"ruleId":"757","severity":1,"message":"823","line":71,"column":13,"nodeType":"759","messageId":"760","endLine":71,"endColumn":19},{"ruleId":"757","severity":1,"message":"824","line":71,"column":21,"nodeType":"759","messageId":"760","endLine":71,"endColumn":27},{"ruleId":"757","severity":1,"message":"825","line":71,"column":29,"nodeType":"759","messageId":"760","endLine":71,"endColumn":36},{"ruleId":"757","severity":1,"message":"826","line":88,"column":9,"nodeType":"759","messageId":"760","endLine":88,"endColumn":16},{"ruleId":"757","severity":1,"message":"786","line":6,"column":3,"nodeType":"759","messageId":"760","endLine":6,"endColumn":9},{"ruleId":"757","severity":1,"message":"827","line":10,"column":3,"nodeType":"759","messageId":"760","endLine":10,"endColumn":13},{"ruleId":"757","severity":1,"message":"828","line":11,"column":3,"nodeType":"759","messageId":"760","endLine":11,"endColumn":12},{"ruleId":"757","severity":1,"message":"829","line":30,"column":8,"nodeType":"759","messageId":"760","endLine":30,"endColumn":15},{"ruleId":"757","severity":1,"message":"773","line":31,"column":10,"nodeType":"759","messageId":"760","endLine":31,"endColumn":27},{"ruleId":"796","severity":1,"message":"797","line":59,"column":15,"nodeType":"798","messageId":"799","endLine":59,"endColumn":71,"fix":"830"},{"ruleId":"757","severity":1,"message":"831","line":3,"column":3,"nodeType":"759","messageId":"760","endLine":3,"endColumn":7},{"ruleId":"757","severity":1,"message":"832","line":14,"column":8,"nodeType":"759","messageId":"760","endLine":14,"endColumn":10},{"ruleId":"757","severity":1,"message":"833","line":27,"column":10,"nodeType":"759","messageId":"760","endLine":27,"endColumn":26},{"ruleId":"757","severity":1,"message":"834","line":27,"column":28,"nodeType":"759","messageId":"760","endLine":27,"endColumn":51},{"ruleId":"757","severity":1,"message":"835","line":33,"column":9,"nodeType":"759","messageId":"760","endLine":33,"endColumn":17},{"ruleId":"757","severity":1,"message":"761","line":23,"column":10,"nodeType":"759","messageId":"760","endLine":23,"endColumn":14},{"ruleId":"796","severity":1,"message":"797","line":54,"column":11,"nodeType":"798","messageId":"799","endLine":54,"endColumn":67,"fix":"836"},{"ruleId":"757","severity":1,"message":"831","line":2,"column":10,"nodeType":"759","messageId":"760","endLine":2,"endColumn":14},{"ruleId":"757","severity":1,"message":"837","line":2,"column":16,"nodeType":"759","messageId":"760","endLine":2,"endColumn":22},{"ruleId":"757","severity":1,"message":"838","line":2,"column":24,"nodeType":"759","messageId":"760","endLine":2,"endColumn":28},{"ruleId":"757","severity":1,"message":"839","line":2,"column":49,"nodeType":"759","messageId":"760","endLine":2,"endColumn":53},{"ruleId":"757","severity":1,"message":"840","line":19,"column":9,"nodeType":"759","messageId":"760","endLine":19,"endColumn":13},{"ruleId":"757","severity":1,"message":"841","line":349,"column":13,"nodeType":"759","messageId":"760","endLine":349,"endColumn":18},{"ruleId":"757","severity":1,"message":"831","line":3,"column":3,"nodeType":"759","messageId":"760","endLine":3,"endColumn":7},{"ruleId":"757","severity":1,"message":"761","line":6,"column":3,"nodeType":"759","messageId":"760","endLine":6,"endColumn":7},{"ruleId":"757","severity":1,"message":"842","line":12,"column":3,"nodeType":"759","messageId":"760","endLine":12,"endColumn":8},{"ruleId":"757","severity":1,"message":"778","line":21,"column":3,"nodeType":"759","messageId":"760","endLine":21,"endColumn":14},{"ruleId":"757","severity":1,"message":"779","line":22,"column":3,"nodeType":"759","messageId":"760","endLine":22,"endColumn":12},{"ruleId":"757","severity":1,"message":"843","line":59,"column":10,"nodeType":"759","messageId":"760","endLine":59,"endColumn":15},{"ruleId":"757","severity":1,"message":"844","line":59,"column":17,"nodeType":"759","messageId":"760","endLine":59,"endColumn":25},{"ruleId":"757","severity":1,"message":"845","line":65,"column":23,"nodeType":"759","messageId":"760","endLine":65,"endColumn":37},{"ruleId":"757","severity":1,"message":"846","line":82,"column":9,"nodeType":"759","messageId":"760","endLine":82,"endColumn":21},{"ruleId":"757","severity":1,"message":"823","line":125,"column":9,"nodeType":"759","messageId":"760","endLine":125,"endColumn":15},{"ruleId":"757","severity":1,"message":"824","line":125,"column":17,"nodeType":"759","messageId":"760","endLine":125,"endColumn":23},{"ruleId":"847","severity":1,"message":"848","line":549,"column":25,"nodeType":"849","messageId":"850","endLine":549,"endColumn":27},{"ruleId":"757","severity":1,"message":"851","line":4,"column":12,"nodeType":"759","messageId":"760","endLine":4,"endColumn":17},{"ruleId":"757","severity":1,"message":"761","line":6,"column":5,"nodeType":"759","messageId":"760","endLine":6,"endColumn":9},{"ruleId":"757","severity":1,"message":"852","line":7,"column":10,"nodeType":"759","messageId":"760","endLine":7,"endColumn":16},{"ruleId":"757","severity":1,"message":"842","line":9,"column":5,"nodeType":"759","messageId":"760","endLine":9,"endColumn":10},{"ruleId":"757","severity":1,"message":"772","line":10,"column":5,"nodeType":"759","messageId":"760","endLine":10,"endColumn":11},{"ruleId":"757","severity":1,"message":"786","line":12,"column":5,"nodeType":"759","messageId":"760","endLine":12,"endColumn":11},{"ruleId":"757","severity":1,"message":"783","line":13,"column":5,"nodeType":"759","messageId":"760","endLine":13,"endColumn":14},{"ruleId":"757","severity":1,"message":"853","line":14,"column":5,"nodeType":"759","messageId":"760","endLine":14,"endColumn":10},{"ruleId":"757","severity":1,"message":"854","line":15,"column":5,"nodeType":"759","messageId":"760","endLine":15,"endColumn":14},{"ruleId":"757","severity":1,"message":"855","line":24,"column":10,"nodeType":"759","messageId":"760","endLine":24,"endColumn":15},{"ruleId":"757","severity":1,"message":"856","line":24,"column":36,"nodeType":"759","messageId":"760","endLine":24,"endColumn":61},{"ruleId":"757","severity":1,"message":"857","line":25,"column":8,"nodeType":"759","messageId":"760","endLine":25,"endColumn":11},{"ruleId":"757","severity":1,"message":"858","line":33,"column":11,"nodeType":"759","messageId":"760","endLine":33,"endColumn":17},{"ruleId":"757","severity":1,"message":"859","line":34,"column":11,"nodeType":"759","messageId":"760","endLine":34,"endColumn":15},{"ruleId":"757","severity":1,"message":"860","line":35,"column":11,"nodeType":"759","messageId":"760","endLine":35,"endColumn":19},{"ruleId":"757","severity":1,"message":"861","line":36,"column":11,"nodeType":"759","messageId":"760","endLine":36,"endColumn":17},{"ruleId":"757","severity":1,"message":"862","line":38,"column":19,"nodeType":"759","messageId":"760","endLine":38,"endColumn":26},{"ruleId":"757","severity":1,"message":"863","line":38,"column":28,"nodeType":"759","messageId":"760","endLine":38,"endColumn":33},{"ruleId":"757","severity":1,"message":"767","line":4,"column":5,"nodeType":"759","messageId":"760","endLine":4,"endColumn":10},{"ruleId":"757","severity":1,"message":"783","line":11,"column":5,"nodeType":"759","messageId":"760","endLine":11,"endColumn":14},{"ruleId":"757","severity":1,"message":"782","line":12,"column":5,"nodeType":"759","messageId":"760","endLine":12,"endColumn":16},{"ruleId":"757","severity":1,"message":"778","line":19,"column":5,"nodeType":"759","messageId":"760","endLine":19,"endColumn":16},{"ruleId":"757","severity":1,"message":"864","line":30,"column":10,"nodeType":"759","messageId":"760","endLine":30,"endColumn":20},{"ruleId":"757","severity":1,"message":"823","line":44,"column":11,"nodeType":"759","messageId":"760","endLine":44,"endColumn":17},{"ruleId":"757","severity":1,"message":"824","line":44,"column":19,"nodeType":"759","messageId":"760","endLine":44,"endColumn":25},{"ruleId":"757","severity":1,"message":"831","line":3,"column":5,"nodeType":"759","messageId":"760","endLine":3,"endColumn":9},{"ruleId":"757","severity":1,"message":"851","line":9,"column":4,"nodeType":"759","messageId":"760","endLine":9,"endColumn":9},{"ruleId":"757","severity":1,"message":"842","line":10,"column":5,"nodeType":"759","messageId":"760","endLine":10,"endColumn":10},{"ruleId":"757","severity":1,"message":"773","line":12,"column":5,"nodeType":"759","messageId":"760","endLine":12,"endColumn":22},{"ruleId":"757","severity":1,"message":"774","line":13,"column":5,"nodeType":"759","messageId":"760","endLine":13,"endColumn":10},{"ruleId":"757","severity":1,"message":"775","line":14,"column":5,"nodeType":"759","messageId":"760","endLine":14,"endColumn":17},{"ruleId":"757","severity":1,"message":"776","line":15,"column":5,"nodeType":"759","messageId":"760","endLine":15,"endColumn":17},{"ruleId":"757","severity":1,"message":"777","line":16,"column":5,"nodeType":"759","messageId":"760","endLine":16,"endColumn":16},{"ruleId":"757","severity":1,"message":"778","line":17,"column":5,"nodeType":"759","messageId":"760","endLine":17,"endColumn":16},{"ruleId":"757","severity":1,"message":"779","line":18,"column":5,"nodeType":"759","messageId":"760","endLine":18,"endColumn":14},{"ruleId":"757","severity":1,"message":"780","line":19,"column":5,"nodeType":"759","messageId":"760","endLine":19,"endColumn":21},{"ruleId":"757","severity":1,"message":"781","line":20,"column":5,"nodeType":"759","messageId":"760","endLine":20,"endColumn":18},{"ruleId":"757","severity":1,"message":"865","line":23,"column":10,"nodeType":"759","messageId":"760","endLine":23,"endColumn":17},{"ruleId":"757","severity":1,"message":"866","line":23,"column":29,"nodeType":"759","messageId":"760","endLine":23,"endColumn":38},{"ruleId":"757","severity":1,"message":"867","line":27,"column":56,"nodeType":"759","messageId":"760","endLine":27,"endColumn":79},{"ruleId":"757","severity":1,"message":"868","line":27,"column":81,"nodeType":"759","messageId":"760","endLine":27,"endColumn":97},{"ruleId":"757","severity":1,"message":"869","line":34,"column":12,"nodeType":"759","messageId":"760","endLine":34,"endColumn":17},{"ruleId":"757","severity":1,"message":"870","line":34,"column":19,"nodeType":"759","messageId":"760","endLine":34,"endColumn":27},{"ruleId":"757","severity":1,"message":"862","line":36,"column":18,"nodeType":"759","messageId":"760","endLine":36,"endColumn":25},{"ruleId":"757","severity":1,"message":"863","line":36,"column":27,"nodeType":"759","messageId":"760","endLine":36,"endColumn":32},{"ruleId":"757","severity":1,"message":"871","line":43,"column":35,"nodeType":"759","messageId":"760","endLine":43,"endColumn":41},{"ruleId":"757","severity":1,"message":"872","line":43,"column":51,"nodeType":"759","messageId":"760","endLine":43,"endColumn":59},{"ruleId":"757","severity":1,"message":"837","line":10,"column":5,"nodeType":"759","messageId":"760","endLine":10,"endColumn":11},{"ruleId":"757","severity":1,"message":"761","line":12,"column":5,"nodeType":"759","messageId":"760","endLine":12,"endColumn":9},{"ruleId":"757","severity":1,"message":"772","line":13,"column":5,"nodeType":"759","messageId":"760","endLine":13,"endColumn":11},{"ruleId":"757","severity":1,"message":"873","line":18,"column":10,"nodeType":"759","messageId":"760","endLine":18,"endColumn":16},{"ruleId":"757","severity":1,"message":"874","line":19,"column":8,"nodeType":"759","messageId":"760","endLine":19,"endColumn":11},{"ruleId":"757","severity":1,"message":"767","line":4,"column":5,"nodeType":"759","messageId":"760","endLine":4,"endColumn":10},{"ruleId":"757","severity":1,"message":"761","line":6,"column":5,"nodeType":"759","messageId":"760","endLine":6,"endColumn":9},{"ruleId":"757","severity":1,"message":"783","line":11,"column":5,"nodeType":"759","messageId":"760","endLine":11,"endColumn":14},{"ruleId":"757","severity":1,"message":"782","line":12,"column":5,"nodeType":"759","messageId":"760","endLine":12,"endColumn":16},{"ruleId":"757","severity":1,"message":"778","line":19,"column":5,"nodeType":"759","messageId":"760","endLine":19,"endColumn":16},{"ruleId":"757","severity":1,"message":"875","line":31,"column":37,"nodeType":"759","messageId":"760","endLine":31,"endColumn":70},{"ruleId":"757","severity":1,"message":"823","line":42,"column":11,"nodeType":"759","messageId":"760","endLine":42,"endColumn":17},{"ruleId":"757","severity":1,"message":"824","line":42,"column":19,"nodeType":"759","messageId":"760","endLine":42,"endColumn":25},{"ruleId":"757","severity":1,"message":"767","line":4,"column":5,"nodeType":"759","messageId":"760","endLine":4,"endColumn":10},{"ruleId":"757","severity":1,"message":"761","line":6,"column":5,"nodeType":"759","messageId":"760","endLine":6,"endColumn":9},{"ruleId":"757","severity":1,"message":"783","line":11,"column":5,"nodeType":"759","messageId":"760","endLine":11,"endColumn":14},{"ruleId":"757","severity":1,"message":"782","line":12,"column":5,"nodeType":"759","messageId":"760","endLine":12,"endColumn":16},{"ruleId":"757","severity":1,"message":"778","line":19,"column":5,"nodeType":"759","messageId":"760","endLine":19,"endColumn":16},{"ruleId":"757","severity":1,"message":"876","line":29,"column":22,"nodeType":"759","messageId":"760","endLine":29,"endColumn":31},{"ruleId":"757","severity":1,"message":"823","line":43,"column":11,"nodeType":"759","messageId":"760","endLine":43,"endColumn":17},{"ruleId":"757","severity":1,"message":"824","line":43,"column":19,"nodeType":"759","messageId":"760","endLine":43,"endColumn":25},{"ruleId":"757","severity":1,"message":"877","line":1,"column":17,"nodeType":"759","messageId":"760","endLine":1,"endColumn":26},{"ruleId":"757","severity":1,"message":"851","line":7,"column":5,"nodeType":"759","messageId":"760","endLine":7,"endColumn":10},{"ruleId":"757","severity":1,"message":"770","line":9,"column":5,"nodeType":"759","messageId":"760","endLine":9,"endColumn":15},{"ruleId":"757","severity":1,"message":"771","line":10,"column":5,"nodeType":"759","messageId":"760","endLine":10,"endColumn":10},{"ruleId":"757","severity":1,"message":"773","line":13,"column":5,"nodeType":"759","messageId":"760","endLine":13,"endColumn":22},{"ruleId":"757","severity":1,"message":"778","line":18,"column":5,"nodeType":"759","messageId":"760","endLine":18,"endColumn":16},{"ruleId":"757","severity":1,"message":"779","line":19,"column":5,"nodeType":"759","messageId":"760","endLine":19,"endColumn":14},{"ruleId":"757","severity":1,"message":"782","line":22,"column":5,"nodeType":"759","messageId":"760","endLine":22,"endColumn":16},{"ruleId":"757","severity":1,"message":"783","line":23,"column":5,"nodeType":"759","messageId":"760","endLine":23,"endColumn":14},{"ruleId":"757","severity":1,"message":"784","line":24,"column":5,"nodeType":"759","messageId":"760","endLine":24,"endColumn":21},{"ruleId":"757","severity":1,"message":"785","line":25,"column":5,"nodeType":"759","messageId":"760","endLine":25,"endColumn":19},{"ruleId":"757","severity":1,"message":"786","line":27,"column":5,"nodeType":"759","messageId":"760","endLine":27,"endColumn":11},{"ruleId":"757","severity":1,"message":"794","line":35,"column":5,"nodeType":"759","messageId":"760","endLine":35,"endColumn":18},{"ruleId":"757","severity":1,"message":"795","line":36,"column":5,"nodeType":"759","messageId":"760","endLine":36,"endColumn":16},{"ruleId":"757","severity":1,"message":"865","line":38,"column":10,"nodeType":"759","messageId":"760","endLine":38,"endColumn":17},{"ruleId":"757","severity":1,"message":"866","line":38,"column":19,"nodeType":"759","messageId":"760","endLine":38,"endColumn":28},{"ruleId":"757","severity":1,"message":"878","line":39,"column":10,"nodeType":"759","messageId":"760","endLine":39,"endColumn":18},{"ruleId":"757","severity":1,"message":"823","line":64,"column":11,"nodeType":"759","messageId":"760","endLine":64,"endColumn":17},{"ruleId":"757","severity":1,"message":"824","line":64,"column":19,"nodeType":"759","messageId":"760","endLine":64,"endColumn":25},{"ruleId":"757","severity":1,"message":"767","line":4,"column":5,"nodeType":"759","messageId":"760","endLine":4,"endColumn":10},{"ruleId":"757","severity":1,"message":"783","line":12,"column":5,"nodeType":"759","messageId":"760","endLine":12,"endColumn":14},{"ruleId":"757","severity":1,"message":"782","line":13,"column":5,"nodeType":"759","messageId":"760","endLine":13,"endColumn":16},{"ruleId":"757","severity":1,"message":"778","line":20,"column":5,"nodeType":"759","messageId":"760","endLine":20,"endColumn":16},{"ruleId":"757","severity":1,"message":"823","line":57,"column":11,"nodeType":"759","messageId":"760","endLine":57,"endColumn":17},{"ruleId":"757","severity":1,"message":"824","line":57,"column":19,"nodeType":"759","messageId":"760","endLine":57,"endColumn":25},{"ruleId":"757","severity":1,"message":"879","line":1,"column":17,"nodeType":"759","messageId":"760","endLine":1,"endColumn":26},{"ruleId":"757","severity":1,"message":"778","line":7,"column":5,"nodeType":"759","messageId":"760","endLine":7,"endColumn":16},{"ruleId":"757","severity":1,"message":"827","line":12,"column":5,"nodeType":"759","messageId":"760","endLine":12,"endColumn":15},{"ruleId":"757","severity":1,"message":"783","line":16,"column":5,"nodeType":"759","messageId":"760","endLine":16,"endColumn":14},{"ruleId":"757","severity":1,"message":"878","line":28,"column":10,"nodeType":"759","messageId":"760","endLine":28,"endColumn":18},{"ruleId":"757","severity":1,"message":"876","line":30,"column":10,"nodeType":"759","messageId":"760","endLine":30,"endColumn":19},{"ruleId":"757","severity":1,"message":"880","line":40,"column":25,"nodeType":"759","messageId":"760","endLine":40,"endColumn":29},{"ruleId":"757","severity":1,"message":"823","line":76,"column":11,"nodeType":"759","messageId":"760","endLine":76,"endColumn":17},{"ruleId":"757","severity":1,"message":"824","line":76,"column":19,"nodeType":"759","messageId":"760","endLine":76,"endColumn":25},{"ruleId":"757","severity":1,"message":"761","line":6,"column":5,"nodeType":"759","messageId":"760","endLine":6,"endColumn":9},{"ruleId":"757","severity":1,"message":"842","line":12,"column":5,"nodeType":"759","messageId":"760","endLine":12,"endColumn":10},{"ruleId":"757","severity":1,"message":"773","line":17,"column":5,"nodeType":"759","messageId":"760","endLine":17,"endColumn":22},{"ruleId":"757","severity":1,"message":"778","line":22,"column":5,"nodeType":"759","messageId":"760","endLine":22,"endColumn":16},{"ruleId":"757","severity":1,"message":"779","line":23,"column":5,"nodeType":"759","messageId":"760","endLine":23,"endColumn":14},{"ruleId":"757","severity":1,"message":"881","line":38,"column":7,"nodeType":"759","messageId":"760","endLine":38,"endColumn":17},{"ruleId":"757","severity":1,"message":"882","line":39,"column":7,"nodeType":"759","messageId":"760","endLine":39,"endColumn":19},{"ruleId":"757","severity":1,"message":"845","line":69,"column":25,"nodeType":"759","messageId":"760","endLine":69,"endColumn":39},{"ruleId":"757","severity":1,"message":"823","line":117,"column":11,"nodeType":"759","messageId":"760","endLine":117,"endColumn":17},{"ruleId":"757","severity":1,"message":"824","line":117,"column":19,"nodeType":"759","messageId":"760","endLine":117,"endColumn":25},{"ruleId":"757","severity":1,"message":"770","line":9,"column":5,"nodeType":"759","messageId":"760","endLine":9,"endColumn":15},{"ruleId":"757","severity":1,"message":"771","line":10,"column":5,"nodeType":"759","messageId":"760","endLine":10,"endColumn":10},{"ruleId":"757","severity":1,"message":"773","line":13,"column":5,"nodeType":"759","messageId":"760","endLine":13,"endColumn":22},{"ruleId":"757","severity":1,"message":"778","line":18,"column":5,"nodeType":"759","messageId":"760","endLine":18,"endColumn":16},{"ruleId":"757","severity":1,"message":"784","line":25,"column":5,"nodeType":"759","messageId":"760","endLine":25,"endColumn":21},{"ruleId":"757","severity":1,"message":"785","line":26,"column":5,"nodeType":"759","messageId":"760","endLine":26,"endColumn":19},{"ruleId":"757","severity":1,"message":"865","line":29,"column":10,"nodeType":"759","messageId":"760","endLine":29,"endColumn":17},{"ruleId":"757","severity":1,"message":"866","line":29,"column":19,"nodeType":"759","messageId":"760","endLine":29,"endColumn":28},{"ruleId":"757","severity":1,"message":"883","line":40,"column":10,"nodeType":"759","messageId":"760","endLine":40,"endColumn":16},{"ruleId":"757","severity":1,"message":"884","line":40,"column":18,"nodeType":"759","messageId":"760","endLine":40,"endColumn":29},{"ruleId":"757","severity":1,"message":"885","line":49,"column":10,"nodeType":"759","messageId":"760","endLine":49,"endColumn":18},{"ruleId":"757","severity":1,"message":"886","line":60,"column":33,"nodeType":"759","messageId":"760","endLine":60,"endColumn":44},{"ruleId":"757","severity":1,"message":"887","line":60,"column":53,"nodeType":"759","messageId":"760","endLine":60,"endColumn":62},{"ruleId":"757","severity":1,"message":"888","line":67,"column":12,"nodeType":"759","messageId":"760","endLine":67,"endColumn":18},{"ruleId":"757","severity":1,"message":"889","line":67,"column":20,"nodeType":"759","messageId":"760","endLine":67,"endColumn":29},{"ruleId":"757","severity":1,"message":"823","line":76,"column":11,"nodeType":"759","messageId":"760","endLine":76,"endColumn":17},{"ruleId":"757","severity":1,"message":"824","line":76,"column":19,"nodeType":"759","messageId":"760","endLine":76,"endColumn":25},{"ruleId":"757","severity":1,"message":"879","line":1,"column":17,"nodeType":"759","messageId":"760","endLine":1,"endColumn":26},{"ruleId":"757","severity":1,"message":"767","line":4,"column":5,"nodeType":"759","messageId":"760","endLine":4,"endColumn":10},{"ruleId":"757","severity":1,"message":"839","line":5,"column":5,"nodeType":"759","messageId":"760","endLine":5,"endColumn":9},{"ruleId":"757","severity":1,"message":"761","line":6,"column":5,"nodeType":"759","messageId":"760","endLine":6,"endColumn":9},{"ruleId":"757","severity":1,"message":"769","line":7,"column":5,"nodeType":"759","messageId":"760","endLine":7,"endColumn":8},{"ruleId":"757","severity":1,"message":"890","line":8,"column":5,"nodeType":"759","messageId":"760","endLine":8,"endColumn":12},{"ruleId":"757","severity":1,"message":"851","line":9,"column":5,"nodeType":"759","messageId":"760","endLine":9,"endColumn":10},{"ruleId":"757","severity":1,"message":"772","line":10,"column":5,"nodeType":"759","messageId":"760","endLine":10,"endColumn":11},{"ruleId":"757","severity":1,"message":"783","line":11,"column":5,"nodeType":"759","messageId":"760","endLine":11,"endColumn":14},{"ruleId":"757","severity":1,"message":"782","line":12,"column":5,"nodeType":"759","messageId":"760","endLine":12,"endColumn":16},{"ruleId":"757","severity":1,"message":"773","line":14,"column":5,"nodeType":"759","messageId":"760","endLine":14,"endColumn":22},{"ruleId":"757","severity":1,"message":"778","line":19,"column":5,"nodeType":"759","messageId":"760","endLine":19,"endColumn":16},{"ruleId":"757","severity":1,"message":"832","line":25,"column":8,"nodeType":"759","messageId":"760","endLine":25,"endColumn":10},{"ruleId":"757","severity":1,"message":"891","line":26,"column":8,"nodeType":"759","messageId":"760","endLine":26,"endColumn":17},{"ruleId":"757","severity":1,"message":"892","line":27,"column":8,"nodeType":"759","messageId":"760","endLine":27,"endColumn":14},{"ruleId":"757","severity":1,"message":"864","line":28,"column":10,"nodeType":"759","messageId":"760","endLine":28,"endColumn":20},{"ruleId":"757","severity":1,"message":"893","line":28,"column":22,"nodeType":"759","messageId":"760","endLine":28,"endColumn":38},{"ruleId":"757","severity":1,"message":"894","line":28,"column":63,"nodeType":"759","messageId":"760","endLine":28,"endColumn":84},{"ruleId":"757","severity":1,"message":"878","line":29,"column":10,"nodeType":"759","messageId":"760","endLine":29,"endColumn":18},{"ruleId":"757","severity":1,"message":"895","line":32,"column":10,"nodeType":"759","messageId":"760","endLine":32,"endColumn":16},{"ruleId":"757","severity":1,"message":"896","line":37,"column":12,"nodeType":"759","messageId":"760","endLine":37,"endColumn":17},{"ruleId":"757","severity":1,"message":"823","line":49,"column":11,"nodeType":"759","messageId":"760","endLine":49,"endColumn":17},{"ruleId":"757","severity":1,"message":"824","line":49,"column":19,"nodeType":"759","messageId":"760","endLine":49,"endColumn":25},{"ruleId":"757","severity":1,"message":"774","line":13,"column":3,"nodeType":"759","messageId":"760","endLine":13,"endColumn":8},{"ruleId":"757","severity":1,"message":"780","line":14,"column":3,"nodeType":"759","messageId":"760","endLine":14,"endColumn":19},{"ruleId":"757","severity":1,"message":"776","line":15,"column":3,"nodeType":"759","messageId":"760","endLine":15,"endColumn":15},{"ruleId":"757","severity":1,"message":"777","line":16,"column":3,"nodeType":"759","messageId":"760","endLine":16,"endColumn":14},{"ruleId":"757","severity":1,"message":"775","line":17,"column":3,"nodeType":"759","messageId":"760","endLine":17,"endColumn":15},{"ruleId":"757","severity":1,"message":"823","line":45,"column":9,"nodeType":"759","messageId":"760","endLine":45,"endColumn":15},{"ruleId":"757","severity":1,"message":"824","line":45,"column":17,"nodeType":"759","messageId":"760","endLine":45,"endColumn":23},{"ruleId":"757","severity":1,"message":"825","line":45,"column":25,"nodeType":"759","messageId":"760","endLine":45,"endColumn":32},{"ruleId":"757","severity":1,"message":"897","line":8,"column":8,"nodeType":"759","messageId":"760","endLine":8,"endColumn":10},{"ruleId":"757","severity":1,"message":"898","line":13,"column":8,"nodeType":"759","messageId":"760","endLine":13,"endColumn":11},{"ruleId":"757","severity":1,"message":"899","line":18,"column":8,"nodeType":"759","messageId":"760","endLine":18,"endColumn":16},{"ruleId":"757","severity":1,"message":"900","line":20,"column":8,"nodeType":"759","messageId":"760","endLine":20,"endColumn":11},{"ruleId":"757","severity":1,"message":"901","line":21,"column":8,"nodeType":"759","messageId":"760","endLine":21,"endColumn":10},{"ruleId":"757","severity":1,"message":"902","line":23,"column":8,"nodeType":"759","messageId":"760","endLine":23,"endColumn":16},{"ruleId":"757","severity":1,"message":"903","line":26,"column":8,"nodeType":"759","messageId":"760","endLine":26,"endColumn":15},{"ruleId":"757","severity":1,"message":"904","line":27,"column":8,"nodeType":"759","messageId":"760","endLine":27,"endColumn":18},{"ruleId":"757","severity":1,"message":"905","line":29,"column":8,"nodeType":"759","messageId":"760","endLine":29,"endColumn":13},{"ruleId":"757","severity":1,"message":"906","line":39,"column":8,"nodeType":"759","messageId":"760","endLine":39,"endColumn":13},{"ruleId":"757","severity":1,"message":"907","line":41,"column":8,"nodeType":"759","messageId":"760","endLine":41,"endColumn":14},{"ruleId":"757","severity":1,"message":"908","line":43,"column":8,"nodeType":"759","messageId":"760","endLine":43,"endColumn":15},{"ruleId":"757","severity":1,"message":"909","line":46,"column":8,"nodeType":"759","messageId":"760","endLine":46,"endColumn":12},{"ruleId":"757","severity":1,"message":"910","line":47,"column":8,"nodeType":"759","messageId":"760","endLine":47,"endColumn":12},{"ruleId":"757","severity":1,"message":"911","line":48,"column":8,"nodeType":"759","messageId":"760","endLine":48,"endColumn":11},{"ruleId":"757","severity":1,"message":"912","line":49,"column":8,"nodeType":"759","messageId":"760","endLine":49,"endColumn":16},{"ruleId":"757","severity":1,"message":"913","line":51,"column":8,"nodeType":"759","messageId":"760","endLine":51,"endColumn":11},{"ruleId":"757","severity":1,"message":"914","line":55,"column":8,"nodeType":"759","messageId":"760","endLine":55,"endColumn":11},{"ruleId":"757","severity":1,"message":"915","line":57,"column":8,"nodeType":"759","messageId":"760","endLine":57,"endColumn":16},{"ruleId":"757","severity":1,"message":"916","line":60,"column":10,"nodeType":"759","messageId":"760","endLine":60,"endColumn":21},{"ruleId":"847","severity":1,"message":"917","line":143,"column":31,"nodeType":"849","messageId":"850","endLine":143,"endColumn":33},{"ruleId":"847","severity":1,"message":"917","line":221,"column":31,"nodeType":"849","messageId":"850","endLine":221,"endColumn":33},{"ruleId":"847","severity":1,"message":"917","line":329,"column":31,"nodeType":"849","messageId":"850","endLine":329,"endColumn":33},{"ruleId":"918","severity":1,"message":"919","line":385,"column":19,"nodeType":"798","endLine":385,"endColumn":31},{"ruleId":"847","severity":1,"message":"917","line":418,"column":31,"nodeType":"849","messageId":"850","endLine":418,"endColumn":33},{"ruleId":"847","severity":1,"message":"917","line":441,"column":31,"nodeType":"849","messageId":"850","endLine":441,"endColumn":33},{"ruleId":"847","severity":1,"message":"917","line":484,"column":31,"nodeType":"849","messageId":"850","endLine":484,"endColumn":33},{"ruleId":"918","severity":1,"message":"919","line":516,"column":19,"nodeType":"798","endLine":516,"endColumn":31},{"ruleId":"847","severity":1,"message":"917","line":523,"column":31,"nodeType":"849","messageId":"850","endLine":523,"endColumn":33},{"ruleId":"918","severity":1,"message":"919","line":539,"column":19,"nodeType":"798","endLine":539,"endColumn":31},{"ruleId":"918","severity":1,"message":"919","line":553,"column":19,"nodeType":"798","endLine":553,"endColumn":31},{"ruleId":"918","severity":1,"message":"919","line":568,"column":19,"nodeType":"798","endLine":568,"endColumn":31},{"ruleId":"918","severity":1,"message":"919","line":582,"column":19,"nodeType":"798","endLine":582,"endColumn":31},{"ruleId":"918","severity":1,"message":"919","line":596,"column":19,"nodeType":"798","endLine":596,"endColumn":31},{"ruleId":"847","severity":1,"message":"917","line":603,"column":31,"nodeType":"849","messageId":"850","endLine":603,"endColumn":33},{"ruleId":"757","severity":1,"message":"831","line":2,"column":10,"nodeType":"759","messageId":"760","endLine":2,"endColumn":14},{"ruleId":"757","severity":1,"message":"837","line":2,"column":16,"nodeType":"759","messageId":"760","endLine":2,"endColumn":22},{"ruleId":"757","severity":1,"message":"838","line":2,"column":24,"nodeType":"759","messageId":"760","endLine":2,"endColumn":28},{"ruleId":"757","severity":1,"message":"839","line":2,"column":49,"nodeType":"759","messageId":"760","endLine":2,"endColumn":53},{"ruleId":"757","severity":1,"message":"821","line":49,"column":8,"nodeType":"759","messageId":"760","endLine":49,"endColumn":14},{"ruleId":"757","severity":1,"message":"920","line":52,"column":8,"nodeType":"759","messageId":"760","endLine":52,"endColumn":14},{"ruleId":"757","severity":1,"message":"921","line":53,"column":8,"nodeType":"759","messageId":"760","endLine":53,"endColumn":16},{"ruleId":"757","severity":1,"message":"922","line":54,"column":8,"nodeType":"759","messageId":"760","endLine":54,"endColumn":13},{"ruleId":"757","severity":1,"message":"923","line":55,"column":8,"nodeType":"759","messageId":"760","endLine":55,"endColumn":14},{"ruleId":"757","severity":1,"message":"924","line":56,"column":8,"nodeType":"759","messageId":"760","endLine":56,"endColumn":12},{"ruleId":"757","severity":1,"message":"840","line":66,"column":9,"nodeType":"759","messageId":"760","endLine":66,"endColumn":13},{"ruleId":"757","severity":1,"message":"925","line":72,"column":9,"nodeType":"759","messageId":"760","endLine":72,"endColumn":20},{"ruleId":"796","severity":1,"message":"797","line":255,"column":15,"nodeType":"798","messageId":"799","endLine":259,"endColumn":16,"fix":"926"},{"ruleId":"796","severity":1,"message":"797","line":289,"column":13,"nodeType":"798","messageId":"799","endLine":292,"endColumn":14,"fix":"927"},{"ruleId":"796","severity":1,"message":"797","line":296,"column":13,"nodeType":"798","messageId":"799","endLine":299,"endColumn":14,"fix":"928"},{"ruleId":"796","severity":1,"message":"797","line":303,"column":13,"nodeType":"798","messageId":"799","endLine":306,"endColumn":14,"fix":"929"},{"ruleId":"796","severity":1,"message":"797","line":353,"column":11,"nodeType":"798","messageId":"799","endLine":353,"endColumn":62,"fix":"930"},{"ruleId":"796","severity":1,"message":"797","line":479,"column":19,"nodeType":"798","messageId":"799","endLine":482,"endColumn":20,"fix":"931"},{"ruleId":"796","severity":1,"message":"797","line":497,"column":19,"nodeType":"798","messageId":"799","endLine":500,"endColumn":20,"fix":"932"},{"ruleId":"796","severity":1,"message":"797","line":512,"column":19,"nodeType":"798","messageId":"799","endLine":515,"endColumn":20,"fix":"933"},{"ruleId":"796","severity":1,"message":"797","line":527,"column":19,"nodeType":"798","messageId":"799","endLine":527,"endColumn":74,"fix":"934"},{"ruleId":"796","severity":1,"message":"797","line":539,"column":19,"nodeType":"798","messageId":"799","endLine":539,"endColumn":74,"fix":"935"},{"ruleId":"796","severity":1,"message":"797","line":551,"column":19,"nodeType":"798","messageId":"799","endLine":551,"endColumn":74,"fix":"936"},{"ruleId":"796","severity":1,"message":"797","line":563,"column":19,"nodeType":"798","messageId":"799","endLine":566,"endColumn":20,"fix":"937"},{"ruleId":"757","severity":1,"message":"767","line":4,"column":3,"nodeType":"759","messageId":"760","endLine":4,"endColumn":8},{"ruleId":"757","severity":1,"message":"938","line":16,"column":17,"nodeType":"759","messageId":"760","endLine":16,"endColumn":25},{"ruleId":"757","severity":1,"message":"939","line":62,"column":9,"nodeType":"759","messageId":"760","endLine":62,"endColumn":16},{"ruleId":"757","severity":1,"message":"871","line":65,"column":12,"nodeType":"759","messageId":"760","endLine":65,"endColumn":18},{"ruleId":"757","severity":1,"message":"872","line":66,"column":14,"nodeType":"759","messageId":"760","endLine":66,"endColumn":22},{"ruleId":"757","severity":1,"message":"835","line":87,"column":9,"nodeType":"759","messageId":"760","endLine":87,"endColumn":17},{"ruleId":"847","severity":1,"message":"848","line":190,"column":32,"nodeType":"849","messageId":"850","endLine":190,"endColumn":34},{"ruleId":"847","severity":1,"message":"848","line":364,"column":45,"nodeType":"849","messageId":"850","endLine":364,"endColumn":47},{"ruleId":"757","severity":1,"message":"892","line":4,"column":8,"nodeType":"759","messageId":"760","endLine":4,"endColumn":14},{"ruleId":"757","severity":1,"message":"940","line":5,"column":10,"nodeType":"759","messageId":"760","endLine":5,"endColumn":28},{"ruleId":"757","severity":1,"message":"941","line":11,"column":3,"nodeType":"759","messageId":"760","endLine":11,"endColumn":10},{"ruleId":"757","severity":1,"message":"942","line":12,"column":3,"nodeType":"759","messageId":"760","endLine":12,"endColumn":18},{"ruleId":"757","severity":1,"message":"943","line":26,"column":9,"nodeType":"759","messageId":"760","endLine":26,"endColumn":19},{"ruleId":"847","severity":1,"message":"917","line":181,"column":21,"nodeType":"849","messageId":"850","endLine":181,"endColumn":23},{"ruleId":"796","severity":1,"message":"797","line":192,"column":11,"nodeType":"798","messageId":"799","endLine":195,"endColumn":12,"fix":"944"},{"ruleId":"796","severity":1,"message":"797","line":199,"column":11,"nodeType":"798","messageId":"799","endLine":202,"endColumn":12,"fix":"945"},{"ruleId":"796","severity":1,"message":"797","line":206,"column":11,"nodeType":"798","messageId":"799","endLine":209,"endColumn":12,"fix":"946"},{"ruleId":"757","severity":1,"message":"947","line":23,"column":8,"nodeType":"759","messageId":"760","endLine":23,"endColumn":13},{"ruleId":"757","severity":1,"message":"823","line":49,"column":9,"nodeType":"759","messageId":"760","endLine":49,"endColumn":15},{"ruleId":"757","severity":1,"message":"824","line":49,"column":17,"nodeType":"759","messageId":"760","endLine":49,"endColumn":23},{"ruleId":"757","severity":1,"message":"948","line":51,"column":27,"nodeType":"759","messageId":"760","endLine":51,"endColumn":32},{"ruleId":"757","severity":1,"message":"831","line":7,"column":3,"nodeType":"759","messageId":"760","endLine":7,"endColumn":7},{"ruleId":"757","severity":1,"message":"767","line":8,"column":3,"nodeType":"759","messageId":"760","endLine":8,"endColumn":8},{"ruleId":"757","severity":1,"message":"842","line":14,"column":3,"nodeType":"759","messageId":"760","endLine":14,"endColumn":8},{"ruleId":"757","severity":1,"message":"784","line":27,"column":3,"nodeType":"759","messageId":"760","endLine":27,"endColumn":19},{"ruleId":"757","severity":1,"message":"785","line":28,"column":3,"nodeType":"759","messageId":"760","endLine":28,"endColumn":17},{"ruleId":"757","severity":1,"message":"890","line":29,"column":3,"nodeType":"759","messageId":"760","endLine":29,"endColumn":10},{"ruleId":"757","severity":1,"message":"786","line":32,"column":3,"nodeType":"759","messageId":"760","endLine":32,"endColumn":9},{"ruleId":"757","severity":1,"message":"949","line":42,"column":9,"nodeType":"759","messageId":"760","endLine":42,"endColumn":20},{"ruleId":"817","severity":1,"message":"950","line":9,"column":5,"nodeType":"951","endLine":9,"endColumn":20,"suggestions":"952"},{"ruleId":"757","severity":1,"message":"953","line":8,"column":10,"nodeType":"759","messageId":"760","endLine":8,"endColumn":14},{"ruleId":"757","severity":1,"message":"954","line":11,"column":10,"nodeType":"759","messageId":"760","endLine":11,"endColumn":32},{"ruleId":"757","severity":1,"message":"955","line":13,"column":10,"nodeType":"759","messageId":"760","endLine":13,"endColumn":18},{"ruleId":"796","severity":1,"message":"797","line":161,"column":11,"nodeType":"798","messageId":"799","endLine":161,"endColumn":66,"fix":"956"},{"ruleId":"796","severity":1,"message":"797","line":239,"column":11,"nodeType":"798","messageId":"799","endLine":239,"endColumn":69,"fix":"957"},{"ruleId":"796","severity":1,"message":"797","line":297,"column":11,"nodeType":"798","messageId":"799","endLine":297,"endColumn":65,"fix":"958"},{"ruleId":"796","severity":1,"message":"797","line":405,"column":11,"nodeType":"798","messageId":"799","endLine":405,"endColumn":64,"fix":"959"},{"ruleId":"796","severity":1,"message":"797","line":430,"column":11,"nodeType":"798","messageId":"799","endLine":430,"endColumn":69,"fix":"960"},{"ruleId":"796","severity":1,"message":"797","line":445,"column":11,"nodeType":"798","messageId":"799","endLine":445,"endColumn":65,"fix":"961"},{"ruleId":"962","severity":1,"message":"963","line":25,"column":1,"nodeType":"964","endLine":49,"endColumn":3},{"ruleId":"757","severity":1,"message":"965","line":4,"column":3,"nodeType":"759","messageId":"760","endLine":4,"endColumn":11},{"ruleId":"757","severity":1,"message":"966","line":5,"column":3,"nodeType":"759","messageId":"760","endLine":5,"endColumn":12},{"ruleId":"757","severity":1,"message":"967","line":9,"column":3,"nodeType":"759","messageId":"760","endLine":9,"endColumn":14},{"ruleId":"796","severity":1,"message":"797","line":50,"column":13,"nodeType":"798","messageId":"799","endLine":53,"endColumn":14,"fix":"968"},{"ruleId":"796","severity":1,"message":"797","line":56,"column":13,"nodeType":"798","messageId":"799","endLine":56,"endColumn":75,"fix":"969"},{"ruleId":"796","severity":1,"message":"797","line":59,"column":13,"nodeType":"798","messageId":"799","endLine":62,"endColumn":14,"fix":"970"},{"ruleId":"757","severity":1,"message":"965","line":4,"column":3,"nodeType":"759","messageId":"760","endLine":4,"endColumn":11},{"ruleId":"757","severity":1,"message":"966","line":5,"column":3,"nodeType":"759","messageId":"760","endLine":5,"endColumn":12},{"ruleId":"757","severity":1,"message":"971","line":10,"column":3,"nodeType":"759","messageId":"760","endLine":10,"endColumn":19},{"ruleId":"757","severity":1,"message":"967","line":12,"column":3,"nodeType":"759","messageId":"760","endLine":12,"endColumn":14},{"ruleId":"796","severity":1,"message":"797","line":68,"column":11,"nodeType":"798","messageId":"799","endLine":71,"endColumn":12,"fix":"972"},{"ruleId":"796","severity":1,"message":"797","line":74,"column":11,"nodeType":"798","messageId":"799","endLine":74,"endColumn":73,"fix":"973"},{"ruleId":"796","severity":1,"message":"797","line":77,"column":11,"nodeType":"798","messageId":"799","endLine":80,"endColumn":12,"fix":"974"},{"ruleId":"757","severity":1,"message":"851","line":6,"column":3,"nodeType":"759","messageId":"760","endLine":6,"endColumn":8},{"ruleId":"757","severity":1,"message":"770","line":8,"column":3,"nodeType":"759","messageId":"760","endLine":8,"endColumn":13},{"ruleId":"757","severity":1,"message":"771","line":9,"column":3,"nodeType":"759","messageId":"760","endLine":9,"endColumn":8},{"ruleId":"757","severity":1,"message":"774","line":13,"column":3,"nodeType":"759","messageId":"760","endLine":13,"endColumn":8},{"ruleId":"757","severity":1,"message":"775","line":14,"column":3,"nodeType":"759","messageId":"760","endLine":14,"endColumn":15},{"ruleId":"757","severity":1,"message":"776","line":15,"column":3,"nodeType":"759","messageId":"760","endLine":15,"endColumn":15},{"ruleId":"757","severity":1,"message":"777","line":16,"column":3,"nodeType":"759","messageId":"760","endLine":16,"endColumn":14},{"ruleId":"757","severity":1,"message":"778","line":17,"column":3,"nodeType":"759","messageId":"760","endLine":17,"endColumn":14},{"ruleId":"757","severity":1,"message":"779","line":18,"column":3,"nodeType":"759","messageId":"760","endLine":18,"endColumn":12},{"ruleId":"757","severity":1,"message":"780","line":19,"column":3,"nodeType":"759","messageId":"760","endLine":19,"endColumn":19},{"ruleId":"757","severity":1,"message":"781","line":20,"column":3,"nodeType":"759","messageId":"760","endLine":20,"endColumn":16},{"ruleId":"757","severity":1,"message":"782","line":21,"column":3,"nodeType":"759","messageId":"760","endLine":21,"endColumn":14},{"ruleId":"757","severity":1,"message":"783","line":22,"column":3,"nodeType":"759","messageId":"760","endLine":22,"endColumn":12},{"ruleId":"757","severity":1,"message":"784","line":23,"column":3,"nodeType":"759","messageId":"760","endLine":23,"endColumn":19},{"ruleId":"757","severity":1,"message":"785","line":24,"column":3,"nodeType":"759","messageId":"760","endLine":24,"endColumn":17},{"ruleId":"757","severity":1,"message":"890","line":25,"column":3,"nodeType":"759","messageId":"760","endLine":25,"endColumn":10},{"ruleId":"757","severity":1,"message":"786","line":28,"column":3,"nodeType":"759","messageId":"760","endLine":28,"endColumn":9},{"ruleId":"757","severity":1,"message":"865","line":30,"column":10,"nodeType":"759","messageId":"760","endLine":30,"endColumn":17},{"ruleId":"757","severity":1,"message":"866","line":30,"column":19,"nodeType":"759","messageId":"760","endLine":30,"endColumn":28},{"ruleId":"757","severity":1,"message":"891","line":32,"column":8,"nodeType":"759","messageId":"760","endLine":32,"endColumn":17},{"ruleId":"757","severity":1,"message":"892","line":33,"column":8,"nodeType":"759","messageId":"760","endLine":33,"endColumn":14},{"ruleId":"757","severity":1,"message":"975","line":36,"column":3,"nodeType":"759","messageId":"760","endLine":36,"endColumn":35},{"ruleId":"757","severity":1,"message":"976","line":37,"column":3,"nodeType":"759","messageId":"760","endLine":37,"endColumn":22},{"ruleId":"757","severity":1,"message":"858","line":51,"column":9,"nodeType":"759","messageId":"760","endLine":51,"endColumn":15},{"ruleId":"757","severity":1,"message":"860","line":53,"column":9,"nodeType":"759","messageId":"760","endLine":53,"endColumn":17},{"ruleId":"757","severity":1,"message":"861","line":54,"column":9,"nodeType":"759","messageId":"760","endLine":54,"endColumn":15},{"ruleId":"757","severity":1,"message":"977","line":57,"column":10,"nodeType":"759","messageId":"760","endLine":57,"endColumn":23},{"ruleId":"757","severity":1,"message":"978","line":57,"column":25,"nodeType":"759","messageId":"760","endLine":57,"endColumn":41},{"ruleId":"757","severity":1,"message":"949","line":117,"column":9,"nodeType":"759","messageId":"760","endLine":117,"endColumn":20},{"ruleId":"757","severity":1,"message":"979","line":12,"column":8,"nodeType":"759","messageId":"760","endLine":12,"endColumn":14},{"ruleId":"980","severity":1,"message":"981","line":60,"column":14,"nodeType":"759","messageId":"982","endLine":60,"endColumn":41},{"ruleId":"757","severity":1,"message":"839","line":7,"column":11,"nodeType":"759","messageId":"760","endLine":7,"endColumn":15},{"ruleId":"757","severity":1,"message":"851","line":7,"column":17,"nodeType":"759","messageId":"760","endLine":7,"endColumn":22},{"ruleId":"757","severity":1,"message":"983","line":8,"column":5,"nodeType":"759","messageId":"760","endLine":8,"endColumn":13},{"ruleId":"757","severity":1,"message":"984","line":9,"column":5,"nodeType":"759","messageId":"760","endLine":9,"endColumn":13},{"ruleId":"757","severity":1,"message":"772","line":10,"column":5,"nodeType":"759","messageId":"760","endLine":10,"endColumn":11},{"ruleId":"757","severity":1,"message":"985","line":13,"column":10,"nodeType":"759","messageId":"760","endLine":13,"endColumn":19},{"ruleId":"757","severity":1,"message":"878","line":15,"column":10,"nodeType":"759","messageId":"760","endLine":15,"endColumn":18},{"ruleId":"757","severity":1,"message":"986","line":3,"column":3,"nodeType":"759","messageId":"760","endLine":3,"endColumn":16},{"ruleId":"757","severity":1,"message":"987","line":4,"column":3,"nodeType":"759","messageId":"760","endLine":4,"endColumn":19},{"ruleId":"757","severity":1,"message":"976","line":7,"column":3,"nodeType":"759","messageId":"760","endLine":7,"endColumn":22},{"ruleId":"757","severity":1,"message":"988","line":8,"column":3,"nodeType":"759","messageId":"760","endLine":8,"endColumn":28},{"ruleId":"757","severity":1,"message":"853","line":12,"column":3,"nodeType":"759","messageId":"760","endLine":12,"endColumn":8},{"ruleId":"757","severity":1,"message":"854","line":13,"column":3,"nodeType":"759","messageId":"760","endLine":13,"endColumn":12},{"ruleId":"757","severity":1,"message":"769","line":14,"column":3,"nodeType":"759","messageId":"760","endLine":14,"endColumn":6},{"ruleId":"757","severity":1,"message":"947","line":26,"column":8,"nodeType":"759","messageId":"760","endLine":26,"endColumn":13},{"ruleId":"757","severity":1,"message":"823","line":50,"column":9,"nodeType":"759","messageId":"760","endLine":50,"endColumn":15},{"ruleId":"757","severity":1,"message":"824","line":50,"column":17,"nodeType":"759","messageId":"760","endLine":50,"endColumn":23},{"ruleId":"757","severity":1,"message":"948","line":53,"column":28,"nodeType":"759","messageId":"760","endLine":53,"endColumn":33},{"ruleId":"757","severity":1,"message":"986","line":3,"column":3,"nodeType":"759","messageId":"760","endLine":3,"endColumn":16},{"ruleId":"757","severity":1,"message":"987","line":4,"column":3,"nodeType":"759","messageId":"760","endLine":4,"endColumn":19},{"ruleId":"757","severity":1,"message":"989","line":7,"column":3,"nodeType":"759","messageId":"760","endLine":7,"endColumn":13},{"ruleId":"757","severity":1,"message":"976","line":8,"column":3,"nodeType":"759","messageId":"760","endLine":8,"endColumn":22},{"ruleId":"757","severity":1,"message":"988","line":9,"column":3,"nodeType":"759","messageId":"760","endLine":9,"endColumn":28},{"ruleId":"757","severity":1,"message":"853","line":13,"column":3,"nodeType":"759","messageId":"760","endLine":13,"endColumn":8},{"ruleId":"757","severity":1,"message":"854","line":14,"column":3,"nodeType":"759","messageId":"760","endLine":14,"endColumn":12},{"ruleId":"757","severity":1,"message":"990","line":28,"column":3,"nodeType":"759","messageId":"760","endLine":28,"endColumn":11},{"ruleId":"757","severity":1,"message":"823","line":75,"column":9,"nodeType":"759","messageId":"760","endLine":75,"endColumn":15},{"ruleId":"757","severity":1,"message":"824","line":75,"column":17,"nodeType":"759","messageId":"760","endLine":75,"endColumn":23},{"ruleId":"757","severity":1,"message":"948","line":77,"column":28,"nodeType":"759","messageId":"760","endLine":77,"endColumn":33},{"ruleId":"757","severity":1,"message":"825","line":182,"column":11,"nodeType":"759","messageId":"760","endLine":182,"endColumn":18},"no-native-reassign",["991"],"no-negated-in-lhs",["992"],"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Social' is defined but never used.","'Eventsworkshops' is defined but never used.","'Workshops' is defined but never used.","'Show' is defined but never used.","'Speaker' is defined but never used.","'Stack' is defined but never used.","'Tooltip' is defined but never used.","'Box' is defined but never used.","'RadioGroup' is defined but never used.","'Radio' is defined but never used.","'Button' is defined but never used.","'useColorModeValue' is defined but never used.","'Modal' is defined but never used.","'ModalOverlay' is defined but never used.","'ModalContent' is defined but never used.","'ModalHeader' is defined but never used.","'ModalFooter' is defined but never used.","'ModalBody' is defined but never used.","'ModalCloseButton' is defined but never used.","'useDisclosure' is defined but never used.","'FormControl' is defined but never used.","'FormLabel' is defined but never used.","'FormErrorMessage' is defined but never used.","'FormHelperText' is defined but never used.","'Center' is defined but never used.","'Popover' is defined but never used.","'PopoverTrigger' is defined but never used.","'PopoverContent' is defined but never used.","'PopoverHeader' is defined but never used.","'PopoverArrow' is defined but never used.","'PopoverCloseButton' is defined but never used.","'PopoverBody' is defined but never used.","'PopoverFooter' is defined but never used.","'ButtonGroup' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"993","text":"994"},{"range":"995","text":"994"},{"range":"996","text":"994"},{"range":"997","text":"994"},{"range":"998","text":"994"},{"range":"999","text":"994"},{"range":"1000","text":"994"},{"range":"1001","text":"994"},{"range":"1002","text":"994"},{"range":"1003","text":"994"},"'Particles' is defined but never used.","'LogoBlack' is defined but never used.","'LogoWhite' is defined but never used.","'image2' is defined but never used.","'current' is assigned a value but never used.","'setCurrent' is assigned a value but never used.","'length' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'CardAnimations' and 'animation'. Either include them or remove the dependency array.","ArrayExpression",["1004"],"'Gloves' is defined but never used.","'Broken' is defined but never used.","'isOpen' is assigned a value but never used.","'onOpen' is assigned a value but never used.","'onClose' is assigned a value but never used.","'message' is assigned a value but never used.","'SimpleGrid' is defined but never used.","'Container' is defined but never used.","'summit7' is defined but never used.",{"range":"1005","text":"994"},"'Text' is defined but never used.","'bg' is defined but never used.","'VerticalTimeline' is defined but never used.","'VerticalTimelineElement' is defined but never used.","'timeline' is assigned a value but never used.",{"range":"1006","text":"994"},"'VStack' is defined but never used.","'Code' is defined but never used.","'Flex' is defined but never used.","'Logo' is assigned a value but never used.","'Value' is defined but never used.","'Image' is defined but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'setRadioString' is assigned a value but never used.","'setEventType' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Input' is defined but never used.","'Select' is defined but never used.","'Alert' is defined but never used.","'AlertIcon' is defined but never used.","'Event' is defined but never used.","'useUpdateReferralMutation' is defined but never used.","'bg2' is defined but never used.","'search' is assigned a value but never used.","'font' is assigned a value but never used.","'gradient' is assigned a value but never used.","'button' is assigned a value but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'LoginInput' is defined but never used.","'AddIcon' is defined but never used.","'MinusIcon' is defined but never used.","'useGetUsersDataCsvQuery' is defined but never used.","'useGetUsersQuery' is defined but never used.","'event' is assigned a value but never used.","'setEvent' is assigned a value but never used.","'error1' is assigned a value but never used.","'loading1' is assigned a value but never used.","'summit' is defined but never used.","'tif' is defined but never used.","'useResendVerificationMailMutation' is defined but never used.","'useParams' is defined but never used.","'RefObject' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'data' is assigned a value but never used.","'uploadFile' is assigned a value but never used.","'S3FileUpload' is assigned a value but never used.","'Swiper' is defined but never used.","'SwiperSlide' is defined but never used.","'FaSchool' is defined but never used.","'userLoading' is assigned a value but never used.","'userError' is assigned a value but never used.","'number' is assigned a value but never used.","'setNumber' is assigned a value but never used.","'Heading' is defined but never used.","'CustomBox' is defined but never used.","'Footer' is defined but never used.","'useLoginMutation' is defined but never used.","'useVerifyUserMutation' is defined but never used.","'verify' is defined but never used.","'token' is assigned a value but never used.","'BW' is defined but never used.","'GOW' is defined but never used.","'Atlasian' is defined but never used.","'CAT' is defined but never used.","'MB' is defined but never used.","'Mahindra' is defined but never used.","'foxmula' is defined but never used.","'innovaccer' is defined but never used.","'kamal' is defined but never used.","'subex' is defined but never used.","'Header' is defined but never used.","'binance' is defined but never used.","'HPCL' is defined but never used.","'catl' is defined but never used.","'www' is defined but never used.","'linkedin' is defined but never used.","'MEW' is defined but never used.","'ADW' is defined but never used.","'facebook' is defined but never used.","'invertScale' is defined but never used.","Expected '===' and instead saw '=='.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Mirage' is defined but never used.","'Nothwind' is defined but never used.","'Vivek' is defined but never used.","'Reverb' is defined but never used.","'Soda' is defined but never used.","'codetochoas' is assigned a value but never used.",{"range":"1007","text":"994"},{"range":"1008","text":"994"},{"range":"1009","text":"994"},{"range":"1010","text":"994"},{"range":"1011","text":"994"},{"range":"1012","text":"994"},{"range":"1013","text":"994"},{"range":"1014","text":"994"},{"range":"1015","text":"994"},{"range":"1016","text":"994"},{"range":"1017","text":"994"},{"range":"1018","text":"994"},"'Fragment' is defined but never used.","'bgcolor' is assigned a value but never used.","'useBreakpointValue' is defined but never used.","'FaPhone' is defined but never used.","'FaTwitterSquare' is defined but never used.","'FooterLogo' is assigned a value but never used.",{"range":"1019","text":"994"},{"range":"1020","text":"994"},{"range":"1021","text":"994"},"'axios' is defined but never used.","'data1' is assigned a value but never used.","'buttoncolor' is assigned a value but never used.","React Hook useEffect contains a call to 'setRole'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.","MemberExpression",["1022"],"'time' is defined but never used.","'textChangeRangeNewSpan' is defined but never used.","'UserRole' is defined but never used.",{"range":"1023","text":"994"},{"range":"1024","text":"994"},{"range":"1025","text":"994"},{"range":"1026","text":"994"},{"range":"1027","text":"994"},{"range":"1028","text":"994"},"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'FaGithub' is defined but never used.","'FaTwitter' is defined but never used.","'FaInstagram' is defined but never used.",{"range":"1029","text":"994"},{"range":"1030","text":"994"},{"range":"1031","text":"994"},"'FaWhatsappSquare' is defined but never used.",{"range":"1032","text":"994"},{"range":"1033","text":"994"},{"range":"1034","text":"994"},"'useCreateTeamandRegisterMutation' is defined but never used.","'useRegisterMutation' is defined but never used.","'referenceCode' is assigned a value but never used.","'setReferenceCode' is assigned a value but never used.","'EXHB13' is defined but never used.","@typescript-eslint/no-redeclare","'exhibitions' is already defined.","redeclared","'ListItem' is defined but never used.","'ListIcon' is defined but never used.","'CheckIcon' is defined but never used.","'GetEventQuery' is defined but never used.","'RegisterMutation' is defined but never used.","'useUpdateEventPayMutation' is defined but never used.","'useMeQuery' is defined but never used.","'Textarea' is defined but never used.","no-global-assign","no-unsafe-negation",[1926,1926]," rel=\"noreferrer\"",[2281,2281],[3068,3068],[3422,3422],[4189,4189],[4542,4542],[5312,5312],[5867,5867],[6651,6651],[7207,7207],{"desc":"1035","fix":"1036"},[3204,3204],[2028,2028],[9311,9311],[10339,10339],[10574,10574],[10790,10790],[12341,12341],[17558,17558],[18279,18279],[18879,18879],[19390,19390],[19896,19896],[20379,20379],[20981,20981],[6274,6274],[6495,6495],[6697,6697],{"desc":"1037","fix":"1038"},[4790,4790],[7100,7100],[8934,8934],[12642,12642],[13596,13596],[14277,14277],[1343,1343],[1481,1481],[1652,1652],[1780,1780],[1910,1910],[2071,2071],"Update the dependencies array to be: [CardAnimations, animation, inView]",{"range":"1039","text":"1040"},"Add dependencies array: []",{"range":"1041","text":"1042"},[1694,1702],"[CardAnimations, animation, inView]",[601,601],", []"]
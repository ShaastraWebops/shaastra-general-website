.sponsBox .fill:hover,
.sponsBox .fill:focus {
  box-shadow: inset 0 0 0 2em var(--hover);
}

// Animate the size, outside
.sponsBox .pulse:hover,
.sponsBox .pulse:focus {
  animation: pulse 1s;
  box-shadow: 0 0 0 2em rgba(#fff,0);
}

@keyframes pulse {
  0% { box-shadow: 0 0 0 0 var(--hover); }
}

// Stack multiple shadows, one from the left, the other from the right
.sponsBox .close:hover,
.sponsBox .close:focus {
  box-shadow:
    inset -3.5em 0 0 0 var(--hover),
    inset 3.5em 0 0 0 var(--hover);
}

// Size can also be negative; see how it's smaller than the element
.sponsBox .raise:hover,
.sponsBox .raise:focus {
  box-shadow: 0 0.5em 0.5em -0.4em var(--hover);
  transform: translateY(-0.25em);
}

// Animating from the bottom
.sponsBox .up:hover,
.sponsBox .up:focus {
  box-shadow: inset 0 -3.25em 0 0 var(--hover);
}

// And from the left
.sponsBox .slide:hover,
.sponsBox .slide:focus {
  box-shadow: inset 6.5em 0 0 0 var(--hover);
}

.sponsBox .offset {
  box-shadow:
    0.3em 0.3em 0 0 var(--color),
    inset 0.3em 0.3em 0 0 var(--color);

  &:hover,
  &:focus {
    box-shadow:
      0 0 0 0 var(--hover),
      inset 6em 3.5em 0 0 var(--hover);
  }
}

$colors: (
  fill: #904fb8,
);

@each $button, $color in $colors {
  .#{$button} {
    --color: #{$color};
    --hover: #{adjust-hue($color, 45deg)};
  }
}

.sponsBox button {
  color: var(--color);
  transition: 0.25s;

  &:hover,
  &:focus {
    border-color: var(--hover);
    color: #fff;
  }
}

.sponsBox {
  font: 300 1em 'Fira Sans', sans-serif;
  justify-content: center;
  text-align: center;
}
.sponsBox button {
  background: none;
  border: 2px solid;
  font: inherit;
  line-height: 1;
  margin: 0.5em;
  padding: 1em 2em;
}

.sponsBox h1 { font-weight: 400; }
